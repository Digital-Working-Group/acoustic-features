#0 building with "desktop-linux" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 618B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/ubuntu:24.04
#2 DONE 0.6s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/6] FROM docker.io/library/ubuntu:24.04@sha256:2e863c44b718727c860746568e1d54afd13b2fa71b160f5cd9058fc436217b30
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 15.55kB 0.0s done
#5 DONE 0.0s

#6 [2/6] RUN apt-get update &&     apt-get install -y software-properties-common &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     apt-get install -y python3.11 python3.11-distutils python3.11-dev python3.11-venv &&     apt-get install -y ffmpeg &&     python3.11 -m ensurepip &&     python3.11 -m pip install --upgrade pip
#6 CACHED

#7 [3/6] WORKDIR /app
#7 CACHED

#8 [4/6] COPY requirements.txt .
#8 CACHED

#9 [5/6] RUN python3.11 -m pip install --no-cache-dir -r requirements.txt
#9 CACHED

#10 [6/6] COPY . .
#10 DONE 0.1s

#11 exporting to image
#11 exporting layers 0.0s done
#11 writing image sha256:2114135c5b7995ccd36687993a688616002a55210ed61f782b70c72ca5d5106b done
#11 naming to docker.io/library/speechbrain-demo done
#11 DONE 0.1s
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   782k  0:00:01  0:00:01 --:--:--  782k100  952k    0     0  100  952k      0   428k  0:00:02  0:00:02 --:--:--  429k100  952k    0     0  100  952k      0   294k  0:00:03  0:00:03 --:--:--  295k100  952k    0     0  100  952k      0   224k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   181k  0:00:05  0:00:05 --:--:--  181k100  952k    0     0  100  952k      0   152k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94772  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86274  0:00:11  0:00:11 --:--:--     0100  952k    0     0  100  952k      0  79167  0:00:12  0:00:12 --:--:--     0100  952k    0     0  100  952k      0  73141  0:00:13  0:00:13 --:--:--     0100  952k    0     0  100  952k      0  67985  0:00:14  0:00:14 --:--:--     0100  952k    0     0  100  952k      0  63493  0:00:15  0:00:15 --:--:--     0100  952k    0     0  100  952k      0  59566  0:00:16  0:00:16 --:--:--     0100  952k    0     0  100  952k      0  56124  0:00:17  0:00:17 --:--:--     0100  952k    0     0  100  952k      0  53042  0:00:18  0:00:18 --:--:--     0100  952k    0     0  100  952k      0  50274  0:00:19  0:00:19 --:--:--     0100  952k    0     0  100  952k      0  47794  0:00:20  0:00:20 --:--:--     0100  952k    0     0  100  952k      0  45559  0:00:21  0:00:21 --:--:--     0100  952k    0     0  100  952k      0  43502  0:00:22  0:00:22 --:--:--     0100  952k    0     0  100  952k      0  41632  0:00:23  0:00:23 --:--:--     0100  952k    0     0  100  952k      0  39921  0:00:24  0:00:24 --:--:--     0100  952k    0     0  100  952k      0  38330  0:00:25  0:00:25 --:--:--     0100  952k    0     0  100  952k      0  36863  0:00:26  0:00:26 --:--:--     0100  952k    0     0  100  952k      0  35501  0:00:27  0:00:27 --:--:--     0100  952k    0     0  100  952k      0  34252  0:00:28  0:00:28 --:--:--     0100  952k    0     0  100  952k      0  33075  0:00:29  0:00:29 --:--:--     0100  952k    0     0  100  952k      0  31976  0:00:30  0:00:30 --:--:--     0100  952k    0     0  100  952k      0  30960  0:00:31  0:00:31 --:--:--     0100  952k    0     0  100  952k      0  30006  0:00:32  0:00:32 --:--:--     0100  952k    0     0  100  952k      0  29107  0:00:33  0:00:33 --:--:--     0100  952k    0     0  100  952k      0  28263  0:00:34  0:00:34 --:--:--     0100  952k    0     0  100  952k      0  27455  0:00:35  0:00:35 --:--:--     0100  952k    0     0  100  952k      0  26692  0:00:36  0:00:36 --:--:--     0100  952k    0     0  100  952k      0  25978  0:00:37  0:00:37 --:--:--     0100  952k    0     0  100  952k      0  25301  0:00:38  0:00:38 --:--:--     0100  952k    0     0  100  952k      0  24660  0:00:39  0:00:39 --:--:--     0100  952k    0     0  100  952k      0  24052  0:00:40  0:00:40 --:--:--     0100  952k    0     0  100  952k      0  23466  0:00:41  0:00:41 --:--:--     0100  952k    0     0  100  952k      0  22913  0:00:42  0:00:42 --:--:--     0100  952k    0     0  100  952k      0  22385  0:00:43  0:00:43 --:--:--     0100  952k    0     0  100  952k      0  21876  0:00:44  0:00:44 --:--:--     0100  952k    0     0  100  952k      0  21391  0:00:45  0:00:45 --:--:--     0100  952k    0     0  100  952k      0  20931  0:00:46  0:00:46 --:--:--     0100  952k    0     0  100  952k      0  20484  0:00:47  0:00:47 --:--:--     0100  952k    0     0  100  952k      0  20062  0:00:48  0:00:48 --:--:--     0100  952k    0     0  100  952k      0  19658  0:00:49  0:00:49 --:--:--     0100  952k    0     0  100  952k      0  19264  0:00:50  0:00:50 --:--:--     0100  952k    0     0  100  952k      0  18890  0:00:51  0:00:51 --:--:--     0100  952k    0     0  100  952k      0  18526  0:00:52  0:00:52 --:--:--     0100  952k    0     0  100  952k      0  18179  0:00:53  0:00:53 --:--:--     0100  952k    0     0  100  952k      0  17842  0:00:54  0:00:54 --:--:--     0100  952k    0     0  100  952k      0  17517  0:00:55  0:00:55 --:--:--     0100  952k    0     0  100  952k      0  17204  0:00:56  0:00:56 --:--:--     0100  952k    0     0  100  952k      0  16902  0:00:57  0:00:57 --:--:--     0100  952k    0     0  100  952k      0  16614  0:00:58  0:00:58 --:--:--     0100  952k    0     0  100  952k      0  16335  0:00:59  0:00:59 --:--:--     0100  952k    0     0  100  952k      0  16063  0:01:00  0:01:00 --:--:--     0100  952k    0     0  100  952k      0  15802  0:01:01  0:01:01 --:--:--     0100  952k    0     0  100  952k      0  15549  0:01:02  0:01:02 --:--:--     0100  952k    0     0  100  952k      0  15302  0:01:03  0:01:03 --:--:--     0100  952k    0     0  100  952k      0  15065  0:01:04  0:01:04 --:--:--     0100  952k    0     0  100  952k      0  14833  0:01:05  0:01:05 --:--:--     0100  952k    0     0  100  952k      0  14608  0:01:06  0:01:06 --:--:--     0100  952k    0     0  100  952k      0  14389  0:01:07  0:01:07 --:--:--     0100  952k    0     0  100  952k      0  14177  0:01:08  0:01:08 --:--:--     0100  952k    0     0  100  952k      0  13971  0:01:09  0:01:09 --:--:--     0100  952k    0     0  100  952k      0  13772  0:01:10  0:01:10 --:--:--     0100  952k    0     0  100  952k      0  13580  0:01:11  0:01:11 --:--:--     0100  952k    0     0  100  952k      0  13392  0:01:12  0:01:12 --:--:--     0100  952k    0     0  100  952k      0  13210  0:01:13  0:01:13 --:--:--     0100  952k    0     0  100  952k      0  13033  0:01:14  0:01:14 --:--:--     0100  952k    0     0  100  952k      0  12858  0:01:15  0:01:15 --:--:--     0100  952k    0     0  100  952k      0  12691  0:01:16  0:01:16 --:--:--     0100  952k    0     0  100  952k      0  12528  0:01:17  0:01:17 --:--:--     0100  952k    0     0  100  952k      0  12368  0:01:18  0:01:18 --:--:--     0100  952k    0     0  100  952k      0  12212  0:01:19  0:01:19 --:--:--     0100  952k    0     0  100  952k      0  12061  0:01:20  0:01:20 --:--:--     0100  952k    0     0  100  952k      0  11912  0:01:21  0:01:21 --:--:--     0100  952k    0     0  100  952k      0  11767  0:01:22  0:01:22 --:--:--     0100  952k    0     0  100  952k      0  11625  0:01:23  0:01:23 --:--:--     0100  952k    0     0  100  952k      0  11487  0:01:24  0:01:24 --:--:--     0100  952k    0     0  100  952k      0  11353  0:01:25  0:01:25 --:--:--     0100  952k    0     0  100  952k      0  11222  0:01:26  0:01:26 --:--:--     0100  952k    0     0  100  952k      0  11093  0:01:27  0:01:27 --:--:--     0100  952k    0     0  100  952k      0  10967  0:01:28  0:01:28 --:--:--     0100  952k    0     0  100  952k      0  10843  0:01:29  0:01:29 --:--:--     0100  952k    0     0  100  952k      0  10724  0:01:30  0:01:30 --:--:--     0100  952k    0     0  100  952k      0  10607  0:01:31  0:01:31 --:--:--     0100  952k    0     0  100  952k      0  10492  0:01:32  0:01:32 --:--:--     0100  952k    0     0  100  952k      0  10379  0:01:33  0:01:33 --:--:--     0100  952k    0     0  100  952k      0  10270  0:01:34  0:01:34 --:--:--     0100  952k    0     0  100  952k      0  10162  0:01:35  0:01:35 --:--:--     0100  952k    0     0  100  952k      0  10056  0:01:36  0:01:36 --:--:--     0100  952k    0     0  100  952k      0   9953  0:01:37  0:01:37 --:--:--     0100  952k    0     0  100  952k      0   9852  0:01:38  0:01:38 --:--:--     0100  952k    0     0  100  952k      0   9753  0:01:39  0:01:39 --:--:--     0100  952k    0     0  100  952k      0   9656  0:01:40  0:01:40 --:--:--     0100  952k    0     0  100  952k      0   9561  0:01:41  0:01:41 --:--:--     0100  952k    0     0  100  952k      0   9467  0:01:42  0:01:42 --:--:--     0100  952k    0     0  100  952k      0   9375  0:01:44  0:01:44 --:--:--     0100  952k    0     0  100  952k      0   9285  0:01:45  0:01:45 --:--:--     0100  952k    0     0  100  952k      0   9197  0:01:46  0:01:46 --:--:--     0100  952k    0     0  100  952k      0   9110  0:01:47  0:01:47 --:--:--     0100  952k    0     0  100  952k      0   9025  0:01:48  0:01:48 --:--:--     0100  952k    0     0  100  952k      0   8942  0:01:49  0:01:49 --:--:--     0100  952k    0     0  100  952k      0   8860  0:01:50  0:01:50 --:--:--     0100  952k    0     0  100  952k      0   8779  0:01:51  0:01:51 --:--:--     0100  952k    0     0  100  952k      0   8699  0:01:52  0:01:52 --:--:--     0100  952k    0     0  100  952k      0   8622  0:01:53  0:01:53 --:--:--     0100  952k    0     0  100  952k      0   8545  0:01:54  0:01:54 --:--:--     0100  952k    0     0  100  952k      0   8470  0:01:55  0:01:55 --:--:--     0100  952k    0     0  100  952k      0   8397  0:01:56  0:01:56 --:--:--     0100  952k    0     0  100  952k      0   8324  0:01:57  0:01:57 --:--:--     0100  952k    0     0  100  952k      0   8253  0:01:58  0:01:58 --:--:--     0100  952k    0     0  100  952k      0   8183  0:01:59  0:01:59 --:--:--     0100  952k    0    18  100  952k      0   8180  0:01:59  0:01:59 --:--:--     4
Server response: {"emotion":"ang"}
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   785k  0:00:01  0:00:01 --:--:--  785k100  952k    0     0  100  952k      0   427k  0:00:02  0:00:02 --:--:--  428k100  952k    0     0  100  952k      0   293k  0:00:03  0:00:03 --:--:--  293k100  952k    0     0  100  952k      0   224k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   181k  0:00:05  0:00:05 --:--:--  181k100  952k    0     0  100  952k      0   151k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94624  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86227  0:00:11  0:00:11 --:--:--     0100  952k    0     0  100  952k      0  79173  0:00:12  0:00:12 --:--:--     0100  952k  100    59  100  952k      4  74141  0:00:14  0:00:13  0:00:01    12100  952k  100    59  100  952k      4  74140  0:00:14  0:00:13  0:00:01    15
Server response: {"language":"en: English","likelihood":0.7311094999313354}
Language identification completed successfully.
Predicted language: en: English
Likelihood: 0.7311094999313354
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 1904k    0     0  100 1904k      0  1564k  0:00:01  0:00:01 --:--:-- 1566k100 1904k    0     0  100 1904k      0   857k  0:00:02  0:00:02 --:--:--  857k100 1904k    0     0  100 1904k      0   589k  0:00:03  0:00:03 --:--:--  589k100 1904k    0     0  100 1904k      0   449k  0:00:04  0:00:04 --:--:--  449k100 1904k    0     0  100 1904k      0   362k  0:00:05  0:00:05 --:--:--  362k100 1904k    0     0  100 1904k      0   304k  0:00:06  0:00:06 --:--:--     0100 1904k    0     0  100 1904k      0   262k  0:00:07  0:00:07 --:--:--     0100 1904k    0     0  100 1904k      0   230k  0:00:08  0:00:08 --:--:--     0100 1904k    0     0  100 1904k      0   205k  0:00:09  0:00:09 --:--:--     0100 1904k    0     0  100 1904k      0   185k  0:00:10  0:00:10 --:--:--     0100 1904k    0     0  100 1904k      0   168k  0:00:11  0:00:11 --:--:--     0100 1904k    0     0  100 1904k      0   155k  0:00:12  0:00:12 --:--:--     0100 1904k    0     0  100 1904k      0   143k  0:00:13  0:00:13 --:--:--     0100 1904k    0     0  100 1904k      0   133k  0:00:14  0:00:14 --:--:--     0100 1904k    0     0  100 1904k      0   124k  0:00:15  0:00:15 --:--:--     0100 1904k  100    47  100 1904k      2   121k  0:00:23  0:00:15  0:00:08    10
Server response: {"prediction":true,"score":0.2612878680229187}
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  164k    0     0  100  164k      0   134k  0:00:01  0:00:01 --:--:--  134k100  164k    0     0  100  164k      0  75485  0:00:02  0:00:02 --:--:-- 75503100  164k    0     0  100  164k      0  52049  0:00:03  0:00:03 --:--:-- 52065100  164k    0     0  100  164k      0  39756  0:00:04  0:00:04 --:--:-- 39769100  164k    0     0  100  164k      0  32102  0:00:05  0:00:05 --:--:-- 32110100  164k    0     0  100  164k      0  26919  0:00:06  0:00:06 --:--:--     0100  164k    0     0  100  164k      0  23204  0:00:07  0:00:07 --:--:--     0100  164k    0     0  100  164k      0  20398  0:00:08  0:00:08 --:--:--     0100  164k    0     0  100  164k      0  18199  0:00:09  0:00:09 --:--:--     0100  164k    0     0  100  164k      0  16409  0:00:10  0:00:10 --:--:--     0100  164k    0     0  100  164k      0  14938  0:00:11  0:00:11 --:--:--     0100  164k    0     0  100  164k      0  13716  0:00:12  0:00:12 --:--:--     0100  164k    0     0  100  164k      0  12685  0:00:13  0:00:13 --:--:--     0100  164k    0     0  100  164k      0  11794  0:00:14  0:00:14 --:--:--     0100  164k    0     0  100  164k      0  11023  0:00:15  0:00:15 --:--:--     0100  164k    0     0  100  164k      0  10339  0:00:16  0:00:16 --:--:--     0100  164k    0     0  100  164k      0   9742  0:00:17  0:00:17 --:--:--     0100  164k    0     0  100  164k      0   9211  0:00:18  0:00:18 --:--:--     0100  164k    0     0  100  164k      0   8729  0:00:19  0:00:19 --:--:--     0100  164k    0     0  100  164k      0   8296  0:00:20  0:00:20 --:--:--     0100  164k    0     0  100  164k      0   7905  0:00:21  0:00:21 --:--:--     0100  164k    0     0  100  164k      0   7551  0:00:22  0:00:22 --:--:--     0100  164k    0     0  100  164k      0   7224  0:00:23  0:00:23 --:--:--     0100  164k    0     0  100  164k      0   6926  0:00:24  0:00:24 --:--:--     0100  164k    0     0  100  164k      0   6649  0:00:25  0:00:25 --:--:--     0100  164k    0     0  100  164k      0   6394  0:00:26  0:00:26 --:--:--     0100  164k    0     0  100  164k      0   6158  0:00:27  0:00:27 --:--:--     0100  164k    0     0  100  164k      0   5940  0:00:28  0:00:28 --:--:--     0100  164k    0     0  100  164k      0   5735  0:00:29  0:00:29 --:--:--     0100  164k    0     0  100  164k      0   5545  0:00:30  0:00:30 --:--:--     0100  164k    0     0  100  164k      0   5367  0:00:31  0:00:31 --:--:--     0100  164k    0     0  100  164k      0   5200  0:00:32  0:00:32 --:--:--     0100  164k    0     0  100  164k      0   5042  0:00:33  0:00:33 --:--:--     0100  164k    0     0  100  164k      0   4896  0:00:34  0:00:34 --:--:--     0100  164k    0     0  100  164k      0   4757  0:00:35  0:00:35 --:--:--     0100  164k    0     0  100  164k      0   4626  0:00:36  0:00:36 --:--:--     0100  164k    0     0  100  164k      0   4502  0:00:37  0:00:37 --:--:--     0100  164k    0     0  100  164k      0   4384  0:00:38  0:00:38 --:--:--     0100  164k    0     0  100  164k      0   4272  0:00:39  0:00:39 --:--:--     0100  164k    0     0  100  164k      0   4166  0:00:40  0:00:40 --:--:--     0 33  494k    0     0  100  164k      0   4106  0:00:41  0:00:41 --:--:--     0100  494k  100  329k  100  164k   8208   4106  0:00:41  0:00:41 --:--:-- 93349
Archive:  ./subroutines/../results/separated_sources.zip
 extracting: ./subroutines/../results/source1.wav  
 extracting: ./subroutines/../results/source2.wav  
Speech separation completed successfully. Separated sources saved in ./subroutines/../results/.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   284    0     0  100   284      0    233  0:00:01  0:00:01 --:--:--   234100   284    0     0  100   284      0    128  0:00:02  0:00:02 --:--:--   128100   284    0     0  100   284      0     88  0:00:03  0:00:03 --:--:--    88100   284    0     0  100   284      0     67  0:00:04  0:00:04 --:--:--    67100   284    0     0  100   284      0     54  0:00:05  0:00:05 --:--:--    54100   284    0     0  100   284      0     45  0:00:06  0:00:06 --:--:--     0100   284    0     0  100   284      0     39  0:00:07  0:00:07 --:--:--     0100   284    0     0  100   284      0     34  0:00:08  0:00:08 --:--:--     0100   284    0     0  100   284      0     30  0:00:09  0:00:09 --:--:--     0100   284    0     0  100   284      0     27  0:00:10  0:00:10 --:--:--     0100   284    0     0  100   284      0     25  0:00:11  0:00:11 --:--:--     0100   284    0     0  100   284      0     23  0:00:12  0:00:12 --:--:--     0100   284    0     0  100   284      0     21  0:00:13  0:00:13 --:--:--     0100   284    0     0  100   284      0     19  0:00:14  0:00:14 --:--:--     0100   284    0     0  100   284      0     18  0:00:15  0:00:15 --:--:--     0100   284    0     0  100   284      0     17  0:00:16  0:00:16 --:--:--     0100   284    0     0  100   284      0     16  0:00:17  0:00:17 --:--:--     0100   284    0     0  100   284      0     15  0:00:18  0:00:18 --:--:--     0100   284    0     0  100   284      0     14  0:00:20  0:00:19  0:00:01     0100   284    0     0  100   284      0     13  0:00:21  0:00:20  0:00:01     0100   284    0     0  100   284      0     13  0:00:21  0:00:21 --:--:--     0100   284    0     0  100   284      0     12  0:00:23  0:00:22  0:00:01     0100   284    0     0  100   284      0     12  0:00:23  0:00:23 --:--:--     0100   284    0     0  100   284      0     11  0:00:25  0:00:24  0:00:01     0100   284    0     0  100   284      0     11  0:00:25  0:00:25 --:--:--     0100   284    0     0  100   284      0     10  0:00:28  0:00:26  0:00:02     0100   284    0     0  100   284      0     10  0:00:28  0:00:27  0:00:01     0100   284    0     0  100   284      0      9  0:00:31  0:00:28  0:00:03     0100   284    0     0  100   284      0      9  0:00:31  0:00:29  0:00:02     0100   284    0     0  100   284      0      9  0:00:31  0:00:30  0:00:01     0100   284    0     0  100   284      0      9  0:00:31  0:00:31 --:--:--     0100   284    0     0  100   284      0      8  0:00:35  0:00:32  0:00:03     0100  321k  100  321k  100   284   9980      8  0:00:35  0:00:32  0:00:03 72514
Text-to-speech completed successfully. Generated audio saved in ./subroutines/../results/tts_result.wav.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0  4728k --:--:-- --:--:-- --:--:-- 4737k100  952k    0     0  100  952k      0   788k  0:00:01  0:00:01 --:--:--  788k100  952k    0     0  100  952k      0   430k  0:00:02  0:00:02 --:--:--  430k100  952k    0     0  100  952k      0   295k  0:00:03  0:00:03 --:--:--  295k100  952k    0     0  100  952k      0   225k  0:00:04  0:00:04 --:--:--  225k100  952k    0     0  100  952k      0   181k  0:00:05  0:00:05 --:--:--     0100  952k    0     0  100  952k      0   152k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   131k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   115k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94706  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86208  0:00:11  0:00:11 --:--:--     0100  952k    0     0  100  952k      0  79128  0:00:12  0:00:12 --:--:--     0100  952k    0     0  100  952k      0  73187  0:00:13  0:00:13 --:--:--     0100  952k    0     0  100  952k      0  68026  0:00:14  0:00:14 --:--:--     0100  952k    0     0  100  952k      0  63527  0:00:15  0:00:15 --:--:--     0100  952k    0     0  100  952k      0  59599  0:00:16  0:00:16 --:--:--     0100  952k    0     0  100  952k      0  56123  0:00:17  0:00:17 --:--:--     0100  952k    0     0  100  952k      0  53062  0:00:18  0:00:18 --:--:--     0100  952k    0     0  100  952k      0  50311  0:00:19  0:00:19 --:--:--     0100  952k    0     0  100  952k      0  47838  0:00:20  0:00:20 --:--:--     0100  952k    0     0  100  952k      0  45593  0:00:21  0:00:21 --:--:--     0100  952k    0     0  100  952k      0  43551  0:00:22  0:00:22 --:--:--     0100  952k    0     0  100  952k      0  41668  0:00:23  0:00:23 --:--:--     0100  952k    0     0  100  952k      0  39938  0:00:24  0:00:24 --:--:--     0100  952k    0     0  100  952k      0  38353  0:00:25  0:00:25 --:--:--     0100  952k    0     0  100  952k      0  36885  0:00:26  0:00:26 --:--:--     0100  952k    0     0  100  952k      0  35521  0:00:27  0:00:27 --:--:--     0100  952k    0     0  100  952k      0  34257  0:00:28  0:00:28 --:--:--     0100  952k    0     0  100  952k      0  33078  0:00:29  0:00:29 --:--:--     0100  952k    0     0  100  952k      0  31987  0:00:30  0:00:30 --:--:--     0100  952k    0     0  100  952k      0  30959  0:00:31  0:00:31 --:--:--     0100  952k    0     0  100  952k      0  29993  0:00:32  0:00:32 --:--:--     0100  952k    0     0  100  952k      0  29087  0:00:33  0:00:33 --:--:--     0100  952k    0     0  100  952k      0  28240  0:00:34  0:00:34 --:--:--     0100  952k    0     0  100  952k      0  27437  0:00:35  0:00:35 --:--:--     0100  952k    0     0  100  952k      0  26682  0:00:36  0:00:36 --:--:--     0100  952k    0     0  100  952k      0  25963  0:00:37  0:00:37 --:--:--     0100  952k    0     0  100  952k      0  25281  0:00:38  0:00:38 --:--:--     0100  952k    0     0  100  952k      0  24641  0:00:39  0:00:39 --:--:--     0100  952k    0     0  100  952k      0  24025  0:00:40  0:00:40 --:--:--     0100  952k    0     0  100  952k      0  23439  0:00:41  0:00:41 --:--:--     0100  952k    0     0  100  952k      0  22881  0:00:42  0:00:42 --:--:--     0100  952k    0     0  100  952k      0  22349  0:00:43  0:00:43 --:--:--     0100  952k    0     0  100  952k      0  21848  0:00:44  0:00:44 --:--:--     0100  952k    0     0  100  952k      0  21365  0:00:45  0:00:45 --:--:--     0100  952k    0     0  100  952k      0  20905  0:00:46  0:00:46 --:--:--     0100  952k    0     0  100  952k      0  20463  0:00:47  0:00:47 --:--:--     0100  952k    0     0  100  952k      0  20040  0:00:48  0:00:48 --:--:--     0100  952k    0     0  100  952k      0  19633  0:00:49  0:00:49 --:--:--     0100  952k    0     0  100  952k      0  19246  0:00:50  0:00:50 --:--:--     0100  952k    0     0  100  952k      0  18870  0:00:51  0:00:51 --:--:--     0100  952k    0     0  100  952k      0  18510  0:00:52  0:00:52 --:--:--     0100  952k    0     0  100  952k      0  18161  0:00:53  0:00:53 --:--:--     0100  952k    0     0  100  952k      0  17828  0:00:54  0:00:54 --:--:--     0100  952k    0     0  100  952k      0  17503  0:00:55  0:00:55 --:--:--     0100  952k    0     0  100  952k      0  17190  0:00:56  0:00:56 --:--:--     0100  952k    0     0  100  952k      0  16889  0:00:57  0:00:57 --:--:--     0100  952k    0     0  100  952k      0  16600  0:00:58  0:00:58 --:--:--     0100  952k    0     0  100  952k      0  16319  0:00:59  0:00:59 --:--:--     0100  952k    0     0  100  952k      0  16049  0:01:00  0:01:00 --:--:--     0100  952k    0     0  100  952k      0  15788  0:01:01  0:01:01 --:--:--     0100  952k    0     0  100  952k      0  15534  0:01:02  0:01:02 --:--:--     0100  952k    0     0  100  952k      0  15290  0:01:03  0:01:03 --:--:--     0100  952k    0     0  100  952k      0  15051  0:01:04  0:01:04 --:--:--     0100  952k    0     0  100  952k      0  14819  0:01:05  0:01:05 --:--:--     0100  952k    0     0  100  952k      0  14594  0:01:06  0:01:06 --:--:--     0100  952k    0     0  100  952k      0  14379  0:01:07  0:01:07 --:--:--     0100  952k    0     0  100  952k      0  14168  0:01:08  0:01:08 --:--:--     0100  952k    0     0  100  952k      0  13965  0:01:09  0:01:09 --:--:--     0100  952k    0     0  100  952k      0  13765  0:01:10  0:01:10 --:--:--     0100  952k    0     0  100  952k      0  13571  0:01:11  0:01:11 --:--:--     0100  952k    0     0  100  952k      0  13382  0:01:12  0:01:12 --:--:--     0100  952k    0     0  100  952k      0  13198  0:01:13  0:01:13 --:--:--     0100  952k    0     0  100  952k      0  13019  0:01:14  0:01:14 --:--:--     0100  952k    0     0  100  952k      0  12848  0:01:15  0:01:15 --:--:--     0100  952k    0     0  100  952k      0  12678  0:01:16  0:01:16 --:--:--     0100  952k    0     0  100  952k      0  12513  0:01:17  0:01:17 --:--:--     0100  952k    0     0  100  952k      0  12354  0:01:18  0:01:18 --:--:--     0100  952k    0     0  100  952k      0  12197  0:01:19  0:01:19 --:--:--     0100  952k    0     0  100  952k      0  12045  0:01:20  0:01:20 --:--:--     0100  952k    0     0  100  952k      0  11896  0:01:21  0:01:21 --:--:--     0100  952k    0     0  100  952k      0  11751  0:01:22  0:01:22 --:--:--     0100  952k    0     0  100  952k      0  11609  0:01:23  0:01:23 --:--:--     0100  952k    0     0  100  952k      0  11471  0:01:25  0:01:25 --:--:--     0100  952k    0     0  100  952k      0  11337  0:01:26  0:01:26 --:--:--     0100  952k    0     0  100  952k      0  11205  0:01:27  0:01:27 --:--:--     0100  952k    0     0  100  952k      0  11078  0:01:28  0:01:28 --:--:--     0100  952k    0     0  100  952k      0  10953  0:01:29  0:01:29 --:--:--     0100  952k    0     0  100  952k      0  10831  0:01:30  0:01:30 --:--:--     0100  952k    0     0  100  952k      0  10711  0:01:31  0:01:31 --:--:--     0100  952k    0     0  100  952k      0  10593  0:01:32  0:01:32 --:--:--     0100  952k    0     0  100  952k      0  10479  0:01:33  0:01:33 --:--:--     0100  952k    0     0  100  952k      0  10367  0:01:34  0:01:34 --:--:--     0100  952k    0     0  100  952k      0  10257  0:01:35  0:01:35 --:--:--     0100  952k    0     0  100  952k      0  10150  0:01:36  0:01:36 --:--:--     0100  952k    0     0  100  952k      0  10045  0:01:37  0:01:37 --:--:--     0100  952k    0     0  100  952k      0   9943  0:01:38  0:01:38 --:--:--     0100  952k    0     0  100  952k      0   9842  0:01:39  0:01:39 --:--:--     0100  952k    0     0  100  952k      0   9744  0:01:40  0:01:40 --:--:--     0100  952k    0     0  100  952k      0   9647  0:01:41  0:01:41 --:--:--     0100  952k    0     0  100  952k      0   9552  0:01:42  0:01:42 --:--:--     0100  952k    0     0  100  952k      0   9459  0:01:43  0:01:43 --:--:--     0100  952k    0     0  100  952k      0   9367  0:01:44  0:01:44 --:--:--     0100  952k    0     0  100  952k      0   9277  0:01:45  0:01:45 --:--:--     0100  952k    0     0  100  952k      0   9189  0:01:46  0:01:46 --:--:--     0100  952k    0     0  100  952k      0   9102  0:01:47  0:01:47 --:--:--     0100  952k    0     0  100  952k      0   9018  0:01:48  0:01:48 --:--:--     0100  952k    0     0  100  952k      0   8934  0:01:49  0:01:49 --:--:--     0100  952k    0     0  100  952k      0   8853  0:01:50  0:01:50 --:--:--     0100  952k    0     0  100  952k      0   8772  0:01:51  0:01:51 --:--:--     0100  952k    0     0  100  952k      0   8694  0:01:52  0:01:52 --:--:--     0100  952k    0    23  100  952k      0   8628  0:01:53  0:01:53 --:--:--     4
Server response: HULLO MY NAME IS MATTIE
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   779k  0:00:01  0:00:01 --:--:--  779k100  952k    0     0  100  952k      0   427k  0:00:02  0:00:02 --:--:--  427k100  952k    0     0  100  952k      0   293k  0:00:03  0:00:03 --:--:--  293k100  952k    0     0  100  952k      0   224k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   181k  0:00:05  0:00:05 --:--:--  181k100  952k    0     0  100  952k      0   151k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94646  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86249  0:00:11  0:00:11 --:--:--     0100  952k    0     0  100  952k      0  79172  0:00:12  0:00:12 --:--:--     0100  952k    0     0  100  952k      0  73185  0:00:13  0:00:13 --:--:--     0100  952k  100    55  100  952k      3  69104  0:00:18  0:00:14  0:00:04    11100  952k  100    55  100  952k      3  69104  0:00:18  0:00:14  0:00:04    14
Server response: {"boundaries":[{"end":5.049999713897705,"start":0.0}]}
Voice activity detection completed successfully.
The cache for model files in Transformers v4.22.0 has been updated. Migrating your old cache. This is a one-time only operation. You can interrupt this and resume the migration later on by calling `transformers.utils.move_cache()`.
0it [00:00, ?it/s]0it [00:00, ?it/s]
/usr/local/lib/python3.11/dist-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/usr/local/lib/python3.11/dist-packages/transformers/configuration_utils.py:364: UserWarning: Passing `gradient_checkpointing` to a config initialization is deprecated and will be removed in v5 Transformers. Using `model.gradient_checkpointing_enable()` instead, or if you are using the `Trainer` API, pass `gradient_checkpointing=True` in your `TrainingArguments`.
  warnings.warn(
Some weights of Wav2Vec2Model were not initialized from the model checkpoint at facebook/wav2vec2-base and are newly initialized: ['wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original0', 'wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original1']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
/usr/local/lib/python3.11/dist-packages/torch/nn/utils/weight_norm.py:28: UserWarning: torch.nn.utils.weight_norm is deprecated in favor of torch.nn.utils.parametrizations.weight_norm.
  warnings.warn("torch.nn.utils.weight_norm is deprecated in favor of torch.nn.utils.parametrizations.weight_norm.")
9bb9e36cbf3dada039d865a96141f4e2400a91e7cc0f2aa523a4d3f24b3a25a1
9bb9e36cbf3dada039d865a96141f4e2400a91e7cc0f2aa523a4d3f24b3a25a1
Untagged: speechbrain-demo:latest
Deleted: sha256:2114135c5b7995ccd36687993a688616002a55210ed61f782b70c72ca5d5106b
ingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/2ad855c6656d45159ca0f36a805fe4c07da84c0b.lock
2024-07-01 16:46:59,085 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/hyperparams.yaml
2024-07-01 16:46:59,086 - INFO - Fetch custom_interface.py: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-07-01 16:46:59,127 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/custom_interface.py HTTP/11" 200 0
2024-07-01 16:46:59,127 - DEBUG - Attempting to acquire lock 139760425497488 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-07-01 16:46:59,127 - DEBUG - Lock 139760425497488 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-07-01 16:46:59,185 - DEBUG - https://huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/custom_interface.py HTTP/11" 200 6016
2024-07-01 16:46:59,186 - DEBUG - Attempting to release lock 139760425497488 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-07-01 16:46:59,186 - DEBUG - Lock 139760425497488 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-07-01 16:46:59,186 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/custom_interface.py
2024-07-01 16:46:59,652 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/config.json HTTP/11" 200 0
2024-07-01 16:46:59,656 - DEBUG - Attempting to acquire lock 139760395274768 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-07-01 16:46:59,656 - DEBUG - Lock 139760395274768 acquired on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-07-01 16:46:59,919 - DEBUG - https://huggingface.co:443 "GET /facebook/wav2vec2-base/resolve/main/config.json HTTP/11" 200 1842
2024-07-01 16:46:59,920 - DEBUG - Attempting to release lock 139760395274768 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-07-01 16:46:59,920 - DEBUG - Lock 139760395274768 released on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-07-01 16:46:59,959 - DEBUG - https://huggingface.co:443 "GET /api/models/facebook/wav2vec2-base HTTP/11" 200 1614
2024-07-01 16:47:00,271 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/model.safetensors HTTP/11" 404 0
2024-07-01 16:47:00,325 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/model.safetensors.index.json HTTP/11" 404 0
2024-07-01 16:47:00,369 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/pytorch_model.bin HTTP/11" 302 0
2024-07-01 16:47:00,370 - DEBUG - Attempting to acquire lock 139760293386256 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-07-01 16:47:00,370 - DEBUG - Lock 139760293386256 acquired on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-07-01 16:47:00,372 - DEBUG - Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2024-07-01 16:47:00,836 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /facebook/wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27pytorch_model.bin%3B+filename%3D%22pytorch_model.bin%22%3B&response-content-type=application%2Foctet-stream&Expires=1720110662&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMDY2Mn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9mYWNlYm9vay93YXYydmVjMi1iYXNlLzMyNDlmZTk4YmZjNjJmY2JjMjYwNjdmNzI0NzE2YTZlYzQ5ZDEyYzQ3MjhhMmFmMWRmNjU5MDEzOTA1ZGZmMjE~cmVzcG9uc2UtY29udGVudC1kaXNwb3NpdGlvbj0qJnJlc3BvbnNlLWNvbnRlbnQtdHlwZT0qIn1dfQ__&Signature=NSSCJ-qOO3kAVRRyuErfz7oweemobZmsGYXcx8nFVOy4c9ngWJHVFd9IReSOk3B~ws7kbzNrmw83ZdDCXecolY8gEXXfe2VR2lLMdV15Cbm7dcryG1mCA0I8gO067SMHXtqceQMg28qDvJjQfiLs0dXeJ-qkwizuLrDr1saIOae2qK6XEmChKp~zdPBZnwIKwLJU3aH~NQ0z6dhvcAjWQTxVVFRMdkUtxXi3Ukb7DYv9Jrtd7tL130QMGIrbVZK~WK0C43XWx0wTafFyMmoxA3k2NQ9U3f1EuqGrZbkTb1mP1usITncCCDBPID-aq4MWTuTWZBriq03tsyGr1mmNxQ__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 380267417
2024-07-01 16:47:57,591 - DEBUG - Attempting to release lock 139760293386256 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-07-01 16:47:57,591 - DEBUG - Lock 139760293386256 released on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-07-01 16:47:57,592 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-07-01 16:47:57,776 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/model.safetensors HTTP/11" 404 0
2024-07-01 16:47:58,498 - WARNING - speechbrain.lobes.models.huggingface_transformers.huggingface - Wav2Vec2Model is frozen.
2024-07-01 16:47:58,541 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/preprocessor_config.json HTTP/11" 200 0
2024-07-01 16:47:58,542 - DEBUG - Attempting to acquire lock 139760395216208 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-07-01 16:47:58,542 - DEBUG - Lock 139760395216208 acquired on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-07-01 16:47:58,602 - DEBUG - https://huggingface.co:443 "GET /facebook/wav2vec2-base/resolve/main/preprocessor_config.json HTTP/11" 200 159
2024-07-01 16:47:58,603 - DEBUG - Attempting to release lock 139760395216208 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-07-01 16:47:58,603 - DEBUG - Lock 139760395216208 released on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-07-01 16:47:58,651 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/config.json HTTP/11" 200 0
2024-07-01 16:47:58,656 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/CustomEncoderWav2vec2Classifier-6d849d67d0260d5a3ea6b156bb50a54b.
2024-07-01 16:47:58,657 - INFO - Fetch wav2vec2.ckpt: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-07-01 16:47:58,715 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/wav2vec2.ckpt HTTP/11" 302 0
2024-07-01 16:47:58,716 - DEBUG - Attempting to acquire lock 139760293394576 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-07-01 16:47:58,716 - DEBUG - Lock 139760293394576 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-07-01 16:47:59,121 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27wav2vec2.ckpt%3B+filename%3D%22wav2vec2.ckpt%22%3B&Expires=1720111678&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTY3OH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9lbW90aW9uLXJlY29nbml0aW9uLXdhdjJ2ZWMyLUlFTU9DQVAvYjZkYjE3MGE0ODdiMjkxMmNmZTEwMzU5ZmFkNDBkYmI3NTYzMTIwNjU2ZjI2ZjQ3YzUyMWIxYzdlNTc4YmRkMD9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=HVhr7gaP~vRRNSmocP8IgIkmVPCsOwhi3IeA16TXbF4NojxglPr~U2ZA-oKXQHSv21pbQrmO9L5T3IvtghCqxbxjQOmAVBYFq-VhH9YKk6SrBpFlXXyHZvs19XxuV1KgEeGggh6X3idU1GNINaIUAAgDKHV-7egvUj0bxCCEwicFwk4f8~ppm-wzJVgrjx3N0WRIEgsB6XrBzIMfSVUqEZ9l81ytPowbZW1D1fnOW2GS7wBNyBEkfNTDN73eVOxle11xnGjjlbwBND~DYkCcIeUJFB1iRlZCNGhF0XIbJxRvih8pGFf~pf1Z5dRGgXkXCDMAd3wKlqa4q0K54ghuVw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 377575130
2024-07-01 16:48:53,503 - DEBUG - Attempting to release lock 139760293394576 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-07-01 16:48:53,504 - DEBUG - Lock 139760293394576 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-07-01 16:48:53,504 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/wav2vec2.ckpt
2024-07-01 16:48:53,505 - INFO - Fetch model.ckpt: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-07-01 16:48:53,565 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/model.ckpt HTTP/11" 302 0
2024-07-01 16:48:53,566 - DEBUG - Attempting to acquire lock 139760293506192 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-07-01 16:48:53,566 - DEBUG - Lock 139760293506192 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-07-01 16:48:53,699 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model.ckpt%3B+filename%3D%22model.ckpt%22%3B&Expires=1720111733&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTczM319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9lbW90aW9uLXJlY29nbml0aW9uLXdhdjJ2ZWMyLUlFTU9DQVAvZTM1MWJhZmM4YzBhMjY5OWYxNzRlMmY0M2YxM2U3MzI4MzY3MzE2MjFhOGU1OTViNTNkZGFmNTMzNGFiY2VmYj9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=mvign7K9OVx29vUd~XjZzzg-FCDgq16C25wE73G1VitVUJROJShS9Q7IRSapbFOK-5IlTS8uxc6Os~GS3Dem~MAqQLzo5lJpaHH57A-cwizWJ3LlVSYWfWxG53jEtD~EaCr~jfkdKsfir0OEq6-Sz3GRXeUocm8sEJON5FmtAZxaJAGl3Gcv2UxXLWnmWrWilcV3gGSyjf-eHLqVMkbPmkp6TtcyxEUZk4XZrlI5VeeVtuIapjftDx~00dePP9DwOg5XCgHbYz1hWll4dDn90Pkbk5GHSg33wvA6YUxvkFR3TW2YYZzrwhU3Fso4C6cjn2xbzgP~XiKpTNrjCSI9dg__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 13176
2024-07-01 16:48:53,701 - DEBUG - Attempting to release lock 139760293506192 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-07-01 16:48:53,701 - DEBUG - Lock 139760293506192 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-07-01 16:48:53,701 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/model.ckpt
2024-07-01 16:48:53,702 - INFO - Fetch label_encoder.txt: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-07-01 16:48:53,760 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/label_encoder.txt HTTP/11" 200 0
2024-07-01 16:48:53,760 - DEBUG - Attempting to acquire lock 139760293503824 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-07-01 16:48:53,760 - DEBUG - Lock 139760293503824 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-07-01 16:48:53,818 - DEBUG - https://huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/label_encoder.txt HTTP/11" 200 83
2024-07-01 16:48:53,819 - DEBUG - Attempting to release lock 139760293503824 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-07-01 16:48:53,819 - DEBUG - Lock 139760293503824 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-07-01 16:48:53,819 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/label_encoder.txt
2024-07-01 16:48:53,820 - INFO - Loading pretrained files for: wav2vec2, model, label_encoder
2024-07-01 16:48:57,420 - DEBUG - Loaded categorical encoding from pretrained_models/CustomEncoderWav2vec2Classifier-6d849d67d0260d5a3ea6b156bb50a54b/label_encoder.ckpt
2024-07-01 16:48:57,426 - INFO - Emotion classification model loaded successfully.
2024-07-01 16:48:57,426 - INFO - Starting emotion classification...
2024-07-01 16:48:57,426 - INFO - Destination tmpmo_e7txb: local file in /tmp/tmpmo_e7txb.
2024-07-01 16:48:57,980 - DEBUG - CategoricalEncoder.expect_len was never called: assuming category count of 4 to be correct! Sanity check your encoder using `.expect_len`. Ensure that downstream code also uses the correct size. If you are sure this does not apply to you, use `.ignore_len`.
2024-07-01 16:48:57,981 - INFO - Emotion classification completed. Predicted emotion: ang
2024-07-01 16:48:57,982 - INFO - 172.17.0.1 - - [01/Jul/2024 16:48:57] "POST /classify_emotion HTTP/1.1" 200 -
2024-07-01 16:48:58,232 - INFO - Received request at /identify_language endpoint
2024-07-01 16:48:58,238 - INFO - Saved audio file to temporary location: /tmp/tmpccz3kk3k
2024-07-01 16:48:58,238 - INFO - Loading language identification model...
2024-07-01 16:48:58,239 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-07-01 16:48:58,279 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-07-01 16:48:58,282 - DEBUG - Attempting to acquire lock 139760395218192 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-07-01 16:48:58,282 - DEBUG - Lock 139760395218192 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-07-01 16:48:58,394 - DEBUG - https://huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/hyperparams.yaml HTTP/11" 200 1519
2024-07-01 16:48:58,395 - DEBUG - Attempting to release lock 139760395218192 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-07-01 16:48:58,395 - DEBUG - Lock 139760395218192 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-07-01 16:48:58,395 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/hyperparams.yaml
2024-07-01 16:48:58,395 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-07-01 16:48:58,432 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/custom.py HTTP/11" 404 0
2024-07-01 16:48:58,636 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/lang-id-voxlingua107-ecapa.
2024-07-01 16:48:58,636 - INFO - Fetch embedding_model.ckpt: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-07-01 16:48:58,688 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/embedding_model.ckpt HTTP/11" 302 0
2024-07-01 16:48:58,689 - DEBUG - Attempting to acquire lock 139760256758736 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-07-01 16:48:58,689 - DEBUG - Lock 139760256758736 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-07-01 16:48:58,949 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27embedding_model.ckpt%3B+filename%3D%22embedding_model.ckpt%22%3B&Expires=1720111738&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTczOH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9sYW5nLWlkLXZveGxpbmd1YTEwNy1lY2FwYS9hYjc1MGQ1YzA2ZDcxMzQ3NzA0NWZhNzk4ZmFiNWQzM2U5NTlkYmMwZGZlNGRlNTEwYTlhNDc4NDRjNzlhMTlhP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=Spz8AzHZYhb6GaPpqCF3O3ndmE4gy~tXXI48U~8gYSIuPGymAy67B58dHaDQcZDSq4DoY-Xo9de06CYyi5Z3VSiHADQKUqM80MMXB~AvyoAa8LXa0JhbB4oqC7aJWg1TPhHyB4fRng6gl2uFXsAdqSQlHmx4VgEczVKBk~H4F44Wcz6QI363~CMGn8CZCBNclKIJbbNJih~e8ZAr-htIvOC~yca9BHJ6DJZZOHGMpaGLHK6oCZpQaVleOrWh3qbEq8rz88~NNHEamFgEU-fBfLZKCrrVhoZ0dzhE-bsrBDmD~liZr~Mh6LPzvRkKvsI58dG4lbvbL7rlPs1rQ1ci~A__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 84474355
2024-07-01 16:49:10,615 - DEBUG - Attempting to release lock 139760256758736 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-07-01 16:49:10,616 - DEBUG - Lock 139760256758736 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-07-01 16:49:10,616 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/embedding_model.ckpt
2024-07-01 16:49:10,616 - INFO - Fetch classifier.ckpt: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-07-01 16:49:10,686 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/classifier.ckpt HTTP/11" 302 0
2024-07-01 16:49:10,687 - DEBUG - Attempting to acquire lock 139760256410448 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-07-01 16:49:10,687 - DEBUG - Lock 139760256410448 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-07-01 16:49:10,863 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27classifier.ckpt%3B+filename%3D%22classifier.ckpt%22%3B&Expires=1720111149&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTE0OX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9sYW5nLWlkLXZveGxpbmd1YTEwNy1lY2FwYS9hNTBkOTAyNGZmNThkMzE3MDMxYzk3ODdkNGM2YzYxNGQ0NTRhODdhOGVmMzJmOWQzNjMzOGNkM2ZmNTdhZGJjP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=AhferTiMV7sBSemBmS4sos0uXqyr9TKIJyjGnNjwgL8qXq2kPTShYKPXtPJLRHdbEsSno~eiYMOGV4sR71UXkGMRIvBtmSqrZ3WSPLGsOsFLCU~nobzDIBDuHd2BEQPiPS8zMZabRMvMARUUX1dQIb22aC-VNxbgSkxrHUOovYgXywjZe8XNmK4-AFAmw8d1W5Qk4kwYo~yrLdbNJH6~exJi5PlArs5oKdjk~AKwaUDvy7~S-4eBt~WpQQH40WGQUy~RhZzFmy4k6bA21sOosoCGvULYZarOm~Jk4-S57Ige6egWYqUnYwG4E5CFAQVxN~l-hQOOAgc~E6r3TRu7iw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 762555
2024-07-01 16:49:10,978 - DEBUG - Attempting to release lock 139760256410448 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-07-01 16:49:10,978 - DEBUG - Lock 139760256410448 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-07-01 16:49:10,978 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/classifier.ckpt
2024-07-01 16:49:10,979 - INFO - Fetch label_encoder.txt: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-07-01 16:49:11,022 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/label_encoder.txt HTTP/11" 200 0
2024-07-01 16:49:11,023 - DEBUG - Attempting to acquire lock 139760256414288 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-07-01 16:49:11,023 - DEBUG - Lock 139760256414288 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-07-01 16:49:11,067 - DEBUG - https://huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/label_encoder.txt HTTP/11" 200 2204
2024-07-01 16:49:11,068 - DEBUG - Attempting to release lock 139760256414288 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-07-01 16:49:11,068 - DEBUG - Lock 139760256414288 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-07-01 16:49:11,068 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/label_encoder.txt
2024-07-01 16:49:11,068 - INFO - Loading pretrained files for: embedding_model, classifier, label_encoder
2024-07-01 16:49:11,111 - DEBUG - Loaded categorical encoding from pretrained_models/lang-id-voxlingua107-ecapa/label_encoder.ckpt
2024-07-01 16:49:11,114 - INFO - Language identification model loaded successfully.
2024-07-01 16:49:11,114 - INFO - Starting language identification...
2024-07-01 16:49:11,115 - INFO - Destination tmpccz3kk3k: local file in /tmp/tmpccz3kk3k.
2024-07-01 16:49:11,377 - DEBUG - CategoricalEncoder.expect_len was never called: assuming category count of 107 to be correct! Sanity check your encoder using `.expect_len`. Ensure that downstream code also uses the correct size. If you are sure this does not apply to you, use `.ignore_len`.
2024-07-01 16:49:11,378 - INFO - Language identification completed. Predicted language: en: English, Likelihood: 0.7311094999313354
2024-07-01 16:49:11,379 - INFO - 172.17.0.1 - - [01/Jul/2024 16:49:11] "POST /identify_language HTTP/1.1" 200 -
2024-07-01 16:49:11,936 - INFO - Received request at /verify_speaker endpoint
2024-07-01 16:49:11,957 - INFO - Saved enrollment audio to: /tmp/tmptdhx4i57
2024-07-01 16:49:11,957 - INFO - Saved verification audio to: /tmp/tmpq2yfcb04
2024-07-01 16:49:11,957 - INFO - Loading speaker verification model...
2024-07-01 16:49:11,958 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-07-01 16:49:11,959 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-07-01 16:49:12,075 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-07-01 16:49:12,077 - DEBUG - Attempting to acquire lock 139760412159184 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-07-01 16:49:12,077 - DEBUG - Lock 139760412159184 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-07-01 16:49:12,146 - DEBUG - https://huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/resolve/main/hyperparams.yaml HTTP/11" 200 1920
2024-07-01 16:49:12,147 - DEBUG - Attempting to release lock 139760412159184 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-07-01 16:49:12,147 - DEBUG - Lock 139760412159184 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-07-01 16:49:12,147 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/hyperparams.yaml
2024-07-01 16:49:12,148 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-07-01 16:49:12,207 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/custom.py HTTP/11" 404 0
2024-07-01 16:49:12,416 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/spkrec-ecapa-voxceleb.
2024-07-01 16:49:12,416 - INFO - Fetch embedding_model.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-07-01 16:49:12,485 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/embedding_model.ckpt HTTP/11" 302 0
2024-07-01 16:49:12,486 - DEBUG - Attempting to acquire lock 139760293360592 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-07-01 16:49:12,486 - DEBUG - Lock 139760293360592 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-07-01 16:49:12,488 - DEBUG - Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2024-07-01 16:49:12,757 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27embedding_model.ckpt%3B+filename%3D%22embedding_model.ckpt%22%3B&Expires=1720110007&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMDAwN319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zcGtyZWMtZWNhcGEtdm94Y2VsZWIvMDU3NWNiNjQ4NDVlNmI5YTEwZGI5YmNiNzRkNWFjMzJiMzI2YjhkYzkwMzUyNjcxZDM0NWUyZWUzZDAxMjZhMj9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=b68SybAhP11klJseWvv11pa7ihBM1GYsZcPCHHuOG1gEI84MJCm8W6~DeLyAL4q6BbvcMUiU6vxhMICCn8s372qaHWyzxiMU-nLUnSAdFFyHeVWb0VPRUW6anto76SrcvTjWQC6AUfyrCfOH-GNzFpN5oClStvG8ANFEp6jvJE5bvqROcwutd8UFWifU6bZbVRlHeZSqXpx9s~0cs5clBImZ64pVQ4Sc2q2p2DLcmG6IDVBi2YxypIaCoud7xeV4HkJyFTZ0nb142JAyYeny3q8SKeKd-akWYGp~gJyzmppl-XM0IxZTpHdegexy6fxrqKqYWMnCgrWifAq-ETvSVg__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 83316686
2024-07-01 16:49:23,642 - DEBUG - Attempting to release lock 139760293360592 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-07-01 16:49:23,642 - DEBUG - Lock 139760293360592 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-07-01 16:49:23,642 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/embedding_model.ckpt
2024-07-01 16:49:23,643 - INFO - Fetch mean_var_norm_emb.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-07-01 16:49:23,692 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/mean_var_norm_emb.ckpt HTTP/11" 200 0
2024-07-01 16:49:23,693 - DEBUG - Attempting to acquire lock 139760293624208 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-07-01 16:49:23,693 - DEBUG - Lock 139760293624208 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-07-01 16:49:23,744 - DEBUG - https://huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/resolve/main/mean_var_norm_emb.ckpt HTTP/11" 200 1921
2024-07-01 16:49:23,745 - DEBUG - Attempting to release lock 139760293624208 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-07-01 16:49:23,745 - DEBUG - Lock 139760293624208 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-07-01 16:49:23,745 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/mean_var_norm_emb.ckpt
2024-07-01 16:49:23,746 - INFO - Fetch classifier.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-07-01 16:49:23,788 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/classifier.ckpt HTTP/11" 302 0
2024-07-01 16:49:23,789 - DEBUG - Attempting to acquire lock 139760293700240 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-07-01 16:49:23,789 - DEBUG - Lock 139760293700240 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-07-01 16:49:23,910 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27classifier.ckpt%3B+filename%3D%22classifier.ckpt%22%3B&Expires=1720111763&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTc2M319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zcGtyZWMtZWNhcGEtdm94Y2VsZWIvZmQ5ZTM2MzRmZTY4YmQwYTQyN2M5NWUzNTRjMGM2NzczNzRmNjJiM2Y0MzRlNDViNzg1OTk5NTBkODYwZDUzNT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=WH5ry9zC58mNF15wFIrYcd28ZVKFmvXyqTCILXW2qluX-jQBTVlhdYTYdI~jTPczCpB7JCHucsenm~NWUgYmzj1whUstScmI2yoUcloyMhDbVkccCZXG3xQEjib9lNp4vgbKb7u4aOIJd4qmOoVVVoTkUnwAKwIpSQCip4eNkcL3QLp00pjQtT4UODpL367EnBGyKdVcA8QIWC8J0hthWOWF0AJlFW-epdzLRbgbx1~WwQzlfEzia6yfswmr1VQJux1gq1YvRUDYgGwgcq4ZdBka49U8iVPGm~4NCuvmFYWnpGELMNCbgYLU52azXTXSsfDy7BNArO9S~NGV~JLf2w__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 5534328
2024-07-01 16:49:24,634 - DEBUG - Attempting to release lock 139760293700240 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-07-01 16:49:24,634 - DEBUG - Lock 139760293700240 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-07-01 16:49:24,634 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/classifier.ckpt
2024-07-01 16:49:24,635 - INFO - Fetch label_encoder.txt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-07-01 16:49:24,686 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/label_encoder.txt HTTP/11" 200 0
2024-07-01 16:49:24,687 - DEBUG - Attempting to acquire lock 139760293422288 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-07-01 16:49:24,687 - DEBUG - Lock 139760293422288 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-07-01 16:49:24,753 - DEBUG - https://huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/resolve/main/label_encoder.txt HTTP/11" 200 128619
2024-07-01 16:49:24,786 - DEBUG - Attempting to release lock 139760293422288 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-07-01 16:49:24,786 - DEBUG - Lock 139760293422288 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-07-01 16:49:24,787 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/label_encoder.txt
2024-07-01 16:49:24,787 - INFO - Loading pretrained files for: embedding_model, mean_var_norm_emb, classifier, label_encoder
2024-07-01 16:49:25,639 - DEBUG - Loaded categorical encoding from pretrained_models/spkrec-ecapa-voxceleb/label_encoder.ckpt
2024-07-01 16:49:25,644 - INFO - Speaker verification model loaded successfully.
2024-07-01 16:49:25,644 - INFO - Starting speaker verification...
2024-07-01 16:49:25,644 - INFO - Destination tmptdhx4i57: local file in /tmp/tmptdhx4i57.
2024-07-01 16:49:25,663 - INFO - Destination tmpq2yfcb04: local file in /tmp/tmpq2yfcb04.
2024-07-01 16:49:27,612 - INFO - Speaker verification completed. Score: 0.2612878680229187, Prediction: True
2024-07-01 16:49:27,614 - INFO - 172.17.0.1 - - [01/Jul/2024 16:49:27] "POST /verify_speaker HTTP/1.1" 200 -
2024-07-01 16:49:27,867 - INFO - Received request at /separate_speech endpoint
Loading SpeechBrain model...
2024-07-01 16:49:27,868 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-07-01 16:49:27,869 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-07-01 16:49:27,971 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-07-01 16:49:27,973 - DEBUG - Attempting to acquire lock 139760256789520 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-07-01 16:49:27,973 - DEBUG - Lock 139760256789520 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-07-01 16:49:28,016 - DEBUG - https://huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/resolve/main/hyperparams.yaml HTTP/11" 200 1515
2024-07-01 16:49:28,610 - DEBUG - Attempting to release lock 139760256789520 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-07-01 16:49:28,610 - DEBUG - Lock 139760256789520 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-07-01 16:49:28,610 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/hyperparams.yaml
2024-07-01 16:49:28,611 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-07-01 16:49:28,660 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/custom.py HTTP/11" 404 0
2024-07-01 16:49:29,573 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/SepformerSeparation-2c9839ff08323bf97969e56e78b11972.
2024-07-01 16:49:29,573 - INFO - Fetch masknet.ckpt: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-07-01 16:49:29,627 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/masknet.ckpt HTTP/11" 302 0
2024-07-01 16:49:29,628 - DEBUG - Attempting to acquire lock 139760293495376 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-07-01 16:49:29,629 - DEBUG - Lock 139760293495376 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-07-01 16:49:29,631 - DEBUG - Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2024-07-01 16:49:30,041 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27masknet.ckpt%3B+filename%3D%22masknet.ckpt%22%3B&Expires=1720111769&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTc2OX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zZXBmb3JtZXItd3NqMDJtaXgvNTdkZDVmNDliZjIxYzVhMjEwMWJiNGU0NjY0OGQwNWQzNGQ1MTdhNTllMjZmMGIwNjY0NmQwYmViZTgyMTRjNz9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=agJiwS3OyqpnfAkb32wLvEjkwnkg2zplR1a6wX4D4qylKzaUDsKzZj-NRIts1y~xGuNG8cvP8ocIlQioA~xTt~-bd5PmC3KJDE1eCIzyliW~8ev~XCmxCt3m5XWTM7aRRjXRNEr334g66zPw1wMtbnskFqJBUildpJ6-NEf8J7X7QbIV9k0JZIRM2enAik~r1y0MiSJ7hfaWTy3189zSf7URXZYkEoy0YqdmELmI8k7U0ZxetBRsvYPye6ImJhK9Q9WhVs5jYuFfWldRlfrFrZNc5dquK10LzX~M~BjC-GYVIeZg06huWEk2tsAAfjauDU6FV8c8W3l7m0QFmVWQ~Q__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 113108458
2024-07-01 16:49:46,744 - DEBUG - Attempting to release lock 139760293495376 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-07-01 16:49:46,744 - DEBUG - Lock 139760293495376 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-07-01 16:49:46,744 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/masknet.ckpt
2024-07-01 16:49:46,744 - INFO - Fetch encoder.ckpt: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-07-01 16:49:46,858 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/encoder.ckpt HTTP/11" 302 0
2024-07-01 16:49:46,859 - DEBUG - Attempting to acquire lock 139760256595024 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-07-01 16:49:46,860 - DEBUG - Lock 139760256595024 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-07-01 16:49:46,978 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27encoder.ckpt%3B+filename%3D%22encoder.ckpt%22%3B&Expires=1720111786&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTc4Nn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zZXBmb3JtZXItd3NqMDJtaXgvMzEzOWJiODgwYjI5ZWE3N2FlOGExNjhiOGYyYWQ2ZThlYjVjMmMwOTA0Mjg5Njc2YzIyM2QwZTkzY2QyYTM1ZD9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=DkinGubfG2njiSyQjKt3BhRbqX22GYHOG8Dy~LNEVGm~jq8E8Mj~Jn3zTREmH5vzsTR2q6qErpTi-Nv4guFmQiC6dX-GHFhPd-KKcFAMhEJyoIHupBJg0cPoo0sT7Ml~jvnm6F8I34dgSn86qLshzjXAnxXCekhxuKx6vQlJCYZAKxc-nZ5voONSKYUndhjoIvBb2n3oUnAQKu8YwO2A4qi3u7~UINjZ9HecCgFJEw7gw5hnFKZBzKnd4fkfwWqxKIFMGZF10Yu07OmWf3KOJPndXrz7pyqUoIDfjaePebW5ULO7u1rgU-VSfu4Rtf1Cb0jb8zaGSNZxZ7JbxVCRmw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 17267
2024-07-01 16:49:46,980 - DEBUG - Attempting to release lock 139760256595024 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-07-01 16:49:46,980 - DEBUG - Lock 139760256595024 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-07-01 16:49:46,980 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/encoder.ckpt
2024-07-01 16:49:46,980 - INFO - Fetch decoder.ckpt: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-07-01 16:49:47,020 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/decoder.ckpt HTTP/11" 302 0
2024-07-01 16:49:47,021 - DEBUG - Attempting to acquire lock 139760256407184 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-07-01 16:49:47,021 - DEBUG - Lock 139760256407184 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-07-01 16:49:47,168 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27decoder.ckpt%3B+filename%3D%22decoder.ckpt%22%3B&Expires=1720108904&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDEwODkwNH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zZXBmb3JtZXItd3NqMDJtaXgvYWJlYTFhMmQ0MTE1MTMzMWI0YzM2MDcxZDFiMzIwNWFlZDk0MGExODk3MjFmMDA4YjEyYTcwM2U5YzYzZTdlND9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=PrFdHSB7symLlM0WRvyQAJ55oB4WbqtP0iZX2JnL8l6Kzyfs6jjskvaUKdXc~xg5DiAqEcU-UCPM-~sI~wAVI5stqDgWgh8wacELyVawefPzo8ebvVMHcTe3Uckq0xxIPusLt6N2G6QwJTY65F2nDaeuiYUirxWlI6rB2kfS7RgQUseFhWweFJEhQENHup38He4gU9coLgnbuyuSxZE8J-5is0o2cBpsbHbF5aIpTaV6qEyNftdVn5JIOLAW85WlH4I4ijnqQkQ1i4qaZYY1X5tF4WbZRS909~8Od9wtkF1qNvclU3-W4OiVhnta0vRlu9r2v0ODCJwpDRrmdlnT2A__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 17202
2024-07-01 16:49:47,171 - DEBUG - Attempting to release lock 139760256407184 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-07-01 16:49:47,171 - DEBUG - Lock 139760256407184 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-07-01 16:49:47,171 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/decoder.ckpt
2024-07-01 16:49:47,171 - INFO - Loading pretrained files for: masknet, encoder, decoder
2024-07-01 16:49:47,292 - INFO - SpeechBrain model loaded successfully.
2024-07-01 16:49:47,294 - INFO - Saved audio file to temporary location: /tmp/tmpqwkigiy_
2024-07-01 16:49:47,294 - INFO - Starting speech separation...
2024-07-01 16:49:47,295 - INFO - Destination tmpqwkigiy_: local file in /tmp/tmpqwkigiy_.
2024-07-01 16:50:08,981 - INFO - Speech separation completed.
2024-07-01 16:50:08,992 - INFO - 172.17.0.1 - - [01/Jul/2024 16:50:08] "POST /separate_speech HTTP/1.1" 200 -
2024-07-01 16:50:09,492 - INFO - Received request at /text-to-speech endpoint
Loading NLTK punkt model...
2024-07-01 16:50:12,078 - INFO - NLTK punkt model loaded successfully.
2024-07-01 16:50:12,084 - INFO - Loading Tacotron2 TTS model...
2024-07-01 16:50:12,085 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/tts-tacotron2-ljspeech.
2024-07-01 16:50:12,128 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-tacotron2-ljspeech/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-07-01 16:50:12,138 - DEBUG - Attempting to acquire lock 139760293387088 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-07-01 16:50:12,138 - DEBUG - Lock 139760293387088 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-07-01 16:50:12,304 - DEBUG - https://huggingface.co:443 "GET /speechbrain/tts-tacotron2-ljspeech/resolve/main/hyperparams.yaml HTTP/11" 200 2199
2024-07-01 16:50:12,306 - DEBUG - Attempting to release lock 139760293387088 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-07-01 16:50:12,307 - DEBUG - Lock 139760293387088 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-07-01 16:50:12,307 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-tacotron2-ljspeech/snapshots/d01e530d6d8e1b388c04b882305867addbed4389/hyperparams.yaml
2024-07-01 16:50:12,308 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/tts-tacotron2-ljspeech.
2024-07-01 16:50:12,350 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-tacotron2-ljspeech/resolve/main/custom.py HTTP/11" 404 0
2024-07-01 16:50:12,638 - DEBUG - Collecting files (or symlinks) for pretraining in /app/tmpdir_tts.
2024-07-01 16:50:12,638 - INFO - Fetch model.ckpt: Delegating to Huggingface hub, source speechbrain/tts-tacotron2-ljspeech.
2024-07-01 16:50:12,833 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-tacotron2-ljspeech/resolve/main/model.ckpt HTTP/11" 302 0
2024-07-01 16:50:12,834 - DEBUG - Attempting to acquire lock 139760073906640 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-07-01 16:50:12,834 - DEBUG - Lock 139760073906640 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-07-01 16:50:13,109 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /repos/53/aa/53aa9731ffa60d07c730d5cf43b26f43ed3e81d8af2fcd171871b27ef602797f/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model.ckpt%3B+filename%3D%22model.ckpt%22%3B&Expires=1720111812&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTgxMn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9yZXBvcy81My9hYS81M2FhOTczMWZmYTYwZDA3YzczMGQ1Y2Y0M2IyNmY0M2VkM2U4MWQ4YWYyZmNkMTcxODcxYjI3ZWY2MDI3OTdmLzAyZDFhYTNmYzFjYzhmYjA5ODE4OTVjNzY1ZTlkMDAxNzQxNmJiNzg4NjFiNTQ1MGU0NThkZGE5MmU1Njc4NTY~cmVzcG9uc2UtY29udGVudC1kaXNwb3NpdGlvbj0qIn1dfQ__&Signature=NIlIcGGGEaaGmqDpolmLhB9Rt9Py-Cug9MC0t7pzaDA~xOi~IC~WD6tjWPB0WNWR~8moaMP2fIQentISDBi0dX3C7Uzuh~WalYqDQG8CgO5H7zXDnXt8GuK2~Qo0vjyqO45~ai3aWiXGI052Yk~p~78t959xH6VSf6lLgAvqPtmn48USnlXKa-h9LJWf2S3nv4TePuxdpptsNQpbvHI303vQy6POThYddyDkQjRqu17O5cSRAouqIGk0~LR5kAwMK5YeCY0YNzUCQhu0tloj0kcuPfNIrPL0K4Y~IhzLVdzgwegE9XziJhOYca1zQM-sjtMCsB2t3~AaUc4ONIrfSw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 112830206
2024-07-01 16:50:29,051 - DEBUG - Attempting to release lock 139760073906640 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-07-01 16:50:29,051 - DEBUG - Lock 139760073906640 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-07-01 16:50:29,051 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-tacotron2-ljspeech/snapshots/d01e530d6d8e1b388c04b882305867addbed4389/model.ckpt
2024-07-01 16:50:29,052 - INFO - Loading pretrained files for: model
2024-07-01 16:50:29,096 - INFO - Tacotron2 TTS model loaded successfully.
2024-07-01 16:50:29,096 - INFO - Loading HIFIGAN vocoder...
2024-07-01 16:50:29,097 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/tts-hifigan-ljspeech.
2024-07-01 16:50:29,136 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-hifigan-ljspeech/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-07-01 16:50:29,139 - DEBUG - Attempting to acquire lock 139760395318352 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-07-01 16:50:29,139 - DEBUG - Lock 139760395318352 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-07-01 16:50:29,225 - DEBUG - https://huggingface.co:443 "GET /speechbrain/tts-hifigan-ljspeech/resolve/main/hyperparams.yaml HTTP/11" 200 1156
2024-07-01 16:50:29,227 - DEBUG - Attempting to release lock 139760395318352 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-07-01 16:50:29,227 - DEBUG - Lock 139760395318352 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-07-01 16:50:29,227 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-hifigan-ljspeech/snapshots/17fbdc3aae35b81e1554111fa54eab5f2b70cedb/hyperparams.yaml
2024-07-01 16:50:29,228 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/tts-hifigan-ljspeech.
2024-07-01 16:50:29,266 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-hifigan-ljspeech/resolve/main/custom.py HTTP/11" 404 0
2024-07-01 16:50:29,430 - DEBUG - Collecting files (or symlinks) for pretraining in /app/tmpdir_vocoder.
2024-07-01 16:50:29,430 - INFO - Fetch generator.ckpt: Delegating to Huggingface hub, source speechbrain/tts-hifigan-ljspeech.
2024-07-01 16:50:29,476 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-hifigan-ljspeech/resolve/main/generator.ckpt HTTP/11" 302 0
2024-07-01 16:50:29,477 - DEBUG - Attempting to acquire lock 139760073960912 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-07-01 16:50:29,477 - DEBUG - Lock 139760073960912 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-07-01 16:50:29,707 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /repos/dd/64/dd64237d5b4ebb00291b992d7ef15692db3e45614c097e940bf876bed74fc754/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27generator.ckpt%3B+filename%3D%22generator.ckpt%22%3B&Expires=1720111829&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTgyOX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9yZXBvcy9kZC82NC9kZDY0MjM3ZDViNGViYjAwMjkxYjk5MmQ3ZWYxNTY5MmRiM2U0NTYxNGMwOTdlOTQwYmY4NzZiZWQ3NGZjNzU0LzFhMzg5ZjI0ZmZkYzM3NjllMGI5YzAzMzFmOWQ4MDNhZDBiNzgxODVlMGRhNGYyZDA5NGUyOWVlZGJjMTE2NDA~cmVzcG9uc2UtY29udGVudC1kaXNwb3NpdGlvbj0qIn1dfQ__&Signature=Rin3X5VTkv-cGJ4O8aF4VTM9ZOSWydZzmBakNEzGaeUMRjI03C4MDtUwStbllxtJKAL1sz78Lx7yzEbg4TC0mr~p49nWWCS1tOPjocHHTO2TcC5QImQ4xvoTYz1gcU99V4qkJoibJLnkBtS~4uH8-qte8UrLNz7nvTD9eoaEzsai1PmqoE46vhusKpwXTlodD-nPEoRH4kv7vyNbhptRJ8yyy0JbF9PRczGFJg0c-S7ZzdEke0VA5pAQLDnMVSUMkOgTkYTfyTWFfx2do~Q15-gqMQFfWXwabsF3oNzN~mQvQmCAMKfqRoJ4uYZsB0ueNJchAXP6dxs3Kg7-REWc6A__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 55828077
2024-07-01 16:50:38,070 - DEBUG - Attempting to release lock 139760073960912 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-07-01 16:50:38,070 - DEBUG - Lock 139760073960912 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-07-01 16:50:38,070 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-hifigan-ljspeech/snapshots/17fbdc3aae35b81e1554111fa54eab5f2b70cedb/generator.ckpt
2024-07-01 16:50:38,071 - INFO - Loading pretrained files for: generator
2024-07-01 16:50:38,116 - INFO - HIFIGAN vocoder loaded successfully.
2024-07-01 16:50:38,116 - INFO - Starting text-to-speech...
2024-07-01 16:50:39,559 - INFO - Text-to-speech completed.
2024-07-01 16:50:39,559 - INFO - Starting vocoder processing...
2024-07-01 16:50:42,424 - INFO - Vocoder processing completed.
2024-07-01 16:50:42,429 - INFO - 172.17.0.1 - - [01/Jul/2024 16:50:42] "POST /text_to_speech HTTP/1.1" 200 -
2024-07-01 16:50:42,630 - INFO - Received request at /transcribe endpoint
Loading SpeechBrain model...
2024-07-01 16:50:42,632 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-07-01 16:50:42,684 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-07-01 16:50:42,686 - DEBUG - Attempting to acquire lock 139760293696272 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-07-01 16:50:42,687 - DEBUG - Lock 139760293696272 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-07-01 16:50:42,771 - DEBUG - https://huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/hyperparams.yaml HTTP/11" 200 4991
2024-07-01 16:50:42,773 - DEBUG - Attempting to release lock 139760293696272 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-07-01 16:50:42,773 - DEBUG - Lock 139760293696272 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-07-01 16:50:42,773 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/hyperparams.yaml
2024-07-01 16:50:42,773 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-07-01 16:50:42,829 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/custom.py HTTP/11" 404 0
2024-07-01 16:50:44,916 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/EncoderDecoderASR-8720b4b0f1869a8221440e93425db7d5.
2024-07-01 16:50:44,916 - INFO - Fetch normalizer.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-07-01 16:50:44,993 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/normalizer.ckpt HTTP/11" 302 0
2024-07-01 16:50:44,994 - DEBUG - Attempting to acquire lock 139760293627536 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-07-01 16:50:44,994 - DEBUG - Lock 139760293627536 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-07-01 16:50:45,146 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27normalizer.ckpt%3B+filename%3D%22normalizer.ckpt%22%3B&Expires=1720111844&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTg0NH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC85NTZlOWMxNzUxYmVhYzJmNzViZmZmODI1M2Y5ODExYjc2YTFkNTdiYjUyZjI4NTg3ZDNiNmQ0NWJiY2U2MzE1P3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=kpDrOLLI6Qoggk-ikuAl1b4wobdgZWE7lnaq~j7asw5-bU3C6XmQ864ixsBcqpyXwMS-1ol9hVcuZ~wPVS9gT7Wrg1aOVXAuQ3WbQvXicO-ZuDvcPV3FuCLlSuVEz4holNIcLLsMt6UbT9~9oj3t-BVuoOt8a9W3hhOIbYNkvpM6hBw-GS-GETy2Vccqzr0vnpiQtNcri-3GnRReqWTMz2sgVc7X56XsI0RtPD~R2Pw0HUJMk~E2O2ssnzZQfBYfYMnN8DVP7clEkZ6OJl~qzuyi7Cs9dEiE0DNJwKZhKyx4T~kACBkwTWP4k39ETAgaUcWLKKoOUIfJwUUMOBPJnw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 1703
2024-07-01 16:50:45,148 - DEBUG - Attempting to release lock 139760293627536 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-07-01 16:50:45,148 - DEBUG - Lock 139760293627536 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-07-01 16:50:45,148 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/normalizer.ckpt
2024-07-01 16:50:45,148 - INFO - Fetch asr.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-07-01 16:50:45,194 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/asr.ckpt HTTP/11" 302 0
2024-07-01 16:50:45,195 - DEBUG - Attempting to acquire lock 139760075428816 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-07-01 16:50:45,195 - DEBUG - Lock 139760075428816 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-07-01 16:50:45,561 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27asr.ckpt%3B+filename%3D%22asr.ckpt%22%3B&Expires=1720111844&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTg0NH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC81YTA0YTFiMzY0ZmUzNzc2OWVkNDc5MDRlMDIzN2M0MTJlODc0MzIxZWZlZGE1NTk4NmYwOGEwNjgyMmZlNmVhP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=lsHudBz~5FgBm1iLo9kMm3lVvVPL-ACQsDKGnNe-UDBWNTGcMN4ziW27DCeqaQbmIWcvJ8tK8iwhI0dz3IFmuflQ8S2RaMNYqHmuJNjdqFd9evOgS0~oe6t1WKFpVsLF4TWvq7D0EI7AJTDZhuSdhIUom6fqdhJcdhP71sz~VF~Po4T5Lh4rRF9oSx1ChDj~iQWGl4RnSkzoHbg8RomEvY5GJDqX17XHXrbynTsPJXyXPNUsfvjYaXRyf6xeAOEqki~aEwuWW6vAeDz7aj2Fnjv-4t4ciN4gSyEk~3wTy86Rns4CrHde-YFshTYVVHsqI0gW5btsqfbnMOD4pzoWbg__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 291335121
2024-07-01 16:51:30,479 - DEBUG - Attempting to release lock 139760075428816 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-07-01 16:51:30,479 - DEBUG - Lock 139760075428816 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-07-01 16:51:30,479 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/asr.ckpt
2024-07-01 16:51:30,480 - INFO - Fetch lm.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-07-01 16:51:30,536 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/lm.ckpt HTTP/11" 302 0
2024-07-01 16:51:30,537 - DEBUG - Attempting to acquire lock 139760073370768 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-07-01 16:51:30,538 - DEBUG - Lock 139760073370768 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-07-01 16:51:30,824 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27lm.ckpt%3B+filename%3D%22lm.ckpt%22%3B&Expires=1720111890&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTg5MH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC84N2YxMzk4YzBlZDgzMzYzMWU0ODdhZWRmYmRhMzJiZTRjOTYxODU2NTQ4MmY2ZmFkNzhjYTRlOGRkYTAzZTViP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=ATksrfJV9YFALaqIV8B1fzo~p2eddttf7RUkCJznANSq~SNLl6RfkPkvrbUAH4cjvDcxyYJfzWpSspk4aQik25UiiAPyXSWm52Dbdm19S57sP6zSubddjG3oGIEE9SNBoQYtNZ4vXCeOF6OdHhP~2dU8cP-nkqHRd1NfZAOOqa18G7EqP0PV9iyGFVIm5dXLo2kPNw51Mw8Ottr4tTlniiiBn1cH38jr9RXDR80StRxKEuPawWkUldjU8Vf-dV~q7t4eVv4gNP7~umAShKRsZNOZu9Dc26AFzqaOCJwlgy~0xigIDOF3NYuFfTwPuFIcsElCam8dnguRm8KAv7A1IQ__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 381074869
2024-07-01 16:52:29,687 - DEBUG - Attempting to release lock 139760073370768 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-07-01 16:52:29,687 - DEBUG - Lock 139760073370768 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-07-01 16:52:29,687 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/lm.ckpt
2024-07-01 16:52:29,688 - INFO - Fetch tokenizer.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-07-01 16:52:29,739 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/tokenizer.ckpt HTTP/11" 302 0
2024-07-01 16:52:29,740 - DEBUG - Attempting to acquire lock 139760293424016 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-07-01 16:52:29,740 - DEBUG - Lock 139760293424016 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-07-01 16:52:29,914 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27tokenizer.ckpt%3B+filename%3D%22tokenizer.ckpt%22%3B&Expires=1720111949&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyMDExMTk0OX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC8zY2RjMDYzNDkyNzI1YWEyODA5YTVmYmIxYWE3OTBlZGEwZTU4MzcwYzgxMGViYjU0YThmNGM4YjJjNDZlYTY4P3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=n3STpqAvnObVecuh7inbNJW-VdjYGs3mdAvN9riZnRnVLea7AN2kkJdTanug2pt~8Xq~lInufr-kZT6zrLunEvunXrkmjza~8891OKeNQAabbSedFtDQoJ9qc3DOcNQ5C~u7usAz6EI-ocGdbRsKOH4x09PrJ3odTFNwhIW0CnMaUejkw1gHQe8D6TFIVyjnVv4ovaYdSwMn4573Q-Af6Lr9z5mZqHPOo6daEMyrOFXMpEVhtK0tjBug2KHgH0wYFWMazLYNLK93WooDeZ-3akXpIGaXZQ2jP5zii7eFsaHSNBTRc31fIqiO6HdLUgzfsFvhGysPPvcU~WhO38o~zw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 324347
2024-07-01 16:52:29,975 - DEBUG - Attempting to release lock 139760293424016 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-07-01 16:52:29,975 - DEBUG - Lock 139760293424016 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-07-01 16:52:29,975 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/tokenizer.ckpt
2024-07-01 16:52:29,976 - INFO - Loading pretrained files for: normalizer, asr, lm, tokenizer
2024-07-01 16:52:30,477 - INFO - SpeechBrain model loaded successfully.
2024-07-01 16:52:30,481 - INFO - Saved audio file to temporary location: /tmp/tmph1m9986v
2024-07-01 16:52:30,481 - INFO - Starting transcription...
2024-07-01 16:52:30,482 - INFO - Destination tmph1m9986v: local file in /tmp/tmph1m9986v.
2024-07-01 16:52:35,619 - INFO - Transcription completed. Result: HULLO MY NAME IS MATTIE
2024-07-01 16:52:35,623 - INFO - 172.17.0.1 - - [01/Jul/2024 16:52:35] "POST /transcribe HTTP/1.1" 200 -
2024-07-01 16:52:35,929 - INFO - Received request at /detect_voice_activity endpoint
2024-07-01 16:52:35,935 - INFO - Saved audio file to temporary location: /tmp/tmpl8x1pyoc.wav
2024-07-01 16:52:37,122 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
2024-07-01 16:52:37,122 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:37,122 - DEBUG - stack: []
2024-07-01 16:52:37,122 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:37,122 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
2024-07-01 16:52:37,122 - DEBUG - stack []
2024-07-01 16:52:37,122 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
2024-07-01 16:52:37,122 - DEBUG - stack []
2024-07-01 16:52:37,122 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
2024-07-01 16:52:37,122 - DEBUG - stack []
2024-07-01 16:52:37,123 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
2024-07-01 16:52:37,123 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:37,123 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2024-07-01 16:52:37,123 - DEBUG - stack ['$x4.0', '$const6.1']
2024-07-01 16:52:37,123 - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
2024-07-01 16:52:37,123 - DEBUG - stack ['$8binary_subscr.2']
2024-07-01 16:52:37,123 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-01 16:52:37,123 - DEBUG - stack []
2024-07-01 16:52:37,123 - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2024-07-01 16:52:37,123 - DEBUG - stack ['$threshold20.3']
2024-07-01 16:52:37,123 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
2024-07-01 16:52:37,123 - DEBUG - stack ['$22unary_negative.4']
2024-07-01 16:52:37,123 - DEBUG - dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
2024-07-01 16:52:37,123 - DEBUG - stack ['$22unary_negative.4', '$x024.5']
2024-07-01 16:52:37,124 - DEBUG - dispatch pc=28, inst=COPY(arg=2, lineno=1145)
2024-07-01 16:52:37,124 - DEBUG - stack ['$x024.5', '$22unary_negative.4']
2024-07-01 16:52:37,124 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-01 16:52:37,124 - DEBUG - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
2024-07-01 16:52:37,124 - DEBUG - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
2024-07-01 16:52:37,124 - DEBUG - stack ['$x024.5', '$30compare_op.6']
2024-07-01 16:52:37,124 - DEBUG - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
2024-07-01 16:52:37,124 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
2024-07-01 16:52:37,124 - DEBUG - stack: ['$phi38.0']
2024-07-01 16:52:37,124 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=1)
2024-07-01 16:52:37,125 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
2024-07-01 16:52:37,125 - DEBUG - stack ['$phi38.0']
2024-07-01 16:52:37,125 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
2024-07-01 16:52:37,125 - DEBUG - stack ['$phi38.0', '$threshold38.1']
2024-07-01 16:52:37,125 - DEBUG - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
2024-07-01 16:52:37,125 - DEBUG - stack ['$40compare_op.2']
2024-07-01 16:52:37,125 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:37,125 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:37,125 - DEBUG - stack: ['$phi50.0']
2024-07-01 16:52:37,125 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-01 16:52:37,125 - DEBUG - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
2024-07-01 16:52:37,125 - DEBUG - stack ['$phi50.0']
2024-07-01 16:52:37,125 - DEBUG - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-01 16:52:37,125 - DEBUG - stack []
2024-07-01 16:52:37,126 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:37,126 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:37,126 - DEBUG - stack: []
2024-07-01 16:52:37,126 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2024-07-01 16:52:37,126 - DEBUG - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-07-01 16:52:37,126 - DEBUG - stack []
2024-07-01 16:52:37,126 - DEBUG - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:37,126 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2024-07-01 16:52:37,126 - DEBUG - stack: []
2024-07-01 16:52:37,126 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-01 16:52:37,127 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
2024-07-01 16:52:37,127 - DEBUG - stack []
2024-07-01 16:52:37,127 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
2024-07-01 16:52:37,127 - DEBUG - stack ['$x58.0']
2024-07-01 16:52:37,127 - DEBUG - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
2024-07-01 16:52:37,127 - DEBUG - stack ['$x58.0', '$const60.1']
2024-07-01 16:52:37,127 - DEBUG - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
2024-07-01 16:52:37,127 - DEBUG - stack ['$62binary_subscr.2']
2024-07-01 16:52:37,127 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-01 16:52:37,127 - DEBUG - stack []
2024-07-01 16:52:37,127 - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
2024-07-01 16:52:37,128 - DEBUG - stack ['$threshold74.3']
2024-07-01 16:52:37,128 - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
2024-07-01 16:52:37,128 - DEBUG - stack ['$76unary_negative.4']
2024-07-01 16:52:37,128 - DEBUG - dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
2024-07-01 16:52:37,128 - DEBUG - stack ['$76unary_negative.4', '$x178.5']
2024-07-01 16:52:37,128 - DEBUG - dispatch pc=82, inst=COPY(arg=2, lineno=1149)
2024-07-01 16:52:37,128 - DEBUG - stack ['$x178.5', '$76unary_negative.4']
2024-07-01 16:52:37,128 - DEBUG - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-01 16:52:37,128 - DEBUG - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
2024-07-01 16:52:37,128 - DEBUG - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
2024-07-01 16:52:37,128 - DEBUG - stack ['$x178.5', '$84compare_op.6']
2024-07-01 16:52:37,128 - DEBUG - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
2024-07-01 16:52:37,128 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-07-01 16:52:37,129 - DEBUG - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-07-01 16:52:37,129 - DEBUG - stack: []
2024-07-01 16:52:37,129 - DEBUG - state.pc_initial: State(pc_initial=54 nstack_initial=0)
2024-07-01 16:52:37,129 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
2024-07-01 16:52:37,129 - DEBUG - stack []
2024-07-01 16:52:37,129 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
2024-07-01 16:52:37,129 - DEBUG - stack ['$const54.0']
2024-07-01 16:52:37,129 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:37,129 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:37,129 - DEBUG - stack: ['$phi92.0']
2024-07-01 16:52:37,129 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2024-07-01 16:52:37,129 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
2024-07-01 16:52:37,129 - DEBUG - stack ['$phi92.0']
2024-07-01 16:52:37,129 - DEBUG - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
2024-07-01 16:52:37,130 - DEBUG - stack ['$phi92.0', '$threshold92.1']
2024-07-01 16:52:37,130 - DEBUG - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
2024-07-01 16:52:37,130 - DEBUG - stack ['$94compare_op.2']
2024-07-01 16:52:37,130 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:37,130 - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-01 16:52:37,130 - DEBUG - stack: ['$phi104.0']
2024-07-01 16:52:37,130 - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=1)
2024-07-01 16:52:37,130 - DEBUG - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
2024-07-01 16:52:37,130 - DEBUG - stack ['$phi104.0']
2024-07-01 16:52:37,130 - DEBUG - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-01 16:52:37,130 - DEBUG - stack []
2024-07-01 16:52:37,130 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:37,130 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-01 16:52:37,131 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-01 16:52:37,131 - DEBUG - stack: []
2024-07-01 16:52:37,131 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-01 16:52:37,131 - DEBUG - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-07-01 16:52:37,131 - DEBUG - stack []
2024-07-01 16:52:37,131 - DEBUG - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:37,131 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
2024-07-01 16:52:37,131 - DEBUG - stack: []
2024-07-01 16:52:37,131 - DEBUG - state.pc_initial: State(pc_initial=112 nstack_initial=0)
2024-07-01 16:52:37,131 - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
2024-07-01 16:52:37,132 - DEBUG - stack []
2024-07-01 16:52:37,132 - DEBUG - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
2024-07-01 16:52:37,132 - DEBUG - stack ['$zero_pos112.0']
2024-07-01 16:52:37,132 - DEBUG - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:37,132 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-07-01 16:52:37,132 - DEBUG - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-07-01 16:52:37,132 - DEBUG - stack: []
2024-07-01 16:52:37,132 - DEBUG - state.pc_initial: State(pc_initial=108 nstack_initial=0)
2024-07-01 16:52:37,132 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
2024-07-01 16:52:37,132 - DEBUG - stack []
2024-07-01 16:52:37,132 - DEBUG - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
2024-07-01 16:52:37,132 - DEBUG - stack ['$const108.0']
2024-07-01 16:52:37,132 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:37,133 - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-01 16:52:37,133 - DEBUG - stack: []
2024-07-01 16:52:37,133 - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2024-07-01 16:52:37,133 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-07-01 16:52:37,133 - DEBUG - stack []
2024-07-01 16:52:37,133 - DEBUG - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-07-01 16:52:37,133 - DEBUG - stack ['$null$116.1', '$116load_global.0']
2024-07-01 16:52:37,133 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
2024-07-01 16:52:37,133 - DEBUG - stack ['$null$116.1', '$128load_attr.2']
2024-07-01 16:52:37,133 - DEBUG - dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
2024-07-01 16:52:37,133 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-07-01 16:52:37,133 - DEBUG - dispatch pc=144, inst=CALL(arg=1, lineno=1153)
2024-07-01 16:52:37,133 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-07-01 16:52:37,134 - DEBUG - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-07-01 16:52:37,134 - DEBUG - stack ['$144call.4']
2024-07-01 16:52:37,134 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-07-01 16:52:37,134 - DEBUG - stack ['$144call.4', '$null$154.6', '$154load_global.5']
2024-07-01 16:52:37,134 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
2024-07-01 16:52:37,134 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
2024-07-01 16:52:37,134 - DEBUG - dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
2024-07-01 16:52:37,134 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-07-01 16:52:37,134 - DEBUG - dispatch pc=182, inst=CALL(arg=1, lineno=1153)
2024-07-01 16:52:37,134 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-07-01 16:52:37,134 - DEBUG - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
2024-07-01 16:52:37,134 - DEBUG - stack ['$144call.4', '$182call.9']
2024-07-01 16:52:37,135 - DEBUG - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
2024-07-01 16:52:37,135 - DEBUG - stack ['$192compare_op.10']
2024-07-01 16:52:37,135 - DEBUG - end state. edges=[]
2024-07-01 16:52:37,135 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-07-01 16:52:37,135 - DEBUG - stack: []
2024-07-01 16:52:37,135 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=0)
2024-07-01 16:52:37,135 - DEBUG - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-07-01 16:52:37,135 - DEBUG - stack []
2024-07-01 16:52:37,135 - DEBUG - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-07-01 16:52:37,135 - DEBUG - stack ['$null$200.1', '$200load_global.0']
2024-07-01 16:52:37,135 - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
2024-07-01 16:52:37,135 - DEBUG - stack ['$null$200.1', '$212load_attr.2']
2024-07-01 16:52:37,136 - DEBUG - dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
2024-07-01 16:52:37,136 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-07-01 16:52:37,136 - DEBUG - dispatch pc=228, inst=CALL(arg=1, lineno=1155)
2024-07-01 16:52:37,136 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-07-01 16:52:37,136 - DEBUG - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-07-01 16:52:37,136 - DEBUG - stack ['$228call.4']
2024-07-01 16:52:37,136 - DEBUG - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-07-01 16:52:37,136 - DEBUG - stack ['$228call.4', '$null$238.6', '$238load_global.5']
2024-07-01 16:52:37,136 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
2024-07-01 16:52:37,136 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
2024-07-01 16:52:37,136 - DEBUG - dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
2024-07-01 16:52:37,136 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-07-01 16:52:37,137 - DEBUG - dispatch pc=266, inst=CALL(arg=1, lineno=1155)
2024-07-01 16:52:37,137 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-07-01 16:52:37,137 - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
2024-07-01 16:52:37,137 - DEBUG - stack ['$228call.4', '$266call.9']
2024-07-01 16:52:37,137 - DEBUG - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
2024-07-01 16:52:37,137 - DEBUG - stack ['$276compare_op.10']
2024-07-01 16:52:37,137 - DEBUG - end state. edges=[]
2024-07-01 16:52:37,137 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0)])
2024-07-01 16:52:37,137 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:37,137 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
2024-07-01 16:52:37,138 - DEBUG - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
2024-07-01 16:52:37,138 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-07-01 16:52:37,138 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-07-01 16:52:37,138 - DEBUG - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
2024-07-01 16:52:37,138 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
2024-07-01 16:52:37,139 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:37,139 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
2024-07-01 16:52:37,139 - DEBUG - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
2024-07-01 16:52:37,139 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
2024-07-01 16:52:37,139 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-07-01 16:52:37,139 - DEBUG - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-07-01 16:52:37,139 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
2024-07-01 16:52:37,139 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
2024-07-01 16:52:37,139 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
2024-07-01 16:52:37,139 - DEBUG - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-07-01 16:52:37,140 - DEBUG - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-07-01 16:52:37,140 - DEBUG - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
2024-07-01 16:52:37,140 - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:37,140 - DEBUG - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:37,142 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

2024-07-01 16:52:37,520 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1158)
           2	RESUME(arg=0, lineno=1158)
           4	LOAD_GLOBAL(arg=1, lineno=1174)
          16	LOAD_FAST(arg=0, lineno=1174)
          18	LOAD_FAST(arg=1, lineno=1174)
          20	LOAD_FAST(arg=2, lineno=1174)
          22	PRECALL(arg=3, lineno=1174)
          26	CALL(arg=3, lineno=1174)
          36	LOAD_FAST(arg=3, lineno=1174)
          38	LOAD_CONST(arg=1, lineno=1174)
          40	LOAD_CONST(arg=1, lineno=1174)
          42	BUILD_SLICE(arg=2, lineno=1174)
          44	STORE_SUBSCR(arg=None, lineno=1174)
          48	LOAD_CONST(arg=1, lineno=1174)
          50	RETURN_VALUE(arg=None, lineno=1174)
2024-07-01 16:52:37,520 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:37,520 - DEBUG - stack: []
2024-07-01 16:52:37,520 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:37,520 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1158)
2024-07-01 16:52:37,520 - DEBUG - stack []
2024-07-01 16:52:37,521 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1158)
2024-07-01 16:52:37,521 - DEBUG - stack []
2024-07-01 16:52:37,521 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1174)
2024-07-01 16:52:37,521 - DEBUG - stack []
2024-07-01 16:52:37,521 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1174)
2024-07-01 16:52:37,521 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:37,521 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=1174)
2024-07-01 16:52:37,521 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:37,521 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=1174)
2024-07-01 16:52:37,521 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3']
2024-07-01 16:52:37,521 - DEBUG - dispatch pc=22, inst=PRECALL(arg=3, lineno=1174)
2024-07-01 16:52:37,521 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-07-01 16:52:37,521 - DEBUG - dispatch pc=26, inst=CALL(arg=3, lineno=1174)
2024-07-01 16:52:37,522 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-07-01 16:52:37,522 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=1174)
2024-07-01 16:52:37,522 - DEBUG - stack ['$26call.5']
2024-07-01 16:52:37,522 - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-01 16:52:37,522 - DEBUG - stack ['$26call.5', '$y36.6']
2024-07-01 16:52:37,522 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-01 16:52:37,522 - DEBUG - stack ['$26call.5', '$y36.6', '$const38.7']
2024-07-01 16:52:37,522 - DEBUG - dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=1174)
2024-07-01 16:52:37,522 - DEBUG - stack ['$26call.5', '$y36.6', '$const38.7', '$const40.8']
2024-07-01 16:52:37,522 - DEBUG - dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=1174)
2024-07-01 16:52:37,522 - DEBUG - stack ['$26call.5', '$y36.6', '$42build_slice.10']
2024-07-01 16:52:37,522 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-01 16:52:37,522 - DEBUG - stack []
2024-07-01 16:52:37,522 - DEBUG - dispatch pc=50, inst=RETURN_VALUE(arg=None, lineno=1174)
2024-07-01 16:52:37,523 - DEBUG - stack ['$const48.11']
2024-07-01 16:52:37,523 - DEBUG - end state. edges=[]
2024-07-01 16:52:37,523 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:37,523 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:37,523 - DEBUG - defmap: {}
2024-07-01 16:52:37,523 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,523 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,523 - DEBUG - keep phismap: {}
2024-07-01 16:52:37,523 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:37,523 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:37,523 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$threshold18.3'}), (20, {'res': '$zero_pos20.4'}), (22, {}), (24, {}), (26, {'func': '$4load_global.0', 'args': ['$x16.2', '$threshold18.3', '$zero_pos20.4'], 'kw_names': None, 'res': '$26call.5'}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'res': '$y36.6'}), (38, {'res': '$const38.7'}), (40, {'res': '$const40.8'}), (42, {'start': '$const38.7', 'stop': '$const40.8', 'step': None, 'res': '$42build_slice.10', 'slicevar': '$42build_slice.9'}), (44, {'target': '$y36.6', 'index': '$42build_slice.10', 'value': '$26call.5'}), (46, {}), (48, {'res': '$const48.11'}), (50, {'retval': '$const48.11', 'castval': '$50return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:37,524 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f1c6d8e7250>) ['$4load_global.0']
    $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None) ['$26call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const38.7 = const(NoneType, None)       ['$const38.7']
    $const40.8 = const(NoneType, None)       ['$const40.8']
    $42build_slice.9 = global(slice: <class 'slice'>) ['$42build_slice.9']
    $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None) ['$42build_slice.10', '$42build_slice.9', '$const38.7', '$const40.8']
    y[$42build_slice.10] = $26call.5         ['$26call.5', '$42build_slice.10', 'y']
    $const48.11 = const(NoneType, None)      ['$const48.11']
    $50return_value.12 = cast(value=$const48.11) ['$50return_value.12', '$const48.11']
    return $50return_value.12                ['$50return_value.12']

2024-07-01 16:52:37,530 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:37,530 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79bea010>
2024-07-01 16:52:37,530 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:37,530 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:37,531 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:37,531 - DEBUG - on stmt: y = arg(3, name=y)
2024-07-01 16:52:37,531 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f1c6d8e7250>)
2024-07-01 16:52:37,531 - DEBUG - on stmt: $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,531 - DEBUG - on stmt: $const38.7 = const(NoneType, None)
2024-07-01 16:52:37,531 - DEBUG - on stmt: $const40.8 = const(NoneType, None)
2024-07-01 16:52:37,531 - DEBUG - on stmt: $42build_slice.9 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,531 - DEBUG - on stmt: $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,531 - DEBUG - on stmt: y[slice(None, None, None)] = $26call.5
2024-07-01 16:52:37,531 - DEBUG - on stmt: $const48.11 = const(NoneType, None)
2024-07-01 16:52:37,531 - DEBUG - on stmt: $50return_value.12 = cast(value=$const48.11)
2024-07-01 16:52:37,532 - DEBUG - on stmt: return $50return_value.12
2024-07-01 16:52:37,532 - DEBUG - defs defaultdict(<class 'list'>,
            {'$26call.5': [(<numba.core.ir.Assign object at 0x7f1c79bbbc90>,
                            0)],
             '$42build_slice.10': [(<numba.core.ir.Assign object at 0x7f1c79bcc650>,
                                    0)],
             '$42build_slice.9': [(<numba.core.ir.Assign object at 0x7f1c79bcc4d0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79bbb410>,
                                  0)],
             '$50return_value.12': [(<numba.core.ir.Assign object at 0x7f1c79bccb50>,
                                     0)],
             '$const38.7': [(<numba.core.ir.Assign object at 0x7f1c79bcc110>,
                             0)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c79bcc2d0>,
                             0)],
             '$const48.11': [(<numba.core.ir.Assign object at 0x7f1c79bcc910>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x7f1c79bbaf90>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c79bbae90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c79bbb190>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7f1c79bbb090>,
                           0)]})
2024-07-01 16:52:37,532 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79bba890>
2024-07-01 16:52:37,576 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=3, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=3, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=4, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=4, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=4, lineno=5)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=3, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=2, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=5, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=6, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=4, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:37,577 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:37,577 - DEBUG - stack: []
2024-07-01 16:52:37,577 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:37,577 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:37,577 - DEBUG - stack []
2024-07-01 16:52:37,577 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:37,577 - DEBUG - stack []
2024-07-01 16:52:37,577 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:37,577 - DEBUG - stack []
2024-07-01 16:52:37,577 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:37,577 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:37,577 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=3, lineno=2)
2024-07-01 16:52:37,578 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:37,578 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:37,578 - DEBUG - stack []
2024-07-01 16:52:37,578 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:37,578 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:37,578 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=3)
2024-07-01 16:52:37,578 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:37,578 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:37,578 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:37,578 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:37,578 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:37,579 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:37,579 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:37,579 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:37,579 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:37,579 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:37,579 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:37,579 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=4, lineno=3)
2024-07-01 16:52:37,579 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:37,579 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:37,579 - DEBUG - stack []
2024-07-01 16:52:37,579 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=4)
2024-07-01 16:52:37,579 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:37,580 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:37,580 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:37,580 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:37,580 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:37,580 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:37,580 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:37,580 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:37,580 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:37,580 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:37,580 - DEBUG - stack []
2024-07-01 16:52:37,580 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=5)
2024-07-01 16:52:37,581 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:37,581 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:37,581 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:37,581 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:37,581 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:37,581 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:37,581 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:37,581 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:37,581 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:37,581 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:37,581 - DEBUG - stack []
2024-07-01 16:52:37,582 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:37,582 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:37,582 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:37,582 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:37,582 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:37,582 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:37,582 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:37,582 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:37,582 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:37,582 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:37,583 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:37,583 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:37,583 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=3, lineno=6)
2024-07-01 16:52:37,583 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:37,583 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:37,583 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:37,583 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:37,583 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:37,583 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:37,583 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:37,584 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:37,584 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:37,584 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:37,584 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:37,584 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:37,584 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:37,584 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:37,584 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:37,584 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:37,584 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:37,585 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:37,585 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:37,585 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:37,585 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:37,585 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:37,585 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:37,585 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:37,585 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:37,585 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:37,585 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:37,585 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:37,586 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:37,586 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:37,586 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:37,586 - DEBUG - stack: []
2024-07-01 16:52:37,586 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:37,586 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=4, lineno=8)
2024-07-01 16:52:37,586 - DEBUG - stack []
2024-07-01 16:52:37,586 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:37,586 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:37,586 - DEBUG - end state. edges=[]
2024-07-01 16:52:37,587 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:37,587 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:37,587 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:37,587 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=5, lineno=6)
2024-07-01 16:52:37,587 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:37,587 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:37,587 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:37,587 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=6, lineno=7)
2024-07-01 16:52:37,587 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:37,587 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:37,587 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:37,588 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:37,588 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:37,588 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:37,588 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:37,588 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:37,588 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:37,589 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:37,589 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:37,589 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:37,590 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:37,590 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:37,590 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:37,591 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:37,591 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:37,591 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:37,591 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:37,593 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, 0)             ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 0)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:37,618 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:37,618 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,618 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:37,619 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:37,619 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:37,619 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:37,619 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,619 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:37,619 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,620 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:37,620 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,620 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:37,620 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:37,620 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:37,620 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,620 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,620 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:37,621 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:37,621 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:37,621 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:37,621 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,621 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,621 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:37,621 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:37,621 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:37,621 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:37,621 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:37,622 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,622 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:37,622 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:37,622 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,622 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:37,622 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:37,622 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:37,622 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,622 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:37,622 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,623 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:37,623 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:37,623 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,623 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:37,623 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,623 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:37,623 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:37,623 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:37,623 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:37,623 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:37,623 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:37,624 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,624 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:37,624 - DEBUG - on stmt: jump 240
2024-07-01 16:52:37,624 - DEBUG - ==== SSA block analysis pass on 442
2024-07-01 16:52:37,624 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,624 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:37,624 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:37,624 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:37,624 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,624 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:37,624 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:37,624 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,624 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,625 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:37,625 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,625 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,625 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:37,625 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:37,625 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:37,625 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,625 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:37,625 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,625 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,625 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:37,625 - DEBUG - ==== SSA block analysis pass on 279
2024-07-01 16:52:37,626 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,626 - DEBUG - on stmt: jump 289
2024-07-01 16:52:37,626 - DEBUG - ==== SSA block analysis pass on 291
2024-07-01 16:52:37,626 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,626 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,626 - DEBUG - ==== SSA block analysis pass on 289
2024-07-01 16:52:37,626 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,626 - DEBUG - on stmt: x0 = const(int, 0)
2024-07-01 16:52:37,626 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,626 - DEBUG - ==== SSA block analysis pass on 295
2024-07-01 16:52:37,626 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,626 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:37,626 - DEBUG - on stmt: stencil_index = $const60.1 + index00
2024-07-01 16:52:37,627 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,627 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,627 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:37,627 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,627 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,627 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:37,627 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:37,627 - DEBUG - ==== SSA block analysis pass on 299
2024-07-01 16:52:37,627 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,627 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:37,627 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,627 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,628 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:37,628 - DEBUG - ==== SSA block analysis pass on 333
2024-07-01 16:52:37,628 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,628 - DEBUG - on stmt: jump 343
2024-07-01 16:52:37,628 - DEBUG - ==== SSA block analysis pass on 345
2024-07-01 16:52:37,628 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,628 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,628 - DEBUG - ==== SSA block analysis pass on 343
2024-07-01 16:52:37,628 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,628 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:37,628 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,628 - DEBUG - ==== SSA block analysis pass on 349
2024-07-01 16:52:37,628 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,629 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,629 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,629 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:37,629 - DEBUG - ==== SSA block analysis pass on 353
2024-07-01 16:52:37,629 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,629 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,629 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:37,629 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,630 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,630 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:37,630 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,630 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:37,630 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:37,630 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:37,630 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,630 - DEBUG - ==== SSA block analysis pass on 357
2024-07-01 16:52:37,630 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,630 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,630 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:37,631 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,631 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,631 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:37,631 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,631 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:37,631 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:37,631 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:37,631 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,631 - DEBUG - ==== SSA block analysis pass on 441
2024-07-01 16:52:37,631 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c799300d0>
2024-07-01 16:52:37,631 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,633 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x7f1c79abaa90>,
                           299)],
             '$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c79923190>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c79923310>,
                                       0)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f1c79acfa90>,
                           349)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c79923c90>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c79923e10>,
                                       0)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79ad8190>,
                                    353)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c799240d0>,
                                       0)],
             '$128load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79ad89d0>,
                                  353)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c79924310>,
                                       0)],
             '$144call.4': [(<numba.core.ir.Assign object at 0x7f1c79ada4d0>,
                             353)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c79924a90>,
                                0)],
             '$154load_global.5': [(<numba.core.ir.Assign object at 0x7f1c79adb590>,
                                    353)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c79924d90>,
                                          0)],
             '$166load_attr.7': [(<numba.core.ir.Assign object at 0x7f1c79ae4810>,
                                  353)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c79925310>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c79925590>,
                                       0)],
             '$182call.9': [(<numba.core.ir.Assign object at 0x7f1c79ae57d0>,
                             353)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c79921950>,
                                     0)],
             '$192compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c79ae7b50>,
                                    353)],
             '$198return_value.11': [(<numba.core.ir.Assign object at 0x7f1c798f4f10>,
                                      353)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c79925c10>,
                                0)],
             '$200load_global.0': [(<numba.core.ir.Assign object at 0x7f1c798f86d0>,
                                    357)],
             '$212load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c798f8cd0>,
                                  357)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c79926190>,
                                0)],
             '$228call.4': [(<numba.core.ir.Assign object at 0x7f1c798fa9d0>,
                             357)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c799264d0>,
                                    0)],
             '$22unary_negative.4': [(<numba.core.ir.Assign object at 0x7f1c79a7cbd0>,
                                      240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c79926590>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c799266d0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c79926850>,
                                   230)],
             '$238load_global.5': [(<numba.core.ir.Assign object at 0x7f1c798fba90>,
                                    357)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c79927390>,
                                       442)],
             '$250load_attr.7': [(<numba.core.ir.Assign object at 0x7f1c79900d10>,
                                  357)],
             '$266call.9': [(<numba.core.ir.Assign object at 0x7f1c79901cd0>,
                             357)],
             '$276compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c79908090>,
                                    357)],
             '$282return_value.11': [(<numba.core.ir.Assign object at 0x7f1c79909410>,
                                      357)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c79a7ef50>,
                                  240)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c79921bd0>,
                                     0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x7f1c79a895d0>,
                          240)],
             '$40compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c79a72090>,
                                  241)],
             '$46pred': [(<numba.core.ir.Assign object at 0x7f1c79a90990>,
                          241)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c79922090>,
                                     0)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c79922390>,
                                   0)],
             '$76unary_negative.4': [(<numba.core.ir.Assign object at 0x7f1c79a83010>,
                                      295)],
             '$84compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c79aa8110>,
                                  295)],
             '$90pred': [(<numba.core.ir.Assign object at 0x7f1c79aab650>,
                          295)],
             '$94compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c79ab81d0>,
                                  299)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c79925ed0>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c79922fd0>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c79923590>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c799238d0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c79923a90>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c79924610>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c799247d0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c79925110>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c799257d0>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c79925990>,
                                 0)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c79a76a10>,
                            240)],
             '$const60.1': [(<numba.core.ir.Assign object at 0x7f1c79a81f50>,
                             295)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c79922ad0>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c79922e10>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c79921350>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c79924f10>,
                              230)],
             '$phi38.0': [(<numba.core.ir.Assign object at 0x7f1c79a7dbd0>,
                           240)],
             '$phi92.0': [(<numba.core.ir.Assign object at 0x7f1c79ab0a50>,
                           295)],
             'bool100': [(<numba.core.ir.Assign object at 0x7f1c79ab8490>,
                          299)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f1c79acf410>,
                          349)],
             'bool36': [(<numba.core.ir.Assign object at 0x7f1c79a7f050>, 240)],
             'bool46': [(<numba.core.ir.Assign object at 0x7f1c79a72350>, 241)],
             'bool90': [(<numba.core.ir.Assign object at 0x7f1c79aaa2d0>, 295)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c79921550>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c79926b50>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c799226d0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c79a33e50>,
                                240),
                               (<numba.core.ir.Assign object at 0x7f1c79a7cb50>,
                                295)],
             'threshold': [(<numba.core.ir.Assign object at 0x7f1c79921110>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c799fc050>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x7f1c7990bd90>, 240),
                    (<numba.core.ir.Assign object at 0x7f1c79a9ea90>, 289)],
             'x1': [(<numba.core.ir.Assign object at 0x7f1c7990bf10>, 295),
                    (<numba.core.ir.Assign object at 0x7f1c79accc50>, 343)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7f1c799211d0>,
                           0)]})
2024-07-01 16:52:37,634 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c799300d0>
2024-07-01 16:52:37,634 - DEBUG - Fix SSA violator on var stencil_index
2024-07-01 16:52:37,634 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:37,634 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,634 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:37,634 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:37,634 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:37,634 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:37,635 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,635 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:37,635 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,635 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:37,635 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,635 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:37,635 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:37,635 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:37,635 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,635 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,635 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:37,636 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:37,636 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:37,636 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:37,636 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,636 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,636 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:37,636 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:37,636 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:37,636 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:37,636 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:37,636 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:37,637 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:37,637 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:37,637 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,638 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:37,638 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,638 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:37,638 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:37,638 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:37,638 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:37,638 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:37,638 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:37,638 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,638 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:37,638 - DEBUG - on stmt: jump 240
2024-07-01 16:52:37,638 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:37,638 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,639 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:37,639 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:37,639 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:37,639 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,639 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:37,639 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:37,639 - DEBUG - first assign: stencil_index
2024-07-01 16:52:37,639 - DEBUG - replaced with: stencil_index = $const6.1 + index00
2024-07-01 16:52:37,639 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,639 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,640 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:37,640 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,640 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,640 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:37,640 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:37,640 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:37,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,640 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:37,640 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,640 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,640 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:37,641 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:37,641 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,641 - DEBUG - on stmt: jump 289
2024-07-01 16:52:37,641 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:37,641 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,641 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,641 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:37,641 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,641 - DEBUG - on stmt: x0 = const(int, 0)
2024-07-01 16:52:37,641 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,641 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:37,641 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,641 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:37,642 - DEBUG - on stmt: stencil_index = $const60.1 + index00
2024-07-01 16:52:37,642 - DEBUG - replaced with: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:37,642 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,642 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,642 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:37,642 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,642 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,642 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:37,642 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:37,642 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:37,642 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,642 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:37,643 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,643 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,643 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:37,643 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:37,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,643 - DEBUG - on stmt: jump 343
2024-07-01 16:52:37,643 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:37,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,643 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,643 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:37,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,643 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:37,643 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,644 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:37,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,644 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,644 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,644 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:37,644 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:37,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,644 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,644 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:37,644 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,644 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,644 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:37,645 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,645 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:37,645 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:37,645 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:37,645 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,645 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:37,645 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,645 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,645 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:37,645 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,645 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,646 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:37,646 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,646 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:37,646 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:37,646 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:37,646 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,646 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:37,646 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79a508d0>
2024-07-01 16:52:37,646 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,646 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x7f1c79933f10>],
             295: [<numba.core.ir.Assign object at 0x7f1c79950810>]})
2024-07-01 16:52:37,647 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:37,647 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,647 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:37,647 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:37,647 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:37,647 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:37,647 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,647 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:37,647 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,647 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:37,648 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,648 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:37,648 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:37,648 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:37,648 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,648 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,648 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:37,648 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:37,648 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:37,648 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:37,649 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,649 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,649 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:37,649 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:37,649 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:37,649 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:37,649 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:37,649 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,649 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:37,649 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:37,649 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,650 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:37,650 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:37,650 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:37,650 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,650 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:37,650 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,650 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:37,650 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:37,650 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,650 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:37,650 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,651 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:37,651 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:37,651 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:37,651 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:37,651 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:37,651 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:37,651 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,651 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:37,651 - DEBUG - on stmt: jump 240
2024-07-01 16:52:37,651 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:37,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,652 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:37,652 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:37,652 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:37,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,652 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:37,652 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:37,652 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,652 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,653 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,653 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:37,653 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,653 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,653 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:37,653 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:37,653 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:37,653 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,653 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:37,653 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,654 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,654 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:37,654 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:37,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,654 - DEBUG - on stmt: jump 289
2024-07-01 16:52:37,654 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:37,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,654 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,654 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:37,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,654 - DEBUG - on stmt: x0 = const(int, 0)
2024-07-01 16:52:37,654 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,655 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:37,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,655 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:37,655 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:37,655 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,655 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,655 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,655 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,655 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:37,655 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,655 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,655 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:37,656 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:37,656 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:37,656 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,656 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:37,656 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,656 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,656 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:37,656 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:37,656 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,656 - DEBUG - on stmt: jump 343
2024-07-01 16:52:37,657 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:37,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,657 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,657 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:37,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,657 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:37,657 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,657 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:37,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,657 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,658 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,658 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:37,658 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:37,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,658 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,658 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:37,658 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,658 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,658 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:37,658 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,659 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:37,659 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:37,659 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:37,659 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,659 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:37,659 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,659 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,659 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:37,659 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,659 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,660 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:37,660 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,660 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:37,660 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:37,660 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:37,660 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,660 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:37,660 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79950210>
2024-07-01 16:52:37,660 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,660 - DEBUG - Fix SSA violator on var x0
2024-07-01 16:52:37,660 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:37,660 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,660 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:37,661 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:37,661 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:37,661 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:37,661 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,661 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:37,661 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,661 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:37,661 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,661 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:37,661 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:37,662 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:37,662 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,662 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,662 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:37,662 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:37,662 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:37,662 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:37,662 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,662 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,662 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:37,662 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:37,663 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,664 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:37,664 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,664 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:37,664 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:37,664 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,664 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:37,664 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,664 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:37,664 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:37,664 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:37,664 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:37,664 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:37,665 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:37,665 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,665 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:37,665 - DEBUG - on stmt: jump 240
2024-07-01 16:52:37,665 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:37,665 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,665 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:37,665 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:37,665 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:37,665 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,665 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:37,666 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:37,666 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,666 - DEBUG - first assign: x0
2024-07-01 16:52:37,666 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,666 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,666 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:37,666 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,667 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,667 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:37,667 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:37,667 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:37,667 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,667 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:37,667 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,667 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,668 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:37,668 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:37,668 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,668 - DEBUG - on stmt: jump 289
2024-07-01 16:52:37,668 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:37,668 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,668 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,668 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:37,668 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,669 - DEBUG - on stmt: x0 = const(int, 0)
2024-07-01 16:52:37,669 - DEBUG - replaced with: x0.1 = const(int, 0)
2024-07-01 16:52:37,669 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,669 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:37,669 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,669 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:37,669 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:37,669 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,669 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,669 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:37,669 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,669 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,669 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:37,670 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:37,670 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:37,670 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,670 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:37,670 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,670 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,670 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:37,670 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:37,670 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,670 - DEBUG - on stmt: jump 343
2024-07-01 16:52:37,670 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:37,670 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,670 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,671 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:37,671 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,671 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:37,671 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,671 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:37,671 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,671 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,671 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,671 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:37,671 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:37,671 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,671 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,671 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:37,671 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,672 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,672 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:37,672 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,672 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:37,672 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:37,672 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:37,672 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,672 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:37,672 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,672 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,672 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:37,672 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,673 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,673 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:37,673 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,673 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:37,673 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:37,673 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:37,673 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,673 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:37,673 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79933950>
2024-07-01 16:52:37,673 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,673 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x7f1c79950610>],
             289: [<numba.core.ir.Assign object at 0x7f1c7995d290>]})
2024-07-01 16:52:37,673 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:37,674 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,674 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:37,674 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:37,674 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:37,674 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:37,674 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,674 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:37,674 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,674 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:37,675 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,675 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:37,675 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:37,675 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:37,675 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,675 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,675 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:37,675 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:37,675 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:37,676 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:37,676 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,676 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,676 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:37,676 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:37,676 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:37,676 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:37,676 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:37,676 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,677 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:37,677 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:37,677 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,677 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:37,677 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:37,677 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:37,677 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,677 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:37,678 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,678 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:37,678 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:37,678 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,678 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:37,678 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,678 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:37,678 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:37,678 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:37,679 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:37,679 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:37,679 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:37,679 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,679 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:37,679 - DEBUG - on stmt: jump 240
2024-07-01 16:52:37,679 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:37,679 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,679 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:37,679 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:37,679 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:37,680 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,680 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:37,680 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:37,680 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,680 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,680 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:37,680 - DEBUG - find_def var='x0' stmt=$30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:37,680 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,680 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,680 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:37,681 - DEBUG - find_def var='x0' stmt=$phi38.0 = x0
2024-07-01 16:52:37,681 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:37,681 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:37,681 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,681 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:37,681 - DEBUG - find_def var='x0' stmt=$40compare_op.2 = x0 <= threshold
2024-07-01 16:52:37,681 - DEBUG - find_def_from_top label 241
2024-07-01 16:52:37,681 - DEBUG - idom 240 from label 241
2024-07-01 16:52:37,681 - DEBUG - find_def_from_bottom label 240
2024-07-01 16:52:37,681 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,681 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,682 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:37,682 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:37,682 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,682 - DEBUG - on stmt: jump 289
2024-07-01 16:52:37,682 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:37,682 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,682 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,682 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:37,682 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,682 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-07-01 16:52:37,682 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,682 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:37,683 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,683 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:37,683 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:37,683 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,683 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,683 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:37,683 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,683 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,683 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:37,683 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:37,683 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:37,684 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,684 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:37,684 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,684 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,684 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:37,684 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:37,684 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,684 - DEBUG - on stmt: jump 343
2024-07-01 16:52:37,684 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:37,684 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,684 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,685 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:37,685 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,685 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:37,685 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,685 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:37,685 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,685 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,685 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,685 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:37,685 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:37,685 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,685 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,686 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:37,686 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,686 - DEBUG - find_def var='x0' stmt=$144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,686 - DEBUG - find_def_from_top label 353
2024-07-01 16:52:37,686 - DEBUG - idom 349 from label 353
2024-07-01 16:52:37,686 - DEBUG - find_def_from_bottom label 349
2024-07-01 16:52:37,686 - DEBUG - find_def_from_top label 349
2024-07-01 16:52:37,686 - DEBUG - idom 295 from label 349
2024-07-01 16:52:37,686 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:37,686 - DEBUG - find_def_from_top label 295
2024-07-01 16:52:37,686 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 295
2024-07-01 16:52:37,686 - DEBUG - find_def_from_bottom label 241
2024-07-01 16:52:37,687 - DEBUG - find_def_from_top label 241
2024-07-01 16:52:37,687 - DEBUG - idom 240 from label 241
2024-07-01 16:52:37,687 - DEBUG - find_def_from_bottom label 240
2024-07-01 16:52:37,687 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,687 - DEBUG - find_def_from_bottom label 291
2024-07-01 16:52:37,687 - DEBUG - find_def_from_top label 291
2024-07-01 16:52:37,687 - DEBUG - idom 240 from label 291
2024-07-01 16:52:37,687 - DEBUG - find_def_from_bottom label 240
2024-07-01 16:52:37,687 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,687 - DEBUG - find_def_from_bottom label 289
2024-07-01 16:52:37,687 - DEBUG - incoming_def x0.1 = const(int, 0)
2024-07-01 16:52:37,687 - DEBUG - replaced with: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,688 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,688 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:37,688 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,688 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:37,688 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:37,688 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:37,688 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,688 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:37,688 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,689 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,689 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:37,689 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,689 - DEBUG - find_def var='x0' stmt=$228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,689 - DEBUG - find_def_from_top label 357
2024-07-01 16:52:37,689 - DEBUG - idom 349 from label 357
2024-07-01 16:52:37,689 - DEBUG - find_def_from_bottom label 349
2024-07-01 16:52:37,689 - DEBUG - find_def_from_top label 349
2024-07-01 16:52:37,689 - DEBUG - idom 295 from label 349
2024-07-01 16:52:37,689 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:37,690 - DEBUG - replaced with: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,690 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,690 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:37,690 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,690 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:37,690 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:37,690 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:37,690 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,690 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:37,690 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a31990>
2024-07-01 16:52:37,690 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,691 - DEBUG - Fix SSA violator on var x1
2024-07-01 16:52:37,691 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:37,691 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,691 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:37,691 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:37,691 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:37,691 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:37,691 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,691 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:37,691 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,692 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:37,692 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,692 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:37,692 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:37,692 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:37,692 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,692 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,692 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:37,692 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:37,693 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:37,693 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:37,693 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,693 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,693 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:37,693 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:37,693 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:37,693 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:37,693 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:37,693 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,694 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:37,694 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:37,694 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,694 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:37,694 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:37,694 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:37,694 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,694 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:37,695 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,695 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:37,695 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:37,695 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,695 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:37,695 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,695 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:37,695 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:37,695 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:37,695 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:37,696 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:37,696 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:37,696 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,696 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:37,696 - DEBUG - on stmt: jump 240
2024-07-01 16:52:37,696 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:37,696 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,696 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:37,696 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:37,696 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:37,697 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,697 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:37,697 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:37,697 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,697 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,697 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:37,697 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,697 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,698 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:37,698 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:37,698 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:37,698 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,698 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:37,698 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,698 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,698 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:37,698 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:37,698 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,699 - DEBUG - on stmt: jump 289
2024-07-01 16:52:37,699 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:37,699 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,699 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,699 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:37,699 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,699 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-07-01 16:52:37,699 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,699 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:37,699 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,699 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-07-01 16:52:37,699 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:37,700 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:37,700 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,700 - DEBUG - first assign: x1
2024-07-01 16:52:37,700 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,700 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,700 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:37,700 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,700 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,700 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:37,700 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:37,700 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:37,701 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,701 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:37,701 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,701 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,701 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:37,701 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:37,701 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,701 - DEBUG - on stmt: jump 343
2024-07-01 16:52:37,701 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:37,701 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,701 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,701 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:37,702 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,702 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:37,702 - DEBUG - replaced with: x1.1 = const(int, 0)
2024-07-01 16:52:37,702 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,702 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:37,702 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,702 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,702 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,702 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:37,702 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:37,702 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,703 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,703 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:37,703 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,703 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,703 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:37,703 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,703 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:37,703 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:37,703 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:37,703 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,704 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:37,704 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,704 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,704 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:37,704 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,704 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,704 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:37,704 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,704 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:37,704 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:37,705 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:37,705 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,705 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:37,705 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79951650>
2024-07-01 16:52:37,705 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,705 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {295: [<numba.core.ir.Assign object at 0x7f1c7995d490>],
             343: [<numba.core.ir.Assign object at 0x7f1c7995df10>]})
2024-07-01 16:52:37,705 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:37,705 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,705 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:37,705 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:37,705 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:37,705 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:37,706 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,706 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:37,706 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,706 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:37,706 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,706 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:37,706 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:37,706 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:37,706 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,706 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,706 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:37,707 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,707 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:37,707 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:37,707 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:37,708 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,708 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:37,708 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:37,708 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:37,708 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,708 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:37,708 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,708 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:37,708 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:37,709 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,709 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:37,709 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,709 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:37,709 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:37,709 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:37,709 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:37,709 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:37,709 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:37,710 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,710 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:37,710 - DEBUG - on stmt: jump 240
2024-07-01 16:52:37,710 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:37,710 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,710 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:37,710 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:37,710 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:37,710 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,710 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:37,711 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:37,711 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:37,711 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,711 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:37,711 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,711 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,711 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:37,711 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:37,711 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:37,711 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,711 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:37,712 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,712 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,712 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:37,712 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:37,712 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,712 - DEBUG - on stmt: jump 289
2024-07-01 16:52:37,712 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:37,712 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,712 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,712 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:37,712 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,712 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-07-01 16:52:37,712 - DEBUG - on stmt: jump 295
2024-07-01 16:52:37,712 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:37,713 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,713 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-07-01 16:52:37,713 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:37,713 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:37,713 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,713 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:37,713 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:37,713 - DEBUG - find_def var='x1' stmt=$84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:37,713 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,714 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,714 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:37,714 - DEBUG - find_def var='x1' stmt=$phi92.0 = x1
2024-07-01 16:52:37,714 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:37,714 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:37,714 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,714 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:37,714 - DEBUG - find_def var='x1' stmt=$94compare_op.2 = x1 <= threshold
2024-07-01 16:52:37,714 - DEBUG - find_def_from_top label 299
2024-07-01 16:52:37,714 - DEBUG - idom 295 from label 299
2024-07-01 16:52:37,714 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:37,715 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,715 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,715 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:37,715 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:37,715 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,715 - DEBUG - on stmt: jump 343
2024-07-01 16:52:37,715 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:37,715 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,715 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,715 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:37,715 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,716 - DEBUG - on stmt: x1.1 = const(int, 0)
2024-07-01 16:52:37,716 - DEBUG - on stmt: jump 349
2024-07-01 16:52:37,716 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:37,716 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,716 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:37,716 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,716 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:37,716 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:37,716 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,716 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,716 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:37,717 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,717 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,717 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:37,717 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,717 - DEBUG - find_def var='x1' stmt=$182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,717 - DEBUG - find_def_from_top label 353
2024-07-01 16:52:37,717 - DEBUG - idom 349 from label 353
2024-07-01 16:52:37,717 - DEBUG - find_def_from_bottom label 349
2024-07-01 16:52:37,717 - DEBUG - find_def_from_top label 349
2024-07-01 16:52:37,717 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 349
2024-07-01 16:52:37,718 - DEBUG - find_def_from_bottom label 345
2024-07-01 16:52:37,718 - DEBUG - find_def_from_top label 345
2024-07-01 16:52:37,718 - DEBUG - idom 295 from label 345
2024-07-01 16:52:37,718 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:37,718 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,718 - DEBUG - find_def_from_bottom label 299
2024-07-01 16:52:37,718 - DEBUG - find_def_from_top label 299
2024-07-01 16:52:37,718 - DEBUG - idom 295 from label 299
2024-07-01 16:52:37,718 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:37,718 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,718 - DEBUG - find_def_from_bottom label 343
2024-07-01 16:52:37,718 - DEBUG - incoming_def x1.1 = const(int, 0)
2024-07-01 16:52:37,719 - DEBUG - replaced with: $182call.9 = call $166load_attr.7(x1.2, func=$166load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,719 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:37,719 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:37,719 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:37,719 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,719 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:37,719 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,719 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,719 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:37,719 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,720 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:37,720 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:37,720 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,720 - DEBUG - find_def var='x1' stmt=$266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,720 - DEBUG - find_def_from_top label 357
2024-07-01 16:52:37,720 - DEBUG - idom 349 from label 357
2024-07-01 16:52:37,720 - DEBUG - find_def_from_bottom label 349
2024-07-01 16:52:37,720 - DEBUG - replaced with: $266call.9 = call $250load_attr.7(x1.2, func=$250load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,720 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:37,720 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:37,720 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:37,721 - DEBUG - on stmt: jump 441
2024-07-01 16:52:37,721 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:37,721 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79a52250>
2024-07-01 16:52:37,721 - DEBUG - on stmt: jump 230
2024-07-01 16:52:37,728 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	COPY_FREE_VARS(arg=1, lineno=4388)
           4	RESUME(arg=0, lineno=4388)
           6	LOAD_GLOBAL(arg=1, lineno=4389)
          18	LOAD_FAST(arg=0, lineno=4389)
          20	LOAD_FAST(arg=1, lineno=4389)
          22	LOAD_DEREF(arg=2, lineno=4389)
          24	PRECALL(arg=3, lineno=4389)
          28	CALL(arg=3, lineno=4389)
          38	RETURN_VALUE(arg=None, lineno=4389)
2024-07-01 16:52:37,728 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:37,728 - DEBUG - stack: []
2024-07-01 16:52:37,728 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:37,728 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4388)
2024-07-01 16:52:37,728 - DEBUG - stack []
2024-07-01 16:52:37,728 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=4388)
2024-07-01 16:52:37,728 - DEBUG - stack []
2024-07-01 16:52:37,728 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=4388)
2024-07-01 16:52:37,729 - DEBUG - stack []
2024-07-01 16:52:37,729 - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=1, lineno=4389)
2024-07-01 16:52:37,729 - DEBUG - stack []
2024-07-01 16:52:37,729 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4389)
2024-07-01 16:52:37,729 - DEBUG - stack ['$null$6.1', '$6load_global.0']
2024-07-01 16:52:37,729 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=4389)
2024-07-01 16:52:37,729 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape18.2']
2024-07-01 16:52:37,729 - DEBUG - dispatch pc=22, inst=LOAD_DEREF(arg=2, lineno=4389)
2024-07-01 16:52:37,730 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3']
2024-07-01 16:52:37,730 - DEBUG - dispatch pc=24, inst=PRECALL(arg=3, lineno=4389)
2024-07-01 16:52:37,730 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3', '$22load_deref.4']
2024-07-01 16:52:37,730 - DEBUG - dispatch pc=28, inst=CALL(arg=3, lineno=4389)
2024-07-01 16:52:37,730 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3', '$22load_deref.4']
2024-07-01 16:52:37,730 - DEBUG - dispatch pc=38, inst=RETURN_VALUE(arg=None, lineno=4389)
2024-07-01 16:52:37,731 - DEBUG - stack ['$28call.5']
2024-07-01 16:52:37,731 - DEBUG - end state. edges=[]
2024-07-01 16:52:37,731 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:37,731 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:37,731 - DEBUG - defmap: {}
2024-07-01 16:52:37,731 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,731 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,731 - DEBUG - keep phismap: {}
2024-07-01 16:52:37,731 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:37,732 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:37,732 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'idx': 0, 'res': '$6load_global.0'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$shape18.2'}), (20, {'res': '$dtype20.3'}), (22, {'res': '$22load_deref.4'}), (24, {}), (26, {}), (28, {'func': '$6load_global.0', 'args': ['$shape18.2', '$dtype20.3', '$22load_deref.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'retval': '$28call.5', 'castval': '$38return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:37,732 - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$6load_global.0']
    $22load_deref.4 = freevar(retty: array(bool, 1d, C)) ['$22load_deref.4']
    $28call.5 = call $6load_global.0(shape, dtype, $22load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($22load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_deref.4', '$28call.5', '$6load_global.0', 'dtype', 'shape']
    $38return_value.6 = cast(value=$28call.5) ['$28call.5', '$38return_value.6']
    return $38return_value.6                 ['$38return_value.6']

2024-07-01 16:52:37,738 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:37,739 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7996a7d0>
2024-07-01 16:52:37,739 - DEBUG - on stmt: shape = arg(0, name=shape)
2024-07-01 16:52:37,739 - DEBUG - on stmt: dtype = arg(1, name=dtype)
2024-07-01 16:52:37,739 - DEBUG - on stmt: $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2024-07-01 16:52:37,739 - DEBUG - on stmt: $22load_deref.4 = freevar(retty: array(bool, 1d, C))
2024-07-01 16:52:37,739 - DEBUG - on stmt: $28call.5 = call $6load_global.0(shape, dtype, $22load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($22load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,739 - DEBUG - on stmt: $38return_value.6 = cast(value=$28call.5)
2024-07-01 16:52:37,739 - DEBUG - on stmt: return $38return_value.6
2024-07-01 16:52:37,740 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22load_deref.4': [(<numba.core.ir.Assign object at 0x7f1c799fc510>,
                                  0)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x7f1c79969dd0>,
                            0)],
             '$38return_value.6': [(<numba.core.ir.Assign object at 0x7f1c7996a090>,
                                    0)],
             '$6load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79969690>,
                                  0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7f1c79969410>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7f1c79969310>, 0)]})
2024-07-01 16:52:37,740 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7996a7d0>
2024-07-01 16:52:37,753 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4264)
           2	RESUME(arg=0, lineno=4264)
           4	LOAD_FAST(arg=0, lineno=4267)
           6	LOAD_METHOD(arg=0, lineno=4267)
          28	LOAD_FAST(arg=1, lineno=4267)
          30	LOAD_FAST(arg=2, lineno=4267)
          32	PRECALL(arg=2, lineno=4267)
          36	CALL(arg=2, lineno=4267)
          46	RETURN_VALUE(arg=None, lineno=4267)
2024-07-01 16:52:37,753 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:37,753 - DEBUG - stack: []
2024-07-01 16:52:37,754 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:37,754 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4264)
2024-07-01 16:52:37,754 - DEBUG - stack []
2024-07-01 16:52:37,754 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4264)
2024-07-01 16:52:37,754 - DEBUG - stack []
2024-07-01 16:52:37,754 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4267)
2024-07-01 16:52:37,754 - DEBUG - stack []
2024-07-01 16:52:37,754 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=4267)
2024-07-01 16:52:37,754 - DEBUG - stack ['$arrtype4.0']
2024-07-01 16:52:37,754 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=4267)
2024-07-01 16:52:37,755 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-07-01 16:52:37,755 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=2, lineno=4267)
2024-07-01 16:52:37,755 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$size28.3']
2024-07-01 16:52:37,755 - DEBUG - dispatch pc=32, inst=PRECALL(arg=2, lineno=4267)
2024-07-01 16:52:37,755 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$size28.3', '$align30.4']
2024-07-01 16:52:37,755 - DEBUG - dispatch pc=36, inst=CALL(arg=2, lineno=4267)
2024-07-01 16:52:37,755 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$size28.3', '$align30.4']
2024-07-01 16:52:37,755 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4267)
2024-07-01 16:52:37,755 - DEBUG - stack ['$36call.5']
2024-07-01 16:52:37,755 - DEBUG - end state. edges=[]
2024-07-01 16:52:37,755 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:37,756 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:37,756 - DEBUG - defmap: {}
2024-07-01 16:52:37,756 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,756 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,756 - DEBUG - keep phismap: {}
2024-07-01 16:52:37,756 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:37,756 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:37,756 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$arrtype4.0'}), (6, {'item': '$arrtype4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$size28.3'}), (30, {'res': '$align30.4'}), (32, {}), (34, {}), (36, {'func': '$6load_method.2', 'args': ['$size28.3', '$align30.4'], 'kw_names': None, 'res': '$36call.5'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'retval': '$36call.5', 'castval': '$46return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:37,757 - DEBUG - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $6load_method.2 = getattr(value=arrtype, attr=_allocate) ['$6load_method.2', 'arrtype']
    $36call.5 = call $6load_method.2(size, align, func=$6load_method.2, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None) ['$36call.5', '$6load_method.2', 'align', 'size']
    $46return_value.6 = cast(value=$36call.5) ['$36call.5', '$46return_value.6']
    return $46return_value.6                 ['$46return_value.6']

2024-07-01 16:52:37,764 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:37,764 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c797f22d0>
2024-07-01 16:52:37,765 - DEBUG - on stmt: arrtype = arg(0, name=arrtype)
2024-07-01 16:52:37,765 - DEBUG - on stmt: size = arg(1, name=size)
2024-07-01 16:52:37,765 - DEBUG - on stmt: align = arg(2, name=align)
2024-07-01 16:52:37,765 - DEBUG - on stmt: $6load_method.2 = getattr(value=arrtype, attr=_allocate)
2024-07-01 16:52:37,765 - DEBUG - on stmt: $36call.5 = call $6load_method.2(size, align, func=$6load_method.2, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,765 - DEBUG - on stmt: $46return_value.6 = cast(value=$36call.5)
2024-07-01 16:52:37,765 - DEBUG - on stmt: return $46return_value.6
2024-07-01 16:52:37,766 - DEBUG - defs defaultdict(<class 'list'>,
            {'$36call.5': [(<numba.core.ir.Assign object at 0x7f1c7998b290>,
                            0)],
             '$46return_value.6': [(<numba.core.ir.Assign object at 0x7f1c7998b550>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f1c7998ab10>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7f1c7998a710>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7f1c7998a510>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7f1c7998a610>, 0)]})
2024-07-01 16:52:37,766 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c797f22d0>
2024-07-01 16:52:37,769 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4259)
           2	RESUME(arg=0, lineno=4259)
           4	LOAD_GLOBAL(arg=1, lineno=4260)
          16	LOAD_FAST(arg=1, lineno=4260)
          18	LOAD_FAST(arg=2, lineno=4260)
          20	PRECALL(arg=2, lineno=4260)
          24	CALL(arg=2, lineno=4260)
          34	RETURN_VALUE(arg=None, lineno=4260)
2024-07-01 16:52:37,769 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:37,769 - DEBUG - stack: []
2024-07-01 16:52:37,769 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:37,769 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4259)
2024-07-01 16:52:37,769 - DEBUG - stack []
2024-07-01 16:52:37,769 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4259)
2024-07-01 16:52:37,769 - DEBUG - stack []
2024-07-01 16:52:37,770 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4260)
2024-07-01 16:52:37,770 - DEBUG - stack []
2024-07-01 16:52:37,770 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4260)
2024-07-01 16:52:37,770 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:37,770 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=4260)
2024-07-01 16:52:37,770 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize16.2']
2024-07-01 16:52:37,770 - DEBUG - dispatch pc=20, inst=PRECALL(arg=2, lineno=4260)
2024-07-01 16:52:37,770 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize16.2', '$align18.3']
2024-07-01 16:52:37,770 - DEBUG - dispatch pc=24, inst=CALL(arg=2, lineno=4260)
2024-07-01 16:52:37,770 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize16.2', '$align18.3']
2024-07-01 16:52:37,770 - DEBUG - dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=4260)
2024-07-01 16:52:37,771 - DEBUG - stack ['$24call.4']
2024-07-01 16:52:37,771 - DEBUG - end state. edges=[]
2024-07-01 16:52:37,771 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:37,771 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:37,771 - DEBUG - defmap: {}
2024-07-01 16:52:37,771 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,771 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,771 - DEBUG - keep phismap: {}
2024-07-01 16:52:37,772 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:37,772 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:37,772 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$allocsize16.2'}), (18, {'res': '$align18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$allocsize16.2', '$align18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:37,773 - DEBUG - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'align', 'allocsize']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

2024-07-01 16:52:37,777 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:37,778 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79827950>
2024-07-01 16:52:37,778 - DEBUG - on stmt: cls = arg(0, name=cls)
2024-07-01 16:52:37,778 - DEBUG - on stmt: allocsize = arg(1, name=allocsize)
2024-07-01 16:52:37,778 - DEBUG - on stmt: align = arg(2, name=align)
2024-07-01 16:52:37,778 - DEBUG - on stmt: $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
2024-07-01 16:52:37,778 - DEBUG - on stmt: $24call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:37,778 - DEBUG - on stmt: $34return_value.5 = cast(value=$24call.4)
2024-07-01 16:52:37,778 - DEBUG - on stmt: return $34return_value.5
2024-07-01 16:52:37,779 - DEBUG - defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x7f1c79826910>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x7f1c79826b50>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c798262d0>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7f1c79826050>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7f1c79825f10>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7f1c79825e10>, 0)]})
2024-07-01 16:52:37,779 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79932c90>
2024-07-01 16:52:37,887 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	COPY_FREE_VARS(arg=1, lineno=200)
           4	RESUME(arg=0, lineno=200)
           6	LOAD_FAST(arg=0, lineno=201)
           8	LOAD_DEREF(arg=2, lineno=201)
          10	BINARY_SUBSCR(arg=None, lineno=201)
          20	RETURN_VALUE(arg=None, lineno=201)
2024-07-01 16:52:37,887 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:37,887 - DEBUG - stack: []
2024-07-01 16:52:37,888 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:37,888 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=200)
2024-07-01 16:52:37,888 - DEBUG - stack []
2024-07-01 16:52:37,888 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=200)
2024-07-01 16:52:37,888 - DEBUG - stack []
2024-07-01 16:52:37,888 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=200)
2024-07-01 16:52:37,888 - DEBUG - stack []
2024-07-01 16:52:37,888 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=201)
2024-07-01 16:52:37,888 - DEBUG - stack []
2024-07-01 16:52:37,888 - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=2, lineno=201)
2024-07-01 16:52:37,888 - DEBUG - stack ['$tup6.0']
2024-07-01 16:52:37,888 - DEBUG - dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=201)
2024-07-01 16:52:37,889 - DEBUG - stack ['$tup6.0', '$8load_deref.1']
2024-07-01 16:52:37,889 - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=201)
2024-07-01 16:52:37,889 - DEBUG - stack ['$10binary_subscr.2']
2024-07-01 16:52:37,889 - DEBUG - end state. edges=[]
2024-07-01 16:52:37,889 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:37,889 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:37,889 - DEBUG - defmap: {}
2024-07-01 16:52:37,889 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,889 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:37,890 - DEBUG - keep phismap: {}
2024-07-01 16:52:37,890 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:37,890 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:37,890 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$tup6.0'}), (8, {'res': '$8load_deref.1'}), (10, {'index': '$8load_deref.1', 'target': '$tup6.0', 'res': '$10binary_subscr.2'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {'retval': '$10binary_subscr.2', 'castval': '$20return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:37,890 - DEBUG - label 0:
    tup = arg(0, name=tup)                   ['tup']
    idx = arg(1, name=idx)                   ['idx']
    $8load_deref.1 = freevar(idx_val: 0)     ['$8load_deref.1']
    $10binary_subscr.2 = getitem(value=tup, index=$8load_deref.1, fn=<built-in function getitem>) ['$10binary_subscr.2', '$8load_deref.1', 'tup']
    $20return_value.3 = cast(value=$10binary_subscr.2) ['$10binary_subscr.2', '$20return_value.3']
    return $20return_value.3                 ['$20return_value.3']

2024-07-01 16:52:37,896 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:37,896 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79854050>
2024-07-01 16:52:37,896 - DEBUG - on stmt: tup = arg(0, name=tup)
2024-07-01 16:52:37,896 - DEBUG - on stmt: idx = arg(1, name=idx)
2024-07-01 16:52:37,897 - DEBUG - on stmt: $8load_deref.1 = freevar(idx_val: 0)
2024-07-01 16:52:37,897 - DEBUG - on stmt: $10binary_subscr.2 = static_getitem(value=tup, index=0, index_var=$8load_deref.1, fn=<built-in function getitem>)
2024-07-01 16:52:37,897 - DEBUG - on stmt: $20return_value.3 = cast(value=$10binary_subscr.2)
2024-07-01 16:52:37,897 - DEBUG - on stmt: return $20return_value.3
2024-07-01 16:52:37,897 - DEBUG - defs defaultdict(<class 'list'>,
            {'$10binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c79855110>,
                                     0)],
             '$20return_value.3': [(<numba.core.ir.Assign object at 0x7f1c79854c50>,
                                    0)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x7f1c79854c10>,
                                 0)],
             'idx': [(<numba.core.ir.Assign object at 0x7f1c798545d0>, 0)],
             'tup': [(<numba.core.ir.Assign object at 0x7f1c79855d50>, 0)]})
2024-07-01 16:52:37,897 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79860a90>
2024-07-01 16:52:38,227 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1158)
           2	RESUME(arg=0, lineno=1158)
           4	LOAD_GLOBAL(arg=1, lineno=1174)
          16	LOAD_FAST(arg=0, lineno=1174)
          18	LOAD_FAST(arg=1, lineno=1174)
          20	LOAD_FAST(arg=2, lineno=1174)
          22	PRECALL(arg=3, lineno=1174)
          26	CALL(arg=3, lineno=1174)
          36	LOAD_FAST(arg=3, lineno=1174)
          38	LOAD_CONST(arg=1, lineno=1174)
          40	LOAD_CONST(arg=1, lineno=1174)
          42	BUILD_SLICE(arg=2, lineno=1174)
          44	STORE_SUBSCR(arg=None, lineno=1174)
          48	LOAD_CONST(arg=1, lineno=1174)
          50	RETURN_VALUE(arg=None, lineno=1174)
2024-07-01 16:52:38,227 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:38,227 - DEBUG - stack: []
2024-07-01 16:52:38,227 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:38,227 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1158)
2024-07-01 16:52:38,227 - DEBUG - stack []
2024-07-01 16:52:38,227 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1158)
2024-07-01 16:52:38,227 - DEBUG - stack []
2024-07-01 16:52:38,228 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1174)
2024-07-01 16:52:38,228 - DEBUG - stack []
2024-07-01 16:52:38,228 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1174)
2024-07-01 16:52:38,228 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:38,228 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=1174)
2024-07-01 16:52:38,228 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:38,228 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=1174)
2024-07-01 16:52:38,228 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3']
2024-07-01 16:52:38,228 - DEBUG - dispatch pc=22, inst=PRECALL(arg=3, lineno=1174)
2024-07-01 16:52:38,228 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-07-01 16:52:38,228 - DEBUG - dispatch pc=26, inst=CALL(arg=3, lineno=1174)
2024-07-01 16:52:38,228 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-07-01 16:52:38,228 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=1174)
2024-07-01 16:52:38,229 - DEBUG - stack ['$26call.5']
2024-07-01 16:52:38,229 - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-01 16:52:38,229 - DEBUG - stack ['$26call.5', '$y36.6']
2024-07-01 16:52:38,229 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-01 16:52:38,229 - DEBUG - stack ['$26call.5', '$y36.6', '$const38.7']
2024-07-01 16:52:38,229 - DEBUG - dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=1174)
2024-07-01 16:52:38,229 - DEBUG - stack ['$26call.5', '$y36.6', '$const38.7', '$const40.8']
2024-07-01 16:52:38,229 - DEBUG - dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=1174)
2024-07-01 16:52:38,229 - DEBUG - stack ['$26call.5', '$y36.6', '$42build_slice.10']
2024-07-01 16:52:38,229 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1174)
2024-07-01 16:52:38,229 - DEBUG - stack []
2024-07-01 16:52:38,229 - DEBUG - dispatch pc=50, inst=RETURN_VALUE(arg=None, lineno=1174)
2024-07-01 16:52:38,229 - DEBUG - stack ['$const48.11']
2024-07-01 16:52:38,230 - DEBUG - end state. edges=[]
2024-07-01 16:52:38,230 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:38,230 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:38,230 - DEBUG - defmap: {}
2024-07-01 16:52:38,230 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:38,230 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:38,230 - DEBUG - keep phismap: {}
2024-07-01 16:52:38,230 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:38,230 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:38,230 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$threshold18.3'}), (20, {'res': '$zero_pos20.4'}), (22, {}), (24, {}), (26, {'func': '$4load_global.0', 'args': ['$x16.2', '$threshold18.3', '$zero_pos20.4'], 'kw_names': None, 'res': '$26call.5'}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'res': '$y36.6'}), (38, {'res': '$const38.7'}), (40, {'res': '$const40.8'}), (42, {'start': '$const38.7', 'stop': '$const40.8', 'step': None, 'res': '$42build_slice.10', 'slicevar': '$42build_slice.9'}), (44, {'target': '$y36.6', 'index': '$42build_slice.10', 'value': '$26call.5'}), (46, {}), (48, {'res': '$const48.11'}), (50, {'retval': '$const48.11', 'castval': '$50return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:38,231 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f1c6d8e7250>) ['$4load_global.0']
    $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None) ['$26call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const38.7 = const(NoneType, None)       ['$const38.7']
    $const40.8 = const(NoneType, None)       ['$const40.8']
    $42build_slice.9 = global(slice: <class 'slice'>) ['$42build_slice.9']
    $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None) ['$42build_slice.10', '$42build_slice.9', '$const38.7', '$const40.8']
    y[$42build_slice.10] = $26call.5         ['$26call.5', '$42build_slice.10', 'y']
    $const48.11 = const(NoneType, None)      ['$const48.11']
    $50return_value.12 = cast(value=$const48.11) ['$50return_value.12', '$const48.11']
    return $50return_value.12                ['$50return_value.12']

2024-07-01 16:52:38,238 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:38,238 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79638d90>
2024-07-01 16:52:38,238 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:38,238 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:38,238 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:38,238 - DEBUG - on stmt: y = arg(3, name=y)
2024-07-01 16:52:38,238 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f1c6d8e7250>)
2024-07-01 16:52:38,239 - DEBUG - on stmt: $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,239 - DEBUG - on stmt: $const38.7 = const(NoneType, None)
2024-07-01 16:52:38,239 - DEBUG - on stmt: $const40.8 = const(NoneType, None)
2024-07-01 16:52:38,239 - DEBUG - on stmt: $42build_slice.9 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,239 - DEBUG - on stmt: $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,239 - DEBUG - on stmt: y[slice(None, None, None)] = $26call.5
2024-07-01 16:52:38,239 - DEBUG - on stmt: $const48.11 = const(NoneType, None)
2024-07-01 16:52:38,239 - DEBUG - on stmt: $50return_value.12 = cast(value=$const48.11)
2024-07-01 16:52:38,239 - DEBUG - on stmt: return $50return_value.12
2024-07-01 16:52:38,240 - DEBUG - defs defaultdict(<class 'list'>,
            {'$26call.5': [(<numba.core.ir.Assign object at 0x7f1c7963b350>,
                            0)],
             '$42build_slice.10': [(<numba.core.ir.Assign object at 0x7f1c79639b90>,
                                    0)],
             '$42build_slice.9': [(<numba.core.ir.Assign object at 0x7f1c79639bd0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c7963bb90>,
                                  0)],
             '$50return_value.12': [(<numba.core.ir.Assign object at 0x7f1c79639110>,
                                     0)],
             '$const38.7': [(<numba.core.ir.Assign object at 0x7f1c7963a190>,
                             0)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c7963a250>,
                             0)],
             '$const48.11': [(<numba.core.ir.Assign object at 0x7f1c79639b50>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x7f1c7963bfd0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c7963b790>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c7963bc10>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7f1c7963ad90>,
                           0)]})
2024-07-01 16:52:38,240 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79638d90>
2024-07-01 16:52:38,277 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=3, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=3, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=4, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=4, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=4, lineno=5)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=3, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=2, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=5, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=6, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=4, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:38,277 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:38,277 - DEBUG - stack: []
2024-07-01 16:52:38,277 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:38,277 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:38,277 - DEBUG - stack []
2024-07-01 16:52:38,277 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:38,277 - DEBUG - stack []
2024-07-01 16:52:38,277 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:38,277 - DEBUG - stack []
2024-07-01 16:52:38,277 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:38,278 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:38,278 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=3, lineno=2)
2024-07-01 16:52:38,278 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:38,278 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:38,278 - DEBUG - stack []
2024-07-01 16:52:38,278 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:38,278 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:38,278 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=3)
2024-07-01 16:52:38,278 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:38,278 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:38,278 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:38,279 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:38,279 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:38,279 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:38,279 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:38,279 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:38,279 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:38,279 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:38,279 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:38,279 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=4, lineno=3)
2024-07-01 16:52:38,279 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:38,279 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:38,279 - DEBUG - stack []
2024-07-01 16:52:38,280 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=4)
2024-07-01 16:52:38,280 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:38,280 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:38,280 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:38,280 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:38,280 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:38,280 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:38,280 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:38,280 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:38,280 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:38,280 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:38,280 - DEBUG - stack []
2024-07-01 16:52:38,280 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=5)
2024-07-01 16:52:38,280 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:38,281 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:38,281 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:38,281 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:38,281 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:38,281 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:38,281 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:38,281 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:38,281 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:38,281 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:38,281 - DEBUG - stack []
2024-07-01 16:52:38,281 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:38,281 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:38,281 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:38,282 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:38,282 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:38,282 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:38,282 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:38,282 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:38,282 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:38,282 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:38,282 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:38,282 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:38,282 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=3, lineno=6)
2024-07-01 16:52:38,282 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:38,282 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:38,282 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:38,283 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:38,283 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:38,283 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:38,283 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:38,283 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:38,283 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:38,283 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:38,283 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:38,283 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:38,283 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:38,283 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:38,283 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:38,284 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:38,284 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:38,284 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:38,284 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:38,284 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:38,284 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:38,284 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:38,284 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:38,284 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:38,284 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:38,284 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:38,284 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:38,285 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:38,285 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:38,285 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:38,285 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:38,285 - DEBUG - stack: []
2024-07-01 16:52:38,285 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:38,285 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=4, lineno=8)
2024-07-01 16:52:38,285 - DEBUG - stack []
2024-07-01 16:52:38,285 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:38,285 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:38,285 - DEBUG - end state. edges=[]
2024-07-01 16:52:38,285 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:38,286 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:38,286 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:38,286 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=5, lineno=6)
2024-07-01 16:52:38,286 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:38,286 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:38,286 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:38,286 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=6, lineno=7)
2024-07-01 16:52:38,286 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:38,286 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:38,286 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:38,286 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:38,286 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:38,287 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:38,287 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:38,287 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:38,287 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:38,287 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:38,288 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:38,288 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:38,288 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:38,289 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:38,289 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:38,289 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:38,289 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:38,289 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:38,289 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:38,290 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, 0)             ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 0)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:38,307 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:38,307 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,307 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:38,307 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:38,307 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:38,308 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:38,308 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,308 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:38,308 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,308 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:38,308 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,308 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:38,308 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:38,308 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:38,308 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,308 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,309 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:38,309 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:38,309 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:38,309 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:38,309 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,309 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,309 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:38,309 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:38,309 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:38,309 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:38,309 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:38,309 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:38,310 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:38,310 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:38,310 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,310 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:38,311 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,311 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:38,311 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:38,311 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:38,312 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:38,312 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:38,312 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:38,312 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,312 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:38,312 - DEBUG - on stmt: jump 240
2024-07-01 16:52:38,312 - DEBUG - ==== SSA block analysis pass on 442
2024-07-01 16:52:38,312 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,312 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:38,312 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:38,312 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:38,312 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,313 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:38,313 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:38,313 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,313 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,313 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:38,313 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,313 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,313 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:38,313 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:38,313 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:38,313 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,313 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:38,314 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,314 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,314 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:38,314 - DEBUG - ==== SSA block analysis pass on 279
2024-07-01 16:52:38,314 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,314 - DEBUG - on stmt: jump 289
2024-07-01 16:52:38,314 - DEBUG - ==== SSA block analysis pass on 291
2024-07-01 16:52:38,314 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,314 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,314 - DEBUG - ==== SSA block analysis pass on 289
2024-07-01 16:52:38,314 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,314 - DEBUG - on stmt: x0 = const(int, 0)
2024-07-01 16:52:38,315 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,315 - DEBUG - ==== SSA block analysis pass on 295
2024-07-01 16:52:38,315 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,315 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:38,315 - DEBUG - on stmt: stencil_index = $const60.1 + index00
2024-07-01 16:52:38,315 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,315 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,315 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:38,315 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,315 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,315 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:38,315 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:38,315 - DEBUG - ==== SSA block analysis pass on 299
2024-07-01 16:52:38,316 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,316 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:38,316 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,316 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,316 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:38,316 - DEBUG - ==== SSA block analysis pass on 333
2024-07-01 16:52:38,316 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,316 - DEBUG - on stmt: jump 343
2024-07-01 16:52:38,316 - DEBUG - ==== SSA block analysis pass on 345
2024-07-01 16:52:38,316 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,316 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,316 - DEBUG - ==== SSA block analysis pass on 343
2024-07-01 16:52:38,316 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,317 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:38,317 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,317 - DEBUG - ==== SSA block analysis pass on 349
2024-07-01 16:52:38,317 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,317 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,317 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,317 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:38,317 - DEBUG - ==== SSA block analysis pass on 353
2024-07-01 16:52:38,317 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,317 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,317 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:38,317 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,317 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,318 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:38,318 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,318 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:38,318 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:38,318 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:38,318 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,318 - DEBUG - ==== SSA block analysis pass on 357
2024-07-01 16:52:38,318 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,318 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,318 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:38,318 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,318 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,319 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:38,319 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,319 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:38,319 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:38,319 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:38,319 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,319 - DEBUG - ==== SSA block analysis pass on 441
2024-07-01 16:52:38,319 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795fae50>
2024-07-01 16:52:38,319 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,321 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x7f1c796d4cd0>,
                           299)],
             '$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c795286d0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c79528850>,
                                       0)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f1c796e1950>,
                           349)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c79529210>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c79529390>,
                                       0)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x7f1c7996b0d0>,
                                    353)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c79529650>,
                                       0)],
             '$128load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c794ee590>,
                                  353)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c79529950>,
                                       0)],
             '$144call.4': [(<numba.core.ir.Assign object at 0x7f1c794f0090>,
                             353)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c7952a050>,
                                0)],
             '$154load_global.5': [(<numba.core.ir.Assign object at 0x7f1c794f1150>,
                                    353)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c7952a310>,
                                          0)],
             '$166load_attr.7': [(<numba.core.ir.Assign object at 0x7f1c794f2390>,
                                  353)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c7952a810>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c7952aa50>,
                                       0)],
             '$182call.9': [(<numba.core.ir.Assign object at 0x7f1c794f3350>,
                             353)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c79522f10>,
                                     0)],
             '$192compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c794fd710>,
                                    353)],
             '$198return_value.11': [(<numba.core.ir.Assign object at 0x7f1c794fea90>,
                                      353)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c7952b0d0>,
                                0)],
             '$200load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79506250>,
                                    357)],
             '$212load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c795067d0>,
                                  357)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c7952b510>,
                                0)],
             '$228call.4': [(<numba.core.ir.Assign object at 0x7f1c79508350>,
                             357)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c7952b6d0>,
                                    0)],
             '$22unary_negative.4': [(<numba.core.ir.Assign object at 0x7f1c795fa450>,
                                      240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c7952b890>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c7952b9d0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c7952bb50>,
                                   230)],
             '$238load_global.5': [(<numba.core.ir.Assign object at 0x7f1c79509410>,
                                    357)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c7952c610>,
                                       442)],
             '$250load_attr.7': [(<numba.core.ir.Assign object at 0x7f1c7950a650>,
                                  357)],
             '$266call.9': [(<numba.core.ir.Assign object at 0x7f1c7950b610>,
                             357)],
             '$276compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c795119d0>,
                                    357)],
             '$282return_value.11': [(<numba.core.ir.Assign object at 0x7f1c79512d50>,
                                      357)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c797a5e50>,
                                  240)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c79523150>,
                                     0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x7f1c79602fd0>,
                          240)],
             '$40compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c797e2450>,
                                  241)],
             '$46pred': [(<numba.core.ir.Assign object at 0x7f1c795eec10>,
                          241)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c79523510>,
                                     0)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c79523810>,
                                   0)],
             '$76unary_negative.4': [(<numba.core.ir.Assign object at 0x7f1c795f4710>,
                                      295)],
             '$84compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c79616710>,
                                  295)],
             '$90pred': [(<numba.core.ir.Assign object at 0x7f1c79617290>,
                          295)],
             '$94compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c796c9390>,
                                  299)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c7952b310>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c795284d0>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c79528b10>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c79528e50>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c79529010>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c79529bd0>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c79529d90>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c7952a650>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c7952acd0>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c7952ae90>,
                                 0)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c795f99d0>,
                            240)],
             '$const60.1': [(<numba.core.ir.Assign object at 0x7f1c795f60d0>,
                             295)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c79523f90>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c79528350>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c79522d50>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c7952ab50>,
                              230)],
             '$phi38.0': [(<numba.core.ir.Assign object at 0x7f1c795f9e50>,
                           240)],
             '$phi92.0': [(<numba.core.ir.Assign object at 0x7f1c796bad90>,
                           295)],
             'bool100': [(<numba.core.ir.Assign object at 0x7f1c796ca710>,
                          299)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f1c796e1310>,
                          349)],
             'bool36': [(<numba.core.ir.Assign object at 0x7f1c79601890>, 240)],
             'bool46': [(<numba.core.ir.Assign object at 0x7f1c797de710>, 241)],
             'bool90': [(<numba.core.ir.Assign object at 0x7f1c796147d0>, 295)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c79522ad0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c7952be10>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c79523b90>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c795198d0>,
                                240),
                               (<numba.core.ir.Assign object at 0x7f1c795f8510>,
                                295)],
             'threshold': [(<numba.core.ir.Assign object at 0x7f1c79522590>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c79522390>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x7f1c79519950>, 240),
                    (<numba.core.ir.Assign object at 0x7f1c7960a210>, 289)],
             'x1': [(<numba.core.ir.Assign object at 0x7f1c795199d0>, 295),
                    (<numba.core.ir.Assign object at 0x7f1c796dac10>, 343)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7f1c79522690>,
                           0)]})
2024-07-01 16:52:38,322 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c795fae50>
2024-07-01 16:52:38,322 - DEBUG - Fix SSA violator on var stencil_index
2024-07-01 16:52:38,322 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:38,322 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,322 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:38,322 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:38,322 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:38,322 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:38,322 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,322 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:38,322 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:38,323 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,323 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:38,323 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,323 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,324 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:38,324 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:38,324 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,325 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:38,325 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,325 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:38,325 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:38,325 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,325 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:38,325 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,325 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:38,325 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:38,325 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:38,325 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:38,325 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:38,325 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:38,326 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,326 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:38,326 - DEBUG - on stmt: jump 240
2024-07-01 16:52:38,326 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:38,326 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,326 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:38,326 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:38,326 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:38,326 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,326 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:38,326 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:38,326 - DEBUG - first assign: stencil_index
2024-07-01 16:52:38,326 - DEBUG - replaced with: stencil_index = $const6.1 + index00
2024-07-01 16:52:38,327 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,327 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,327 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:38,328 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,328 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,328 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:38,328 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:38,328 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:38,329 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,329 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:38,329 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,329 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,329 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:38,329 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:38,329 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,329 - DEBUG - on stmt: jump 289
2024-07-01 16:52:38,329 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:38,329 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,329 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,329 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:38,330 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,330 - DEBUG - on stmt: x0 = const(int, 0)
2024-07-01 16:52:38,330 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,330 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:38,330 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,330 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:38,330 - DEBUG - on stmt: stencil_index = $const60.1 + index00
2024-07-01 16:52:38,330 - DEBUG - replaced with: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:38,330 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,330 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,330 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:38,330 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,331 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,331 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:38,331 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:38,331 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:38,331 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,331 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:38,331 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,331 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,331 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:38,331 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:38,331 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,331 - DEBUG - on stmt: jump 343
2024-07-01 16:52:38,332 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:38,332 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,332 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,332 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:38,332 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,332 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:38,332 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,332 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:38,332 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,332 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,332 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,332 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:38,332 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:38,333 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,333 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,333 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:38,333 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,333 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,333 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:38,333 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,333 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:38,333 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:38,333 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:38,333 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,333 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:38,334 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,334 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,334 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:38,334 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,334 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,334 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:38,334 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,334 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:38,334 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:38,334 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:38,334 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,334 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:38,335 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c796383d0>
2024-07-01 16:52:38,335 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,335 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x7f1c796387d0>],
             295: [<numba.core.ir.Assign object at 0x7f1c7963aad0>]})
2024-07-01 16:52:38,335 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:38,335 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,335 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:38,335 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:38,335 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:38,335 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:38,335 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,335 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:38,335 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,336 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:38,336 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,336 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:38,336 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:38,336 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:38,336 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,336 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,336 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:38,336 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:38,336 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:38,336 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:38,336 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,337 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,337 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:38,337 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:38,337 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:38,337 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:38,337 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:38,337 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,337 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:38,337 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:38,337 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,337 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:38,338 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:38,338 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:38,338 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,338 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:38,338 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,338 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:38,338 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:38,338 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,338 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:38,338 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,338 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:38,338 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:38,339 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:38,339 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:38,339 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:38,339 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:38,339 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,339 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:38,339 - DEBUG - on stmt: jump 240
2024-07-01 16:52:38,339 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:38,339 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,339 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:38,339 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:38,339 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:38,339 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,340 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:38,340 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:38,340 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,340 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,340 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,340 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:38,340 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,340 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,340 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:38,340 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:38,340 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:38,341 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,341 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:38,341 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,341 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,341 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:38,341 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:38,341 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,341 - DEBUG - on stmt: jump 289
2024-07-01 16:52:38,341 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:38,341 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,341 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,341 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:38,342 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,342 - DEBUG - on stmt: x0 = const(int, 0)
2024-07-01 16:52:38,342 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,342 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:38,342 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,342 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:38,342 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:38,342 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,342 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,342 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,342 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,342 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:38,343 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,343 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,343 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:38,343 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:38,343 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:38,343 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,343 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:38,343 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,344 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,344 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:38,344 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:38,344 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,344 - DEBUG - on stmt: jump 343
2024-07-01 16:52:38,344 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:38,344 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,344 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,344 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:38,344 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,344 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:38,345 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,345 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:38,345 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,345 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,345 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,345 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:38,345 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:38,345 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,345 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,345 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:38,345 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,346 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,346 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:38,346 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,346 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:38,346 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:38,346 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:38,346 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,346 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:38,346 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,346 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,347 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:38,347 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,347 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,347 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:38,347 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,347 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:38,347 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:38,347 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:38,347 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,347 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:38,348 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7961d310>
2024-07-01 16:52:38,348 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,348 - DEBUG - Fix SSA violator on var x0
2024-07-01 16:52:38,348 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:38,348 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,348 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:38,348 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:38,348 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:38,348 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:38,348 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,348 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:38,348 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:38,349 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,349 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:38,349 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,349 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,350 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:38,350 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:38,350 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:38,350 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:38,350 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:38,350 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,350 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:38,350 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:38,350 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,350 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:38,351 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:38,351 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:38,351 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,351 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:38,351 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,351 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:38,351 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:38,351 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,351 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:38,351 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,351 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:38,352 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:38,352 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:38,352 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:38,352 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:38,352 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:38,352 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,352 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:38,352 - DEBUG - on stmt: jump 240
2024-07-01 16:52:38,352 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:38,352 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,352 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:38,352 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:38,352 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:38,353 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,353 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:38,353 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:38,353 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,353 - DEBUG - first assign: x0
2024-07-01 16:52:38,353 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,353 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,353 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:38,353 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,353 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,353 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:38,353 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:38,354 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:38,354 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,354 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:38,354 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,354 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,354 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:38,354 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:38,354 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,354 - DEBUG - on stmt: jump 289
2024-07-01 16:52:38,354 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:38,354 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,354 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,354 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:38,354 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,355 - DEBUG - on stmt: x0 = const(int, 0)
2024-07-01 16:52:38,355 - DEBUG - replaced with: x0.1 = const(int, 0)
2024-07-01 16:52:38,355 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,355 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:38,355 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,355 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:38,355 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:38,355 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,355 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,355 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:38,355 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,356 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,356 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:38,356 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:38,356 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:38,356 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,356 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:38,356 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,356 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,356 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:38,356 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:38,356 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,356 - DEBUG - on stmt: jump 343
2024-07-01 16:52:38,357 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:38,357 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,357 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,357 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:38,357 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,357 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:38,357 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,357 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:38,357 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,357 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,357 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,357 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:38,357 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:38,358 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,358 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,358 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:38,358 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,358 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,358 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:38,358 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,358 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:38,358 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:38,358 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:38,358 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,358 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:38,359 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,359 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,359 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:38,359 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,359 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,359 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:38,359 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,359 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:38,359 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:38,359 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:38,360 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,360 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:38,360 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79638790>
2024-07-01 16:52:38,360 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,360 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x7f1c7961de50>],
             289: [<numba.core.ir.Assign object at 0x7f1c79541ad0>]})
2024-07-01 16:52:38,360 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:38,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,360 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:38,360 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:38,360 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:38,360 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:38,360 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,361 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:38,361 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,361 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:38,361 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,361 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:38,361 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:38,361 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:38,361 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,361 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,361 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:38,361 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:38,361 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:38,362 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:38,362 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,362 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,362 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:38,362 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:38,362 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:38,362 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:38,362 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:38,362 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,362 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:38,362 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:38,363 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,363 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:38,363 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:38,363 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:38,363 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,363 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:38,363 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,363 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:38,363 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:38,363 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,363 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:38,363 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,364 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:38,364 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:38,364 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:38,364 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:38,364 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:38,364 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:38,364 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,364 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:38,364 - DEBUG - on stmt: jump 240
2024-07-01 16:52:38,364 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:38,364 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,365 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:38,365 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:38,365 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:38,365 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,365 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:38,365 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:38,365 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,365 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,365 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:38,365 - DEBUG - find_def var='x0' stmt=$30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:38,365 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,366 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,366 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:38,366 - DEBUG - find_def var='x0' stmt=$phi38.0 = x0
2024-07-01 16:52:38,366 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:38,366 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:38,366 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,366 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:38,366 - DEBUG - find_def var='x0' stmt=$40compare_op.2 = x0 <= threshold
2024-07-01 16:52:38,366 - DEBUG - find_def_from_top label 241
2024-07-01 16:52:38,366 - DEBUG - idom 240 from label 241
2024-07-01 16:52:38,366 - DEBUG - find_def_from_bottom label 240
2024-07-01 16:52:38,366 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,366 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,367 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:38,367 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:38,367 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,367 - DEBUG - on stmt: jump 289
2024-07-01 16:52:38,367 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:38,367 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,367 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,367 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:38,367 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,367 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-07-01 16:52:38,367 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,368 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:38,368 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,368 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:38,368 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:38,368 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,368 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,368 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:38,368 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,368 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,368 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:38,368 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:38,368 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:38,368 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,368 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:38,369 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,369 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,369 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:38,369 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:38,369 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,369 - DEBUG - on stmt: jump 343
2024-07-01 16:52:38,369 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:38,369 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,369 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,369 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:38,369 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,369 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:38,369 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,370 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:38,370 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,370 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,370 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,370 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:38,370 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:38,370 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,370 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,370 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:38,370 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,370 - DEBUG - find_def var='x0' stmt=$144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,370 - DEBUG - find_def_from_top label 353
2024-07-01 16:52:38,370 - DEBUG - idom 349 from label 353
2024-07-01 16:52:38,371 - DEBUG - find_def_from_bottom label 349
2024-07-01 16:52:38,371 - DEBUG - find_def_from_top label 349
2024-07-01 16:52:38,371 - DEBUG - idom 295 from label 349
2024-07-01 16:52:38,371 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:38,371 - DEBUG - find_def_from_top label 295
2024-07-01 16:52:38,371 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 295
2024-07-01 16:52:38,371 - DEBUG - find_def_from_bottom label 241
2024-07-01 16:52:38,371 - DEBUG - find_def_from_top label 241
2024-07-01 16:52:38,371 - DEBUG - idom 240 from label 241
2024-07-01 16:52:38,371 - DEBUG - find_def_from_bottom label 240
2024-07-01 16:52:38,371 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,371 - DEBUG - find_def_from_bottom label 291
2024-07-01 16:52:38,371 - DEBUG - find_def_from_top label 291
2024-07-01 16:52:38,371 - DEBUG - idom 240 from label 291
2024-07-01 16:52:38,371 - DEBUG - find_def_from_bottom label 240
2024-07-01 16:52:38,372 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,372 - DEBUG - find_def_from_bottom label 289
2024-07-01 16:52:38,372 - DEBUG - incoming_def x0.1 = const(int, 0)
2024-07-01 16:52:38,372 - DEBUG - replaced with: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,372 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,372 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:38,372 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,372 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:38,372 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:38,372 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:38,372 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,372 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:38,372 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,373 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,373 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:38,373 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,373 - DEBUG - find_def var='x0' stmt=$228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,373 - DEBUG - find_def_from_top label 357
2024-07-01 16:52:38,373 - DEBUG - idom 349 from label 357
2024-07-01 16:52:38,373 - DEBUG - find_def_from_bottom label 349
2024-07-01 16:52:38,373 - DEBUG - find_def_from_top label 349
2024-07-01 16:52:38,373 - DEBUG - idom 295 from label 349
2024-07-01 16:52:38,373 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:38,373 - DEBUG - replaced with: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,373 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,373 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:38,374 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,374 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:38,374 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:38,374 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:38,374 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,374 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:38,374 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7952e590>
2024-07-01 16:52:38,374 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,374 - DEBUG - Fix SSA violator on var x1
2024-07-01 16:52:38,374 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:38,374 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,374 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:38,374 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:38,375 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:38,375 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:38,375 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,375 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:38,375 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,375 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:38,375 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,375 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:38,375 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:38,375 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:38,376 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,376 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,376 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:38,376 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:38,376 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:38,376 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:38,376 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,376 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,376 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:38,377 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:38,377 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,378 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:38,378 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,378 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:38,378 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:38,378 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,378 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:38,378 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,378 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:38,378 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:38,378 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:38,378 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:38,378 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:38,379 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:38,379 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,379 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:38,379 - DEBUG - on stmt: jump 240
2024-07-01 16:52:38,379 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:38,379 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,379 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:38,379 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:38,379 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:38,379 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,379 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:38,379 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:38,379 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,380 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,380 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:38,380 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,380 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,380 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:38,380 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:38,380 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:38,380 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,380 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:38,380 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,380 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,380 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:38,381 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:38,381 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,381 - DEBUG - on stmt: jump 289
2024-07-01 16:52:38,381 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:38,381 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,381 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,381 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:38,381 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,381 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-07-01 16:52:38,381 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,381 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:38,381 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,382 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-07-01 16:52:38,382 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:38,382 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:38,382 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,382 - DEBUG - first assign: x1
2024-07-01 16:52:38,382 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,382 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,382 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:38,382 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,382 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,382 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:38,382 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:38,382 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:38,383 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,383 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:38,383 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,383 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,383 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:38,383 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:38,383 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,383 - DEBUG - on stmt: jump 343
2024-07-01 16:52:38,383 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:38,383 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,383 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,384 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:38,384 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,384 - DEBUG - on stmt: x1 = const(int, 0)
2024-07-01 16:52:38,384 - DEBUG - replaced with: x1.1 = const(int, 0)
2024-07-01 16:52:38,384 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,384 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:38,384 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,384 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,384 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,384 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:38,384 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:38,384 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,384 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,385 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:38,385 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,385 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,385 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:38,385 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,385 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:38,385 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:38,385 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:38,385 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,385 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:38,385 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,385 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,386 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:38,386 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,386 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,386 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:38,386 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,386 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:38,386 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:38,386 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:38,386 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,386 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:38,386 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7961e150>
2024-07-01 16:52:38,387 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,387 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {295: [<numba.core.ir.Assign object at 0x7f1c79541cd0>],
             343: [<numba.core.ir.Assign object at 0x7f1c79542790>]})
2024-07-01 16:52:38,387 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:38,387 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,387 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:38,387 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-07-01 16:52:38,387 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-07-01 16:52:38,387 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:38,387 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,387 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:38,387 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,387 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:38,388 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,388 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:38,388 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:38,388 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:38,388 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,388 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,388 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:38,388 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:38,388 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-07-01 16:52:38,388 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:38,388 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:38,388 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,389 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:38,389 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-07-01 16:52:38,389 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,390 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:38,390 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,390 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:38,390 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:38,390 - DEBUG - on stmt: jump 230
2024-07-01 16:52:38,391 - DEBUG - ==== SSA block rewrite pass on 230
2024-07-01 16:52:38,391 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,391 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:38,391 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:38,391 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:38,391 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:38,391 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-07-01 16:52:38,392 - DEBUG - ==== SSA block rewrite pass on 232
2024-07-01 16:52:38,392 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,392 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:38,392 - DEBUG - on stmt: jump 240
2024-07-01 16:52:38,392 - DEBUG - ==== SSA block rewrite pass on 442
2024-07-01 16:52:38,392 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,392 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:38,392 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:38,392 - DEBUG - ==== SSA block rewrite pass on 240
2024-07-01 16:52:38,392 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,392 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:38,393 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:38,393 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:38,393 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,393 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-07-01 16:52:38,393 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,393 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,393 - DEBUG - on stmt: $phi38.0 = x0
2024-07-01 16:52:38,393 - DEBUG - on stmt: branch $36pred, 241, 291
2024-07-01 16:52:38,393 - DEBUG - ==== SSA block rewrite pass on 241
2024-07-01 16:52:38,393 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,393 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-07-01 16:52:38,394 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,394 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,394 - DEBUG - on stmt: branch $46pred, 279, 295
2024-07-01 16:52:38,394 - DEBUG - ==== SSA block rewrite pass on 279
2024-07-01 16:52:38,394 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,394 - DEBUG - on stmt: jump 289
2024-07-01 16:52:38,394 - DEBUG - ==== SSA block rewrite pass on 291
2024-07-01 16:52:38,394 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,394 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,394 - DEBUG - ==== SSA block rewrite pass on 289
2024-07-01 16:52:38,394 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,395 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-07-01 16:52:38,395 - DEBUG - on stmt: jump 295
2024-07-01 16:52:38,395 - DEBUG - ==== SSA block rewrite pass on 295
2024-07-01 16:52:38,395 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,395 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-07-01 16:52:38,395 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-07-01 16:52:38,395 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-07-01 16:52:38,395 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,395 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-07-01 16:52:38,395 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:38,396 - DEBUG - find_def var='x1' stmt=$84compare_op.6 = $76unary_negative.4 <= x1
2024-07-01 16:52:38,396 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,396 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,396 - DEBUG - on stmt: $phi92.0 = x1
2024-07-01 16:52:38,396 - DEBUG - find_def var='x1' stmt=$phi92.0 = x1
2024-07-01 16:52:38,396 - DEBUG - on stmt: branch $90pred, 299, 345
2024-07-01 16:52:38,396 - DEBUG - ==== SSA block rewrite pass on 299
2024-07-01 16:52:38,396 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,396 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-07-01 16:52:38,396 - DEBUG - find_def var='x1' stmt=$94compare_op.2 = x1 <= threshold
2024-07-01 16:52:38,397 - DEBUG - find_def_from_top label 299
2024-07-01 16:52:38,397 - DEBUG - idom 295 from label 299
2024-07-01 16:52:38,397 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:38,397 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,397 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,397 - DEBUG - on stmt: branch $100pred, 333, 349
2024-07-01 16:52:38,397 - DEBUG - ==== SSA block rewrite pass on 333
2024-07-01 16:52:38,397 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,397 - DEBUG - on stmt: jump 343
2024-07-01 16:52:38,397 - DEBUG - ==== SSA block rewrite pass on 345
2024-07-01 16:52:38,397 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,398 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,398 - DEBUG - ==== SSA block rewrite pass on 343
2024-07-01 16:52:38,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,398 - DEBUG - on stmt: x1.1 = const(int, 0)
2024-07-01 16:52:38,398 - DEBUG - on stmt: jump 349
2024-07-01 16:52:38,398 - DEBUG - ==== SSA block rewrite pass on 349
2024-07-01 16:52:38,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,398 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:38,398 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,398 - DEBUG - on stmt: branch $114pred, 353, 357
2024-07-01 16:52:38,398 - DEBUG - ==== SSA block rewrite pass on 353
2024-07-01 16:52:38,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,398 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,399 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-07-01 16:52:38,399 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,399 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,399 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-07-01 16:52:38,399 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,399 - DEBUG - find_def var='x1' stmt=$182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,399 - DEBUG - find_def_from_top label 353
2024-07-01 16:52:38,399 - DEBUG - idom 349 from label 353
2024-07-01 16:52:38,399 - DEBUG - find_def_from_bottom label 349
2024-07-01 16:52:38,399 - DEBUG - find_def_from_top label 349
2024-07-01 16:52:38,399 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 349
2024-07-01 16:52:38,400 - DEBUG - find_def_from_bottom label 345
2024-07-01 16:52:38,400 - DEBUG - find_def_from_top label 345
2024-07-01 16:52:38,400 - DEBUG - idom 295 from label 345
2024-07-01 16:52:38,400 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:38,400 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,400 - DEBUG - find_def_from_bottom label 299
2024-07-01 16:52:38,400 - DEBUG - find_def_from_top label 299
2024-07-01 16:52:38,400 - DEBUG - idom 295 from label 299
2024-07-01 16:52:38,400 - DEBUG - find_def_from_bottom label 295
2024-07-01 16:52:38,400 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:38,400 - DEBUG - find_def_from_bottom label 343
2024-07-01 16:52:38,400 - DEBUG - incoming_def x1.1 = const(int, 0)
2024-07-01 16:52:38,401 - DEBUG - replaced with: $182call.9 = call $166load_attr.7(x1.2, func=$166load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,401 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-07-01 16:52:38,401 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-07-01 16:52:38,401 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-07-01 16:52:38,401 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,401 - DEBUG - ==== SSA block rewrite pass on 357
2024-07-01 16:52:38,401 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,401 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,401 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-07-01 16:52:38,401 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,401 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:38,401 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-07-01 16:52:38,402 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,402 - DEBUG - find_def var='x1' stmt=$266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,402 - DEBUG - find_def_from_top label 357
2024-07-01 16:52:38,402 - DEBUG - idom 349 from label 357
2024-07-01 16:52:38,402 - DEBUG - find_def_from_bottom label 349
2024-07-01 16:52:38,402 - DEBUG - replaced with: $266call.9 = call $250load_attr.7(x1.2, func=$250load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:38,402 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-07-01 16:52:38,402 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-07-01 16:52:38,402 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-07-01 16:52:38,402 - DEBUG - on stmt: jump 441
2024-07-01 16:52:38,403 - DEBUG - ==== SSA block rewrite pass on 441
2024-07-01 16:52:38,403 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79638790>
2024-07-01 16:52:38,403 - DEBUG - on stmt: jump 230
2024-07-01 16:52:39,069 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
2024-07-01 16:52:39,069 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:39,069 - DEBUG - stack: []
2024-07-01 16:52:39,069 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:39,069 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
2024-07-01 16:52:39,069 - DEBUG - stack []
2024-07-01 16:52:39,069 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
2024-07-01 16:52:39,070 - DEBUG - stack []
2024-07-01 16:52:39,070 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-01 16:52:39,070 - DEBUG - stack []
2024-07-01 16:52:39,070 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-01 16:52:39,070 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:39,070 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-01 16:52:39,070 - DEBUG - stack ['$x4.0', '$const6.1']
2024-07-01 16:52:39,070 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-01 16:52:39,070 - DEBUG - stack ['$8binary_subscr.2']
2024-07-01 16:52:39,070 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
2024-07-01 16:52:39,070 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2024-07-01 16:52:39,070 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-01 16:52:39,071 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-07-01 16:52:39,071 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
2024-07-01 16:52:39,071 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-07-01 16:52:39,071 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-01 16:52:39,071 - DEBUG - stack ['$32compare_op.6']
2024-07-01 16:52:39,071 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
2024-07-01 16:52:39,071 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2024-07-01 16:52:39,071 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-01 16:52:39,071 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-07-01 16:52:39,071 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
2024-07-01 16:52:39,071 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2024-07-01 16:52:39,072 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
2024-07-01 16:52:39,072 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-07-01 16:52:39,072 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-07-01 16:52:39,072 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-07-01 16:52:39,072 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
2024-07-01 16:52:39,072 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-07-01 16:52:39,072 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
2024-07-01 16:52:39,072 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2024-07-01 16:52:39,072 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
2024-07-01 16:52:39,072 - DEBUG - stack ['$binop_and_72.14']
2024-07-01 16:52:39,072 - DEBUG - end state. edges=[]
2024-07-01 16:52:39,072 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:39,072 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:39,073 - DEBUG - defmap: {}
2024-07-01 16:52:39,073 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:39,073 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:39,073 - DEBUG - keep phismap: {}
2024-07-01 16:52:39,073 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:39,073 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:39,073 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:39,074 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-07-01 16:52:39,075 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
2024-07-01 16:52:39,075 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:39,075 - DEBUG - stack: []
2024-07-01 16:52:39,075 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:39,075 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
2024-07-01 16:52:39,075 - DEBUG - stack []
2024-07-01 16:52:39,075 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
2024-07-01 16:52:39,075 - DEBUG - stack []
2024-07-01 16:52:39,075 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-01 16:52:39,076 - DEBUG - stack []
2024-07-01 16:52:39,076 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-01 16:52:39,076 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:39,076 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-01 16:52:39,076 - DEBUG - stack ['$x4.0', '$const6.1']
2024-07-01 16:52:39,076 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-01 16:52:39,076 - DEBUG - stack ['$8binary_subscr.2']
2024-07-01 16:52:39,076 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
2024-07-01 16:52:39,076 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2024-07-01 16:52:39,076 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-01 16:52:39,076 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-07-01 16:52:39,076 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
2024-07-01 16:52:39,076 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-07-01 16:52:39,077 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-01 16:52:39,077 - DEBUG - stack ['$32compare_op.6']
2024-07-01 16:52:39,077 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
2024-07-01 16:52:39,077 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2024-07-01 16:52:39,077 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-01 16:52:39,077 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-07-01 16:52:39,077 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
2024-07-01 16:52:39,077 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2024-07-01 16:52:39,077 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
2024-07-01 16:52:39,077 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-07-01 16:52:39,077 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-07-01 16:52:39,077 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-07-01 16:52:39,078 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
2024-07-01 16:52:39,078 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-07-01 16:52:39,078 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
2024-07-01 16:52:39,078 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2024-07-01 16:52:39,078 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
2024-07-01 16:52:39,078 - DEBUG - stack ['$binop_and_72.14']
2024-07-01 16:52:39,078 - DEBUG - end state. edges=[]
2024-07-01 16:52:39,078 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:39,078 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:39,078 - DEBUG - defmap: {}
2024-07-01 16:52:39,078 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:39,078 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:39,078 - DEBUG - keep phismap: {}
2024-07-01 16:52:39,079 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:39,079 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:39,079 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:39,080 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-07-01 16:52:39,084 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:39,085 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:39,085 - DEBUG - stack: []
2024-07-01 16:52:39,085 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:39,085 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-01 16:52:39,085 - DEBUG - stack []
2024-07-01 16:52:39,085 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-01 16:52:39,085 - DEBUG - stack []
2024-07-01 16:52:39,085 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-01 16:52:39,085 - DEBUG - stack []
2024-07-01 16:52:39,085 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-01 16:52:39,085 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:39,085 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-01 16:52:39,086 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:39,086 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-01 16:52:39,086 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:39,086 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-01 16:52:39,086 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:39,086 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:39,086 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:39,086 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:39,086 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:39,086 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-01 16:52:39,086 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:39,086 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-01 16:52:39,087 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:39,087 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:39,087 - DEBUG - stack []
2024-07-01 16:52:39,087 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:39,087 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:39,087 - DEBUG - end state. edges=[]
2024-07-01 16:52:39,087 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:39,087 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:39,087 - DEBUG - defmap: {}
2024-07-01 16:52:39,087 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:39,088 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:39,088 - DEBUG - keep phismap: {}
2024-07-01 16:52:39,088 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:39,088 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:39,088 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:39,089 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:39,108 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:39,108 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793a4f10>
2024-07-01 16:52:39,108 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:39,108 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:39,109 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>)
2024-07-01 16:52:39,109 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,109 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:39,109 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:39,109 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:39,109 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,109 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:39,109 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:39,109 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:39,109 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:39,110 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c79489590>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c79488690>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c79488c90>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c79488190>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79489190>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c79488910>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c79488650>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c79488c10>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c79489150>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c794891d0>, 0)]})
2024-07-01 16:52:39,110 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c793a4f10>
2024-07-01 16:52:39,135 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:39,135 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:39,135 - DEBUG - stack: []
2024-07-01 16:52:39,135 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:39,135 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:39,135 - DEBUG - stack []
2024-07-01 16:52:39,136 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:39,136 - DEBUG - stack []
2024-07-01 16:52:39,136 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:39,136 - DEBUG - stack []
2024-07-01 16:52:39,136 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:39,136 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:39,136 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:39,136 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:39,136 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:39,136 - DEBUG - stack []
2024-07-01 16:52:39,136 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:39,137 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:39,137 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:39,137 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:39,137 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:39,137 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:39,137 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:39,137 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:39,137 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:39,137 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:39,137 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:39,137 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:39,137 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:39,137 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:39,138 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:39,138 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:39,138 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:39,138 - DEBUG - stack []
2024-07-01 16:52:39,138 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:39,138 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:39,138 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:39,138 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:39,138 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:39,138 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:39,138 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:39,139 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:39,139 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:39,139 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:39,139 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:39,139 - DEBUG - stack []
2024-07-01 16:52:39,139 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:39,139 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:39,139 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:39,139 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:39,139 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:39,139 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:39,140 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:39,140 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:39,140 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:39,140 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:39,140 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:39,140 - DEBUG - stack []
2024-07-01 16:52:39,140 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:39,140 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:39,140 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:39,140 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:39,140 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:39,140 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:39,141 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:39,141 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:39,141 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:39,141 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:39,141 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:39,141 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:39,141 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:39,141 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:39,141 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:39,141 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:39,141 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:39,141 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:39,142 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:39,142 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:39,142 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:39,143 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:39,143 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:39,143 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:39,143 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:39,143 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:39,143 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:39,143 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:39,143 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:39,143 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:39,143 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:39,143 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:39,143 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:39,144 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:39,144 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:39,144 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:39,144 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:39,144 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:39,145 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:39,145 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:39,145 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:39,145 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:39,145 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:39,145 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:39,145 - DEBUG - stack: []
2024-07-01 16:52:39,145 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:39,145 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:39,145 - DEBUG - stack []
2024-07-01 16:52:39,146 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:39,146 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:39,146 - DEBUG - end state. edges=[]
2024-07-01 16:52:39,146 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:39,146 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:39,146 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:39,146 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:39,146 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:39,146 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:39,146 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:39,146 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:39,147 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:39,147 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:39,147 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:39,147 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:39,147 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:39,147 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:39,148 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:39,148 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:39,148 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:39,149 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:39,149 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:39,150 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:39,150 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:39,151 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:39,151 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:39,151 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:39,152 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:39,152 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:39,152 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:39,153 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:39,164 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:39,164 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793dca50>
2024-07-01 16:52:39,164 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:39,164 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:39,164 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:39,164 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:39,164 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:39,164 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:39,164 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,165 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:39,165 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:39,165 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:39,165 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:39,165 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,165 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:39,165 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:39,165 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:39,165 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:39,165 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:39,166 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,166 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:39,166 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:39,166 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:39,166 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:39,166 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:39,166 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,167 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:39,167 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:39,167 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:39,167 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:39,167 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:39,167 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:39,167 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,167 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:39,167 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,167 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:39,168 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:39,168 - DEBUG - on stmt: jump 230
2024-07-01 16:52:39,168 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:39,168 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793dca50>
2024-07-01 16:52:39,168 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:39,168 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:39,168 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:39,168 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:39,168 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:39,168 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:39,169 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793dca50>
2024-07-01 16:52:39,169 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:39,169 - DEBUG - on stmt: jump 240
2024-07-01 16:52:39,169 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:39,169 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793dca50>
2024-07-01 16:52:39,169 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:39,169 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:39,169 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:39,169 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793dca50>
2024-07-01 16:52:39,169 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:39,170 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:39,170 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:39,170 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:39,170 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:39,170 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:39,170 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-01 16:52:39,170 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:39,170 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:39,170 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:39,170 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:39,171 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:39,171 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:39,171 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-01 16:52:39,171 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:39,171 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:39,171 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:39,171 - DEBUG - on stmt: jump 241
2024-07-01 16:52:39,171 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:39,171 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793dca50>
2024-07-01 16:52:39,171 - DEBUG - on stmt: jump 230
2024-07-01 16:52:39,173 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c793d80d0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c793d8250>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c793d8b90>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c793d8d10>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c793d8fd0>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c793d91d0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c793d9890>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c793d9a10>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c793d9ed0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c793da0d0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c793ce8d0>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c793da650>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c793dab10>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c793dad10>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c793bbb90>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c793daed0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c793db050>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c793db1d0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c793dbc90>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c793cec10>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c793a67d0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c793bbe50>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c793cf050>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c793c4150>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c793b9410>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c793cf290>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c793ba690>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c793bb990>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c793b9d50>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c793da910>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c793cfe90>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c793d8490>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c793d87d0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c793d8990>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c793d9410>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c793d95d0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c793d9d10>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c793da250>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c793da3d0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c793a5e10>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c793b30d0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c793b3dd0>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c793b0a10>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c793cf990>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c793cfd10>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c793ce710>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c793db250>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c793ce4d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c793db4d0>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c793cf590>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c793bb910>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c793bbad0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c793bbe10>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c793c40d0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c793ce150>, 0)]})
2024-07-01 16:52:39,173 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c793dca50>
2024-07-01 16:52:39,627 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:39,627 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:39,627 - DEBUG - stack: []
2024-07-01 16:52:39,627 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:39,627 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-01 16:52:39,627 - DEBUG - stack []
2024-07-01 16:52:39,627 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-01 16:52:39,627 - DEBUG - stack []
2024-07-01 16:52:39,627 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-01 16:52:39,627 - DEBUG - stack []
2024-07-01 16:52:39,627 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-01 16:52:39,628 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:39,628 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-01 16:52:39,628 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:39,628 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-01 16:52:39,628 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:39,628 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-01 16:52:39,628 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:39,628 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:39,628 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:39,628 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:39,628 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:39,629 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-01 16:52:39,629 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:39,629 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-01 16:52:39,629 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:39,629 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:39,629 - DEBUG - stack []
2024-07-01 16:52:39,629 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:39,629 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:39,629 - DEBUG - end state. edges=[]
2024-07-01 16:52:39,629 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:39,629 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:39,630 - DEBUG - defmap: {}
2024-07-01 16:52:39,630 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:39,630 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:39,630 - DEBUG - keep phismap: {}
2024-07-01 16:52:39,630 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:39,630 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:39,630 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:39,631 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:39,636 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:39,636 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79218fd0>
2024-07-01 16:52:39,636 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:39,636 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:39,636 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>)
2024-07-01 16:52:39,636 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,637 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:39,637 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:39,637 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:39,637 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,637 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:39,637 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:39,637 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:39,637 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:39,638 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c791e3490>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c791e31d0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c791e32d0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c791e1e90>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c791e2ad0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c791e2a50>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c791e19d0>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c791e1a10>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c791e0a10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c791e07d0>, 0)]})
2024-07-01 16:52:39,638 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79218fd0>
2024-07-01 16:52:39,657 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:39,658 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:39,658 - DEBUG - stack: []
2024-07-01 16:52:39,658 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:39,658 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:39,658 - DEBUG - stack []
2024-07-01 16:52:39,658 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:39,658 - DEBUG - stack []
2024-07-01 16:52:39,658 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:39,658 - DEBUG - stack []
2024-07-01 16:52:39,659 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:39,659 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:39,659 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:39,659 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:39,659 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:39,659 - DEBUG - stack []
2024-07-01 16:52:39,659 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:39,659 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:39,659 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:39,659 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:39,660 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:39,660 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:39,660 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:39,660 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:39,660 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:39,660 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:39,660 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:39,660 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:39,660 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:39,660 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:39,661 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:39,661 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:39,661 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:39,661 - DEBUG - stack []
2024-07-01 16:52:39,661 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:39,661 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:39,661 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:39,661 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:39,661 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:39,661 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:39,662 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:39,662 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:39,662 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:39,662 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:39,662 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:39,662 - DEBUG - stack []
2024-07-01 16:52:39,662 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:39,662 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:39,662 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:39,663 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:39,663 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:39,663 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:39,663 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:39,663 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:39,663 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:39,663 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:39,664 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:39,664 - DEBUG - stack []
2024-07-01 16:52:39,664 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:39,664 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:39,664 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:39,664 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:39,664 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:39,664 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:39,665 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:39,665 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:39,665 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:39,665 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:39,665 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:39,665 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:39,665 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:39,665 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:39,665 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:39,665 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:39,665 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:39,665 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:39,666 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:39,666 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:39,666 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:39,666 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:39,666 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:39,666 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:39,666 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:39,666 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:39,666 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:39,666 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:39,667 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:39,667 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:39,667 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:39,667 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:39,667 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:39,667 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:39,667 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:39,667 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:39,667 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:39,668 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:39,668 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:39,668 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:39,668 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:39,668 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:39,668 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:39,668 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:39,668 - DEBUG - stack: []
2024-07-01 16:52:39,668 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:39,668 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:39,669 - DEBUG - stack []
2024-07-01 16:52:39,669 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:39,669 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:39,669 - DEBUG - end state. edges=[]
2024-07-01 16:52:39,669 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:39,669 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:39,669 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:39,669 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:39,669 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:39,669 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:39,669 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:39,670 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:39,670 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:39,670 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:39,670 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:39,670 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:39,670 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:39,670 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:39,670 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:39,670 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:39,671 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:39,671 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:39,672 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:39,672 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:39,672 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:39,672 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:39,673 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:39,673 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:39,673 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:39,673 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:39,673 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:39,675 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:39,689 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:39,689 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79358850>
2024-07-01 16:52:39,689 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:39,689 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:39,689 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:39,690 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:39,690 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:39,690 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:39,690 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,690 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:39,690 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:39,690 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:39,691 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:39,691 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,691 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:39,691 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:39,691 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:39,691 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:39,691 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:39,692 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,692 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:39,692 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:39,692 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:39,692 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:39,692 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:39,692 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,693 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:39,693 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:39,693 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:39,693 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:39,693 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:39,693 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:39,693 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,694 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:39,694 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:39,694 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:39,694 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:39,694 - DEBUG - on stmt: jump 230
2024-07-01 16:52:39,694 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:39,694 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79358850>
2024-07-01 16:52:39,695 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:39,695 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:39,695 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:39,695 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:39,695 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:39,695 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:39,695 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79358850>
2024-07-01 16:52:39,696 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:39,696 - DEBUG - on stmt: jump 240
2024-07-01 16:52:39,696 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:39,696 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79358850>
2024-07-01 16:52:39,696 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:39,696 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:39,696 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:39,696 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79358850>
2024-07-01 16:52:39,697 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:39,697 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:39,697 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:39,697 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:39,697 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:39,697 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:39,697 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-01 16:52:39,698 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:39,698 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:39,698 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:39,698 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:39,698 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:39,698 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:39,699 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-01 16:52:39,699 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:39,699 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:39,699 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:39,699 - DEBUG - on stmt: jump 241
2024-07-01 16:52:39,699 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:39,699 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79358850>
2024-07-01 16:52:39,700 - DEBUG - on stmt: jump 230
2024-07-01 16:52:39,702 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c7936a950>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c7936b190>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c7936a9d0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c7936a710>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c7936a610>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c7936a510>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c79369090>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c79369990>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c79369c50>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c79369850>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c79349190>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c79368190>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c79368ed0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c793680d0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c7947b0d0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c79359490>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c79358510>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c79359d90>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c7935a750>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c7934b010>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c79474a90>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c7947f610>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c7934bf50>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c7947e390>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c7946e050>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c7934bb10>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c7947a450>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c7947ad50>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c7947b650>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c793683d0>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c7936b390>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c7936b210>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c7936add0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c7936ac50>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c7936bcd0>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c7936b690>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c79369950>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c79368d10>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c79368690>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c79474f10>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c794759d0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c79477710>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c79223e50>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c79368f50>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c7936b810>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c7934a3d0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c79368e50>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c7934a2d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c79358cd0>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c7934b150>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c7947bf90>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c7947a4d0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c7947e1d0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c7947efd0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c7934a1d0>, 0)]})
2024-07-01 16:52:39,702 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79358850>
2024-07-01 16:52:40,043 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:40,044 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:40,044 - DEBUG - stack: []
2024-07-01 16:52:40,044 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:40,044 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-01 16:52:40,044 - DEBUG - stack []
2024-07-01 16:52:40,044 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-01 16:52:40,044 - DEBUG - stack []
2024-07-01 16:52:40,044 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-01 16:52:40,045 - DEBUG - stack []
2024-07-01 16:52:40,045 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-01 16:52:40,045 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:40,045 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-01 16:52:40,045 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:40,045 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-01 16:52:40,045 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:40,045 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-01 16:52:40,046 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:40,046 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:40,046 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:40,046 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:40,046 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:40,046 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-01 16:52:40,046 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:40,046 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-01 16:52:40,046 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:40,047 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:40,047 - DEBUG - stack []
2024-07-01 16:52:40,047 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:40,047 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:40,047 - DEBUG - end state. edges=[]
2024-07-01 16:52:40,047 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:40,047 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:40,047 - DEBUG - defmap: {}
2024-07-01 16:52:40,047 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:40,048 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:40,048 - DEBUG - keep phismap: {}
2024-07-01 16:52:40,048 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:40,048 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:40,048 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:40,049 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:40,057 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:40,057 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7979b890>
2024-07-01 16:52:40,057 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:40,057 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:40,058 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>)
2024-07-01 16:52:40,058 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,058 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:40,058 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:40,058 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:40,058 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,058 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:40,058 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:40,059 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:40,059 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:40,059 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c79799590>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c7979a250>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c79799910>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c79798d50>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c797d2d90>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c79798b50>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c7979a210>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c7979b110>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c797d2b50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c797d0c10>, 0)]})
2024-07-01 16:52:40,059 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7979b890>
2024-07-01 16:52:40,082 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:40,082 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:40,082 - DEBUG - stack: []
2024-07-01 16:52:40,082 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:40,083 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:40,083 - DEBUG - stack []
2024-07-01 16:52:40,083 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:40,083 - DEBUG - stack []
2024-07-01 16:52:40,083 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:40,083 - DEBUG - stack []
2024-07-01 16:52:40,083 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:40,083 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:40,083 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:40,083 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:40,084 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:40,084 - DEBUG - stack []
2024-07-01 16:52:40,084 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:40,084 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:40,084 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:40,084 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:40,084 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:40,084 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:40,084 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:40,084 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:40,085 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:40,085 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:40,085 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:40,085 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:40,085 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:40,085 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:40,085 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:40,085 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:40,085 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:40,085 - DEBUG - stack []
2024-07-01 16:52:40,085 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:40,086 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:40,086 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:40,086 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:40,086 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:40,086 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:40,086 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:40,086 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:40,086 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:40,086 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:40,087 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:40,087 - DEBUG - stack []
2024-07-01 16:52:40,087 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:40,087 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:40,087 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:40,087 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:40,087 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:40,087 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:40,087 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:40,087 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:40,087 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:40,088 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:40,088 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:40,088 - DEBUG - stack []
2024-07-01 16:52:40,088 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:40,088 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:40,088 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:40,088 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:40,088 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:40,088 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:40,088 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:40,089 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:40,089 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:40,089 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:40,089 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:40,089 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:40,089 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:40,089 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:40,089 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:40,089 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:40,089 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:40,090 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:40,090 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:40,090 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:40,090 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:40,090 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:40,090 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:40,090 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:40,090 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:40,090 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:40,090 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:40,091 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:40,091 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:40,091 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:40,091 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:40,091 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:40,092 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:40,093 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:40,093 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:40,093 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:40,093 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:40,093 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:40,093 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:40,093 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:40,093 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:40,093 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:40,094 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:40,094 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:40,094 - DEBUG - stack: []
2024-07-01 16:52:40,094 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:40,094 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:40,094 - DEBUG - stack []
2024-07-01 16:52:40,094 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:40,094 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:40,094 - DEBUG - end state. edges=[]
2024-07-01 16:52:40,094 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:40,095 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:40,095 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:40,095 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:40,095 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:40,095 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:40,095 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:40,095 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:40,095 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:40,095 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:40,095 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:40,095 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:40,096 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:40,096 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:40,096 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:40,096 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:40,096 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,097 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,097 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,098 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,098 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:40,098 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:40,099 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:40,099 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:40,099 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:40,099 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:40,100 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:40,102 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:40,116 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:40,116 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79a9e490>
2024-07-01 16:52:40,116 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:40,116 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:40,117 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:40,117 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:40,117 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:40,117 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:40,117 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,117 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:40,117 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:40,118 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:40,118 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:40,118 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,118 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:40,118 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:40,118 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:40,118 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:40,118 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:40,119 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,119 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:40,119 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:40,119 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:40,119 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:40,119 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:40,119 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,119 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:40,119 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:40,119 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:40,120 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:40,120 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:40,120 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:40,120 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,120 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:40,120 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,120 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:40,120 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:40,120 - DEBUG - on stmt: jump 230
2024-07-01 16:52:40,121 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:40,121 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79a9e490>
2024-07-01 16:52:40,121 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:40,121 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:40,121 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:40,121 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:40,121 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:40,121 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:40,121 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79a9e490>
2024-07-01 16:52:40,121 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:40,121 - DEBUG - on stmt: jump 240
2024-07-01 16:52:40,121 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:40,122 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79a9e490>
2024-07-01 16:52:40,122 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:40,122 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:40,122 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:40,122 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79a9e490>
2024-07-01 16:52:40,122 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:40,122 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:40,122 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:40,122 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:40,123 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:40,123 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:40,123 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-01 16:52:40,123 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:40,123 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:40,123 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:40,123 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:40,123 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:40,124 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:40,124 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-01 16:52:40,124 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:40,124 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:40,124 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:40,124 - DEBUG - on stmt: jump 241
2024-07-01 16:52:40,124 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:40,125 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79a9e490>
2024-07-01 16:52:40,125 - DEBUG - on stmt: jump 230
2024-07-01 16:52:40,127 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c79acc390>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c79acc210>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c79ac5110>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c79ac6490>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c79ac7e50>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c79ac4150>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c79ac4990>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c79ac4690>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c79ac4190>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c79ac6850>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c79ace3d0>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c79ac7190>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c79ac6d10>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c79ac6b10>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c7997bdd0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c79ac6990>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c79ac6750>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c79ac5290>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c79ac5850>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c79acf150>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c798af190>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c79a76b50>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c79aced10>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c79a75790>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c7997b310>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c79acea10>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c7997a1d0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c79978fd0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c7997abd0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c79ac6f90>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c79acc590>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c79a81410>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c79ac7990>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c79ac65d0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c79ac4e10>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c79ac4c50>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c79ac4350>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c79ac7590>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c79ac73d0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c798adfd0>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c798768d0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c79978890>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c79727310>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c79accad0>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c79acc750>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c79acd690>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c79ac74d0>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c79acd4d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c79ac6010>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c79ace690>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c7997a8d0>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c79979050>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c79a74090>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c79a75810>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c79acd8d0>, 0)]})
2024-07-01 16:52:40,127 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79a9e490>
2024-07-01 16:52:40,400 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:40,400 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:40,400 - DEBUG - stack: []
2024-07-01 16:52:40,400 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:40,400 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-01 16:52:40,400 - DEBUG - stack []
2024-07-01 16:52:40,401 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-01 16:52:40,401 - DEBUG - stack []
2024-07-01 16:52:40,401 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-01 16:52:40,401 - DEBUG - stack []
2024-07-01 16:52:40,401 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-01 16:52:40,401 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:40,401 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-01 16:52:40,401 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:40,401 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-01 16:52:40,401 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:40,402 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-01 16:52:40,402 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:40,402 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:40,402 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:40,402 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:40,402 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:40,402 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-01 16:52:40,402 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:40,402 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-01 16:52:40,402 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:40,403 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:40,403 - DEBUG - stack []
2024-07-01 16:52:40,403 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:40,403 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:40,403 - DEBUG - end state. edges=[]
2024-07-01 16:52:40,403 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:40,403 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:40,403 - DEBUG - defmap: {}
2024-07-01 16:52:40,403 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:40,403 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:40,403 - DEBUG - keep phismap: {}
2024-07-01 16:52:40,404 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:40,404 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:40,404 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:40,404 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:40,409 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:40,410 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7975cb10>
2024-07-01 16:52:40,410 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:40,410 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:40,410 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>)
2024-07-01 16:52:40,410 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,410 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:40,410 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:40,410 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:40,410 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,411 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:40,411 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:40,411 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:40,411 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:40,411 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c79734b50>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c79736e90>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c79736310>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c79736810>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79737f90>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c79735450>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c797353d0>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c79737890>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c79734790>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c79734c10>, 0)]})
2024-07-01 16:52:40,412 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7975cb10>
2024-07-01 16:52:40,430 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:40,430 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:40,430 - DEBUG - stack: []
2024-07-01 16:52:40,430 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:40,431 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:40,431 - DEBUG - stack []
2024-07-01 16:52:40,431 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:40,431 - DEBUG - stack []
2024-07-01 16:52:40,431 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:40,431 - DEBUG - stack []
2024-07-01 16:52:40,431 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:40,431 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:40,431 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:40,431 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:40,431 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:40,431 - DEBUG - stack []
2024-07-01 16:52:40,432 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:40,432 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:40,432 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:40,432 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:40,432 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:40,432 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:40,432 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:40,432 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:40,432 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:40,432 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:40,432 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:40,433 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:40,433 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:40,433 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:40,433 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:40,433 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:40,433 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:40,433 - DEBUG - stack []
2024-07-01 16:52:40,433 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:40,433 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:40,433 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:40,433 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:40,433 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:40,433 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:40,434 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:40,434 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:40,434 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:40,434 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:40,434 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:40,434 - DEBUG - stack []
2024-07-01 16:52:40,434 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:40,434 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:40,434 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:40,434 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:40,434 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:40,434 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:40,434 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:40,435 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:40,435 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:40,435 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:40,435 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:40,435 - DEBUG - stack []
2024-07-01 16:52:40,435 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:40,435 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:40,435 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:40,435 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:40,435 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:40,435 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:40,435 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:40,435 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:40,436 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:40,436 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:40,436 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:40,436 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:40,436 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:40,436 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:40,436 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:40,436 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:40,436 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:40,436 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:40,436 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:40,436 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:40,437 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:40,437 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:40,437 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:40,437 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:40,437 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:40,437 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:40,437 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:40,437 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:40,437 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:40,437 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:40,437 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:40,437 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:40,438 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:40,438 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:40,438 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:40,438 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:40,438 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:40,438 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:40,438 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:40,438 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:40,438 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:40,438 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:40,438 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:40,439 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:40,439 - DEBUG - stack: []
2024-07-01 16:52:40,439 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:40,439 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:40,439 - DEBUG - stack []
2024-07-01 16:52:40,439 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:40,439 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:40,439 - DEBUG - end state. edges=[]
2024-07-01 16:52:40,439 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:40,439 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:40,439 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:40,439 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:40,439 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:40,439 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:40,440 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:40,440 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:40,440 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:40,440 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:40,440 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:40,440 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:40,440 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:40,440 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:40,440 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:40,440 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:40,441 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,441 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,442 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,442 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,443 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:40,443 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:40,443 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:40,443 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:40,443 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:40,443 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:40,444 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:40,445 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:40,455 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:40,455 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79319810>
2024-07-01 16:52:40,455 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:40,455 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:40,455 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:40,455 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:40,456 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:40,456 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:40,456 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,456 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:40,456 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:40,456 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:40,456 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:40,456 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,456 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:40,457 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:40,457 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:40,457 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:40,457 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:40,457 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,457 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:40,457 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:40,457 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:40,457 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:40,457 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:40,458 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,458 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:40,458 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:40,458 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:40,458 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:40,458 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:40,458 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:40,458 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,458 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:40,458 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,459 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:40,459 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:40,459 - DEBUG - on stmt: jump 230
2024-07-01 16:52:40,459 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:40,459 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79319810>
2024-07-01 16:52:40,459 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:40,459 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:40,459 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:40,459 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:40,459 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:40,459 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:40,459 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79319810>
2024-07-01 16:52:40,460 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:40,460 - DEBUG - on stmt: jump 240
2024-07-01 16:52:40,460 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:40,460 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79319810>
2024-07-01 16:52:40,460 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:40,460 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:40,460 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:40,460 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79319810>
2024-07-01 16:52:40,460 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:40,460 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:40,460 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:40,460 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:40,461 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:40,461 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:40,461 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-01 16:52:40,461 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:40,461 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:40,461 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:40,461 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:40,461 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:40,461 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:40,461 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-01 16:52:40,461 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:40,462 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:40,462 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:40,462 - DEBUG - on stmt: jump 241
2024-07-01 16:52:40,462 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:40,462 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79319810>
2024-07-01 16:52:40,462 - DEBUG - on stmt: jump 230
2024-07-01 16:52:40,463 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c79363690>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c793624d0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c793631d0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c793630d0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c79363b90>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c79363e90>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c79361fd0>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c79360c10>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c79361710>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c79361a10>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c792eec90>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c79361b90>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c79363d90>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c793610d0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c797dbed0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c79362290>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c79364490>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c793648d0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c793677d0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c792efe10>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c79321810>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c797d9810>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c792ee450>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c797dbb10>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c793202d0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c792ec150>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c797d9590>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c797dbf90>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c79346890>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c79361450>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c79362310>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c79362790>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c79362c90>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c79362cd0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c79363190>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c79362390>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c79360ed0>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c79360450>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c79363090>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c7975e5d0>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c79321e90>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c79322990>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c792fe310>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c79363210>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c79362d90>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c792eef10>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c79360e50>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c792ef890>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c79364a90>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c797d2950>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c797d81d0>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c797d8550>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c797d9850>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c797dba50>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c792ec990>, 0)]})
2024-07-01 16:52:40,463 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79319810>
2024-07-01 16:52:40,762 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:40,762 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:40,762 - DEBUG - stack: []
2024-07-01 16:52:40,762 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:40,762 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-07-01 16:52:40,762 - DEBUG - stack []
2024-07-01 16:52:40,763 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-07-01 16:52:40,763 - DEBUG - stack []
2024-07-01 16:52:40,763 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-07-01 16:52:40,763 - DEBUG - stack []
2024-07-01 16:52:40,763 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-07-01 16:52:40,763 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:40,763 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-07-01 16:52:40,763 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:40,763 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-07-01 16:52:40,763 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:40,763 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-07-01 16:52:40,764 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:40,764 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:40,764 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:40,764 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:40,764 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:40,764 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-07-01 16:52:40,764 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:40,764 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-07-01 16:52:40,764 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:40,764 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-07-01 16:52:40,765 - DEBUG - stack []
2024-07-01 16:52:40,765 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-07-01 16:52:40,765 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:40,765 - DEBUG - end state. edges=[]
2024-07-01 16:52:40,765 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:40,765 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:40,765 - DEBUG - defmap: {}
2024-07-01 16:52:40,765 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:40,765 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:40,766 - DEBUG - keep phismap: {}
2024-07-01 16:52:40,766 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:40,766 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:40,766 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:40,766 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:40,775 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:40,776 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7919da10>
2024-07-01 16:52:40,776 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:40,776 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:40,776 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79468f50>)
2024-07-01 16:52:40,776 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,776 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:40,776 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:40,776 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:40,776 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,777 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:40,777 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:40,777 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:40,777 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:40,777 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c791a2010>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c791a2810>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c791a28d0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c791a2c50>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c791a1ad0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c791a2450>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c791a2610>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c791a2ad0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c791a1790>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c791a1890>, 0)]})
2024-07-01 16:52:40,777 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7919da10>
2024-07-01 16:52:40,800 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:40,800 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:40,800 - DEBUG - stack: []
2024-07-01 16:52:40,800 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:40,800 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:40,800 - DEBUG - stack []
2024-07-01 16:52:40,800 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:40,801 - DEBUG - stack []
2024-07-01 16:52:40,801 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:40,801 - DEBUG - stack []
2024-07-01 16:52:40,801 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:40,801 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:40,801 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:40,801 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:40,801 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:40,801 - DEBUG - stack []
2024-07-01 16:52:40,801 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:40,802 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:40,802 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:40,802 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:40,802 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:40,802 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:40,802 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:40,802 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:40,802 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:40,802 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:40,803 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:40,803 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:40,803 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:40,803 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:40,803 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:40,803 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:40,803 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:40,803 - DEBUG - stack []
2024-07-01 16:52:40,803 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:40,803 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:40,804 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:40,804 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:40,804 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:40,804 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:40,804 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:40,804 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:40,804 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:40,804 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:40,804 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:40,805 - DEBUG - stack []
2024-07-01 16:52:40,805 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:40,805 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:40,805 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:40,805 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:40,805 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:40,805 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:40,805 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:40,805 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:40,806 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:40,806 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:40,806 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:40,806 - DEBUG - stack []
2024-07-01 16:52:40,806 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:40,806 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:40,806 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:40,806 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:40,807 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:40,807 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:40,807 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:40,807 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:40,807 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:40,807 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:40,807 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:40,807 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:40,808 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:40,808 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:40,808 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:40,808 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:40,808 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:40,808 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:40,808 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:40,808 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:40,809 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:40,809 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:40,809 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:40,809 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:40,809 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:40,809 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:40,809 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:40,809 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:40,810 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:40,810 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:40,810 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:40,810 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:40,810 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:40,810 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:40,810 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:40,810 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:40,811 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:40,811 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:40,811 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:40,811 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:40,811 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:40,811 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:40,811 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:40,811 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:40,812 - DEBUG - stack: []
2024-07-01 16:52:40,812 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:40,812 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:40,812 - DEBUG - stack []
2024-07-01 16:52:40,812 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:40,812 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:40,812 - DEBUG - end state. edges=[]
2024-07-01 16:52:40,812 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:40,813 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:40,813 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:40,813 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:40,813 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:40,813 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:40,813 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:40,813 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:40,813 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:40,813 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:40,814 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:40,814 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:40,814 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:40,814 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:40,814 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:40,814 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:40,814 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,815 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,816 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,816 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:40,816 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:40,816 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:40,817 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:40,817 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:40,817 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:40,817 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:40,817 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:40,819 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:40,830 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:40,830 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795a2e10>
2024-07-01 16:52:40,830 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:40,830 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:40,830 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:40,830 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:40,831 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:40,831 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:40,831 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,831 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:40,831 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:40,831 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:40,831 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:40,831 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,832 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:40,832 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:40,832 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:40,832 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:40,832 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:40,832 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,832 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:40,832 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:40,832 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:40,832 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,833 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:40,834 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:40,834 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:40,834 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:40,834 - DEBUG - on stmt: jump 230
2024-07-01 16:52:40,834 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:40,834 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795a2e10>
2024-07-01 16:52:40,834 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:40,834 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:40,835 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:40,835 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:40,835 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:40,835 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:40,835 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795a2e10>
2024-07-01 16:52:40,835 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:40,836 - DEBUG - on stmt: jump 240
2024-07-01 16:52:40,836 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:40,836 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795a2e10>
2024-07-01 16:52:40,836 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:40,836 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:40,836 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:40,836 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795a2e10>
2024-07-01 16:52:40,836 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:40,836 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:40,836 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:40,837 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:40,837 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:40,837 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:40,837 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-07-01 16:52:40,837 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:40,837 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:40,837 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:40,838 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:40,838 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:40,838 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:40,838 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-07-01 16:52:40,838 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:40,838 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:40,838 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:40,838 - DEBUG - on stmt: jump 241
2024-07-01 16:52:40,838 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:40,839 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795a2e10>
2024-07-01 16:52:40,839 - DEBUG - on stmt: jump 230
2024-07-01 16:52:40,841 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c795837d0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c79583010>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c79581050>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c79581d90>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c79581710>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c79581350>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c79582410>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c79361e50>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c79735bd0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c79562c10>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c79582210>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c79562dd0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c79561b10>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c79563390>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c795885d0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c795631d0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c795630d0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c79563a50>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c795614d0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c79582c10>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c7956d2d0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c7958a7d0>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c79582450>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c79588150>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c795aae10>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c79583e50>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c795a94d0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c7958b710>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c795a9ed0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c79562b10>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c79583550>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c795812d0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c79580150>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c79580b50>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c79581450>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c79581750>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c79734650>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c79561490>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c79560e90>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c79191210>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c7956cd50>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c795a90d0>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c7919c490>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c79582f90>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c79583590>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c79580510>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c79560290>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c795829d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c795611d0>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c79582d90>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c7922c790>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c7958a110>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c7958bd10>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c795884d0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c79580a90>, 0)]})
2024-07-01 16:52:40,841 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c795a2e10>
2024-07-01 16:52:41,862 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:41,863 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:41,863 - DEBUG - stack: []
2024-07-01 16:52:41,863 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:41,863 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-01 16:52:41,863 - DEBUG - stack []
2024-07-01 16:52:41,863 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-01 16:52:41,863 - DEBUG - stack []
2024-07-01 16:52:41,863 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-01 16:52:41,863 - DEBUG - stack []
2024-07-01 16:52:41,864 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-01 16:52:41,864 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:41,864 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-01 16:52:41,864 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:41,864 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-01 16:52:41,864 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:41,864 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-01 16:52:41,864 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:41,864 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:41,864 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:41,865 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:41,865 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:41,865 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-01 16:52:41,865 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:41,865 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-01 16:52:41,865 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:41,865 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:41,865 - DEBUG - stack []
2024-07-01 16:52:41,865 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:41,866 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:41,866 - DEBUG - end state. edges=[]
2024-07-01 16:52:41,866 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:41,866 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:41,866 - DEBUG - defmap: {}
2024-07-01 16:52:41,866 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:41,866 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:41,866 - DEBUG - keep phismap: {}
2024-07-01 16:52:41,867 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:41,867 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:41,867 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:41,868 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:41,874 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:41,874 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66922490>
2024-07-01 16:52:41,874 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:41,874 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:41,874 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>)
2024-07-01 16:52:41,874 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:41,875 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:41,875 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:41,875 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:41,875 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:41,875 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:41,875 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:41,875 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:41,875 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:41,876 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c669206d0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c66920e50>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c66920f90>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c66921450>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c669202d0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c66920a90>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c66920c50>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c66921210>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c6691bed0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c66920050>, 0)]})
2024-07-01 16:52:41,876 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66922490>
2024-07-01 16:52:41,904 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:41,904 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:41,904 - DEBUG - stack: []
2024-07-01 16:52:41,904 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:41,904 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:41,905 - DEBUG - stack []
2024-07-01 16:52:41,905 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:41,905 - DEBUG - stack []
2024-07-01 16:52:41,905 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:41,905 - DEBUG - stack []
2024-07-01 16:52:41,905 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:41,905 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:41,905 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:41,905 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:41,905 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:41,906 - DEBUG - stack []
2024-07-01 16:52:41,906 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:41,906 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:41,906 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:41,906 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:41,906 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:41,906 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:41,906 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:41,907 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:41,907 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:41,907 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:41,907 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:41,907 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:41,907 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:41,907 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:41,907 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:41,907 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:41,907 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:41,908 - DEBUG - stack []
2024-07-01 16:52:41,908 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:41,908 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:41,908 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:41,908 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:41,908 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:41,908 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:41,908 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:41,908 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:41,909 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:41,909 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:41,909 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:41,909 - DEBUG - stack []
2024-07-01 16:52:41,909 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:41,909 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:41,909 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:41,909 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:41,909 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:41,910 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:41,910 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:41,910 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:41,910 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:41,910 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:41,910 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:41,911 - DEBUG - stack []
2024-07-01 16:52:41,911 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:41,911 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:41,911 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:41,911 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:41,911 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:41,911 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:41,911 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:41,911 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:41,911 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:41,912 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:41,912 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:41,912 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:41,912 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:41,912 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:41,912 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:41,912 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:41,912 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:41,912 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:41,912 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:41,913 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:41,913 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:41,913 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:41,913 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:41,913 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:41,913 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:41,913 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:41,913 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:41,913 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:41,913 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:41,914 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:41,914 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:41,914 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:41,914 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:41,914 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:41,914 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:41,914 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:41,914 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:41,914 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:41,914 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:41,915 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:41,915 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:41,915 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:41,915 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:41,915 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:41,915 - DEBUG - stack: []
2024-07-01 16:52:41,915 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:41,915 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:41,915 - DEBUG - stack []
2024-07-01 16:52:41,916 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:41,916 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:41,916 - DEBUG - end state. edges=[]
2024-07-01 16:52:41,916 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:41,916 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:41,916 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:41,916 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:41,916 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:41,916 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:41,917 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:41,917 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:41,917 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:41,917 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:41,917 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:41,917 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:41,917 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:41,917 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:41,918 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:41,918 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:41,918 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:41,919 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:41,920 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:41,920 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:41,920 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:41,921 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:41,921 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:41,921 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:41,921 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:41,922 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:41,922 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:41,926 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:41,938 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:41,938 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c669079d0>
2024-07-01 16:52:41,938 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:41,938 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:41,938 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:41,939 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:41,939 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:41,939 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:41,939 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:41,939 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:41,939 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:41,939 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:41,939 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:41,940 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:41,940 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:41,940 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:41,940 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:41,940 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:41,940 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:41,940 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:41,940 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:41,940 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:41,940 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:41,941 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:41,941 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:41,941 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:41,941 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:41,941 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:41,941 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:41,941 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:41,941 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:41,941 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:41,942 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:41,942 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:41,942 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:41,942 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:41,942 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:41,942 - DEBUG - on stmt: jump 230
2024-07-01 16:52:41,942 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:41,942 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c669079d0>
2024-07-01 16:52:41,942 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:41,943 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:41,943 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:41,943 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:41,943 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:41,943 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:41,943 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c669079d0>
2024-07-01 16:52:41,943 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:41,943 - DEBUG - on stmt: jump 240
2024-07-01 16:52:41,943 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:41,943 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c669079d0>
2024-07-01 16:52:41,944 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:41,944 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:41,944 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:41,944 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c669079d0>
2024-07-01 16:52:41,944 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:41,944 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:41,944 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:41,944 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:41,944 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:41,945 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:41,945 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-01 16:52:41,945 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:41,945 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:41,945 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:41,945 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:41,945 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:41,945 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:41,945 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-01 16:52:41,946 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:41,946 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:41,946 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:41,946 - DEBUG - on stmt: jump 241
2024-07-01 16:52:41,946 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:41,946 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c669079d0>
2024-07-01 16:52:41,946 - DEBUG - on stmt: jump 230
2024-07-01 16:52:41,948 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c66753910>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c66753a90>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c667542d0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c66754450>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c66754650>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c667547d0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c66754cd0>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c66754e90>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c66755390>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c66755650>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c667527d0>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c66755dd0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c66756310>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c667565d0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c66744dd0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c667567d0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c66756950>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c66756ad0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c79a300d0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c667529d0>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c66937810>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c66745090>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c66752c90>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c6f08b950>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c6692e5d0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c66752e10>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c6692f850>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c66744bd0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c6692ef10>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c66756090>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c66753750>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c66753c90>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c66753f50>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c66754110>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c66754950>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c66754ad0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c66755190>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c66755950>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c66755b10>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c66936990>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c66937e90>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c6692d410>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c669282d0>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c667532d0>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c667535d0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c66752610>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c66756650>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c667523d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c66756e10>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c66753010>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c66744b50>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c66744d10>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c66745050>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c667452d0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c66751fd0>, 0)]})
2024-07-01 16:52:41,949 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79a311d0>
2024-07-01 16:52:42,315 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:42,315 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:42,315 - DEBUG - stack: []
2024-07-01 16:52:42,316 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:42,316 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-01 16:52:42,316 - DEBUG - stack []
2024-07-01 16:52:42,316 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-01 16:52:42,316 - DEBUG - stack []
2024-07-01 16:52:42,316 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-01 16:52:42,316 - DEBUG - stack []
2024-07-01 16:52:42,316 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-01 16:52:42,316 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:42,316 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-01 16:52:42,316 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:42,316 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-01 16:52:42,317 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:42,317 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-01 16:52:42,317 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:42,317 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:42,317 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:42,317 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:42,317 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:42,317 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-01 16:52:42,317 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:42,317 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-01 16:52:42,317 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:42,318 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:42,318 - DEBUG - stack []
2024-07-01 16:52:42,318 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:42,318 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:42,318 - DEBUG - end state. edges=[]
2024-07-01 16:52:42,318 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:42,318 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:42,318 - DEBUG - defmap: {}
2024-07-01 16:52:42,318 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:42,319 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:42,319 - DEBUG - keep phismap: {}
2024-07-01 16:52:42,319 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:42,319 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:42,319 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:42,320 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:42,325 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:42,325 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6668ef50>
2024-07-01 16:52:42,325 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:42,325 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:42,325 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>)
2024-07-01 16:52:42,326 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,326 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:42,326 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:42,326 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:42,326 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,326 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:42,326 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:42,326 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:42,326 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:42,327 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c6668d210>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c6668da90>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c6668db50>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c6668df90>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c6668cd10>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c6668d6d0>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c6668d890>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c6668ddd0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c6668c9d0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c6668cad0>, 0)]})
2024-07-01 16:52:42,327 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c6668ef50>
2024-07-01 16:52:42,345 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:42,345 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:42,345 - DEBUG - stack: []
2024-07-01 16:52:42,345 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:42,345 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:42,345 - DEBUG - stack []
2024-07-01 16:52:42,345 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:42,345 - DEBUG - stack []
2024-07-01 16:52:42,345 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:42,346 - DEBUG - stack []
2024-07-01 16:52:42,346 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:42,346 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:42,346 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:42,346 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:42,346 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:42,346 - DEBUG - stack []
2024-07-01 16:52:42,346 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:42,346 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:42,346 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:42,346 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:42,347 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:42,347 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:42,347 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:42,347 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:42,347 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:42,347 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:42,347 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:42,347 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:42,347 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:42,347 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:42,347 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:42,347 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:42,348 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:42,348 - DEBUG - stack []
2024-07-01 16:52:42,348 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:42,348 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:42,348 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:42,348 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:42,348 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:42,348 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:42,348 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:42,348 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:42,348 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:42,348 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:42,348 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:42,348 - DEBUG - stack []
2024-07-01 16:52:42,349 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:42,349 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:42,349 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:42,349 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:42,350 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:42,350 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:42,350 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:42,350 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:42,350 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:42,350 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:42,350 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:42,350 - DEBUG - stack []
2024-07-01 16:52:42,350 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:42,350 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:42,351 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:42,351 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:42,351 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:42,351 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:42,351 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:42,351 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:42,351 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:42,351 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:42,351 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:42,352 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:42,352 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:42,352 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:42,352 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:42,352 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:42,352 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:42,352 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:42,352 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:42,352 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:42,352 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:42,352 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:42,352 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:42,353 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:42,353 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:42,353 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:42,353 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:42,353 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:42,353 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:42,353 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:42,353 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:42,353 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:42,353 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:42,353 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:42,354 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:42,354 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:42,354 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:42,354 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:42,354 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:42,354 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:42,354 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:42,354 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:42,354 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:42,354 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:42,354 - DEBUG - stack: []
2024-07-01 16:52:42,354 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:42,355 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:42,355 - DEBUG - stack []
2024-07-01 16:52:42,355 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:42,355 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:42,355 - DEBUG - end state. edges=[]
2024-07-01 16:52:42,355 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:42,355 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:42,355 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:42,355 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:42,355 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:42,355 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:42,355 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:42,355 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:42,356 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:42,356 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:42,356 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:42,356 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:42,356 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:42,356 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:42,356 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:42,356 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:42,356 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:42,357 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:42,357 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:42,358 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:42,358 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:42,358 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:42,359 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:42,359 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:42,359 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:42,359 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:42,359 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:42,361 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:42,373 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:42,373 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c666ba410>
2024-07-01 16:52:42,373 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:42,373 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:42,374 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:42,374 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:42,374 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:42,374 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:42,374 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,374 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:42,374 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:42,374 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:42,375 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:42,375 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,375 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:42,375 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:42,375 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:42,375 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:42,375 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:42,375 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,375 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:42,375 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:42,375 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:42,375 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:42,376 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:42,376 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,376 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:42,376 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:42,376 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:42,376 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:42,376 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:42,376 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:42,378 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,378 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:42,378 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,378 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:42,378 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:42,378 - DEBUG - on stmt: jump 230
2024-07-01 16:52:42,378 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:42,378 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c666ba410>
2024-07-01 16:52:42,378 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:42,378 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:42,379 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:42,379 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:42,379 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:42,379 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:42,379 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c666ba410>
2024-07-01 16:52:42,379 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:42,379 - DEBUG - on stmt: jump 240
2024-07-01 16:52:42,379 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:42,379 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c666ba410>
2024-07-01 16:52:42,379 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:42,379 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:42,379 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:42,379 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c666ba410>
2024-07-01 16:52:42,379 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:42,380 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:42,380 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:42,380 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:42,380 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:42,380 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:42,380 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-01 16:52:42,380 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:42,380 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:42,380 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:42,380 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:42,380 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:42,380 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:42,381 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-01 16:52:42,381 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:42,381 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:42,381 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:42,382 - DEBUG - on stmt: jump 241
2024-07-01 16:52:42,382 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:42,382 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c666ba410>
2024-07-01 16:52:42,382 - DEBUG - on stmt: jump 230
2024-07-01 16:52:42,383 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c666bc150>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c666bc2d0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c666bcc50>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c666bcdd0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c666bcfd0>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c666bd110>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c666bd790>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c666bda50>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c666bdf50>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c666be210>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c666b6ad0>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c666be910>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c666bed10>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c666bef50>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c666acd90>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c666bf150>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c666bf2d0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c666bf410>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c666bff50>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c666b6d90>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c6669f7d0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c666ad010>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c666b7190>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c666ad2d0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c666a2590>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c666b73d0>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c666a3810>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c666acb90>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c666a2ed0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c666beb10>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c666b7f10>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c666bc590>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c666bc8d0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c666bca90>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c666bd310>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c666bd4d0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c666bdd90>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c666be4d0>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c666be690>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c6669ea90>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c6669fe50>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c666a13d0>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c6669cb90>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c666b79d0>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c666b7d50>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c666b6910>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c666bf4d0>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c666b6710>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c666bf750>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c666b7610>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c666acb10>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c666accd0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c666acfd0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c666ad250>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c666b6310>, 0)]})
2024-07-01 16:52:42,383 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c6669d010>
2024-07-01 16:52:42,657 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:42,657 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:42,657 - DEBUG - stack: []
2024-07-01 16:52:42,657 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:42,657 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-01 16:52:42,657 - DEBUG - stack []
2024-07-01 16:52:42,657 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-01 16:52:42,657 - DEBUG - stack []
2024-07-01 16:52:42,657 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-01 16:52:42,657 - DEBUG - stack []
2024-07-01 16:52:42,658 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-01 16:52:42,658 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:42,658 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-01 16:52:42,658 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:42,658 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-01 16:52:42,658 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:42,658 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-01 16:52:42,658 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:42,658 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:42,658 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:42,658 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:42,659 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:42,659 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-01 16:52:42,659 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:42,659 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-01 16:52:42,659 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:42,659 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:42,659 - DEBUG - stack []
2024-07-01 16:52:42,659 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:42,659 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:42,659 - DEBUG - end state. edges=[]
2024-07-01 16:52:42,659 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:42,660 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:42,660 - DEBUG - defmap: {}
2024-07-01 16:52:42,660 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:42,660 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:42,660 - DEBUG - keep phismap: {}
2024-07-01 16:52:42,660 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:42,660 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:42,660 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:42,661 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:42,666 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:42,666 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66482dd0>
2024-07-01 16:52:42,667 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:42,667 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:42,667 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>)
2024-07-01 16:52:42,667 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,667 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:42,667 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:42,667 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:42,667 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,668 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:42,668 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:42,668 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:42,668 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:42,668 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c664810d0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c66481910>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c664819d0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c66481e10>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c66480c90>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c66481590>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c66481710>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c66481c90>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c664809d0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c66480ad0>, 0)]})
2024-07-01 16:52:42,668 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66482dd0>
2024-07-01 16:52:42,689 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:42,689 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:42,689 - DEBUG - stack: []
2024-07-01 16:52:42,689 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:42,689 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:42,689 - DEBUG - stack []
2024-07-01 16:52:42,690 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:42,690 - DEBUG - stack []
2024-07-01 16:52:42,690 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:42,690 - DEBUG - stack []
2024-07-01 16:52:42,690 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:42,690 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:42,690 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:42,690 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:42,690 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:42,690 - DEBUG - stack []
2024-07-01 16:52:42,690 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:42,690 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:42,691 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:42,691 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:42,691 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:42,691 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:42,691 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:42,691 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:42,691 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:42,691 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:42,691 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:42,691 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:42,691 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:42,692 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:42,692 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:42,692 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:42,692 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:42,692 - DEBUG - stack []
2024-07-01 16:52:42,692 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:42,692 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:42,692 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:42,692 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:42,692 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:42,692 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:42,692 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:42,693 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:42,693 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:42,693 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:42,693 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:42,693 - DEBUG - stack []
2024-07-01 16:52:42,693 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:42,693 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:42,693 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:42,693 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:42,693 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:42,693 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:42,694 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:42,694 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:42,694 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:42,694 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:42,694 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:42,694 - DEBUG - stack []
2024-07-01 16:52:42,694 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:42,694 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:42,694 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:42,694 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:42,694 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:42,695 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:42,695 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:42,695 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:42,695 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:42,695 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:42,695 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:42,695 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:42,695 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:42,695 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:42,696 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:42,696 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:42,696 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:42,696 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:42,696 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:42,696 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:42,696 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:42,696 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:42,696 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:42,696 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:42,696 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:42,696 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:42,697 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:42,697 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:42,697 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:42,697 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:42,697 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:42,697 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:42,697 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:42,697 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:42,697 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:42,697 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:42,698 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:42,698 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:42,698 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:42,698 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:42,698 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:42,698 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:42,698 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:42,698 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:42,698 - DEBUG - stack: []
2024-07-01 16:52:42,698 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:42,699 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:42,699 - DEBUG - stack []
2024-07-01 16:52:42,699 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:42,699 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:42,699 - DEBUG - end state. edges=[]
2024-07-01 16:52:42,699 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:42,699 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:42,699 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:42,699 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:42,699 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:42,699 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:42,699 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:42,699 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:42,700 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:42,700 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:42,700 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:42,700 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:42,700 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:42,700 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:42,700 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:42,700 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:42,701 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:42,702 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:42,702 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:42,703 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:42,703 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:42,703 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:42,704 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:42,705 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:42,705 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:42,705 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:42,705 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:42,706 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:42,721 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:42,721 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c664b6f90>
2024-07-01 16:52:42,721 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:42,721 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:42,721 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:42,721 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:42,721 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:42,722 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:42,722 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,722 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:42,722 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:42,722 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:42,722 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:42,722 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,722 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:42,722 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:42,722 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:42,723 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:42,723 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:42,723 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,723 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:42,723 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:42,723 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:42,723 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:42,723 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:42,723 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,723 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:42,723 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:42,724 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:42,724 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:42,724 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:42,724 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:42,724 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,724 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:42,725 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:42,725 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:42,725 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:42,725 - DEBUG - on stmt: jump 230
2024-07-01 16:52:42,725 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:42,725 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c664b6f90>
2024-07-01 16:52:42,725 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:42,725 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:42,725 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:42,725 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:42,725 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:42,726 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:42,726 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c664b6f90>
2024-07-01 16:52:42,726 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:42,726 - DEBUG - on stmt: jump 240
2024-07-01 16:52:42,726 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:42,726 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c664b6f90>
2024-07-01 16:52:42,726 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:42,726 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:42,726 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:42,726 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c664b6f90>
2024-07-01 16:52:42,727 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:42,727 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:42,727 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:42,727 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:42,727 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:42,727 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:42,727 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-01 16:52:42,727 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:42,727 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:42,728 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:42,728 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:42,728 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:42,728 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:42,728 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-01 16:52:42,728 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:42,728 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:42,728 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:42,728 - DEBUG - on stmt: jump 241
2024-07-01 16:52:42,728 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:42,728 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c664b6f90>
2024-07-01 16:52:42,728 - DEBUG - on stmt: jump 230
2024-07-01 16:52:42,730 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c664abbd0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c664abd50>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c664b0590>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c664b0710>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c664b0910>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c664b0a90>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c664b0f90>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c664b1150>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c664b1690>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c664b1910>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c664aaa90>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c664b2010>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c664b24d0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c664b2790>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c664a4b10>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c664b29d0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c664b2b50>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c664b2cd0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c664b3850>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c664aac90>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c6648f590>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c664a4d90>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c664aaf50>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c664a5050>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c6649a350>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c664ab0d0>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c6649b5d0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c664a4910>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c6649ac90>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c664b22d0>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c664aba10>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c664abf50>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c664b0250>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c664b03d0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c664b0c10>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c664b0d90>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c664b1490>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c664b1b90>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c664b1d50>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c6648e850>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c6648fc10>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c66499190>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c6648c9d0>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c664ab590>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c664ab890>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c664aa910>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c664b2d90>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c664aa7d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c664b3050>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c664ab2d0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c664a4890>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c664a4a50>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c664a4d50>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c664a4fd0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c664aa3d0>, 0)]})
2024-07-01 16:52:42,730 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c664b6f90>
2024-07-01 16:52:43,047 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:43,047 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:43,047 - DEBUG - stack: []
2024-07-01 16:52:43,047 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:43,047 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-01 16:52:43,047 - DEBUG - stack []
2024-07-01 16:52:43,047 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-01 16:52:43,047 - DEBUG - stack []
2024-07-01 16:52:43,047 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-01 16:52:43,047 - DEBUG - stack []
2024-07-01 16:52:43,048 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-01 16:52:43,048 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:43,048 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-01 16:52:43,048 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:43,048 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-01 16:52:43,048 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:43,048 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-01 16:52:43,048 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:43,048 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:43,048 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:43,048 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:43,048 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:43,049 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-01 16:52:43,049 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:43,049 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-01 16:52:43,049 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:43,049 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:43,049 - DEBUG - stack []
2024-07-01 16:52:43,049 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:43,049 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:43,049 - DEBUG - end state. edges=[]
2024-07-01 16:52:43,049 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:43,049 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:43,050 - DEBUG - defmap: {}
2024-07-01 16:52:43,050 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:43,050 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:43,050 - DEBUG - keep phismap: {}
2024-07-01 16:52:43,050 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:43,050 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:43,050 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:43,051 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:43,057 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:43,057 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66429a50>
2024-07-01 16:52:43,057 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:43,057 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:43,058 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>)
2024-07-01 16:52:43,058 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,058 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:43,058 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:43,058 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:43,058 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,058 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:43,058 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:43,058 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:43,058 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:43,059 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c66428050>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c66428850>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c66428910>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c66428d50>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c66427b50>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c66428490>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c66428650>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c66428b90>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c66427810>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c66427910>, 0)]})
2024-07-01 16:52:43,059 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66429a50>
2024-07-01 16:52:43,076 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:43,076 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:43,076 - DEBUG - stack: []
2024-07-01 16:52:43,076 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:43,076 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:43,076 - DEBUG - stack []
2024-07-01 16:52:43,076 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:43,077 - DEBUG - stack []
2024-07-01 16:52:43,077 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:43,077 - DEBUG - stack []
2024-07-01 16:52:43,077 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:43,077 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:43,077 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:43,077 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:43,077 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:43,077 - DEBUG - stack []
2024-07-01 16:52:43,077 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:43,077 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:43,078 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:43,078 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:43,078 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:43,078 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:43,078 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:43,078 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:43,078 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:43,078 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:43,078 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:43,078 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:43,078 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:43,078 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:43,079 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:43,079 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:43,079 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:43,079 - DEBUG - stack []
2024-07-01 16:52:43,079 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:43,079 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:43,079 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:43,079 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:43,079 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:43,079 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:43,079 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:43,079 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:43,079 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:43,080 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:43,080 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:43,080 - DEBUG - stack []
2024-07-01 16:52:43,080 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:43,080 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:43,080 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:43,080 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:43,080 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:43,080 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:43,080 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:43,080 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:43,080 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:43,080 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:43,081 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:43,081 - DEBUG - stack []
2024-07-01 16:52:43,081 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:43,081 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:43,081 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:43,081 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:43,081 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:43,081 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:43,081 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:43,081 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:43,081 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:43,081 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:43,082 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:43,082 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:43,082 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:43,082 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:43,082 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:43,082 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:43,082 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:43,082 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:43,082 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:43,082 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:43,082 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:43,082 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:43,083 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:43,083 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:43,083 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:43,083 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:43,083 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:43,083 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:43,083 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:43,083 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:43,084 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:43,084 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:43,084 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:43,084 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:43,084 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:43,084 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:43,084 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:43,084 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:43,084 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:43,084 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:43,085 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:43,085 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:43,085 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:43,085 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:43,085 - DEBUG - stack: []
2024-07-01 16:52:43,085 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:43,085 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:43,085 - DEBUG - stack []
2024-07-01 16:52:43,085 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:43,085 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:43,086 - DEBUG - end state. edges=[]
2024-07-01 16:52:43,086 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:43,086 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:43,086 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:43,086 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:43,086 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:43,086 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:43,086 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:43,087 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:43,087 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:43,087 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:43,087 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:43,087 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:43,087 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:43,087 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:43,087 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:43,088 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:43,088 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:43,089 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:43,089 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:43,090 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:43,090 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:43,090 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:43,090 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:43,091 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:43,091 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:43,091 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:43,091 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:43,092 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:43,101 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:43,102 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66268190>
2024-07-01 16:52:43,102 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:43,102 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:43,102 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:43,102 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:43,102 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:43,102 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:43,102 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,102 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:43,102 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:43,102 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:43,102 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:43,103 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,103 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:43,103 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:43,103 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:43,103 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:43,103 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:43,103 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,103 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:43,103 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:43,103 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:43,103 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:43,103 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:43,103 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:43,104 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:43,104 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:43,104 - DEBUG - on stmt: jump 230
2024-07-01 16:52:43,105 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:43,105 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66268190>
2024-07-01 16:52:43,105 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:43,105 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:43,105 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:43,105 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:43,105 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:43,105 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:43,105 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66268190>
2024-07-01 16:52:43,105 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:43,105 - DEBUG - on stmt: jump 240
2024-07-01 16:52:43,105 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:43,105 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66268190>
2024-07-01 16:52:43,106 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:43,106 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:43,106 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:43,106 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66268190>
2024-07-01 16:52:43,106 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:43,106 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:43,106 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:43,106 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:43,106 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:43,106 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:43,106 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-01 16:52:43,106 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:43,106 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:43,107 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:43,107 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:43,107 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:43,107 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:43,107 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-01 16:52:43,107 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:43,107 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:43,107 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:43,107 - DEBUG - on stmt: jump 241
2024-07-01 16:52:43,107 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:43,107 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66268190>
2024-07-01 16:52:43,107 - DEBUG - on stmt: jump 230
2024-07-01 16:52:43,109 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c66255690>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c66255810>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c66256190>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c66256310>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c66256590>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c662567d0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c66256e10>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c66257090>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c662575d0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c66257810>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c66253e50>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c66257dd0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c6625c290>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c6625c510>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c6624b890>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c6625c6d0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c6625c850>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c6625c990>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c6625d4d0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c66254110>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c6643e350>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c6624bb10>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c66254590>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c6624bdd0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c66249110>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c66254890>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c6624a390>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c6624b6d0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c66249a50>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c6625c090>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c66255490>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c66255ad0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c66255e10>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c66255fd0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c66256a10>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c66256bd0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c662573d0>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c66257a10>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c66257bd0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c6643d410>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c6643e9d0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c6643ff10>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c6642ba10>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c66254f50>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c662552d0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c66253c90>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c6625ca50>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c66253a50>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c6625ccd0>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c66254bd0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c6624b650>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c6624b7d0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c6624bad0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c6624bd50>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c66253650>, 0)]})
2024-07-01 16:52:43,109 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66268190>
2024-07-01 16:52:43,352 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:43,352 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:43,352 - DEBUG - stack: []
2024-07-01 16:52:43,352 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:43,352 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-07-01 16:52:43,352 - DEBUG - stack []
2024-07-01 16:52:43,352 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-07-01 16:52:43,352 - DEBUG - stack []
2024-07-01 16:52:43,352 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-07-01 16:52:43,352 - DEBUG - stack []
2024-07-01 16:52:43,352 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-07-01 16:52:43,353 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:43,353 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-07-01 16:52:43,353 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:43,353 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-07-01 16:52:43,353 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-07-01 16:52:43,353 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-07-01 16:52:43,353 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:43,353 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:43,353 - DEBUG - stack ['$22call.3', '$y32.4']
2024-07-01 16:52:43,353 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:43,353 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-07-01 16:52:43,353 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-07-01 16:52:43,353 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-07-01 16:52:43,353 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-07-01 16:52:43,354 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-07-01 16:52:43,354 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-07-01 16:52:43,354 - DEBUG - stack []
2024-07-01 16:52:43,354 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-07-01 16:52:43,354 - DEBUG - stack ['$const44.9']
2024-07-01 16:52:43,354 - DEBUG - end state. edges=[]
2024-07-01 16:52:43,354 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:43,354 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:43,354 - DEBUG - defmap: {}
2024-07-01 16:52:43,354 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:43,354 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:43,354 - DEBUG - keep phismap: {}
2024-07-01 16:52:43,354 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:43,355 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:43,355 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:43,355 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-07-01 16:52:43,360 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:43,360 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c661d5450>
2024-07-01 16:52:43,360 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:43,360 - DEBUG - on stmt: y = arg(1, name=y)
2024-07-01 16:52:43,360 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f1c79520650>)
2024-07-01 16:52:43,360 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,360 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-07-01 16:52:43,360 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-07-01 16:52:43,360 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-07-01 16:52:43,361 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,361 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-07-01 16:52:43,361 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-07-01 16:52:43,361 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-07-01 16:52:43,361 - DEBUG - on stmt: return $46return_value.10
2024-07-01 16:52:43,361 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f1c661d6350>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f1c661d6ad0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f1c661d6b90>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f1c661d7010>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c661d5fd0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f1c661d6750>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f1c661d68d0>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f1c661d6e50>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c661d5c50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1c661d5d50>, 0)]})
2024-07-01 16:52:43,361 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c661d5450>
2024-07-01 16:52:43,379 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:43,379 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:43,379 - DEBUG - stack: []
2024-07-01 16:52:43,380 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:43,380 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-07-01 16:52:43,380 - DEBUG - stack []
2024-07-01 16:52:43,380 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-07-01 16:52:43,380 - DEBUG - stack []
2024-07-01 16:52:43,380 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-07-01 16:52:43,380 - DEBUG - stack []
2024-07-01 16:52:43,380 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-07-01 16:52:43,380 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:43,380 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-07-01 16:52:43,380 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:43,380 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:43,381 - DEBUG - stack []
2024-07-01 16:52:43,381 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-07-01 16:52:43,381 - DEBUG - stack ['$18load_global.2']
2024-07-01 16:52:43,381 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-07-01 16:52:43,381 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-07-01 16:52:43,381 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-07-01 16:52:43,381 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-07-01 16:52:43,381 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-07-01 16:52:43,381 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-07-01 16:52:43,381 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-07-01 16:52:43,381 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:43,381 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-07-01 16:52:43,381 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:43,382 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-07-01 16:52:43,382 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-07-01 16:52:43,382 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-07-01 16:52:43,382 - DEBUG - stack ['$82call.8']
2024-07-01 16:52:43,382 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-07-01 16:52:43,382 - DEBUG - stack []
2024-07-01 16:52:43,382 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-07-01 16:52:43,382 - DEBUG - stack ['$const94.9']
2024-07-01 16:52:43,382 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-07-01 16:52:43,382 - DEBUG - stack ['$const94.9', '$out096.10']
2024-07-01 16:52:43,382 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-07-01 16:52:43,383 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-07-01 16:52:43,383 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-07-01 16:52:43,383 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-07-01 16:52:43,383 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-07-01 16:52:43,383 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-07-01 16:52:43,383 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-07-01 16:52:43,383 - DEBUG - stack []
2024-07-01 16:52:43,383 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-07-01 16:52:43,383 - DEBUG - stack ['$const108.15']
2024-07-01 16:52:43,384 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-07-01 16:52:43,384 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-07-01 16:52:43,384 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-07-01 16:52:43,384 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-07-01 16:52:43,384 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-07-01 16:52:43,384 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-07-01 16:52:43,384 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-07-01 16:52:43,384 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-07-01 16:52:43,384 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-07-01 16:52:43,384 - DEBUG - stack []
2024-07-01 16:52:43,385 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-07-01 16:52:43,385 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-07-01 16:52:43,385 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:43,385 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-07-01 16:52:43,385 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-07-01 16:52:43,385 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-07-01 16:52:43,385 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:43,385 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:43,385 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:43,385 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-07-01 16:52:43,385 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-07-01 16:52:43,385 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-07-01 16:52:43,386 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-07-01 16:52:43,386 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-07-01 16:52:43,386 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:43,386 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-07-01 16:52:43,386 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-07-01 16:52:43,386 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-07-01 16:52:43,386 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-07-01 16:52:43,386 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-07-01 16:52:43,386 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-07-01 16:52:43,386 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-07-01 16:52:43,386 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-07-01 16:52:43,386 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-07-01 16:52:43,386 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:43,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:43,387 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:43,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-07-01 16:52:43,387 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-07-01 16:52:43,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-07-01 16:52:43,387 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-07-01 16:52:43,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:43,387 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-07-01 16:52:43,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-07-01 16:52:43,387 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-07-01 16:52:43,387 - DEBUG - stack ['$218call.38']
2024-07-01 16:52:43,387 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-07-01 16:52:43,388 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:43,388 - DEBUG - stack: ['$phi230.0']
2024-07-01 16:52:43,388 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-07-01 16:52:43,388 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-07-01 16:52:43,388 - DEBUG - stack ['$phi230.0']
2024-07-01 16:52:43,388 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:43,388 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:43,388 - DEBUG - stack: []
2024-07-01 16:52:43,388 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-07-01 16:52:43,388 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-07-01 16:52:43,388 - DEBUG - stack []
2024-07-01 16:52:43,389 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-07-01 16:52:43,389 - DEBUG - stack ['$out0240.0']
2024-07-01 16:52:43,389 - DEBUG - end state. edges=[]
2024-07-01 16:52:43,389 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-07-01 16:52:43,389 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-07-01 16:52:43,389 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-07-01 16:52:43,389 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-07-01 16:52:43,389 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-07-01 16:52:43,389 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-07-01 16:52:43,389 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:43,389 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-07-01 16:52:43,389 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-07-01 16:52:43,389 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-07-01 16:52:43,389 - DEBUG - stack ['$phi232.0']
2024-07-01 16:52:43,390 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-07-01 16:52:43,390 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-07-01 16:52:43,390 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:43,390 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-07-01 16:52:43,390 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-07-01 16:52:43,390 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:43,391 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:43,391 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:43,392 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-07-01 16:52:43,392 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-07-01 16:52:43,392 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-07-01 16:52:43,392 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:43,392 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-07-01 16:52:43,393 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-07-01 16:52:43,393 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-07-01 16:52:43,393 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:43,394 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-07-01 16:52:43,405 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:43,405 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6620e450>
2024-07-01 16:52:43,405 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:43,405 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-07-01 16:52:43,405 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:43,405 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-07-01 16:52:43,405 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:43,405 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-07-01 16:52:43,405 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,406 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-07-01 16:52:43,406 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-07-01 16:52:43,406 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-07-01 16:52:43,406 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:43,406 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,406 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-07-01 16:52:43,406 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-07-01 16:52:43,406 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-07-01 16:52:43,406 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-07-01 16:52:43,406 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-07-01 16:52:43,406 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,407 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-07-01 16:52:43,407 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-07-01 16:52:43,407 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-07-01 16:52:43,408 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,408 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-07-01 16:52:43,408 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:43,408 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-07-01 16:52:43,408 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-07-01 16:52:43,408 - DEBUG - on stmt: jump 230
2024-07-01 16:52:43,408 - DEBUG - ==== SSA block analysis pass on 230
2024-07-01 16:52:43,408 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6620e450>
2024-07-01 16:52:43,408 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-07-01 16:52:43,408 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-07-01 16:52:43,409 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-07-01 16:52:43,409 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-07-01 16:52:43,409 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-07-01 16:52:43,409 - DEBUG - ==== SSA block analysis pass on 232
2024-07-01 16:52:43,409 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6620e450>
2024-07-01 16:52:43,409 - DEBUG - on stmt: index00 = $phi232.1.1
2024-07-01 16:52:43,409 - DEBUG - on stmt: jump 240
2024-07-01 16:52:43,409 - DEBUG - ==== SSA block analysis pass on 242
2024-07-01 16:52:43,409 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6620e450>
2024-07-01 16:52:43,409 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-07-01 16:52:43,409 - DEBUG - on stmt: return $242return_value.1.1
2024-07-01 16:52:43,409 - DEBUG - ==== SSA block analysis pass on 240
2024-07-01 16:52:43,409 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6620e450>
2024-07-01 16:52:43,409 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:43,410 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-07-01 16:52:43,410 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-07-01 16:52:43,410 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-07-01 16:52:43,410 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-07-01 16:52:43,410 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-07-01 16:52:43,410 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-07-01 16:52:43,410 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-07-01 16:52:43,410 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-07-01 16:52:43,410 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-07-01 16:52:43,410 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-07-01 16:52:43,410 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-07-01 16:52:43,410 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-07-01 16:52:43,411 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-07-01 16:52:43,411 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-07-01 16:52:43,411 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-07-01 16:52:43,411 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-07-01 16:52:43,411 - DEBUG - on stmt: jump 241
2024-07-01 16:52:43,411 - DEBUG - ==== SSA block analysis pass on 241
2024-07-01 16:52:43,411 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6620e450>
2024-07-01 16:52:43,411 - DEBUG - on stmt: jump 230
2024-07-01 16:52:43,412 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f1c66204190>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f1c66204310>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f1c66204c50>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f1c66204dd0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f1c66205050>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f1c66205250>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f1c662058d0>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f1c66205a90>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f1c66205f10>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f1c662061d0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f1c66202a90>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f1c662068d0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f1c66206dd0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f1c66207050>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c661f9b90>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f1c66207250>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f1c662073d0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f1c66207510>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f1c6620c090>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f1c66202d50>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f1c661d8710>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c661f9e10>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f1c662030d0>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1c661fa0d0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f1c661ef390>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f1c66203350>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f1c661f8650>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c661f9990>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f1c661efcd0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f1c66206b50>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f1c66203f50>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f1c66204590>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f1c662048d0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f1c66204a50>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f1c66205490>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f1c66205650>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f1c66205d50>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f1c66206450>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f1c66206610>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f1c661d8e50>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f1c661d7490>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f1c661eddd0>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c661ded10>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f1c66203a90>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f1c66203dd0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f1c662028d0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f1c66207110>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f1c662026d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f1c66207810>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f1c66203650>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f1c661f9910>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f1c661f9ad0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f1c661f9dd0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f1c661fa050>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c66202310>, 0)]})
2024-07-01 16:52:43,412 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c6620e450>
2024-07-01 16:52:44,228 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:44,229 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:44,229 - DEBUG - stack: []
2024-07-01 16:52:44,229 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:44,229 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-07-01 16:52:44,229 - DEBUG - stack []
2024-07-01 16:52:44,229 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-07-01 16:52:44,229 - DEBUG - stack []
2024-07-01 16:52:44,229 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:44,229 - DEBUG - stack []
2024-07-01 16:52:44,229 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:44,229 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:44,229 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:44,229 - DEBUG - stack ['$x4.0', '$const6.1']
2024-07-01 16:52:44,229 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-07-01 16:52:44,230 - DEBUG - stack ['$8binary_subscr.2']
2024-07-01 16:52:44,230 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-07-01 16:52:44,230 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-07-01 16:52:44,230 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:44,230 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-07-01 16:52:44,230 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-07-01 16:52:44,230 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-07-01 16:52:44,230 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-07-01 16:52:44,230 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-07-01 16:52:44,230 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-07-01 16:52:44,230 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-07-01 16:52:44,230 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:44,230 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-07-01 16:52:44,231 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-07-01 16:52:44,231 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-07-01 16:52:44,231 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:44,231 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-07-01 16:52:44,231 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:44,231 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-07-01 16:52:44,231 - DEBUG - dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-07-01 16:52:44,231 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-01 16:52:44,231 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-07-01 16:52:44,231 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-01 16:52:44,231 - DEBUG - dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-07-01 16:52:44,231 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-07-01 16:52:44,232 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:44,232 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-07-01 16:52:44,232 - DEBUG - dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-07-01 16:52:44,232 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-01 16:52:44,232 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-07-01 16:52:44,232 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-01 16:52:44,232 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-07-01 16:52:44,232 - DEBUG - stack ['$8binary_subscr.2', '$112call.19']
2024-07-01 16:52:44,232 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-07-01 16:52:44,232 - DEBUG - stack ['$122compare_op.20']
2024-07-01 16:52:44,232 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:44,232 - DEBUG - stack ['$122compare_op.20', '$peaks128.21']
2024-07-01 16:52:44,232 - DEBUG - dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:44,232 - DEBUG - stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-07-01 16:52:44,233 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-07-01 16:52:44,233 - DEBUG - stack []
2024-07-01 16:52:44,233 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:44,233 - DEBUG - stack ['$peaks136.23']
2024-07-01 16:52:44,233 - DEBUG - dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-07-01 16:52:44,233 - DEBUG - stack ['$peaks136.23', '$const138.24']
2024-07-01 16:52:44,233 - DEBUG - dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-07-01 16:52:44,233 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-07-01 16:52:44,233 - DEBUG - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:44,233 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-07-01 16:52:44,233 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:44,233 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-07-01 16:52:44,233 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:44,233 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-07-01 16:52:44,234 - DEBUG - dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:44,234 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-07-01 16:52:44,234 - DEBUG - dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-07-01 16:52:44,234 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-07-01 16:52:44,234 - DEBUG - dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-07-01 16:52:44,234 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-07-01 16:52:44,234 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:44,234 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-07-01 16:52:44,234 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-07-01 16:52:44,234 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-07-01 16:52:44,234 - DEBUG - dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-07-01 16:52:44,234 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-07-01 16:52:44,235 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-07-01 16:52:44,235 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-07-01 16:52:44,235 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:44,235 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-07-01 16:52:44,235 - DEBUG - dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-07-01 16:52:44,235 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-07-01 16:52:44,235 - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:44,235 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-07-01 16:52:44,235 - DEBUG - dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:44,235 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-07-01 16:52:44,235 - DEBUG - dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-07-01 16:52:44,235 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-01 16:52:44,235 - DEBUG - dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-07-01 16:52:44,236 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-01 16:52:44,236 - DEBUG - dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-07-01 16:52:44,236 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-07-01 16:52:44,236 - DEBUG - dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:44,236 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-07-01 16:52:44,236 - DEBUG - dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-07-01 16:52:44,236 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-01 16:52:44,236 - DEBUG - dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-07-01 16:52:44,236 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-01 16:52:44,236 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-07-01 16:52:44,236 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-07-01 16:52:44,236 - DEBUG - dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-07-01 16:52:44,236 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-07-01 16:52:44,237 - DEBUG - dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-07-01 16:52:44,237 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-07-01 16:52:44,237 - DEBUG - dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-07-01 16:52:44,237 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-07-01 16:52:44,237 - DEBUG - dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-07-01 16:52:44,237 - DEBUG - stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-07-01 16:52:44,237 - DEBUG - dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-07-01 16:52:44,237 - DEBUG - stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-07-01 16:52:44,237 - DEBUG - dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:44,237 - DEBUG - stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-07-01 16:52:44,237 - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-07-01 16:52:44,237 - DEBUG - stack []
2024-07-01 16:52:44,237 - DEBUG - dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-07-01 16:52:44,237 - DEBUG - stack ['$peaks296.50']
2024-07-01 16:52:44,238 - DEBUG - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-07-01 16:52:44,238 - DEBUG - stack ['$peaks296.50', '$const298.51']
2024-07-01 16:52:44,238 - DEBUG - dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-07-01 16:52:44,238 - DEBUG - stack ['$300binary_subscr.52']
2024-07-01 16:52:44,238 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,238 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-07-01 16:52:44,238 - DEBUG - stack: []
2024-07-01 16:52:44,238 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-07-01 16:52:44,238 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-07-01 16:52:44,238 - DEBUG - stack []
2024-07-01 16:52:44,238 - DEBUG - dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-07-01 16:52:44,238 - DEBUG - stack ['$wait312.0']
2024-07-01 16:52:44,238 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-07-01 16:52:44,238 - DEBUG - stack ['$wait312.0', '$const314.1']
2024-07-01 16:52:44,239 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-07-01 16:52:44,239 - DEBUG - stack ['$binop_add316.2']
2024-07-01 16:52:44,239 - DEBUG - dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-07-01 16:52:44,239 - DEBUG - stack []
2024-07-01 16:52:44,239 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,239 - DEBUG - pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:44,239 - DEBUG - stack: []
2024-07-01 16:52:44,239 - DEBUG - state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-07-01 16:52:44,239 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-07-01 16:52:44,239 - DEBUG - stack []
2024-07-01 16:52:44,239 - DEBUG - dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-07-01 16:52:44,239 - DEBUG - stack ['$const324.0']
2024-07-01 16:52:44,239 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,239 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:44,240 - DEBUG - stack: []
2024-07-01 16:52:44,240 - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-07-01 16:52:44,240 - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-01 16:52:44,240 - DEBUG - stack []
2024-07-01 16:52:44,240 - DEBUG - dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-01 16:52:44,240 - DEBUG - stack ['$n328.0']
2024-07-01 16:52:44,240 - DEBUG - dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-01 16:52:44,240 - DEBUG - stack ['$n328.0', '$x330.1']
2024-07-01 16:52:44,240 - DEBUG - dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-01 16:52:44,240 - DEBUG - stack ['$n328.0', '$332load_attr.2']
2024-07-01 16:52:44,240 - DEBUG - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-01 16:52:44,240 - DEBUG - stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-07-01 16:52:44,240 - DEBUG - dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-01 16:52:44,240 - DEBUG - stack ['$n328.0', '$344binary_subscr.4']
2024-07-01 16:52:44,241 - DEBUG - dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-07-01 16:52:44,241 - DEBUG - stack ['$354compare_op.5']
2024-07-01 16:52:44,241 - DEBUG - end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,241 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-01 16:52:44,241 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-01 16:52:44,241 - DEBUG - stack: []
2024-07-01 16:52:44,241 - DEBUG - state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-07-01 16:52:44,241 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-07-01 16:52:44,241 - DEBUG - stack []
2024-07-01 16:52:44,241 - DEBUG - dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-07-01 16:52:44,241 - DEBUG - stack ['$null$362.1', '$362load_global.0']
2024-07-01 16:52:44,241 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-01 16:52:44,241 - DEBUG - stack ['$null$362.1', '$374load_attr.2']
2024-07-01 16:52:44,241 - DEBUG - dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-07-01 16:52:44,242 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-07-01 16:52:44,242 - DEBUG - dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-01 16:52:44,242 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-07-01 16:52:44,242 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-01 16:52:44,242 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-07-01 16:52:44,242 - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-07-01 16:52:44,242 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-07-01 16:52:44,242 - DEBUG - dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-07-01 16:52:44,242 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-07-01 16:52:44,242 - DEBUG - dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-07-01 16:52:44,242 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-01 16:52:44,242 - DEBUG - dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-07-01 16:52:44,242 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-01 16:52:44,243 - DEBUG - dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-07-01 16:52:44,243 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-07-01 16:52:44,243 - DEBUG - dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-01 16:52:44,243 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-07-01 16:52:44,243 - DEBUG - dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-07-01 16:52:44,243 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-07-01 16:52:44,243 - DEBUG - dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-07-01 16:52:44,243 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-07-01 16:52:44,243 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-01 16:52:44,243 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-07-01 16:52:44,243 - DEBUG - dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-07-01 16:52:44,243 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-07-01 16:52:44,243 - DEBUG - dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-01 16:52:44,244 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-07-01 16:52:44,244 - DEBUG - dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-01 16:52:44,244 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-07-01 16:52:44,244 - DEBUG - dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-07-01 16:52:44,244 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-01 16:52:44,244 - DEBUG - dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-07-01 16:52:44,244 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-01 16:52:44,244 - DEBUG - dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-07-01 16:52:44,244 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-07-01 16:52:44,244 - DEBUG - dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-01 16:52:44,244 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-07-01 16:52:44,244 - DEBUG - dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-07-01 16:52:44,244 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-01 16:52:44,245 - DEBUG - dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-07-01 16:52:44,245 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-01 16:52:44,245 - DEBUG - dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-07-01 16:52:44,245 - DEBUG - stack ['$496call.24']
2024-07-01 16:52:44,245 - DEBUG - dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-07-01 16:52:44,245 - DEBUG - stack []
2024-07-01 16:52:44,246 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-01 16:52:44,246 - DEBUG - stack ['$x508.25']
2024-07-01 16:52:44,246 - DEBUG - dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-07-01 16:52:44,246 - DEBUG - stack ['$x508.25', '$n510.26']
2024-07-01 16:52:44,246 - DEBUG - dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-07-01 16:52:44,246 - DEBUG - stack ['$512binary_subscr.27']
2024-07-01 16:52:44,247 - DEBUG - dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-07-01 16:52:44,247 - DEBUG - stack ['$512binary_subscr.27', '$maxn522.28']
2024-07-01 16:52:44,247 - DEBUG - dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-07-01 16:52:44,247 - DEBUG - stack ['$524compare_op.29']
2024-07-01 16:52:44,247 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-01 16:52:44,247 - DEBUG - stack ['$524compare_op.29', '$peaks530.30']
2024-07-01 16:52:44,247 - DEBUG - dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-07-01 16:52:44,247 - DEBUG - stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-07-01 16:52:44,247 - DEBUG - dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-07-01 16:52:44,248 - DEBUG - stack []
2024-07-01 16:52:44,248 - DEBUG - dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-07-01 16:52:44,248 - DEBUG - stack ['$peaks538.32']
2024-07-01 16:52:44,248 - DEBUG - dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-07-01 16:52:44,248 - DEBUG - stack ['$peaks538.32', '$n540.33']
2024-07-01 16:52:44,248 - DEBUG - dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-07-01 16:52:44,248 - DEBUG - stack ['$542binary_subscr.34']
2024-07-01 16:52:44,248 - DEBUG - end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,248 - DEBUG - pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-01 16:52:44,249 - DEBUG - stack: []
2024-07-01 16:52:44,249 - DEBUG - state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-07-01 16:52:44,249 - DEBUG - dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-01 16:52:44,249 - DEBUG - stack []
2024-07-01 16:52:44,249 - DEBUG - dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:44,249 - DEBUG - stack ['$const852.0']
2024-07-01 16:52:44,249 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,249 - DEBUG - pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-01 16:52:44,249 - DEBUG - stack: []
2024-07-01 16:52:44,249 - DEBUG - state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-07-01 16:52:44,249 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-07-01 16:52:44,250 - DEBUG - stack []
2024-07-01 16:52:44,250 - DEBUG - dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-07-01 16:52:44,250 - DEBUG - stack ['$n554.0']
2024-07-01 16:52:44,250 - DEBUG - dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-07-01 16:52:44,250 - DEBUG - stack ['$n554.0', '$const556.1']
2024-07-01 16:52:44,250 - DEBUG - dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-07-01 16:52:44,250 - DEBUG - stack ['$binop_iadd558.2']
2024-07-01 16:52:44,250 - DEBUG - dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-07-01 16:52:44,250 - DEBUG - stack []
2024-07-01 16:52:44,250 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,250 - DEBUG - pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:44,251 - DEBUG - stack: []
2024-07-01 16:52:44,251 - DEBUG - state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-07-01 16:52:44,251 - DEBUG - dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-07-01 16:52:44,251 - DEBUG - stack []
2024-07-01 16:52:44,251 - DEBUG - dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-07-01 16:52:44,251 - DEBUG - stack ['$null$566.1', '$566load_global.0']
2024-07-01 16:52:44,251 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-01 16:52:44,251 - DEBUG - stack ['$null$566.1', '$578load_attr.2']
2024-07-01 16:52:44,251 - DEBUG - dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-07-01 16:52:44,251 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-07-01 16:52:44,251 - DEBUG - dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-01 16:52:44,251 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-07-01 16:52:44,251 - DEBUG - dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-01 16:52:44,251 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-07-01 16:52:44,252 - DEBUG - dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-07-01 16:52:44,252 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-07-01 16:52:44,252 - DEBUG - dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-07-01 16:52:44,252 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-07-01 16:52:44,252 - DEBUG - dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-07-01 16:52:44,252 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-01 16:52:44,252 - DEBUG - dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-07-01 16:52:44,252 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-01 16:52:44,252 - DEBUG - dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-07-01 16:52:44,252 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-07-01 16:52:44,252 - DEBUG - dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-01 16:52:44,252 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-07-01 16:52:44,252 - DEBUG - dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-07-01 16:52:44,253 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-07-01 16:52:44,253 - DEBUG - dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-07-01 16:52:44,253 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-07-01 16:52:44,253 - DEBUG - dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-01 16:52:44,253 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-07-01 16:52:44,253 - DEBUG - dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-07-01 16:52:44,253 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-07-01 16:52:44,253 - DEBUG - dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-01 16:52:44,253 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-07-01 16:52:44,253 - DEBUG - dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-01 16:52:44,253 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-07-01 16:52:44,253 - DEBUG - dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-07-01 16:52:44,253 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-01 16:52:44,253 - DEBUG - dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-07-01 16:52:44,254 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-01 16:52:44,254 - DEBUG - dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-07-01 16:52:44,254 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-07-01 16:52:44,254 - DEBUG - dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-01 16:52:44,254 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-07-01 16:52:44,254 - DEBUG - dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-07-01 16:52:44,254 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-01 16:52:44,254 - DEBUG - dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-07-01 16:52:44,254 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-01 16:52:44,254 - DEBUG - dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-07-01 16:52:44,254 - DEBUG - stack ['$700call.24']
2024-07-01 16:52:44,254 - DEBUG - dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-07-01 16:52:44,254 - DEBUG - stack []
2024-07-01 16:52:44,255 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-01 16:52:44,255 - DEBUG - stack ['$peaks712.25']
2024-07-01 16:52:44,255 - DEBUG - dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-07-01 16:52:44,255 - DEBUG - stack ['$peaks712.25', '$n714.26']
2024-07-01 16:52:44,255 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-07-01 16:52:44,255 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-07-01 16:52:44,255 - DEBUG - dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:44,255 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-07-01 16:52:44,255 - DEBUG - dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-07-01 16:52:44,255 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-07-01 16:52:44,255 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-01 16:52:44,255 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-07-01 16:52:44,255 - DEBUG - dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:44,255 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-07-01 16:52:44,256 - DEBUG - dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-07-01 16:52:44,256 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-07-01 16:52:44,256 - DEBUG - dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-07-01 16:52:44,256 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-07-01 16:52:44,256 - DEBUG - dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-07-01 16:52:44,256 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-07-01 16:52:44,256 - DEBUG - dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-07-01 16:52:44,256 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-07-01 16:52:44,256 - DEBUG - dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-07-01 16:52:44,256 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-07-01 16:52:44,256 - DEBUG - dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-07-01 16:52:44,256 - DEBUG - stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-07-01 16:52:44,256 - DEBUG - dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-07-01 16:52:44,256 - DEBUG - stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-07-01 16:52:44,257 - DEBUG - dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:44,257 - DEBUG - stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-07-01 16:52:44,257 - DEBUG - dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-07-01 16:52:44,257 - DEBUG - stack []
2024-07-01 16:52:44,257 - DEBUG - dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-07-01 16:52:44,257 - DEBUG - stack ['$peaks770.36']
2024-07-01 16:52:44,257 - DEBUG - dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-07-01 16:52:44,257 - DEBUG - stack ['$peaks770.36', '$n772.37']
2024-07-01 16:52:44,257 - DEBUG - dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-07-01 16:52:44,257 - DEBUG - stack ['$774binary_subscr.38']
2024-07-01 16:52:44,257 - DEBUG - end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,257 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-01 16:52:44,257 - DEBUG - pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-01 16:52:44,257 - DEBUG - stack: []
2024-07-01 16:52:44,258 - DEBUG - state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-07-01 16:52:44,258 - DEBUG - dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-07-01 16:52:44,258 - DEBUG - stack []
2024-07-01 16:52:44,258 - DEBUG - dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-07-01 16:52:44,258 - DEBUG - stack ['$n786.0']
2024-07-01 16:52:44,258 - DEBUG - dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-07-01 16:52:44,258 - DEBUG - stack ['$n786.0', '$const788.1']
2024-07-01 16:52:44,258 - DEBUG - dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-07-01 16:52:44,258 - DEBUG - stack ['$binop_iadd790.2']
2024-07-01 16:52:44,258 - DEBUG - dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-07-01 16:52:44,258 - DEBUG - stack []
2024-07-01 16:52:44,258 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,258 - DEBUG - pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:44,259 - DEBUG - stack: []
2024-07-01 16:52:44,259 - DEBUG - state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-07-01 16:52:44,259 - DEBUG - dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-07-01 16:52:44,259 - DEBUG - stack []
2024-07-01 16:52:44,259 - DEBUG - dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-07-01 16:52:44,259 - DEBUG - stack ['$n798.0']
2024-07-01 16:52:44,259 - DEBUG - dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-07-01 16:52:44,259 - DEBUG - stack ['$n798.0', '$wait800.1']
2024-07-01 16:52:44,259 - DEBUG - dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-07-01 16:52:44,259 - DEBUG - stack ['$n798.0', '$wait800.1', '$const802.2']
2024-07-01 16:52:44,259 - DEBUG - dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-07-01 16:52:44,259 - DEBUG - stack ['$n798.0', '$binop_add804.3']
2024-07-01 16:52:44,259 - DEBUG - dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-07-01 16:52:44,259 - DEBUG - stack ['$binop_iadd808.4']
2024-07-01 16:52:44,260 - DEBUG - dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-01 16:52:44,260 - DEBUG - stack []
2024-07-01 16:52:44,260 - DEBUG - dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-01 16:52:44,260 - DEBUG - stack ['$n814.5']
2024-07-01 16:52:44,260 - DEBUG - dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-01 16:52:44,260 - DEBUG - stack ['$n814.5', '$x816.6']
2024-07-01 16:52:44,260 - DEBUG - dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-01 16:52:44,260 - DEBUG - stack ['$n814.5', '$818load_attr.7']
2024-07-01 16:52:44,260 - DEBUG - dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-01 16:52:44,260 - DEBUG - stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-07-01 16:52:44,260 - DEBUG - dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-01 16:52:44,260 - DEBUG - stack ['$n814.5', '$830binary_subscr.9']
2024-07-01 16:52:44,260 - DEBUG - dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-07-01 16:52:44,260 - DEBUG - stack ['$840compare_op.10']
2024-07-01 16:52:44,261 - DEBUG - end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,261 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:44,261 - DEBUG - pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:44,261 - DEBUG - stack: []
2024-07-01 16:52:44,261 - DEBUG - state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-07-01 16:52:44,261 - DEBUG - dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-01 16:52:44,261 - DEBUG - stack []
2024-07-01 16:52:44,261 - DEBUG - dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:44,261 - DEBUG - stack ['$const848.0']
2024-07-01 16:52:44,261 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,261 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:44,261 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:44,262 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-07-01 16:52:44,262 - DEBUG - defmap: {}
2024-07-01 16:52:44,262 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:44,262 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:44,262 - DEBUG - keep phismap: {}
2024-07-01 16:52:44,262 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:44,262 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:44,262 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-07-01 16:52:44,263 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:44,263 - DEBUG - block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:44,263 - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-07-01 16:52:44,263 - DEBUG - block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-07-01 16:52:44,263 - DEBUG - block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:44,263 - DEBUG - block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-07-01 16:52:44,263 - DEBUG - block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:44,263 - DEBUG - block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-07-01 16:52:44,263 - DEBUG - block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,264 - DEBUG - block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,267 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-07-01 16:52:44,282 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:44,282 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,282 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:44,283 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:44,283 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:44,283 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:44,283 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:44,283 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:44,283 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:44,283 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:44,283 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:44,283 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:44,283 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,283 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:44,283 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:44,283 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:44,283 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,284 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:44,284 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:44,284 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,284 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,284 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,284 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:44,284 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,284 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:44,284 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:44,284 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:44,284 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:44,284 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,285 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:44,286 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,286 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:44,286 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:44,286 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,286 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:44,286 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:44,286 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:44,286 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,286 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,286 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:44,286 - DEBUG - ==== SSA block analysis pass on 312
2024-07-01 16:52:44,286 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,287 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:44,287 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:44,287 - DEBUG - on stmt: jump 328
2024-07-01 16:52:44,287 - DEBUG - ==== SSA block analysis pass on 324
2024-07-01 16:52:44,287 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,287 - DEBUG - on stmt: n = const(int, 1)
2024-07-01 16:52:44,287 - DEBUG - on stmt: jump 328
2024-07-01 16:52:44,287 - DEBUG - ==== SSA block analysis pass on 328
2024-07-01 16:52:44,287 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,287 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,287 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:44,287 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:44,287 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:44,287 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,288 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,288 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:44,288 - DEBUG - ==== SSA block analysis pass on 362
2024-07-01 16:52:44,288 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,288 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,288 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:44,288 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:44,288 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:44,288 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:44,288 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,288 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:44,288 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:44,288 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,289 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:44,289 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:44,289 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,289 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,289 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,289 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:44,289 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,289 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,289 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:44,289 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:44,289 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,289 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,289 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,290 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:44,290 - DEBUG - ==== SSA block analysis pass on 554
2024-07-01 16:52:44,290 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,290 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:44,290 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,290 - DEBUG - on stmt: n = $binop_iadd558.2
2024-07-01 16:52:44,290 - DEBUG - on stmt: jump 853
2024-07-01 16:52:44,290 - DEBUG - ==== SSA block analysis pass on 566
2024-07-01 16:52:44,290 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,290 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,290 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:44,290 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:44,290 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:44,291 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:44,291 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,291 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:44,291 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:44,291 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,291 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:44,291 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:44,291 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,291 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,291 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,291 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:44,291 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,292 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,292 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,292 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:44,292 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:44,292 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,292 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:44,292 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,292 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,292 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,293 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:44,293 - DEBUG - ==== SSA block analysis pass on 786
2024-07-01 16:52:44,293 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,293 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:44,293 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,293 - DEBUG - on stmt: n = $binop_iadd790.2
2024-07-01 16:52:44,293 - DEBUG - on stmt: jump 853
2024-07-01 16:52:44,293 - DEBUG - ==== SSA block analysis pass on 798
2024-07-01 16:52:44,293 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,293 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:44,293 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:44,293 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,293 - DEBUG - on stmt: n = $binop_iadd808.4
2024-07-01 16:52:44,294 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,294 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:44,294 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:44,294 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:44,294 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,294 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,294 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:44,294 - DEBUG - ==== SSA block analysis pass on 848
2024-07-01 16:52:44,294 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,294 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:44,295 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:44,295 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:44,295 - DEBUG - ==== SSA block analysis pass on 852
2024-07-01 16:52:44,295 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,295 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:44,295 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:44,295 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:44,295 - DEBUG - ==== SSA block analysis pass on 853
2024-07-01 16:52:44,295 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66003210>
2024-07-01 16:52:44,295 - DEBUG - on stmt: jump 328
2024-07-01 16:52:44,298 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x7f1c65fb2dd0>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x7f1c65fb2e50>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x7f1c66003390>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x7f1c66000190>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x7f1c65fb2c10>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x7f1c65fb2550>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x7f1c65fd9450>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x7f1c65fb1f50>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x7f1c65fb1a50>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x7f1c66003d90>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x7f1c65fb3690>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x7f1c65fb1250>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x7f1c65fb11d0>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x7f1c65fb0c90>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x7f1c65fb0350>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x7f1c65fb0910>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x7f1c66003850>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x7f1c65fd9510>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7f1c65fc7050>, 0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c65fc5a90>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1c66003c50>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c65fc5690>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x7f1c65fc5410>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x7f1c65fc5010>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c65fc4990>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x7f1c65fc4650>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x7f1c65fc72d0>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x7f1c65fc7550>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x7f1c65fc4550>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x7f1c65fd8e90>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1c66002fd0>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x7f1c65f88d10>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x7f1c65f89650>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x7f1c65f88fd0>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f1c65f88f50>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f1c65f89f50>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x7f1c65f8a4d0>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x7f1c65f8b210>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x7f1c65f8b450>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x7f1c65f8bd50>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c65f8bf10>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x7f1c65f88950>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7f1c65fd8a10>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x7f1c65f88510>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x7f1c65f88450>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x7f1c664a7ed0>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1c66003e50>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x7f1c65fa75d0>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x7f1c65fa7b10>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x7f1c65fa74d0>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f1c65fa7210>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f1c65fa6a90>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f1c66003f90>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x7f1c65fa6610>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x7f1c65fa4d50>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x7f1c65fa5410>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x7f1c65fa58d0>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x7f1c661d9ad0>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c66001210>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c66427710>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x7f1c65f97fd0>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x7f1c65f97c10>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x7f1c65f97850>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7f1c65fd8390>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c66002f50>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x7f1c65fd86d0>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x7f1c6620ec50>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x7f1c65fb2610>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x7f1c65fb05d0>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x7f1c65fc4090>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x7f1c65f89910>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x7f1c65fa4a90>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x7f1c65fa4390>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x7f1c65f8b710>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x7f1c65fa5b50>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x7f1c65fa4110>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x7f1c65fb0a90>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x7f1c65fa4f10>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x7f1c65fc4a10>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x7f1c65f88790>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x7f1c65fb3650>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x7f1c65fb1d10>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x7f1c65fb2950>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x7f1c65fb0e90>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x7f1c65fb18d0>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x7f1c65fc7dd0>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x7f1c65fc45d0>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x7f1c65fc6150>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x7f1c65fc55d0>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x7f1c65fd9050>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x7f1c66251dd0>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x7f1c65f8b050>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c65fda4d0>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x7f1c65f88bd0>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x7f1c65fa7750>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x7f1c65fd8750>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x7f1c65fa6310>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x7f1c65fa6190>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x7f1c661d9e10>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x7f1c65f97ed0>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x7f1c65f97b50>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x7f1c65fa6d90>, 566)],
             'bool310': [(<numba.core.ir.Assign object at 0x7f1c65fc7010>, 0)],
             'bool360': [(<numba.core.ir.Assign object at 0x7f1c65fc5710>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x7f1c65f8b0d0>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x7f1c65fa5750>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x7f1c65f977d0>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x7f1c65fdb010>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7f1c65f88190>, 362)],
             'n': [(<numba.core.ir.Assign object at 0x7f1c65fc6fd0>, 312),
                   (<numba.core.ir.Assign object at 0x7f1c65fc6bd0>, 324),
                   (<numba.core.ir.Assign object at 0x7f1c65f8b7d0>, 554),
                   (<numba.core.ir.Assign object at 0x7f1c65fa5bd0>, 786),
                   (<numba.core.ir.Assign object at 0x7f1c65fa4090>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x7f1c65fdb210>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7f1c65fdaed0>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7f1c65fdb9d0>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7f1c65fdae50>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7f1c65fdad10>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7f1c65fdb110>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c65fdbe50>, 0)]})
2024-07-01 16:52:44,298 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66111510>
2024-07-01 16:52:44,298 - DEBUG - Fix SSA violator on var n
2024-07-01 16:52:44,298 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,298 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,298 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:44,298 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:44,298 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:44,298 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:44,299 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:44,299 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:44,299 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:44,299 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:44,299 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:44,300 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:44,300 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:44,300 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,300 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,301 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:44,301 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:44,301 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,302 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:44,302 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:44,302 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:44,302 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,302 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,302 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:44,302 - DEBUG - ==== SSA block rewrite pass on 312
2024-07-01 16:52:44,302 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,302 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:44,302 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:44,302 - DEBUG - first assign: n
2024-07-01 16:52:44,302 - DEBUG - replaced with: n = wait + $const314.1
2024-07-01 16:52:44,302 - DEBUG - on stmt: jump 328
2024-07-01 16:52:44,303 - DEBUG - ==== SSA block rewrite pass on 324
2024-07-01 16:52:44,303 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,303 - DEBUG - on stmt: n = const(int, 1)
2024-07-01 16:52:44,303 - DEBUG - replaced with: n.1 = const(int, 1)
2024-07-01 16:52:44,303 - DEBUG - on stmt: jump 328
2024-07-01 16:52:44,303 - DEBUG - ==== SSA block rewrite pass on 328
2024-07-01 16:52:44,303 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,303 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,303 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:44,303 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:44,303 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:44,303 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,303 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,304 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:44,304 - DEBUG - ==== SSA block rewrite pass on 362
2024-07-01 16:52:44,304 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,304 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,304 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:44,304 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:44,304 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:44,304 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:44,304 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,304 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:44,304 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:44,304 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,304 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:44,304 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:44,305 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,305 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,305 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,305 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:44,305 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,305 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,305 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:44,305 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:44,305 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,305 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,305 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,306 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:44,306 - DEBUG - ==== SSA block rewrite pass on 554
2024-07-01 16:52:44,306 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,306 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:44,306 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,306 - DEBUG - on stmt: n = $binop_iadd558.2
2024-07-01 16:52:44,306 - DEBUG - replaced with: n.2 = $binop_iadd558.2
2024-07-01 16:52:44,306 - DEBUG - on stmt: jump 853
2024-07-01 16:52:44,306 - DEBUG - ==== SSA block rewrite pass on 566
2024-07-01 16:52:44,306 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,306 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,306 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:44,306 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:44,307 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:44,307 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:44,307 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,307 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:44,307 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:44,307 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,307 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:44,307 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:44,307 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,307 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,307 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,308 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:44,308 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,308 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,308 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,308 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:44,309 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:44,309 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,309 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:44,309 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,309 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,309 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,309 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:44,309 - DEBUG - ==== SSA block rewrite pass on 786
2024-07-01 16:52:44,309 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,309 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:44,309 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,310 - DEBUG - on stmt: n = $binop_iadd790.2
2024-07-01 16:52:44,310 - DEBUG - replaced with: n.3 = $binop_iadd790.2
2024-07-01 16:52:44,310 - DEBUG - on stmt: jump 853
2024-07-01 16:52:44,310 - DEBUG - ==== SSA block rewrite pass on 798
2024-07-01 16:52:44,310 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,310 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:44,310 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:44,310 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,310 - DEBUG - on stmt: n = $binop_iadd808.4
2024-07-01 16:52:44,310 - DEBUG - replaced with: n.4 = $binop_iadd808.4
2024-07-01 16:52:44,310 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,310 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:44,311 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:44,311 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:44,311 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,311 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,311 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:44,311 - DEBUG - ==== SSA block rewrite pass on 848
2024-07-01 16:52:44,311 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,311 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:44,311 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:44,311 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:44,311 - DEBUG - ==== SSA block rewrite pass on 852
2024-07-01 16:52:44,311 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,311 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:44,311 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:44,312 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:44,312 - DEBUG - ==== SSA block rewrite pass on 853
2024-07-01 16:52:44,312 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c666b4190>
2024-07-01 16:52:44,312 - DEBUG - on stmt: jump 328
2024-07-01 16:52:44,312 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x7f1c65fdeb10>],
             324: [<numba.core.ir.Assign object at 0x7f1c65fdda90>],
             554: [<numba.core.ir.Assign object at 0x7f1c65fde790>],
             786: [<numba.core.ir.Assign object at 0x7f1c65fddb50>],
             798: [<numba.core.ir.Assign object at 0x7f1c65fdf790>]})
2024-07-01 16:52:44,312 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,312 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,312 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:44,312 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:44,312 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:44,312 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:44,313 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:44,313 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:44,313 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:44,313 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:44,313 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:44,313 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:44,313 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,313 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:44,313 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:44,313 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:44,313 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,313 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:44,313 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:44,314 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,314 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,314 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,314 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:44,314 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,314 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:44,314 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:44,314 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:44,314 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:44,314 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,315 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,316 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:44,316 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,316 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:44,316 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:44,316 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,316 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:44,316 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:44,316 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:44,316 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,316 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,317 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:44,317 - DEBUG - ==== SSA block rewrite pass on 312
2024-07-01 16:52:44,317 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,317 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:44,317 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:44,317 - DEBUG - on stmt: jump 328
2024-07-01 16:52:44,317 - DEBUG - ==== SSA block rewrite pass on 324
2024-07-01 16:52:44,317 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,317 - DEBUG - on stmt: n.1 = const(int, 1)
2024-07-01 16:52:44,317 - DEBUG - on stmt: jump 328
2024-07-01 16:52:44,317 - DEBUG - ==== SSA block rewrite pass on 328
2024-07-01 16:52:44,317 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,317 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,318 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:44,318 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:44,318 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:44,318 - DEBUG - find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:44,318 - DEBUG - find_def_from_top label 328
2024-07-01 16:52:44,318 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-07-01 16:52:44,318 - DEBUG - find_def_from_bottom label 312
2024-07-01 16:52:44,318 - DEBUG - incoming_def n = wait + $const314.1
2024-07-01 16:52:44,318 - DEBUG - find_def_from_bottom label 324
2024-07-01 16:52:44,318 - DEBUG - incoming_def n.1 = const(int, 1)
2024-07-01 16:52:44,318 - DEBUG - find_def_from_bottom label 853
2024-07-01 16:52:44,318 - DEBUG - find_def_from_top label 853
2024-07-01 16:52:44,318 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-07-01 16:52:44,319 - DEBUG - find_def_from_bottom label 554
2024-07-01 16:52:44,319 - DEBUG - incoming_def n.2 = $binop_iadd558.2
2024-07-01 16:52:44,319 - DEBUG - find_def_from_bottom label 786
2024-07-01 16:52:44,319 - DEBUG - incoming_def n.3 = $binop_iadd790.2
2024-07-01 16:52:44,319 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-07-01 16:52:44,319 - DEBUG - replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-07-01 16:52:44,319 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,319 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,319 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:44,319 - DEBUG - ==== SSA block rewrite pass on 362
2024-07-01 16:52:44,319 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,320 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,320 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:44,320 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:44,320 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:44,320 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:44,320 - DEBUG - find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-07-01 16:52:44,320 - DEBUG - find_def_from_top label 362
2024-07-01 16:52:44,320 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-07-01 16:52:44,320 - DEBUG - find_def_from_bottom label 328
2024-07-01 16:52:44,320 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-07-01 16:52:44,320 - DEBUG - find_def_from_bottom label 798
2024-07-01 16:52:44,320 - DEBUG - incoming_def n.4 = $binop_iadd808.4
2024-07-01 16:52:44,321 - DEBUG - replaced with: $binop_sub404.9 = n.7 - pre_max
2024-07-01 16:52:44,321 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,321 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:44,321 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:44,321 - DEBUG - find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-07-01 16:52:44,321 - DEBUG - replaced with: $binop_add438.15 = n.7 + post_max
2024-07-01 16:52:44,321 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,321 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:44,321 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:44,321 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,322 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,322 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,322 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:44,322 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,322 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,322 - DEBUG - find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,322 - DEBUG - replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:44,322 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:44,322 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:44,322 - DEBUG - find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-07-01 16:52:44,322 - DEBUG - replaced with: peaks[n.7] = $524compare_op.29
2024-07-01 16:52:44,323 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,323 - DEBUG - find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,323 - DEBUG - replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:44,323 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,323 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,323 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:44,323 - DEBUG - ==== SSA block rewrite pass on 554
2024-07-01 16:52:44,323 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,323 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:44,323 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,323 - DEBUG - find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,323 - DEBUG - find_def_from_top label 554
2024-07-01 16:52:44,324 - DEBUG - idom 362 from label 554
2024-07-01 16:52:44,324 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:44,324 - DEBUG - replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,324 - DEBUG - on stmt: n.2 = $binop_iadd558.2
2024-07-01 16:52:44,324 - DEBUG - on stmt: jump 853
2024-07-01 16:52:44,324 - DEBUG - ==== SSA block rewrite pass on 566
2024-07-01 16:52:44,324 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,324 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,324 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:44,324 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:44,324 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:44,325 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:44,325 - DEBUG - find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-07-01 16:52:44,325 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:44,325 - DEBUG - idom 362 from label 566
2024-07-01 16:52:44,325 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:44,325 - DEBUG - replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-07-01 16:52:44,325 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,325 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:44,325 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:44,325 - DEBUG - find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-07-01 16:52:44,325 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:44,325 - DEBUG - idom 362 from label 566
2024-07-01 16:52:44,326 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:44,326 - DEBUG - replaced with: $binop_add642.15 = n.7 + post_avg
2024-07-01 16:52:44,326 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,326 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:44,326 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:44,326 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,326 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:44,326 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,326 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:44,326 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,327 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,327 - DEBUG - find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,327 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:44,327 - DEBUG - idom 362 from label 566
2024-07-01 16:52:44,327 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:44,327 - DEBUG - replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:44,327 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,327 - DEBUG - find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,327 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:44,327 - DEBUG - idom 362 from label 566
2024-07-01 16:52:44,327 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:44,327 - DEBUG - replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:44,327 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:44,328 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:44,328 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,328 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:44,328 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-07-01 16:52:44,328 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:44,328 - DEBUG - idom 362 from label 566
2024-07-01 16:52:44,328 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:44,328 - DEBUG - replaced with: peaks[n.7] = $binop_iand758.35
2024-07-01 16:52:44,328 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,328 - DEBUG - find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:44,328 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:44,329 - DEBUG - idom 362 from label 566
2024-07-01 16:52:44,329 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:44,329 - DEBUG - replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:44,329 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,329 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,329 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:44,329 - DEBUG - ==== SSA block rewrite pass on 786
2024-07-01 16:52:44,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,329 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:44,329 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,329 - DEBUG - find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,330 - DEBUG - find_def_from_top label 786
2024-07-01 16:52:44,330 - DEBUG - idom 566 from label 786
2024-07-01 16:52:44,330 - DEBUG - find_def_from_bottom label 566
2024-07-01 16:52:44,330 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:44,330 - DEBUG - idom 362 from label 566
2024-07-01 16:52:44,330 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:44,330 - DEBUG - replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,330 - DEBUG - on stmt: n.3 = $binop_iadd790.2
2024-07-01 16:52:44,330 - DEBUG - on stmt: jump 853
2024-07-01 16:52:44,330 - DEBUG - ==== SSA block rewrite pass on 798
2024-07-01 16:52:44,331 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,331 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:44,331 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:44,331 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,331 - DEBUG - find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,331 - DEBUG - find_def_from_top label 798
2024-07-01 16:52:44,331 - DEBUG - idom 566 from label 798
2024-07-01 16:52:44,331 - DEBUG - find_def_from_bottom label 566
2024-07-01 16:52:44,331 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:44,331 - DEBUG - idom 362 from label 566
2024-07-01 16:52:44,331 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:44,332 - DEBUG - replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,332 - DEBUG - on stmt: n.4 = $binop_iadd808.4
2024-07-01 16:52:44,332 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:44,332 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:44,332 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:44,332 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:44,332 - DEBUG - find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:44,332 - DEBUG - replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-07-01 16:52:44,332 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,332 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,332 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:44,333 - DEBUG - ==== SSA block rewrite pass on 848
2024-07-01 16:52:44,333 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,333 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:44,333 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:44,333 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:44,333 - DEBUG - ==== SSA block rewrite pass on 852
2024-07-01 16:52:44,333 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,333 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:44,333 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:44,333 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:44,333 - DEBUG - ==== SSA block rewrite pass on 853
2024-07-01 16:52:44,333 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65fde810>
2024-07-01 16:52:44,334 - DEBUG - on stmt: jump 328
2024-07-01 16:52:44,342 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-07-01 16:52:44,342 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:44,342 - DEBUG - stack: []
2024-07-01 16:52:44,342 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:44,342 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-07-01 16:52:44,343 - DEBUG - stack []
2024-07-01 16:52:44,343 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-07-01 16:52:44,343 - DEBUG - stack []
2024-07-01 16:52:44,343 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-07-01 16:52:44,343 - DEBUG - stack []
2024-07-01 16:52:44,343 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-07-01 16:52:44,343 - DEBUG - stack []
2024-07-01 16:52:44,343 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-07-01 16:52:44,343 - DEBUG - stack ['$a6.0']
2024-07-01 16:52:44,343 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-07-01 16:52:44,343 - DEBUG - stack ['$8load_attr.1']
2024-07-01 16:52:44,343 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-07-01 16:52:44,343 - DEBUG - stack ['$8load_attr.1', '$const18.2']
2024-07-01 16:52:44,344 - DEBUG - dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-07-01 16:52:44,344 - DEBUG - stack ['$20compare_op.3']
2024-07-01 16:52:44,344 - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,344 - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:44,344 - DEBUG - stack: []
2024-07-01 16:52:44,344 - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-07-01 16:52:44,344 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-07-01 16:52:44,344 - DEBUG - stack []
2024-07-01 16:52:44,344 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-07-01 16:52:44,344 - DEBUG - stack ['$null$28.1', '$28load_global.0']
2024-07-01 16:52:44,344 - DEBUG - dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-07-01 16:52:44,344 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-01 16:52:44,345 - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-07-01 16:52:44,345 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-01 16:52:44,345 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-07-01 16:52:44,345 - DEBUG - stack ['$46call.3']
2024-07-01 16:52:44,345 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,345 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:44,345 - DEBUG - stack: []
2024-07-01 16:52:44,345 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-01 16:52:44,345 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-07-01 16:52:44,345 - DEBUG - stack []
2024-07-01 16:52:44,345 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-07-01 16:52:44,345 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-07-01 16:52:44,346 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-07-01 16:52:44,346 - DEBUG - stack ['$null$58.1', '$70load_attr.2']
2024-07-01 16:52:44,346 - DEBUG - dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-07-01 16:52:44,346 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-01 16:52:44,346 - DEBUG - dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-07-01 16:52:44,346 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-01 16:52:44,346 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-07-01 16:52:44,346 - DEBUG - stack ['$86call.4']
2024-07-01 16:52:44,346 - DEBUG - dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-07-01 16:52:44,346 - DEBUG - stack []
2024-07-01 16:52:44,346 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-07-01 16:52:44,346 - DEBUG - stack ['$null$98.6', '$98load_global.5']
2024-07-01 16:52:44,346 - DEBUG - dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-07-01 16:52:44,347 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-01 16:52:44,347 - DEBUG - dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-07-01 16:52:44,347 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-01 16:52:44,347 - DEBUG - dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-07-01 16:52:44,347 - DEBUG - stack ['$116call.8']
2024-07-01 16:52:44,347 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-07-01 16:52:44,347 - DEBUG - stack ['$null$126.9', '$126load_method.10']
2024-07-01 16:52:44,347 - DEBUG - dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-07-01 16:52:44,348 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-01 16:52:44,348 - DEBUG - dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-07-01 16:52:44,348 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-01 16:52:44,348 - DEBUG - dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-07-01 16:52:44,348 - DEBUG - stack ['$154call.12']
2024-07-01 16:52:44,348 - DEBUG - dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-07-01 16:52:44,348 - DEBUG - stack []
2024-07-01 16:52:44,348 - DEBUG - dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-07-01 16:52:44,348 - DEBUG - stack ['$null$166.13']
2024-07-01 16:52:44,348 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-07-01 16:52:44,348 - DEBUG - stack ['$null$166.13', '$168load_deref.14']
2024-07-01 16:52:44,348 - DEBUG - dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-07-01 16:52:44,349 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-01 16:52:44,349 - DEBUG - dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-07-01 16:52:44,349 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-01 16:52:44,349 - DEBUG - dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-07-01 16:52:44,349 - DEBUG - stack ['$176call.16']
2024-07-01 16:52:44,349 - DEBUG - end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,349 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:44,349 - DEBUG - stack: []
2024-07-01 16:52:44,349 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-07-01 16:52:44,349 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-07-01 16:52:44,349 - DEBUG - stack []
2024-07-01 16:52:44,349 - DEBUG - dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-07-01 16:52:44,349 - DEBUG - stack ['$max_value188.0']
2024-07-01 16:52:44,350 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,350 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:44,350 - DEBUG - stack: []
2024-07-01 16:52:44,350 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-01 16:52:44,350 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-07-01 16:52:44,350 - DEBUG - stack []
2024-07-01 16:52:44,350 - DEBUG - dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-07-01 16:52:44,350 - DEBUG - stack ['$it192.0']
2024-07-01 16:52:44,350 - DEBUG - end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-07-01 16:52:44,350 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:44,350 - DEBUG - stack: ['$phi196.0']
2024-07-01 16:52:44,350 - DEBUG - state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-07-01 16:52:44,350 - DEBUG - dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-07-01 16:52:44,351 - DEBUG - stack ['$phi196.0']
2024-07-01 16:52:44,351 - DEBUG - end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:44,351 - DEBUG - pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-07-01 16:52:44,351 - DEBUG - stack: []
2024-07-01 16:52:44,351 - DEBUG - state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-07-01 16:52:44,351 - DEBUG - dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-07-01 16:52:44,351 - DEBUG - stack []
2024-07-01 16:52:44,351 - DEBUG - dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-07-01 16:52:44,351 - DEBUG - stack ['$max_value300.0']
2024-07-01 16:52:44,351 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,351 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-07-01 16:52:44,351 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2024-07-01 16:52:44,351 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-07-01 16:52:44,351 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-07-01 16:52:44,352 - DEBUG - stack ['$phi198.0', '$phi198.1']
2024-07-01 16:52:44,352 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-07-01 16:52:44,352 - DEBUG - stack ['$phi198.0']
2024-07-01 16:52:44,352 - DEBUG - dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-07-01 16:52:44,352 - DEBUG - stack ['$phi198.0', '$view200.2']
2024-07-01 16:52:44,352 - DEBUG - dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-07-01 16:52:44,352 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-01 16:52:44,352 - DEBUG - dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-07-01 16:52:44,352 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-01 16:52:44,352 - DEBUG - dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-07-01 16:52:44,352 - DEBUG - stack ['$phi198.0', '$228call.5']
2024-07-01 16:52:44,352 - DEBUG - dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-07-01 16:52:44,352 - DEBUG - stack ['$phi198.0']
2024-07-01 16:52:44,353 - DEBUG - dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-07-01 16:52:44,353 - DEBUG - stack ['$phi198.0', '$null$240.6']
2024-07-01 16:52:44,353 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-07-01 16:52:44,353 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-07-01 16:52:44,353 - DEBUG - dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-07-01 16:52:44,353 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-01 16:52:44,353 - DEBUG - dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-07-01 16:52:44,353 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-01 16:52:44,353 - DEBUG - dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-07-01 16:52:44,353 - DEBUG - stack ['$phi198.0', '$250call.9']
2024-07-01 16:52:44,353 - DEBUG - end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-07-01 16:52:44,353 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-07-01 16:52:44,354 - DEBUG - stack: ['$phi262.0']
2024-07-01 16:52:44,354 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-07-01 16:52:44,354 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-07-01 16:52:44,354 - DEBUG - stack ['$phi262.0']
2024-07-01 16:52:44,354 - DEBUG - dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-07-01 16:52:44,354 - DEBUG - stack ['$phi262.0', '$v262.1']
2024-07-01 16:52:44,354 - DEBUG - dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-07-01 16:52:44,354 - DEBUG - stack ['$v262.1', '$phi262.0']
2024-07-01 16:52:44,354 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-07-01 16:52:44,354 - DEBUG - stack ['$v262.1']
2024-07-01 16:52:44,354 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,354 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-07-01 16:52:44,354 - DEBUG - stack: ['$phi270.0']
2024-07-01 16:52:44,354 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-07-01 16:52:44,355 - DEBUG - dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-07-01 16:52:44,355 - DEBUG - stack ['$phi270.0']
2024-07-01 16:52:44,355 - DEBUG - dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-07-01 16:52:44,355 - DEBUG - stack ['$phi270.0', '$null$270.1']
2024-07-01 16:52:44,355 - DEBUG - dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-07-01 16:52:44,356 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-07-01 16:52:44,356 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-07-01 16:52:44,356 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-07-01 16:52:44,356 - DEBUG - dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-07-01 16:52:44,356 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-01 16:52:44,356 - DEBUG - dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-07-01 16:52:44,356 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-01 16:52:44,356 - DEBUG - dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-07-01 16:52:44,356 - DEBUG - stack ['$phi270.0', '$282call.5']
2024-07-01 16:52:44,357 - DEBUG - end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-07-01 16:52:44,357 - DEBUG - pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-01 16:52:44,357 - DEBUG - stack: ['$phi294.0']
2024-07-01 16:52:44,357 - DEBUG - state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-07-01 16:52:44,357 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-07-01 16:52:44,357 - DEBUG - stack ['$phi294.0']
2024-07-01 16:52:44,357 - DEBUG - dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-07-01 16:52:44,357 - DEBUG - stack ['$phi294.0', '$v294.1']
2024-07-01 16:52:44,357 - DEBUG - end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-07-01 16:52:44,357 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-01 16:52:44,358 - DEBUG - stack: ['$phi298.0']
2024-07-01 16:52:44,358 - DEBUG - state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-07-01 16:52:44,358 - DEBUG - dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-07-01 16:52:44,358 - DEBUG - stack ['$phi298.0']
2024-07-01 16:52:44,358 - DEBUG - end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-07-01 16:52:44,358 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:44,358 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:44,358 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:44,359 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-07-01 16:52:44,359 - DEBUG - defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-07-01 16:52:44,360 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-07-01 16:52:44,360 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:44,362 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:44,363 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:44,363 - DEBUG - keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-07-01 16:52:44,364 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-07-01 16:52:44,364 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:44,364 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-07-01 16:52:44,364 - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,364 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-07-01 16:52:44,364 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,365 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-07-01 16:52:44,365 - DEBUG - block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-07-01 16:52:44,365 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-07-01 16:52:44,365 - DEBUG - block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,365 - DEBUG - block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-07-01 16:52:44,365 - DEBUG - block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-07-01 16:52:44,365 - DEBUG - block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-07-01 16:52:44,365 - DEBUG - block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,367 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-07-01 16:52:44,381 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:44,381 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,381 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:44,381 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:44,381 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:44,381 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:44,382 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,382 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,382 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:44,382 - DEBUG - ==== SSA block analysis pass on 28
2024-07-01 16:52:44,382 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,382 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,382 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:44,382 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,382 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:44,383 - DEBUG - ==== SSA block analysis pass on 58
2024-07-01 16:52:44,383 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,383 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,383 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:44,383 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,383 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:44,383 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,383 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:44,383 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:44,383 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,383 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:44,384 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,384 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,384 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,384 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:44,384 - DEBUG - ==== SSA block analysis pass on 188
2024-07-01 16:52:44,384 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,384 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:44,384 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:44,384 - DEBUG - ==== SSA block analysis pass on 192
2024-07-01 16:52:44,384 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,384 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:44,385 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:44,385 - DEBUG - on stmt: jump 196
2024-07-01 16:52:44,385 - DEBUG - ==== SSA block analysis pass on 196
2024-07-01 16:52:44,385 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,385 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:44,385 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:44,385 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:44,385 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:44,385 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:44,385 - DEBUG - ==== SSA block analysis pass on 198
2024-07-01 16:52:44,385 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,385 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:44,385 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:44,386 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,386 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:44,386 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,386 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,386 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,386 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:44,387 - DEBUG - ==== SSA block analysis pass on 262
2024-07-01 16:52:44,387 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,387 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:44,387 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:44,387 - DEBUG - ==== SSA block analysis pass on 270
2024-07-01 16:52:44,387 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,387 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:44,387 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,387 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,387 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,387 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:44,387 - DEBUG - ==== SSA block analysis pass on 294
2024-07-01 16:52:44,388 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,388 - DEBUG - on stmt: max_value = v
2024-07-01 16:52:44,388 - DEBUG - on stmt: jump 298
2024-07-01 16:52:44,388 - DEBUG - ==== SSA block analysis pass on 298
2024-07-01 16:52:44,388 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,388 - DEBUG - on stmt: jump 196
2024-07-01 16:52:44,388 - DEBUG - ==== SSA block analysis pass on 300
2024-07-01 16:52:44,388 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb0590>
2024-07-01 16:52:44,388 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:44,388 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:44,390 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x7f1c66121cd0>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x7f1c66120e10>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x7f1c661203d0>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x7f1c66122e90>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f1c65f7fe90>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x7f1c65f7f710>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x7f1c65f7f390>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c65f7ee10>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c65f7ed10>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c65f7e7d0>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x7f1c65f7dbd0>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x7f1c65f830d0>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x7f1c65f7dd10>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x7f1c65f7d290>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x7f1c65f7d450>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x7f1c65f7c450>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7f1c661d5110>, 0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x7f1c65f7c2d0>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x7f1c65f7c910>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7f1c661236d0>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x7f1c65f7ef50>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x7f1c65f71410>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x7f1c66123c50>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f1c66121f50>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c66122d50>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7f1c65f80250>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x7f1c66123450>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x7f1c66121610>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x7f1c65f80050>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x7f1c661238d0>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x7f1c65f7f810>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x7f1c65f7db10>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c65f80bd0>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f1c65f7fd10>, 58)],
             'bool26': [(<numba.core.ir.Assign object at 0x7f1c65f95c10>, 0)],
             'bool260': [(<numba.core.ir.Assign object at 0x7f1c65f7cbd0>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x7f1c65f7c390>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x7f1c66122210>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7f1c66120850>,
                            58),
                           (<numba.core.ir.Assign object at 0x7f1c65f94bd0>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x7f1c65f7d6d0>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x7f1c65f7e790>, 198)]})
2024-07-01 16:52:44,390 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c65fb0590>
2024-07-01 16:52:44,390 - DEBUG - Fix SSA violator on var max_value
2024-07-01 16:52:44,390 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,391 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,391 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:44,391 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:44,391 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:44,391 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:44,391 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,391 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,391 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:44,391 - DEBUG - ==== SSA block rewrite pass on 28
2024-07-01 16:52:44,391 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,391 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,391 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:44,392 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,392 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:44,392 - DEBUG - ==== SSA block rewrite pass on 58
2024-07-01 16:52:44,392 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,392 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,392 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:44,392 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,392 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:44,392 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,392 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:44,392 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:44,392 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,393 - DEBUG - first assign: max_value
2024-07-01 16:52:44,393 - DEBUG - replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,393 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:44,393 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,393 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,393 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,393 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:44,393 - DEBUG - ==== SSA block rewrite pass on 188
2024-07-01 16:52:44,393 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,393 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:44,393 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:44,393 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,394 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,394 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:44,394 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:44,394 - DEBUG - on stmt: jump 196
2024-07-01 16:52:44,394 - DEBUG - ==== SSA block rewrite pass on 196
2024-07-01 16:52:44,394 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,394 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:44,394 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:44,394 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:44,394 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:44,394 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:44,394 - DEBUG - ==== SSA block rewrite pass on 198
2024-07-01 16:52:44,394 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,394 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:44,395 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:44,395 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,395 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:44,395 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,395 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,395 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,395 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:44,395 - DEBUG - ==== SSA block rewrite pass on 262
2024-07-01 16:52:44,395 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,395 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:44,395 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:44,395 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:44,395 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,396 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:44,396 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,396 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,396 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,396 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:44,396 - DEBUG - ==== SSA block rewrite pass on 294
2024-07-01 16:52:44,396 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,396 - DEBUG - on stmt: max_value = v
2024-07-01 16:52:44,396 - DEBUG - replaced with: max_value.1 = v
2024-07-01 16:52:44,396 - DEBUG - on stmt: jump 298
2024-07-01 16:52:44,396 - DEBUG - ==== SSA block rewrite pass on 298
2024-07-01 16:52:44,396 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,397 - DEBUG - on stmt: jump 196
2024-07-01 16:52:44,397 - DEBUG - ==== SSA block rewrite pass on 300
2024-07-01 16:52:44,397 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f73310>
2024-07-01 16:52:44,397 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:44,397 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:44,397 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7f1c65e43150>],
             294: [<numba.core.ir.Assign object at 0x7f1c65f7aa90>]})
2024-07-01 16:52:44,397 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,397 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,397 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:44,397 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:44,397 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:44,397 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:44,397 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,398 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,398 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:44,398 - DEBUG - ==== SSA block rewrite pass on 28
2024-07-01 16:52:44,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,398 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,398 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:44,398 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,398 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:44,398 - DEBUG - ==== SSA block rewrite pass on 58
2024-07-01 16:52:44,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,398 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:44,399 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:44,399 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,399 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:44,399 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,399 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:44,399 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:44,399 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,399 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:44,399 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,399 - DEBUG - find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,399 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,400 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,400 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:44,400 - DEBUG - ==== SSA block rewrite pass on 188
2024-07-01 16:52:44,400 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,400 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:44,400 - DEBUG - find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-07-01 16:52:44,400 - DEBUG - find_def_from_top label 188
2024-07-01 16:52:44,400 - DEBUG - idom 58 from label 188
2024-07-01 16:52:44,400 - DEBUG - find_def_from_bottom label 58
2024-07-01 16:52:44,400 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:44,400 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,400 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,401 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:44,401 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:44,401 - DEBUG - on stmt: jump 196
2024-07-01 16:52:44,401 - DEBUG - ==== SSA block rewrite pass on 196
2024-07-01 16:52:44,401 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,401 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:44,401 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:44,401 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:44,401 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:44,401 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:44,401 - DEBUG - ==== SSA block rewrite pass on 198
2024-07-01 16:52:44,401 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,402 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:44,402 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:44,402 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,402 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:44,402 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,402 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,402 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,402 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:44,403 - DEBUG - ==== SSA block rewrite pass on 262
2024-07-01 16:52:44,403 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,403 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:44,403 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:44,403 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:44,403 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,403 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:44,403 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,403 - DEBUG - find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,403 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:44,404 - DEBUG - idom 198 from label 270
2024-07-01 16:52:44,404 - DEBUG - find_def_from_bottom label 198
2024-07-01 16:52:44,404 - DEBUG - find_def_from_top label 198
2024-07-01 16:52:44,404 - DEBUG - idom 196 from label 198
2024-07-01 16:52:44,404 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:44,404 - DEBUG - find_def_from_top label 196
2024-07-01 16:52:44,404 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-07-01 16:52:44,404 - DEBUG - find_def_from_bottom label 192
2024-07-01 16:52:44,404 - DEBUG - find_def_from_top label 192
2024-07-01 16:52:44,405 - DEBUG - idom 58 from label 192
2024-07-01 16:52:44,405 - DEBUG - find_def_from_bottom label 58
2024-07-01 16:52:44,405 - DEBUG - incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,405 - DEBUG - find_def_from_bottom label 298
2024-07-01 16:52:44,405 - DEBUG - find_def_from_top label 298
2024-07-01 16:52:44,405 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-07-01 16:52:44,406 - DEBUG - find_def_from_bottom label 294
2024-07-01 16:52:44,406 - DEBUG - incoming_def max_value.1 = v
2024-07-01 16:52:44,406 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:44,406 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:44,406 - DEBUG - idom 198 from label 270
2024-07-01 16:52:44,407 - DEBUG - find_def_from_bottom label 198
2024-07-01 16:52:44,407 - DEBUG - find_def_from_top label 198
2024-07-01 16:52:44,407 - DEBUG - idom 196 from label 198
2024-07-01 16:52:44,407 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:44,407 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-07-01 16:52:44,407 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-07-01 16:52:44,407 - DEBUG - replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,408 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,408 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,408 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:44,408 - DEBUG - ==== SSA block rewrite pass on 294
2024-07-01 16:52:44,408 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,408 - DEBUG - on stmt: max_value.1 = v
2024-07-01 16:52:44,408 - DEBUG - on stmt: jump 298
2024-07-01 16:52:44,408 - DEBUG - ==== SSA block rewrite pass on 298
2024-07-01 16:52:44,408 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,408 - DEBUG - on stmt: jump 196
2024-07-01 16:52:44,408 - DEBUG - ==== SSA block rewrite pass on 300
2024-07-01 16:52:44,408 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f7a010>
2024-07-01 16:52:44,408 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:44,408 - DEBUG - find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-07-01 16:52:44,409 - DEBUG - find_def_from_top label 300
2024-07-01 16:52:44,409 - DEBUG - idom 196 from label 300
2024-07-01 16:52:44,409 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:44,409 - DEBUG - replaced with: $302return_value.1 = cast(value=max_value.2)
2024-07-01 16:52:44,409 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:44,416 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-07-01 16:52:44,416 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:44,416 - DEBUG - stack: []
2024-07-01 16:52:44,416 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:44,416 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-07-01 16:52:44,416 - DEBUG - stack []
2024-07-01 16:52:44,417 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-07-01 16:52:44,417 - DEBUG - stack []
2024-07-01 16:52:44,417 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-01 16:52:44,417 - DEBUG - stack []
2024-07-01 16:52:44,417 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-01 16:52:44,417 - DEBUG - stack ['$indices4.0']
2024-07-01 16:52:44,417 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-01 16:52:44,417 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-07-01 16:52:44,417 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-07-01 16:52:44,417 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-07-01 16:52:44,417 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-07-01 16:52:44,418 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-07-01 16:52:44,418 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-07-01 16:52:44,418 - DEBUG - stack ['$indices4.0', '$binop_sub20.4']
2024-07-01 16:52:44,418 - DEBUG - dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-07-01 16:52:44,418 - DEBUG - stack ['$24compare_op.5']
2024-07-01 16:52:44,418 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,418 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-07-01 16:52:44,418 - DEBUG - stack: []
2024-07-01 16:52:44,419 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-07-01 16:52:44,419 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-01 16:52:44,419 - DEBUG - stack []
2024-07-01 16:52:44,419 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-01 16:52:44,419 - DEBUG - stack ['$indices32.0']
2024-07-01 16:52:44,419 - DEBUG - dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-01 16:52:44,419 - DEBUG - stack ['$indices32.0', '$a34.1']
2024-07-01 16:52:44,419 - DEBUG - dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-07-01 16:52:44,419 - DEBUG - stack ['$indices32.0', '$36load_attr.2']
2024-07-01 16:52:44,419 - DEBUG - dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-07-01 16:52:44,419 - DEBUG - stack ['$indices32.0', '$46unary_negative.3']
2024-07-01 16:52:44,420 - DEBUG - dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-07-01 16:52:44,420 - DEBUG - stack ['$48compare_op.4']
2024-07-01 16:52:44,420 - DEBUG - end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,420 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:44,420 - DEBUG - stack: []
2024-07-01 16:52:44,420 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-07-01 16:52:44,420 - DEBUG - dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-07-01 16:52:44,420 - DEBUG - stack []
2024-07-01 16:52:44,420 - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-07-01 16:52:44,420 - DEBUG - stack ['$null$56.1', '$56load_global.0']
2024-07-01 16:52:44,421 - DEBUG - dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-07-01 16:52:44,421 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-01 16:52:44,421 - DEBUG - dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-07-01 16:52:44,421 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-01 16:52:44,421 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-07-01 16:52:44,421 - DEBUG - stack ['$74call.3']
2024-07-01 16:52:44,421 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,421 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:44,421 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:44,421 - DEBUG - stack: []
2024-07-01 16:52:44,421 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-07-01 16:52:44,421 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-07-01 16:52:44,422 - DEBUG - stack []
2024-07-01 16:52:44,422 - DEBUG - dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-07-01 16:52:44,422 - DEBUG - stack ['$a86.0']
2024-07-01 16:52:44,422 - DEBUG - dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-07-01 16:52:44,422 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-07-01 16:52:44,422 - DEBUG - dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-07-01 16:52:44,422 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-07-01 16:52:44,422 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-07-01 16:52:44,422 - DEBUG - stack ['$114call.3']
2024-07-01 16:52:44,422 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-07-01 16:52:44,422 - DEBUG - stack ['$114call.3', '$indices124.4']
2024-07-01 16:52:44,422 - DEBUG - dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-07-01 16:52:44,423 - DEBUG - stack ['$126binary_subscr.5']
2024-07-01 16:52:44,423 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,423 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:44,423 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-07-01 16:52:44,423 - DEBUG - defmap: {}
2024-07-01 16:52:44,423 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:44,423 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:44,423 - DEBUG - keep phismap: {}
2024-07-01 16:52:44,423 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:44,423 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:44,424 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-07-01 16:52:44,424 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-07-01 16:52:44,424 - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,424 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,425 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-07-01 16:52:44,431 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:44,432 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e84e90>
2024-07-01 16:52:44,432 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:44,432 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-07-01 16:52:44,432 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:44,432 - DEBUG - on stmt: $const18.3 = const(int, 1)
2024-07-01 16:52:44,432 - DEBUG - on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-07-01 16:52:44,432 - DEBUG - on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-07-01 16:52:44,432 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,432 - DEBUG - on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,432 - DEBUG - on stmt: branch $30pred, 56, 32
2024-07-01 16:52:44,432 - DEBUG - ==== SSA block analysis pass on 32
2024-07-01 16:52:44,432 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e84e90>
2024-07-01 16:52:44,433 - DEBUG - on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:44,433 - DEBUG - on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-07-01 16:52:44,433 - DEBUG - on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-07-01 16:52:44,433 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,433 - DEBUG - on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,434 - DEBUG - on stmt: branch $54pred, 56, 86
2024-07-01 16:52:44,434 - DEBUG - ==== SSA block analysis pass on 56
2024-07-01 16:52:44,434 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e84e90>
2024-07-01 16:52:44,434 - DEBUG - on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-07-01 16:52:44,434 - DEBUG - on stmt: $const68.2 = const(str, Index out of bounds)
2024-07-01 16:52:44,434 - DEBUG - on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,434 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-07-01 16:52:44,434 - DEBUG - ==== SSA block analysis pass on 86
2024-07-01 16:52:44,434 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e84e90>
2024-07-01 16:52:44,435 - DEBUG - on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-07-01 16:52:44,435 - DEBUG - on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,435 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-07-01 16:52:44,435 - DEBUG - on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-07-01 16:52:44,435 - DEBUG - on stmt: return $136return_value.6
2024-07-01 16:52:44,435 - DEBUG - defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x7f1c65e91650>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c65e919d0>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x7f1c65e91c10>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c65e873d0>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x7f1c65e87790>, 0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c65e87d90>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x7f1c65e900d0>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x7f1c65e90310>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f1c65e90790>, 32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f1c65e909d0>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x7f1c65e90d90>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x7f1c65e91410>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c65e86d50>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x7f1c65e87190>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x7f1c65e86fd0>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x7f1c65e90b50>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c65e86650>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x7f1c65e87610>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f1c65e905d0>, 32)],
             'indices': [(<numba.core.ir.Assign object at 0x7f1c65e86750>, 0)]})
2024-07-01 16:52:44,436 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c65e84e90>
2024-07-01 16:52:44,458 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-07-01 16:52:44,458 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:44,458 - DEBUG - stack: []
2024-07-01 16:52:44,459 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:44,459 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-07-01 16:52:44,459 - DEBUG - stack []
2024-07-01 16:52:44,459 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-07-01 16:52:44,459 - DEBUG - stack []
2024-07-01 16:52:44,459 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-01 16:52:44,459 - DEBUG - stack []
2024-07-01 16:52:44,459 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-07-01 16:52:44,459 - DEBUG - stack ['$ary4.0']
2024-07-01 16:52:44,459 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-01 16:52:44,459 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-07-01 16:52:44,459 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-07-01 16:52:44,460 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-07-01 16:52:44,460 - DEBUG - dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-07-01 16:52:44,460 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-01 16:52:44,460 - DEBUG - dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-07-01 16:52:44,460 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-01 16:52:44,460 - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-07-01 16:52:44,460 - DEBUG - stack ['$44call.5']
2024-07-01 16:52:44,460 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,460 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:44,460 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:44,460 - DEBUG - defmap: {}
2024-07-01 16:52:44,460 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:44,461 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:44,461 - DEBUG - keep phismap: {}
2024-07-01 16:52:44,461 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:44,461 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:44,461 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,461 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-07-01 16:52:44,469 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:44,469 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65eaa050>
2024-07-01 16:52:44,469 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-07-01 16:52:44,469 - DEBUG - on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-07-01 16:52:44,469 - DEBUG - on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-07-01 16:52:44,469 - DEBUG - on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,469 - DEBUG - on stmt: $54return_value.6 = cast(value=$44call.5)
2024-07-01 16:52:44,469 - DEBUG - on stmt: return $54return_value.6
2024-07-01 16:52:44,469 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x7f1c65ea8b50>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x7f1c65ea8e50>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x7f1c65ea90d0>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f1c65ea8790>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x7f1c65ea8350>, 0)]})
2024-07-01 16:52:44,470 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c65eaa050>
2024-07-01 16:52:44,652 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2046)
           2	RESUME(arg=0, lineno=2046)
           4	LOAD_CONST(arg=1, lineno=2047)
           6	STORE_FAST(arg=2, lineno=2047)
           8	LOAD_CONST(arg=2, lineno=2048)
          10	STORE_FAST(arg=3, lineno=2048)
          12	LOAD_GLOBAL(arg=1, lineno=2049)
          24	LOAD_FAST(arg=1, lineno=2049)
          26	PRECALL(arg=1, lineno=2049)
          30	CALL(arg=1, lineno=2049)
          40	GET_ITER(arg=None, lineno=2049)
>         42	FOR_ITER(arg=24, lineno=2049)
          44	UNPACK_SEQUENCE(arg=2, lineno=2049)
          48	STORE_FAST(arg=4, lineno=2049)
          50	STORE_FAST(arg=5, lineno=2049)
          52	LOAD_FAST(arg=5, lineno=2050)
          54	LOAD_CONST(arg=1, lineno=2050)
          56	COMPARE_OP(arg=0, lineno=2050)
          62	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=2050)
          64	LOAD_FAST(arg=2, lineno=2051)
          66	LOAD_CONST(arg=2, lineno=2051)
          68	BINARY_OP(arg=13, lineno=2051)
          72	STORE_FAST(arg=2, lineno=2051)
          74	LOAD_FAST(arg=4, lineno=2052)
          76	STORE_FAST(arg=6, lineno=2052)
          78	JUMP_BACKWARD(arg=19, lineno=2052)
>         80	LOAD_FAST(arg=3, lineno=2054)
          82	LOAD_FAST(arg=5, lineno=2054)
          84	BINARY_OP(arg=18, lineno=2054)
          88	STORE_FAST(arg=3, lineno=2054)
          90	JUMP_BACKWARD(arg=25, lineno=2054)
>         92	LOAD_FAST(arg=2, lineno=2056)
          94	LOAD_CONST(arg=1, lineno=2056)
          96	COMPARE_OP(arg=2, lineno=2056)
         102	POP_JUMP_FORWARD_IF_FALSE(arg=23, lineno=2056)
         104	LOAD_FAST(arg=0, lineno=2057)
         106	LOAD_FAST(arg=3, lineno=2057)
         108	COMPARE_OP(arg=3, lineno=2057)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2057)
         116	LOAD_GLOBAL(arg=3, lineno=2058)
         128	LOAD_CONST(arg=3, lineno=2058)
         130	PRECALL(arg=1, lineno=2058)
         134	CALL(arg=1, lineno=2058)
         144	RAISE_VARARGS(arg=1, lineno=2058)
>        146	LOAD_CONST(arg=0, lineno=2057)
         148	RETURN_VALUE(arg=None, lineno=2057)
>        150	LOAD_FAST(arg=2, lineno=2060)
         152	LOAD_CONST(arg=2, lineno=2060)
         154	COMPARE_OP(arg=2, lineno=2060)
         160	POP_JUMP_FORWARD_IF_FALSE(arg=53, lineno=2060)
         162	LOAD_FAST(arg=3, lineno=2062)
         164	LOAD_CONST(arg=1, lineno=2062)
         166	COMPARE_OP(arg=2, lineno=2062)
         172	POP_JUMP_FORWARD_IF_FALSE(arg=9, lineno=2062)
         174	LOAD_CONST(arg=1, lineno=2063)
         176	STORE_FAST(arg=7, lineno=2063)
         178	LOAD_FAST(arg=0, lineno=2064)
         180	LOAD_CONST(arg=1, lineno=2064)
         182	COMPARE_OP(arg=2, lineno=2064)
         188	STORE_FAST(arg=8, lineno=2064)
         190	JUMP_FORWARD(arg=14, lineno=2064)
>        192	LOAD_FAST(arg=0, lineno=2066)
         194	LOAD_FAST(arg=3, lineno=2066)
         196	BINARY_OP(arg=2, lineno=2066)
         200	STORE_FAST(arg=7, lineno=2066)
         202	LOAD_FAST(arg=0, lineno=2067)
         204	LOAD_FAST(arg=3, lineno=2067)
         206	BINARY_OP(arg=6, lineno=2067)
         210	LOAD_CONST(arg=1, lineno=2067)
         212	COMPARE_OP(arg=2, lineno=2067)
         218	STORE_FAST(arg=8, lineno=2067)
>        220	LOAD_FAST(arg=8, lineno=2068)
         222	POP_JUMP_FORWARD_IF_TRUE(arg=15, lineno=2068)
         224	LOAD_GLOBAL(arg=3, lineno=2069)
         236	LOAD_CONST(arg=3, lineno=2069)
         238	PRECALL(arg=1, lineno=2069)
         242	CALL(arg=1, lineno=2069)
         252	RAISE_VARARGS(arg=1, lineno=2069)
>        254	LOAD_FAST(arg=7, lineno=2070)
         256	LOAD_FAST(arg=1, lineno=2070)
         258	LOAD_FAST(arg=6, lineno=2070)
         260	STORE_SUBSCR(arg=None, lineno=2070)
         264	LOAD_CONST(arg=0, lineno=2070)
         266	RETURN_VALUE(arg=None, lineno=2070)
>        268	LOAD_GLOBAL(arg=3, lineno=2073)
         280	LOAD_CONST(arg=4, lineno=2073)
         282	PRECALL(arg=1, lineno=2073)
         286	CALL(arg=1, lineno=2073)
         296	RAISE_VARARGS(arg=1, lineno=2073)
2024-07-01 16:52:44,653 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:44,653 - DEBUG - stack: []
2024-07-01 16:52:44,653 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:44,653 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2046)
2024-07-01 16:52:44,653 - DEBUG - stack []
2024-07-01 16:52:44,653 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2046)
2024-07-01 16:52:44,653 - DEBUG - stack []
2024-07-01 16:52:44,653 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=2047)
2024-07-01 16:52:44,653 - DEBUG - stack []
2024-07-01 16:52:44,653 - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=2, lineno=2047)
2024-07-01 16:52:44,653 - DEBUG - stack ['$const4.0']
2024-07-01 16:52:44,653 - DEBUG - dispatch pc=8, inst=LOAD_CONST(arg=2, lineno=2048)
2024-07-01 16:52:44,654 - DEBUG - stack []
2024-07-01 16:52:44,654 - DEBUG - dispatch pc=10, inst=STORE_FAST(arg=3, lineno=2048)
2024-07-01 16:52:44,654 - DEBUG - stack ['$const8.1']
2024-07-01 16:52:44,654 - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=2049)
2024-07-01 16:52:44,654 - DEBUG - stack []
2024-07-01 16:52:44,654 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=2049)
2024-07-01 16:52:44,654 - DEBUG - stack ['$null$12.3', '$12load_global.2']
2024-07-01 16:52:44,654 - DEBUG - dispatch pc=26, inst=PRECALL(arg=1, lineno=2049)
2024-07-01 16:52:44,654 - DEBUG - stack ['$null$12.3', '$12load_global.2', '$shape24.4']
2024-07-01 16:52:44,654 - DEBUG - dispatch pc=30, inst=CALL(arg=1, lineno=2049)
2024-07-01 16:52:44,654 - DEBUG - stack ['$null$12.3', '$12load_global.2', '$shape24.4']
2024-07-01 16:52:44,654 - DEBUG - dispatch pc=40, inst=GET_ITER(arg=None, lineno=2049)
2024-07-01 16:52:44,655 - DEBUG - stack ['$30call.5']
2024-07-01 16:52:44,655 - DEBUG - end state. edges=[Edge(pc=42, stack=('$40get_iter.6',), blockstack=(), npush=0)]
2024-07-01 16:52:44,655 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=1)])
2024-07-01 16:52:44,655 - DEBUG - stack: ['$phi42.0']
2024-07-01 16:52:44,655 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=1)
2024-07-01 16:52:44,655 - DEBUG - dispatch pc=42, inst=FOR_ITER(arg=24, lineno=2049)
2024-07-01 16:52:44,655 - DEBUG - stack ['$phi42.0']
2024-07-01 16:52:44,655 - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=44, stack=('$phi42.0', '$42for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:44,655 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=44 nstack_initial=2)])
2024-07-01 16:52:44,655 - DEBUG - stack: []
2024-07-01 16:52:44,655 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=0)
2024-07-01 16:52:44,655 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=2056)
2024-07-01 16:52:44,655 - DEBUG - stack []
2024-07-01 16:52:44,656 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=1, lineno=2056)
2024-07-01 16:52:44,656 - DEBUG - stack ['$num_neg_value92.0']
2024-07-01 16:52:44,656 - DEBUG - dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=2056)
2024-07-01 16:52:44,656 - DEBUG - stack ['$num_neg_value92.0', '$const94.1']
2024-07-01 16:52:44,656 - DEBUG - dispatch pc=102, inst=POP_JUMP_FORWARD_IF_FALSE(arg=23, lineno=2056)
2024-07-01 16:52:44,656 - DEBUG - stack ['$96compare_op.2']
2024-07-01 16:52:44,656 - DEBUG - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=150, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,656 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=2), State(pc_initial=104 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
2024-07-01 16:52:44,656 - DEBUG - stack: ['$phi44.0', '$phi44.1']
2024-07-01 16:52:44,656 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=2)
2024-07-01 16:52:44,656 - DEBUG - dispatch pc=44, inst=UNPACK_SEQUENCE(arg=2, lineno=2049)
2024-07-01 16:52:44,656 - DEBUG - stack ['$phi44.0', '$phi44.1']
2024-07-01 16:52:44,656 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=4, lineno=2049)
2024-07-01 16:52:44,657 - DEBUG - stack ['$phi44.0', '$44unpack_sequence.3', '$44unpack_sequence.2']
2024-07-01 16:52:44,657 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=5, lineno=2049)
2024-07-01 16:52:44,657 - DEBUG - stack ['$phi44.0', '$44unpack_sequence.3']
2024-07-01 16:52:44,657 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=2050)
2024-07-01 16:52:44,657 - DEBUG - stack ['$phi44.0']
2024-07-01 16:52:44,657 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=2050)
2024-07-01 16:52:44,657 - DEBUG - stack ['$phi44.0', '$s52.5']
2024-07-01 16:52:44,657 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=0, lineno=2050)
2024-07-01 16:52:44,657 - DEBUG - stack ['$phi44.0', '$s52.5', '$const54.6']
2024-07-01 16:52:44,657 - DEBUG - dispatch pc=62, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=2050)
2024-07-01 16:52:44,657 - DEBUG - stack ['$phi44.0', '$56compare_op.7']
2024-07-01 16:52:44,657 - DEBUG - end state. edges=[Edge(pc=64, stack=('$phi44.0',), blockstack=(), npush=0), Edge(pc=80, stack=('$phi44.0',), blockstack=(), npush=0)]
2024-07-01 16:52:44,658 - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=150 nstack_initial=0), State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1)])
2024-07-01 16:52:44,658 - DEBUG - stack: []
2024-07-01 16:52:44,658 - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=0)
2024-07-01 16:52:44,658 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=2057)
2024-07-01 16:52:44,658 - DEBUG - stack []
2024-07-01 16:52:44,658 - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=2057)
2024-07-01 16:52:44,658 - DEBUG - stack ['$origsize104.0']
2024-07-01 16:52:44,658 - DEBUG - dispatch pc=108, inst=COMPARE_OP(arg=3, lineno=2057)
2024-07-01 16:52:44,658 - DEBUG - stack ['$origsize104.0', '$known_size106.1']
2024-07-01 16:52:44,658 - DEBUG - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2057)
2024-07-01 16:52:44,658 - DEBUG - stack ['$108compare_op.2']
2024-07-01 16:52:44,658 - DEBUG - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,659 - DEBUG - pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2024-07-01 16:52:44,659 - DEBUG - stack: []
2024-07-01 16:52:44,659 - DEBUG - state.pc_initial: State(pc_initial=150 nstack_initial=0)
2024-07-01 16:52:44,659 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=2, lineno=2060)
2024-07-01 16:52:44,659 - DEBUG - stack []
2024-07-01 16:52:44,659 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=2060)
2024-07-01 16:52:44,659 - DEBUG - stack ['$num_neg_value150.0']
2024-07-01 16:52:44,659 - DEBUG - dispatch pc=154, inst=COMPARE_OP(arg=2, lineno=2060)
2024-07-01 16:52:44,659 - DEBUG - stack ['$num_neg_value150.0', '$const152.1']
2024-07-01 16:52:44,659 - DEBUG - dispatch pc=160, inst=POP_JUMP_FORWARD_IF_FALSE(arg=53, lineno=2060)
2024-07-01 16:52:44,659 - DEBUG - stack ['$154compare_op.2']
2024-07-01 16:52:44,660 - DEBUG - end state. edges=[Edge(pc=162, stack=(), blockstack=(), npush=0), Edge(pc=268, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,660 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0)])
2024-07-01 16:52:44,660 - DEBUG - stack: ['$phi64.0']
2024-07-01 16:52:44,660 - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=1)
2024-07-01 16:52:44,660 - DEBUG - dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=2051)
2024-07-01 16:52:44,660 - DEBUG - stack ['$phi64.0']
2024-07-01 16:52:44,660 - DEBUG - dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=2051)
2024-07-01 16:52:44,660 - DEBUG - stack ['$phi64.0', '$num_neg_value64.1']
2024-07-01 16:52:44,660 - DEBUG - dispatch pc=68, inst=BINARY_OP(arg=13, lineno=2051)
2024-07-01 16:52:44,660 - DEBUG - stack ['$phi64.0', '$num_neg_value64.1', '$const66.2']
2024-07-01 16:52:44,660 - DEBUG - dispatch pc=72, inst=STORE_FAST(arg=2, lineno=2051)
2024-07-01 16:52:44,660 - DEBUG - stack ['$phi64.0', '$binop_iadd68.3']
2024-07-01 16:52:44,660 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=2052)
2024-07-01 16:52:44,660 - DEBUG - stack ['$phi64.0']
2024-07-01 16:52:44,661 - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=6, lineno=2052)
2024-07-01 16:52:44,661 - DEBUG - stack ['$phi64.0', '$ax74.4']
2024-07-01 16:52:44,661 - DEBUG - dispatch pc=78, inst=JUMP_BACKWARD(arg=19, lineno=2052)
2024-07-01 16:52:44,661 - DEBUG - stack ['$phi64.0']
2024-07-01 16:52:44,661 - DEBUG - end state. edges=[Edge(pc=42, stack=('$phi64.0',), blockstack=(), npush=0)]
2024-07-01 16:52:44,661 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1)])
2024-07-01 16:52:44,661 - DEBUG - stack: ['$phi80.0']
2024-07-01 16:52:44,661 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2024-07-01 16:52:44,661 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=3, lineno=2054)
2024-07-01 16:52:44,661 - DEBUG - stack ['$phi80.0']
2024-07-01 16:52:44,661 - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=5, lineno=2054)
2024-07-01 16:52:44,661 - DEBUG - stack ['$phi80.0', '$known_size80.1']
2024-07-01 16:52:44,661 - DEBUG - dispatch pc=84, inst=BINARY_OP(arg=18, lineno=2054)
2024-07-01 16:52:44,661 - DEBUG - stack ['$phi80.0', '$known_size80.1', '$s82.2']
2024-07-01 16:52:44,662 - DEBUG - dispatch pc=88, inst=STORE_FAST(arg=3, lineno=2054)
2024-07-01 16:52:44,662 - DEBUG - stack ['$phi80.0', '$binop_imul84.3']
2024-07-01 16:52:44,662 - DEBUG - dispatch pc=90, inst=JUMP_BACKWARD(arg=25, lineno=2054)
2024-07-01 16:52:44,662 - DEBUG - stack ['$phi80.0']
2024-07-01 16:52:44,662 - DEBUG - end state. edges=[Edge(pc=42, stack=('$phi80.0',), blockstack=(), npush=0)]
2024-07-01 16:52:44,662 - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2024-07-01 16:52:44,662 - DEBUG - stack: []
2024-07-01 16:52:44,662 - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2024-07-01 16:52:44,662 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=3, lineno=2058)
2024-07-01 16:52:44,662 - DEBUG - stack []
2024-07-01 16:52:44,662 - DEBUG - dispatch pc=128, inst=LOAD_CONST(arg=3, lineno=2058)
2024-07-01 16:52:44,662 - DEBUG - stack ['$null$116.1', '$116load_global.0']
2024-07-01 16:52:44,663 - DEBUG - dispatch pc=130, inst=PRECALL(arg=1, lineno=2058)
2024-07-01 16:52:44,663 - DEBUG - stack ['$null$116.1', '$116load_global.0', '$const128.2']
2024-07-01 16:52:44,663 - DEBUG - dispatch pc=134, inst=CALL(arg=1, lineno=2058)
2024-07-01 16:52:44,663 - DEBUG - stack ['$null$116.1', '$116load_global.0', '$const128.2']
2024-07-01 16:52:44,663 - DEBUG - dispatch pc=144, inst=RAISE_VARARGS(arg=1, lineno=2058)
2024-07-01 16:52:44,663 - DEBUG - stack ['$134call.3']
2024-07-01 16:52:44,663 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,663 - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2024-07-01 16:52:44,663 - DEBUG - stack: []
2024-07-01 16:52:44,663 - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2024-07-01 16:52:44,663 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=0, lineno=2057)
2024-07-01 16:52:44,663 - DEBUG - stack []
2024-07-01 16:52:44,663 - DEBUG - dispatch pc=148, inst=RETURN_VALUE(arg=None, lineno=2057)
2024-07-01 16:52:44,664 - DEBUG - stack ['$const146.0']
2024-07-01 16:52:44,664 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,664 - DEBUG - pending: deque([State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2024-07-01 16:52:44,664 - DEBUG - stack: []
2024-07-01 16:52:44,664 - DEBUG - state.pc_initial: State(pc_initial=162 nstack_initial=0)
2024-07-01 16:52:44,664 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=3, lineno=2062)
2024-07-01 16:52:44,664 - DEBUG - stack []
2024-07-01 16:52:44,664 - DEBUG - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=2062)
2024-07-01 16:52:44,664 - DEBUG - stack ['$known_size162.0']
2024-07-01 16:52:44,664 - DEBUG - dispatch pc=166, inst=COMPARE_OP(arg=2, lineno=2062)
2024-07-01 16:52:44,664 - DEBUG - stack ['$known_size162.0', '$const164.1']
2024-07-01 16:52:44,664 - DEBUG - dispatch pc=172, inst=POP_JUMP_FORWARD_IF_FALSE(arg=9, lineno=2062)
2024-07-01 16:52:44,665 - DEBUG - stack ['$166compare_op.2']
2024-07-01 16:52:44,665 - DEBUG - end state. edges=[Edge(pc=174, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,665 - DEBUG - pending: deque([State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:44,665 - DEBUG - stack: []
2024-07-01 16:52:44,665 - DEBUG - state.pc_initial: State(pc_initial=268 nstack_initial=0)
2024-07-01 16:52:44,665 - DEBUG - dispatch pc=268, inst=LOAD_GLOBAL(arg=3, lineno=2073)
2024-07-01 16:52:44,665 - DEBUG - stack []
2024-07-01 16:52:44,665 - DEBUG - dispatch pc=280, inst=LOAD_CONST(arg=4, lineno=2073)
2024-07-01 16:52:44,665 - DEBUG - stack ['$null$268.1', '$268load_global.0']
2024-07-01 16:52:44,665 - DEBUG - dispatch pc=282, inst=PRECALL(arg=1, lineno=2073)
2024-07-01 16:52:44,665 - DEBUG - stack ['$null$268.1', '$268load_global.0', '$const280.2']
2024-07-01 16:52:44,666 - DEBUG - dispatch pc=286, inst=CALL(arg=1, lineno=2073)
2024-07-01 16:52:44,666 - DEBUG - stack ['$null$268.1', '$268load_global.0', '$const280.2']
2024-07-01 16:52:44,666 - DEBUG - dispatch pc=296, inst=RAISE_VARARGS(arg=1, lineno=2073)
2024-07-01 16:52:44,666 - DEBUG - stack ['$286call.3']
2024-07-01 16:52:44,666 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,666 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:44,666 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:44,666 - DEBUG - pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:44,666 - DEBUG - stack: []
2024-07-01 16:52:44,666 - DEBUG - state.pc_initial: State(pc_initial=174 nstack_initial=0)
2024-07-01 16:52:44,666 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=1, lineno=2063)
2024-07-01 16:52:44,666 - DEBUG - stack []
2024-07-01 16:52:44,666 - DEBUG - dispatch pc=176, inst=STORE_FAST(arg=7, lineno=2063)
2024-07-01 16:52:44,667 - DEBUG - stack ['$const174.0']
2024-07-01 16:52:44,667 - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=2064)
2024-07-01 16:52:44,667 - DEBUG - stack []
2024-07-01 16:52:44,667 - DEBUG - dispatch pc=180, inst=LOAD_CONST(arg=1, lineno=2064)
2024-07-01 16:52:44,667 - DEBUG - stack ['$origsize178.1']
2024-07-01 16:52:44,667 - DEBUG - dispatch pc=182, inst=COMPARE_OP(arg=2, lineno=2064)
2024-07-01 16:52:44,667 - DEBUG - stack ['$origsize178.1', '$const180.2']
2024-07-01 16:52:44,667 - DEBUG - dispatch pc=188, inst=STORE_FAST(arg=8, lineno=2064)
2024-07-01 16:52:44,667 - DEBUG - stack ['$182compare_op.3']
2024-07-01 16:52:44,667 - DEBUG - dispatch pc=190, inst=JUMP_FORWARD(arg=14, lineno=2064)
2024-07-01 16:52:44,667 - DEBUG - stack []
2024-07-01 16:52:44,667 - DEBUG - end state. edges=[Edge(pc=220, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,668 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
2024-07-01 16:52:44,668 - DEBUG - stack: []
2024-07-01 16:52:44,668 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-01 16:52:44,668 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=0, lineno=2066)
2024-07-01 16:52:44,668 - DEBUG - stack []
2024-07-01 16:52:44,668 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=3, lineno=2066)
2024-07-01 16:52:44,668 - DEBUG - stack ['$origsize192.0']
2024-07-01 16:52:44,668 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=2, lineno=2066)
2024-07-01 16:52:44,668 - DEBUG - stack ['$origsize192.0', '$known_size194.1']
2024-07-01 16:52:44,668 - DEBUG - dispatch pc=200, inst=STORE_FAST(arg=7, lineno=2066)
2024-07-01 16:52:44,668 - DEBUG - stack ['$binop_floordiv196.2']
2024-07-01 16:52:44,668 - DEBUG - dispatch pc=202, inst=LOAD_FAST(arg=0, lineno=2067)
2024-07-01 16:52:44,669 - DEBUG - stack []
2024-07-01 16:52:44,669 - DEBUG - dispatch pc=204, inst=LOAD_FAST(arg=3, lineno=2067)
2024-07-01 16:52:44,669 - DEBUG - stack ['$origsize202.3']
2024-07-01 16:52:44,669 - DEBUG - dispatch pc=206, inst=BINARY_OP(arg=6, lineno=2067)
2024-07-01 16:52:44,669 - DEBUG - stack ['$origsize202.3', '$known_size204.4']
2024-07-01 16:52:44,669 - DEBUG - dispatch pc=210, inst=LOAD_CONST(arg=1, lineno=2067)
2024-07-01 16:52:44,669 - DEBUG - stack ['$binop_mod206.5']
2024-07-01 16:52:44,669 - DEBUG - dispatch pc=212, inst=COMPARE_OP(arg=2, lineno=2067)
2024-07-01 16:52:44,669 - DEBUG - stack ['$binop_mod206.5', '$const210.6']
2024-07-01 16:52:44,669 - DEBUG - dispatch pc=218, inst=STORE_FAST(arg=8, lineno=2067)
2024-07-01 16:52:44,669 - DEBUG - stack ['$212compare_op.7']
2024-07-01 16:52:44,670 - DEBUG - end state. edges=[Edge(pc=220, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,670 - DEBUG - pending: deque([State(pc_initial=220 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
2024-07-01 16:52:44,670 - DEBUG - stack: []
2024-07-01 16:52:44,670 - DEBUG - state.pc_initial: State(pc_initial=220 nstack_initial=0)
2024-07-01 16:52:44,670 - DEBUG - dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=2068)
2024-07-01 16:52:44,670 - DEBUG - stack []
2024-07-01 16:52:44,670 - DEBUG - dispatch pc=222, inst=POP_JUMP_FORWARD_IF_TRUE(arg=15, lineno=2068)
2024-07-01 16:52:44,670 - DEBUG - stack ['$ok220.0']
2024-07-01 16:52:44,670 - DEBUG - end state. edges=[Edge(pc=224, stack=(), blockstack=(), npush=0), Edge(pc=254, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:44,670 - DEBUG - pending: deque([State(pc_initial=220 nstack_initial=0), State(pc_initial=224 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
2024-07-01 16:52:44,670 - DEBUG - pending: deque([State(pc_initial=224 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
2024-07-01 16:52:44,670 - DEBUG - stack: []
2024-07-01 16:52:44,670 - DEBUG - state.pc_initial: State(pc_initial=224 nstack_initial=0)
2024-07-01 16:52:44,670 - DEBUG - dispatch pc=224, inst=LOAD_GLOBAL(arg=3, lineno=2069)
2024-07-01 16:52:44,671 - DEBUG - stack []
2024-07-01 16:52:44,671 - DEBUG - dispatch pc=236, inst=LOAD_CONST(arg=3, lineno=2069)
2024-07-01 16:52:44,671 - DEBUG - stack ['$null$224.1', '$224load_global.0']
2024-07-01 16:52:44,671 - DEBUG - dispatch pc=238, inst=PRECALL(arg=1, lineno=2069)
2024-07-01 16:52:44,671 - DEBUG - stack ['$null$224.1', '$224load_global.0', '$const236.2']
2024-07-01 16:52:44,671 - DEBUG - dispatch pc=242, inst=CALL(arg=1, lineno=2069)
2024-07-01 16:52:44,671 - DEBUG - stack ['$null$224.1', '$224load_global.0', '$const236.2']
2024-07-01 16:52:44,671 - DEBUG - dispatch pc=252, inst=RAISE_VARARGS(arg=1, lineno=2069)
2024-07-01 16:52:44,671 - DEBUG - stack ['$242call.3']
2024-07-01 16:52:44,671 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,671 - DEBUG - pending: deque([State(pc_initial=254 nstack_initial=0)])
2024-07-01 16:52:44,671 - DEBUG - stack: []
2024-07-01 16:52:44,671 - DEBUG - state.pc_initial: State(pc_initial=254 nstack_initial=0)
2024-07-01 16:52:44,672 - DEBUG - dispatch pc=254, inst=LOAD_FAST(arg=7, lineno=2070)
2024-07-01 16:52:44,672 - DEBUG - stack []
2024-07-01 16:52:44,672 - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=1, lineno=2070)
2024-07-01 16:52:44,672 - DEBUG - stack ['$inferred254.0']
2024-07-01 16:52:44,672 - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=6, lineno=2070)
2024-07-01 16:52:44,672 - DEBUG - stack ['$inferred254.0', '$shape256.1']
2024-07-01 16:52:44,672 - DEBUG - dispatch pc=260, inst=STORE_SUBSCR(arg=None, lineno=2070)
2024-07-01 16:52:44,672 - DEBUG - stack ['$inferred254.0', '$shape256.1', '$neg_ax258.2']
2024-07-01 16:52:44,672 - DEBUG - dispatch pc=264, inst=LOAD_CONST(arg=0, lineno=2070)
2024-07-01 16:52:44,672 - DEBUG - stack []
2024-07-01 16:52:44,672 - DEBUG - dispatch pc=266, inst=RETURN_VALUE(arg=None, lineno=2070)
2024-07-01 16:52:44,672 - DEBUG - stack ['$const264.3']
2024-07-01 16:52:44,672 - DEBUG - end state. edges=[]
2024-07-01 16:52:44,673 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:44,673 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=1): {'$phi42.0'},
             State(pc_initial=44 nstack_initial=2): {'$phi44.1'},
             State(pc_initial=64 nstack_initial=1): set(),
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=162 nstack_initial=0): set(),
             State(pc_initial=174 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=220 nstack_initial=0): set(),
             State(pc_initial=224 nstack_initial=0): set(),
             State(pc_initial=254 nstack_initial=0): set(),
             State(pc_initial=268 nstack_initial=0): set()})
2024-07-01 16:52:44,674 - DEBUG - defmap: {'$phi42.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.1': State(pc_initial=42 nstack_initial=1)}
2024-07-01 16:52:44,674 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi44.0': {('$phi42.0', State(pc_initial=42 nstack_initial=1))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi80.0': {('$phi44.0', State(pc_initial=44 nstack_initial=2))}})
2024-07-01 16:52:44,675 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2024-07-01 16:52:44,675 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2024-07-01 16:52:44,676 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2024-07-01 16:52:44,677 - DEBUG - keep phismap: {'$phi42.0': {('$40get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi44.1': {('$42for_iter.2', State(pc_initial=42 nstack_initial=1))}}
2024-07-01 16:52:44,677 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi42.0': '$40get_iter.6'},
             State(pc_initial=42 nstack_initial=1): {'$phi44.1': '$42for_iter.2'}})
2024-07-01 16:52:44,677 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:44,677 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'value': '$const4.0'}), (8, {'res': '$const8.1'}), (10, {'value': '$const8.1'}), (12, {'idx': 0, 'res': '$12load_global.2'}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {'res': '$shape24.4'}), (26, {}), (28, {}), (30, {'func': '$12load_global.2', 'args': ['$shape24.4'], 'kw_names': None, 'res': '$30call.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'value': '$30call.5', 'res': '$40get_iter.6'})), outgoing_phis={'$phi42.0': '$40get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$40get_iter.6',)})
2024-07-01 16:52:44,677 - DEBUG - block_infos State(pc_initial=42 nstack_initial=1):
AdaptBlockInfo(insts=((42, {'iterator': '$phi42.0', 'pair': '$42for_iter.1', 'indval': '$42for_iter.2', 'pred': '$42for_iter.3'}),), outgoing_phis={'$phi44.1': '$42for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 44: ('$phi42.0', '$42for_iter.2')})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=44 nstack_initial=2):
AdaptBlockInfo(insts=((44, {'iterable': '$phi44.1', 'stores': ['$44unpack_sequence.2', '$44unpack_sequence.3'], 'tupleobj': '$44unpack_sequence.4'}), (46, {}), (48, {'value': '$44unpack_sequence.2'}), (50, {'value': '$44unpack_sequence.3'}), (52, {'res': '$s52.5'}), (54, {'res': '$const54.6'}), (56, {'lhs': '$s52.5', 'rhs': '$const54.6', 'res': '$56compare_op.7'}), (58, {}), (60, {}), (62, {'pred': '$56compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi44.0',), 80: ('$phi44.0',)})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'res': '$num_neg_value64.1'}), (66, {'res': '$const66.2'}), (68, {'op': '+=', 'lhs': '$num_neg_value64.1', 'rhs': '$const66.2', 'res': '$binop_iadd68.3'}), (70, {}), (72, {'value': '$binop_iadd68.3'}), (74, {'res': '$ax74.4'}), (76, {'value': '$ax74.4'}), (78, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi64.0',)})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$known_size80.1'}), (82, {'res': '$s82.2'}), (84, {'op': '*=', 'lhs': '$known_size80.1', 'rhs': '$s82.2', 'res': '$binop_imul84.3'}), (86, {}), (88, {'value': '$binop_imul84.3'}), (90, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi80.0',)})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$num_neg_value92.0'}), (94, {'res': '$const94.1'}), (96, {'lhs': '$num_neg_value92.0', 'rhs': '$const94.1', 'res': '$96compare_op.2'}), (98, {}), (100, {}), (102, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 150: ()})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$origsize104.0'}), (106, {'res': '$known_size106.1'}), (108, {'lhs': '$origsize104.0', 'rhs': '$known_size106.1', 'res': '$108compare_op.2'}), (110, {}), (112, {}), (114, {'pred': '$108compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 146: ()})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 1, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'res': '$const128.2'}), (130, {}), (132, {}), (134, {'func': '$116load_global.0', 'args': ['$const128.2'], 'kw_names': None, 'res': '$134call.3'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'exc': '$134call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$const146.0'}), (148, {'retval': '$const146.0', 'castval': '$148return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$num_neg_value150.0'}), (152, {'res': '$const152.1'}), (154, {'lhs': '$num_neg_value150.0', 'rhs': '$const152.1', 'res': '$154compare_op.2'}), (156, {}), (158, {}), (160, {'pred': '$154compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: (), 268: ()})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=162 nstack_initial=0):
AdaptBlockInfo(insts=((162, {'res': '$known_size162.0'}), (164, {'res': '$const164.1'}), (166, {'lhs': '$known_size162.0', 'rhs': '$const164.1', 'res': '$166compare_op.2'}), (168, {}), (170, {}), (172, {'pred': '$166compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: (), 192: ()})
2024-07-01 16:52:44,678 - DEBUG - block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=((174, {'res': '$const174.0'}), (176, {'value': '$const174.0'}), (178, {'res': '$origsize178.1'}), (180, {'res': '$const180.2'}), (182, {'lhs': '$origsize178.1', 'rhs': '$const180.2', 'res': '$182compare_op.3'}), (184, {}), (186, {}), (188, {'value': '$182compare_op.3'}), (190, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={220: ()})
2024-07-01 16:52:44,679 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$origsize192.0'}), (194, {'res': '$known_size194.1'}), (196, {'op': '//', 'lhs': '$origsize192.0', 'rhs': '$known_size194.1', 'res': '$binop_floordiv196.2'}), (198, {}), (200, {'value': '$binop_floordiv196.2'}), (202, {'res': '$origsize202.3'}), (204, {'res': '$known_size204.4'}), (206, {'op': '%', 'lhs': '$origsize202.3', 'rhs': '$known_size204.4', 'res': '$binop_mod206.5'}), (208, {}), (210, {'res': '$const210.6'}), (212, {'lhs': '$binop_mod206.5', 'rhs': '$const210.6', 'res': '$212compare_op.7'}), (214, {}), (216, {}), (218, {'value': '$212compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={220: ()})
2024-07-01 16:52:44,679 - DEBUG - block_infos State(pc_initial=220 nstack_initial=0):
AdaptBlockInfo(insts=((220, {'res': '$ok220.0'}), (222, {'pred': '$ok220.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: (), 254: ()})
2024-07-01 16:52:44,679 - DEBUG - block_infos State(pc_initial=224 nstack_initial=0):
AdaptBlockInfo(insts=((224, {'idx': 1, 'res': '$224load_global.0'}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'res': '$const236.2'}), (238, {}), (240, {}), (242, {'func': '$224load_global.0', 'args': ['$const236.2'], 'kw_names': None, 'res': '$242call.3'}), (244, {}), (246, {}), (248, {}), (250, {}), (252, {'exc': '$242call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,679 - DEBUG - block_infos State(pc_initial=254 nstack_initial=0):
AdaptBlockInfo(insts=((254, {'res': '$inferred254.0'}), (256, {'res': '$shape256.1'}), (258, {'res': '$neg_ax258.2'}), (260, {'target': '$shape256.1', 'index': '$neg_ax258.2', 'value': '$inferred254.0'}), (262, {}), (264, {'res': '$const264.3'}), (266, {'retval': '$const264.3', 'castval': '$266return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,679 - DEBUG - block_infos State(pc_initial=268 nstack_initial=0):
AdaptBlockInfo(insts=((268, {'idx': 1, 'res': '$268load_global.0'}), (270, {}), (272, {}), (274, {}), (276, {}), (278, {}), (280, {'res': '$const280.2'}), (282, {}), (284, {}), (286, {'func': '$268load_global.0', 'args': ['$const280.2'], 'kw_names': None, 'res': '$286call.3'}), (288, {}), (290, {}), (292, {}), (294, {}), (296, {'exc': '$286call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:44,681 - DEBUG - label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $12load_global.2 = global(enumerate: <class 'enumerate'>) ['$12load_global.2']
    $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.2', '$30call.5', 'shape']
    $40get_iter.6 = getiter(value=$30call.5) ['$30call.5', '$40get_iter.6']
    $phi42.0 = $40get_iter.6                 ['$40get_iter.6', '$phi42.0']
    jump 42                                  []
label 42:
    $42for_iter.1 = iternext(value=$phi42.0) ['$42for_iter.1', '$phi42.0']
    $42for_iter.2 = pair_first(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.2']
    $42for_iter.3 = pair_second(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.3']
    $phi44.1 = $42for_iter.2                 ['$42for_iter.2', '$phi44.1']
    branch $42for_iter.3, 44, 92             ['$42for_iter.3']
label 44:
    $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2) ['$44unpack_sequence.4', '$phi44.1']
    $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$44unpack_sequence.2', '$44unpack_sequence.4']
    $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$44unpack_sequence.3', '$44unpack_sequence.4']
    ax = $44unpack_sequence.2                ['$44unpack_sequence.2', 'ax']
    s = $44unpack_sequence.3                 ['$44unpack_sequence.3', 's']
    $const54.6 = const(int, 0)               ['$const54.6']
    $56compare_op.7 = s < $const54.6         ['$56compare_op.7', '$const54.6', 's']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.7', '$62pred', 'bool62']
    branch $62pred, 64, 80                   ['$62pred']
label 64:
    $const66.2 = const(int, 1)               ['$const66.2']
    $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd68.3', '$const66.2', 'num_neg_value']
    num_neg_value = $binop_iadd68.3          ['$binop_iadd68.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 42                                  []
label 80:
    $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul84.3', 'known_size', 's']
    known_size = $binop_imul84.3             ['$binop_imul84.3', 'known_size']
    jump 42                                  []
label 92:
    $const94.1 = const(int, 0)               ['$const94.1']
    $96compare_op.2 = num_neg_value == $const94.1 ['$96compare_op.2', '$const94.1', 'num_neg_value']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None) ['$102pred', '$96compare_op.2', 'bool102']
    branch $102pred, 104, 150                ['$102pred']
label 104:
    $108compare_op.2 = origsize != known_size ['$108compare_op.2', 'known_size', 'origsize']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None) ['$108compare_op.2', '$114pred', 'bool114']
    branch $114pred, 116, 146                ['$114pred']
label 116:
    $116load_global.0 = global(ValueError: <class 'ValueError'>) ['$116load_global.0']
    $const128.2 = const(str, total size of new array must be unchanged) ['$const128.2']
    $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.0', '$134call.3', '$const128.2']
    raise $134call.3                         ['$134call.3']
label 146:
    $const146.0 = const(NoneType, None)      ['$const146.0']
    $148return_value.1 = cast(value=$const146.0) ['$148return_value.1', '$const146.0']
    return $148return_value.1                ['$148return_value.1']
label 150:
    $const152.1 = const(int, 1)              ['$const152.1']
    $154compare_op.2 = num_neg_value == $const152.1 ['$154compare_op.2', '$const152.1', 'num_neg_value']
    bool160 = global(bool: <class 'bool'>)   ['bool160']
    $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None) ['$154compare_op.2', '$160pred', 'bool160']
    branch $160pred, 162, 268                ['$160pred']
label 162:
    $const164.1 = const(int, 0)              ['$const164.1']
    $166compare_op.2 = known_size == $const164.1 ['$166compare_op.2', '$const164.1', 'known_size']
    bool172 = global(bool: <class 'bool'>)   ['bool172']
    $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None) ['$166compare_op.2', '$172pred', 'bool172']
    branch $172pred, 174, 192                ['$172pred']
label 174:
    inferred = const(int, 0)                 ['inferred']
    $const180.2 = const(int, 0)              ['$const180.2']
    ok = origsize == $const180.2             ['$const180.2', 'ok', 'origsize']
    jump 220                                 []
label 192:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $binop_mod206.5 = origsize % known_size  ['$binop_mod206.5', 'known_size', 'origsize']
    $const210.6 = const(int, 0)              ['$const210.6']
    ok = $binop_mod206.5 == $const210.6      ['$binop_mod206.5', '$const210.6', 'ok']
    jump 220                                 []
label 220:
    bool222 = global(bool: <class 'bool'>)   ['bool222']
    $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None) ['$222pred', 'bool222', 'ok']
    branch $222pred, 254, 224                ['$222pred']
label 224:
    $224load_global.0 = global(ValueError: <class 'ValueError'>) ['$224load_global.0']
    $const236.2 = const(str, total size of new array must be unchanged) ['$const236.2']
    $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None) ['$224load_global.0', '$242call.3', '$const236.2']
    raise $242call.3                         ['$242call.3']
label 254:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    $const264.3 = const(NoneType, None)      ['$const264.3']
    $266return_value.4 = cast(value=$const264.3) ['$266return_value.4', '$const264.3']
    return $266return_value.4                ['$266return_value.4']
label 268:
    $268load_global.0 = global(ValueError: <class 'ValueError'>) ['$268load_global.0']
    $const280.2 = const(str, multiple negative shape values) ['$const280.2']
    $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_global.0', '$286call.3', '$const280.2']
    raise $286call.3                         ['$286call.3']

2024-07-01 16:52:44,694 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:44,694 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,694 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,694 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,694 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,694 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,694 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,695 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,695 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,695 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,695 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,695 - DEBUG - ==== SSA block analysis pass on 42
2024-07-01 16:52:44,695 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,695 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,695 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,695 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,695 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,695 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,695 - DEBUG - ==== SSA block analysis pass on 44
2024-07-01 16:52:44,695 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,695 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,696 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,696 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,696 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,696 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,696 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,696 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,696 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,696 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,696 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,696 - DEBUG - ==== SSA block analysis pass on 64
2024-07-01 16:52:44,696 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,696 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,697 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,697 - DEBUG - on stmt: num_neg_value = $binop_iadd68.3
2024-07-01 16:52:44,697 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,697 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,697 - DEBUG - ==== SSA block analysis pass on 80
2024-07-01 16:52:44,697 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,697 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,697 - DEBUG - on stmt: known_size = $binop_imul84.3
2024-07-01 16:52:44,697 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,697 - DEBUG - ==== SSA block analysis pass on 92
2024-07-01 16:52:44,697 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,697 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,697 - DEBUG - on stmt: $96compare_op.2 = num_neg_value == $const94.1
2024-07-01 16:52:44,698 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,698 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,698 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,698 - DEBUG - ==== SSA block analysis pass on 104
2024-07-01 16:52:44,698 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,698 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-07-01 16:52:44,698 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,698 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,698 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,698 - DEBUG - ==== SSA block analysis pass on 116
2024-07-01 16:52:44,698 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,698 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,698 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,698 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,699 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,699 - DEBUG - ==== SSA block analysis pass on 146
2024-07-01 16:52:44,699 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,699 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,699 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,699 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,699 - DEBUG - ==== SSA block analysis pass on 150
2024-07-01 16:52:44,699 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,699 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,699 - DEBUG - on stmt: $154compare_op.2 = num_neg_value == $const152.1
2024-07-01 16:52:44,699 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,699 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,699 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,700 - DEBUG - ==== SSA block analysis pass on 162
2024-07-01 16:52:44,700 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,700 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,700 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-01 16:52:44,700 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,700 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,700 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,700 - DEBUG - ==== SSA block analysis pass on 174
2024-07-01 16:52:44,700 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,700 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,700 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,700 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,701 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,701 - DEBUG - ==== SSA block analysis pass on 192
2024-07-01 16:52:44,701 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,701 - DEBUG - on stmt: inferred = origsize // known_size
2024-07-01 16:52:44,701 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-07-01 16:52:44,701 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,701 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,701 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,701 - DEBUG - ==== SSA block analysis pass on 220
2024-07-01 16:52:44,701 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,701 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,702 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,702 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,702 - DEBUG - ==== SSA block analysis pass on 224
2024-07-01 16:52:44,702 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,702 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,702 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,702 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,702 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,702 - DEBUG - ==== SSA block analysis pass on 254
2024-07-01 16:52:44,702 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,702 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-07-01 16:52:44,702 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,703 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,703 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,703 - DEBUG - ==== SSA block analysis pass on 268
2024-07-01 16:52:44,703 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,703 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,703 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,703 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,703 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,703 - DEBUG - ==== SSA block analysis pass on 269
2024-07-01 16:52:44,703 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66014490>
2024-07-01 16:52:44,703 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,707 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102pred': [(<numba.core.ir.Assign object at 0x7f1c66023950>,
                           92)],
             '$108compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c66023990>,
                                   104)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f1c66022610>,
                           104)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x7f1c66022750>,
                                    116)],
             '$12load_global.2': [(<numba.core.ir.Assign object at 0x7f1c65e4b0d0>,
                                   0)],
             '$134call.3': [(<numba.core.ir.Assign object at 0x7f1c66022390>,
                             116)],
             '$148return_value.1': [(<numba.core.ir.Assign object at 0x7f1c660218d0>,
                                     146)],
             '$154compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c66020750>,
                                   150)],
             '$160pred': [(<numba.core.ir.Assign object at 0x7f1c66021ad0>,
                           150)],
             '$166compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c660214d0>,
                                   162)],
             '$172pred': [(<numba.core.ir.Assign object at 0x7f1c66022d50>,
                           162)],
             '$222pred': [(<numba.core.ir.Assign object at 0x7f1c65e40a10>,
                           220)],
             '$224load_global.0': [(<numba.core.ir.Assign object at 0x7f1c65e40890>,
                                    224)],
             '$242call.3': [(<numba.core.ir.Assign object at 0x7f1c65e419d0>,
                             224)],
             '$266return_value.4': [(<numba.core.ir.Assign object at 0x7f1c65e42a50>,
                                     254)],
             '$268load_global.0': [(<numba.core.ir.Assign object at 0x7f1c65e42490>,
                                    268)],
             '$286call.3': [(<numba.core.ir.Assign object at 0x7f1c65e40050>,
                             268)],
             '$30call.5': [(<numba.core.ir.Assign object at 0x7f1c65e4b910>,
                            0)],
             '$40get_iter.6': [(<numba.core.ir.Assign object at 0x7f1c65e49890>,
                                0)],
             '$42for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c65e4b850>,
                                42)],
             '$42for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c65e4a750>,
                                42)],
             '$42for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c65e4ac50>,
                                42)],
             '$44unpack_sequence.2': [(<numba.core.ir.Assign object at 0x7f1c65e4a2d0>,
                                       44)],
             '$44unpack_sequence.3': [(<numba.core.ir.Assign object at 0x7f1c65e4a110>,
                                       44)],
             '$44unpack_sequence.4': [(<numba.core.ir.Assign object at 0x7f1c65e4aa50>,
                                       44)],
             '$56compare_op.7': [(<numba.core.ir.Assign object at 0x7f1c65e49950>,
                                  44)],
             '$62pred': [(<numba.core.ir.Assign object at 0x7f1c65e496d0>, 44)],
             '$96compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c66020610>,
                                  92)],
             '$binop_iadd68.3': [(<numba.core.ir.Assign object at 0x7f1c65e4a8d0>,
                                  64)],
             '$binop_imul84.3': [(<numba.core.ir.Assign object at 0x7f1c65e48390>,
                                  80)],
             '$binop_mod206.5': [(<numba.core.ir.Assign object at 0x7f1c65e41210>,
                                  192)],
             '$const128.2': [(<numba.core.ir.Assign object at 0x7f1c66022710>,
                              116)],
             '$const146.0': [(<numba.core.ir.Assign object at 0x7f1c660220d0>,
                              146)],
             '$const152.1': [(<numba.core.ir.Assign object at 0x7f1c66020e90>,
                              150)],
             '$const164.1': [(<numba.core.ir.Assign object at 0x7f1c66020d90>,
                              162)],
             '$const180.2': [(<numba.core.ir.Assign object at 0x7f1c66023b50>,
                              174)],
             '$const210.6': [(<numba.core.ir.Assign object at 0x7f1c65e41150>,
                              192)],
             '$const236.2': [(<numba.core.ir.Assign object at 0x7f1c65e407d0>,
                              224)],
             '$const264.3': [(<numba.core.ir.Assign object at 0x7f1c65e40250>,
                              254)],
             '$const280.2': [(<numba.core.ir.Assign object at 0x7f1c65e42210>,
                              268)],
             '$const54.6': [(<numba.core.ir.Assign object at 0x7f1c65e49d50>,
                             44)],
             '$const66.2': [(<numba.core.ir.Assign object at 0x7f1c65e49190>,
                             64)],
             '$const94.1': [(<numba.core.ir.Assign object at 0x7f1c660203d0>,
                             92)],
             '$phi42.0': [(<numba.core.ir.Assign object at 0x7f1c65e55f50>, 0)],
             '$phi44.1': [(<numba.core.ir.Assign object at 0x7f1c65e4ad50>,
                           42)],
             'ax': [(<numba.core.ir.Assign object at 0x7f1c65e49e10>, 44)],
             'bool102': [(<numba.core.ir.Assign object at 0x7f1c66020b10>, 92)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f1c66020a50>,
                          104)],
             'bool160': [(<numba.core.ir.Assign object at 0x7f1c66021e90>,
                          150)],
             'bool172': [(<numba.core.ir.Assign object at 0x7f1c66022f50>,
                          162)],
             'bool222': [(<numba.core.ir.Assign object at 0x7f1c65e40190>,
                          220)],
             'bool62': [(<numba.core.ir.Assign object at 0x7f1c65e49750>, 44)],
             'inferred': [(<numba.core.ir.Assign object at 0x7f1c66022c50>,
                           174),
                          (<numba.core.ir.Assign object at 0x7f1c65e42750>,
                           192)],
             'known_size': [(<numba.core.ir.Assign object at 0x7f1c65e557d0>,
                             0),
                            (<numba.core.ir.Assign object at 0x7f1c65e48510>,
                             80)],
             'neg_ax': [(<numba.core.ir.Assign object at 0x7f1c65e48950>, 64)],
             'num_neg_value': [(<numba.core.ir.Assign object at 0x7f1c65e55150>,
                                0),
                               (<numba.core.ir.Assign object at 0x7f1c65e4a950>,
                                64)],
             'ok': [(<numba.core.ir.Assign object at 0x7f1c66020d50>, 174),
                    (<numba.core.ir.Assign object at 0x7f1c65e40d50>, 192)],
             'origsize': [(<numba.core.ir.Assign object at 0x7f1c66120110>, 0)],
             's': [(<numba.core.ir.Assign object at 0x7f1c65e49c10>, 44)],
             'shape': [(<numba.core.ir.Assign object at 0x7f1c65e54ad0>, 0)]})
2024-07-01 16:52:44,707 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66014490>
2024-07-01 16:52:44,708 - DEBUG - Fix SSA violator on var num_neg_value
2024-07-01 16:52:44,708 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,708 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,708 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,708 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,708 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,708 - DEBUG - first assign: num_neg_value
2024-07-01 16:52:44,708 - DEBUG - replaced with: num_neg_value = const(int, 0)
2024-07-01 16:52:44,708 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,708 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,708 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,708 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,709 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,709 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,709 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,709 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,709 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,709 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,709 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,709 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,709 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,709 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,709 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,709 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,709 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,709 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,710 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,710 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,710 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,710 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,710 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,710 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,710 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,710 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,710 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,710 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,710 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,710 - DEBUG - on stmt: num_neg_value = $binop_iadd68.3
2024-07-01 16:52:44,710 - DEBUG - replaced with: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,710 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,711 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,711 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,711 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,711 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,711 - DEBUG - on stmt: known_size = $binop_imul84.3
2024-07-01 16:52:44,711 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,711 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,711 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,711 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,711 - DEBUG - on stmt: $96compare_op.2 = num_neg_value == $const94.1
2024-07-01 16:52:44,711 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,711 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,711 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,712 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,712 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,712 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-07-01 16:52:44,712 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,712 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,712 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,712 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,712 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,712 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,712 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,712 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,712 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,712 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,712 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,713 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,713 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,713 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,713 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,713 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,713 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,713 - DEBUG - on stmt: $154compare_op.2 = num_neg_value == $const152.1
2024-07-01 16:52:44,713 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,713 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,713 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,713 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,713 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,713 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,713 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-01 16:52:44,714 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,714 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,714 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,714 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,714 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,714 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,714 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,714 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,714 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,714 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,714 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,714 - DEBUG - on stmt: inferred = origsize // known_size
2024-07-01 16:52:44,714 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-07-01 16:52:44,715 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,715 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,715 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,715 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,715 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,715 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,715 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,715 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,715 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,715 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,715 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,715 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,715 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,715 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,716 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,716 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,716 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-07-01 16:52:44,716 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,716 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,716 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,716 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,716 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,716 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,716 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,716 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,716 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,716 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,716 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602ee90>
2024-07-01 16:52:44,716 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,717 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c6602f150>],
             64: [<numba.core.ir.Assign object at 0x7f1c66037c10>]})
2024-07-01 16:52:44,717 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,717 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,717 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,717 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,717 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,717 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,717 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,717 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,717 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,717 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,717 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,718 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,718 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,718 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,718 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,718 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,718 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,718 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,718 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,718 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,718 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,718 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,718 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,718 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,719 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,719 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,719 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,719 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,719 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,719 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,719 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,719 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,719 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,719 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,719 - DEBUG - find_def var='num_neg_value' stmt=$binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,719 - DEBUG - find_def_from_top label 64
2024-07-01 16:52:44,720 - DEBUG - idom 44 from label 64
2024-07-01 16:52:44,720 - DEBUG - find_def_from_bottom label 44
2024-07-01 16:52:44,720 - DEBUG - find_def_from_top label 44
2024-07-01 16:52:44,720 - DEBUG - idom 42 from label 44
2024-07-01 16:52:44,720 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,720 - DEBUG - find_def_from_top label 42
2024-07-01 16:52:44,720 - DEBUG - insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 42
2024-07-01 16:52:44,720 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:44,720 - DEBUG - incoming_def num_neg_value = const(int, 0)
2024-07-01 16:52:44,720 - DEBUG - find_def_from_bottom label 269
2024-07-01 16:52:44,720 - DEBUG - find_def_from_top label 269
2024-07-01 16:52:44,721 - DEBUG - insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 269
2024-07-01 16:52:44,721 - DEBUG - find_def_from_bottom label 64
2024-07-01 16:52:44,721 - DEBUG - incoming_def num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,721 - DEBUG - find_def_from_bottom label 80
2024-07-01 16:52:44,721 - DEBUG - find_def_from_top label 80
2024-07-01 16:52:44,721 - DEBUG - idom 44 from label 80
2024-07-01 16:52:44,722 - DEBUG - find_def_from_bottom label 44
2024-07-01 16:52:44,722 - DEBUG - find_def_from_top label 44
2024-07-01 16:52:44,722 - DEBUG - idom 42 from label 44
2024-07-01 16:52:44,722 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,722 - DEBUG - incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047)], incoming_blocks=[0])
2024-07-01 16:52:44,722 - DEBUG - incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,722 - DEBUG - replaced with: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,722 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,722 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,722 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,722 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,723 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,723 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,723 - DEBUG - on stmt: known_size = $binop_imul84.3
2024-07-01 16:52:44,723 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,723 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,723 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,723 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,723 - DEBUG - on stmt: $96compare_op.2 = num_neg_value == $const94.1
2024-07-01 16:52:44,723 - DEBUG - find_def var='num_neg_value' stmt=$96compare_op.2 = num_neg_value == $const94.1
2024-07-01 16:52:44,723 - DEBUG - find_def_from_top label 92
2024-07-01 16:52:44,723 - DEBUG - idom 42 from label 92
2024-07-01 16:52:44,723 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,723 - DEBUG - replaced with: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-01 16:52:44,724 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,724 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,724 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,724 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,724 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,724 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-07-01 16:52:44,724 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,724 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,724 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,724 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,724 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,724 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,724 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,724 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,725 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,725 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,725 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,725 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,725 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,725 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,725 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,725 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,725 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,725 - DEBUG - on stmt: $154compare_op.2 = num_neg_value == $const152.1
2024-07-01 16:52:44,725 - DEBUG - find_def var='num_neg_value' stmt=$154compare_op.2 = num_neg_value == $const152.1
2024-07-01 16:52:44,725 - DEBUG - find_def_from_top label 150
2024-07-01 16:52:44,726 - DEBUG - idom 92 from label 150
2024-07-01 16:52:44,726 - DEBUG - find_def_from_bottom label 92
2024-07-01 16:52:44,726 - DEBUG - find_def_from_top label 92
2024-07-01 16:52:44,726 - DEBUG - idom 42 from label 92
2024-07-01 16:52:44,726 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,726 - DEBUG - replaced with: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-01 16:52:44,726 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,726 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,726 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,726 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,726 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,726 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,726 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-01 16:52:44,727 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,727 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,727 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,727 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,727 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,727 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,727 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,727 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,727 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,727 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,727 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,727 - DEBUG - on stmt: inferred = origsize // known_size
2024-07-01 16:52:44,727 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-07-01 16:52:44,727 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,728 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,728 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,728 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,728 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,728 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,728 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,728 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,728 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,728 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,728 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,728 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,728 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,728 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,729 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,729 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,729 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-07-01 16:52:44,729 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,729 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,729 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,729 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,729 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,729 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,729 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,729 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,729 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,730 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,730 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035450>
2024-07-01 16:52:44,730 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,730 - DEBUG - Fix SSA violator on var known_size
2024-07-01 16:52:44,730 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,730 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,730 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,730 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,730 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,730 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,730 - DEBUG - first assign: known_size
2024-07-01 16:52:44,730 - DEBUG - replaced with: known_size = const(int, 1)
2024-07-01 16:52:44,730 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,731 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,731 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,731 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,731 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,731 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,731 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,731 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,731 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,731 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,731 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,731 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,731 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,732 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,732 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,732 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,732 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,732 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,732 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,732 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,732 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,732 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,732 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,732 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,732 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,732 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,732 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,733 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,733 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,733 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,733 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,733 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,733 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,733 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,733 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,733 - DEBUG - on stmt: known_size = $binop_imul84.3
2024-07-01 16:52:44,733 - DEBUG - replaced with: known_size.1 = $binop_imul84.3
2024-07-01 16:52:44,733 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,733 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,733 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,733 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,733 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-01 16:52:44,734 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,734 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,734 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,734 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,734 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,734 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-07-01 16:52:44,734 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,734 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,734 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,734 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,734 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,734 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,734 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,735 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,735 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,735 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,735 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,735 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,735 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,735 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,735 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,735 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,735 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,736 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-01 16:52:44,736 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,736 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,736 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,736 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,736 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,736 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,736 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-01 16:52:44,736 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,736 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,736 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,737 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,737 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,737 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,737 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,737 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,737 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,737 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,737 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,737 - DEBUG - on stmt: inferred = origsize // known_size
2024-07-01 16:52:44,737 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-07-01 16:52:44,737 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,738 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,738 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,738 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,738 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,738 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,738 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,738 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,738 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,738 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,738 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,739 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,739 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,739 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,739 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,739 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,739 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-07-01 16:52:44,739 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,739 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,739 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,740 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,740 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,740 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,740 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,740 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,740 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,740 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,740 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6602f910>
2024-07-01 16:52:44,740 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,741 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,741 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c66035090>],
             80: [<numba.core.ir.Assign object at 0x7f1c66035190>]})
2024-07-01 16:52:44,741 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,741 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,741 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,741 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,741 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,741 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,742 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,742 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,742 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,742 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,742 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,742 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,742 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,742 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,742 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,743 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,743 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,743 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,743 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,743 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,743 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,743 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,743 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,744 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,744 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,745 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,745 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,745 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,745 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,746 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,746 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,746 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,746 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,746 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,747 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,747 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,747 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,747 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,748 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,748 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,748 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,748 - DEBUG - find_def var='known_size' stmt=$binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,748 - DEBUG - find_def_from_top label 80
2024-07-01 16:52:44,749 - DEBUG - idom 44 from label 80
2024-07-01 16:52:44,749 - DEBUG - find_def_from_bottom label 44
2024-07-01 16:52:44,749 - DEBUG - find_def_from_top label 44
2024-07-01 16:52:44,749 - DEBUG - idom 42 from label 44
2024-07-01 16:52:44,750 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,750 - DEBUG - find_def_from_top label 42
2024-07-01 16:52:44,751 - DEBUG - insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 42
2024-07-01 16:52:44,751 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:44,752 - DEBUG - incoming_def known_size = const(int, 1)
2024-07-01 16:52:44,752 - DEBUG - find_def_from_bottom label 269
2024-07-01 16:52:44,752 - DEBUG - find_def_from_top label 269
2024-07-01 16:52:44,752 - DEBUG - insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 269
2024-07-01 16:52:44,753 - DEBUG - find_def_from_bottom label 64
2024-07-01 16:52:44,753 - DEBUG - find_def_from_top label 64
2024-07-01 16:52:44,753 - DEBUG - idom 44 from label 64
2024-07-01 16:52:44,753 - DEBUG - find_def_from_bottom label 44
2024-07-01 16:52:44,753 - DEBUG - find_def_from_top label 44
2024-07-01 16:52:44,753 - DEBUG - idom 42 from label 44
2024-07-01 16:52:44,753 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,753 - DEBUG - incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048)], incoming_blocks=[0])
2024-07-01 16:52:44,753 - DEBUG - find_def_from_bottom label 80
2024-07-01 16:52:44,754 - DEBUG - incoming_def known_size.1 = $binop_imul84.3
2024-07-01 16:52:44,754 - DEBUG - incoming_def known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,754 - DEBUG - replaced with: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,754 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-07-01 16:52:44,754 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,754 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,754 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,754 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,754 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-01 16:52:44,754 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,754 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,755 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,755 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,755 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,755 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-07-01 16:52:44,755 - DEBUG - find_def var='known_size' stmt=$108compare_op.2 = origsize != known_size
2024-07-01 16:52:44,755 - DEBUG - find_def_from_top label 104
2024-07-01 16:52:44,755 - DEBUG - idom 92 from label 104
2024-07-01 16:52:44,755 - DEBUG - find_def_from_bottom label 92
2024-07-01 16:52:44,755 - DEBUG - find_def_from_top label 92
2024-07-01 16:52:44,755 - DEBUG - idom 42 from label 92
2024-07-01 16:52:44,755 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,755 - DEBUG - replaced with: $108compare_op.2 = origsize != known_size.2
2024-07-01 16:52:44,756 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,756 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,756 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,756 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,756 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,756 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,756 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,756 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,756 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,756 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,756 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,757 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,757 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,757 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,757 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,757 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,757 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,757 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-01 16:52:44,757 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,757 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,757 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,757 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,758 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,758 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,758 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-07-01 16:52:44,758 - DEBUG - find_def var='known_size' stmt=$166compare_op.2 = known_size == $const164.1
2024-07-01 16:52:44,758 - DEBUG - find_def_from_top label 162
2024-07-01 16:52:44,758 - DEBUG - idom 150 from label 162
2024-07-01 16:52:44,758 - DEBUG - find_def_from_bottom label 150
2024-07-01 16:52:44,758 - DEBUG - find_def_from_top label 150
2024-07-01 16:52:44,758 - DEBUG - idom 92 from label 150
2024-07-01 16:52:44,758 - DEBUG - find_def_from_bottom label 92
2024-07-01 16:52:44,758 - DEBUG - find_def_from_top label 92
2024-07-01 16:52:44,759 - DEBUG - idom 42 from label 92
2024-07-01 16:52:44,759 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,759 - DEBUG - replaced with: $166compare_op.2 = known_size.2 == $const164.1
2024-07-01 16:52:44,759 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,759 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,759 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,759 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,759 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,759 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,759 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,759 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,760 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,760 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,760 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,760 - DEBUG - on stmt: inferred = origsize // known_size
2024-07-01 16:52:44,760 - DEBUG - find_def var='known_size' stmt=inferred = origsize // known_size
2024-07-01 16:52:44,760 - DEBUG - find_def_from_top label 192
2024-07-01 16:52:44,760 - DEBUG - idom 162 from label 192
2024-07-01 16:52:44,760 - DEBUG - find_def_from_bottom label 162
2024-07-01 16:52:44,760 - DEBUG - find_def_from_top label 162
2024-07-01 16:52:44,760 - DEBUG - idom 150 from label 162
2024-07-01 16:52:44,760 - DEBUG - find_def_from_bottom label 150
2024-07-01 16:52:44,760 - DEBUG - find_def_from_top label 150
2024-07-01 16:52:44,761 - DEBUG - idom 92 from label 150
2024-07-01 16:52:44,761 - DEBUG - find_def_from_bottom label 92
2024-07-01 16:52:44,761 - DEBUG - find_def_from_top label 92
2024-07-01 16:52:44,761 - DEBUG - idom 42 from label 92
2024-07-01 16:52:44,761 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,761 - DEBUG - replaced with: inferred = origsize // known_size.2
2024-07-01 16:52:44,762 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-07-01 16:52:44,762 - DEBUG - find_def var='known_size' stmt=$binop_mod206.5 = origsize % known_size
2024-07-01 16:52:44,762 - DEBUG - find_def_from_top label 192
2024-07-01 16:52:44,762 - DEBUG - idom 162 from label 192
2024-07-01 16:52:44,762 - DEBUG - find_def_from_bottom label 162
2024-07-01 16:52:44,762 - DEBUG - find_def_from_top label 162
2024-07-01 16:52:44,762 - DEBUG - idom 150 from label 162
2024-07-01 16:52:44,762 - DEBUG - find_def_from_bottom label 150
2024-07-01 16:52:44,762 - DEBUG - find_def_from_top label 150
2024-07-01 16:52:44,762 - DEBUG - idom 92 from label 150
2024-07-01 16:52:44,762 - DEBUG - find_def_from_bottom label 92
2024-07-01 16:52:44,763 - DEBUG - find_def_from_top label 92
2024-07-01 16:52:44,763 - DEBUG - idom 42 from label 92
2024-07-01 16:52:44,763 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,763 - DEBUG - replaced with: $binop_mod206.5 = origsize % known_size.2
2024-07-01 16:52:44,763 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,763 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,763 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,764 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,764 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,764 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,764 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,764 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,764 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,764 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,764 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,764 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,764 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,764 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,764 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,765 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,765 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-07-01 16:52:44,765 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,765 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,765 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,765 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,765 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,765 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,765 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,765 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,765 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,765 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,766 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,766 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,766 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,766 - DEBUG - Fix SSA violator on var inferred
2024-07-01 16:52:44,766 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,766 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,766 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,766 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,766 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,766 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,766 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,767 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,767 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,767 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,767 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,767 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,767 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,767 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,767 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,768 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,768 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,768 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,768 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,768 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,768 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,768 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,768 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,768 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,768 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,769 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,769 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,769 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,769 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,769 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,769 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,769 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,769 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,769 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,769 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,770 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,770 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,770 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,770 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,770 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,770 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,770 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,770 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-07-01 16:52:44,770 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,770 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,770 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,770 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,771 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-01 16:52:44,771 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,771 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,771 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,771 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,771 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,771 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-01 16:52:44,772 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,772 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,772 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,772 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,772 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,772 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,772 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,772 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,772 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,773 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,773 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,773 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,773 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,773 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,773 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,773 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,773 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,773 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-01 16:52:44,773 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,774 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,774 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,774 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,774 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,774 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,774 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-01 16:52:44,774 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,774 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,774 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,775 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,775 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,775 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,775 - DEBUG - first assign: inferred
2024-07-01 16:52:44,775 - DEBUG - replaced with: inferred = const(int, 0)
2024-07-01 16:52:44,775 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,775 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,775 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,775 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,775 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,776 - DEBUG - on stmt: inferred = origsize // known_size.2
2024-07-01 16:52:44,776 - DEBUG - replaced with: inferred.1 = origsize // known_size.2
2024-07-01 16:52:44,776 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-01 16:52:44,776 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,776 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,776 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,776 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,776 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,777 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,777 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,777 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,777 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,777 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,777 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,777 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,777 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,777 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,778 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,778 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,778 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-07-01 16:52:44,778 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,778 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,778 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,778 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,778 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,779 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,779 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,779 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,779 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,779 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,779 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035450>
2024-07-01 16:52:44,779 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,779 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,780 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,780 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {174: [<numba.core.ir.Assign object at 0x7f1c66035510>],
             192: [<numba.core.ir.Assign object at 0x7f1c66114ad0>]})
2024-07-01 16:52:44,780 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,780 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,780 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,780 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,780 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,781 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,781 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,781 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,781 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,781 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,781 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,781 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,781 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,781 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,782 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,782 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,782 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,782 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,782 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,782 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,782 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,782 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,782 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,782 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,783 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,783 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,783 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,783 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,783 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,783 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,783 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,783 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,783 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,784 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,784 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,784 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,784 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,784 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,784 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,784 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,784 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,784 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,785 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-07-01 16:52:44,785 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,785 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,785 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,785 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,785 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-01 16:52:44,785 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,785 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,786 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,786 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,786 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,786 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-01 16:52:44,786 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,786 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,786 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,786 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,787 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,787 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,787 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,787 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,787 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,787 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,787 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,788 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,788 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,788 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,788 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,788 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-01 16:52:44,788 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,788 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,788 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,788 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,789 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,789 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,789 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-01 16:52:44,789 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,789 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,789 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,789 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,789 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,789 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,789 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,790 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,790 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,790 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,790 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,790 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-07-01 16:52:44,790 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-01 16:52:44,790 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,790 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,790 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,791 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,791 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,791 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,791 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,791 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,791 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,791 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,791 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,791 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,791 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,792 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,792 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,792 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,792 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-07-01 16:52:44,792 - DEBUG - find_def var='inferred' stmt=shape[neg_ax] = inferred
2024-07-01 16:52:44,792 - DEBUG - find_def_from_top label 254
2024-07-01 16:52:44,792 - DEBUG - idom 220 from label 254
2024-07-01 16:52:44,792 - DEBUG - find_def_from_bottom label 220
2024-07-01 16:52:44,792 - DEBUG - find_def_from_top label 220
2024-07-01 16:52:44,793 - DEBUG - insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 220
2024-07-01 16:52:44,793 - DEBUG - find_def_from_bottom label 192
2024-07-01 16:52:44,793 - DEBUG - incoming_def inferred.1 = origsize // known_size.2
2024-07-01 16:52:44,793 - DEBUG - find_def_from_bottom label 174
2024-07-01 16:52:44,793 - DEBUG - incoming_def inferred = const(int, 0)
2024-07-01 16:52:44,793 - DEBUG - replaced with: shape[neg_ax] = inferred.2
2024-07-01 16:52:44,793 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,793 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,794 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,794 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,794 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,794 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,794 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,794 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,794 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,794 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,794 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65e43350>
2024-07-01 16:52:44,794 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,794 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,795 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,795 - DEBUG - Fix SSA violator on var ok
2024-07-01 16:52:44,795 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,795 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,795 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,795 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,795 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,795 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,795 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,795 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,795 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,795 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,795 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,795 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,796 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,796 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,796 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,796 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,796 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,796 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,796 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,796 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,796 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,796 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,796 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,797 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,797 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,797 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,797 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,797 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,797 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,797 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,797 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,797 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,797 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,797 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,797 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,797 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,798 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,798 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,798 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,798 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,798 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,798 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,798 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-07-01 16:52:44,798 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,798 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,798 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,798 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,799 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-01 16:52:44,799 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,799 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,799 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,799 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,799 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,799 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-01 16:52:44,799 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,799 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,800 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,800 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,800 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,800 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,800 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,800 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,800 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,800 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,800 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,800 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,801 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,801 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,801 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,801 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,801 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,801 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-01 16:52:44,801 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,801 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,801 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,801 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,802 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,802 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,802 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-01 16:52:44,802 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,802 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,802 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,802 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,802 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,802 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,802 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,803 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,803 - DEBUG - first assign: ok
2024-07-01 16:52:44,803 - DEBUG - replaced with: ok = origsize == $const180.2
2024-07-01 16:52:44,803 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,803 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,803 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,803 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-07-01 16:52:44,803 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-01 16:52:44,803 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,803 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,804 - DEBUG - replaced with: ok.1 = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,804 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,804 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,804 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,804 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-07-01 16:52:44,804 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,804 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,804 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,804 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,804 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,804 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,805 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,805 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,805 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,805 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,805 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,805 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-07-01 16:52:44,805 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,805 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,805 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,806 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,806 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,806 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,806 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,806 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,806 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,806 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,806 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035d90>
2024-07-01 16:52:44,806 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,806 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,806 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,807 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {174: [<numba.core.ir.Assign object at 0x7f1c66114d10>],
             192: [<numba.core.ir.Assign object at 0x7f1c66116d90>]})
2024-07-01 16:52:44,807 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,807 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,807 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,807 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,807 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,807 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,807 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,808 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,808 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,808 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,808 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,808 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,808 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,808 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,808 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,808 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,808 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,809 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,809 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,809 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,809 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,809 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,809 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,809 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,809 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,809 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,809 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,809 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,810 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,810 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,810 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,810 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,810 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,810 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,810 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,810 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,810 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,810 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,810 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,810 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,811 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,811 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,811 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-07-01 16:52:44,811 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,811 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,811 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,811 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,811 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-01 16:52:44,811 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,811 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,811 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,812 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,812 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,812 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-01 16:52:44,812 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,812 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,812 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,812 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,812 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,812 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,812 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,812 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,813 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,813 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,813 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,813 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,813 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,813 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,813 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,813 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,813 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,813 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-01 16:52:44,813 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,813 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,814 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,814 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,814 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,814 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,814 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-01 16:52:44,814 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,814 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,814 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,814 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,814 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,814 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,814 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,815 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,815 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,815 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,815 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,815 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-07-01 16:52:44,815 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-01 16:52:44,815 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,815 - DEBUG - on stmt: ok.1 = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,815 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,816 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,816 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,816 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-07-01 16:52:44,816 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,816 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,816 - DEBUG - find_def var='ok' stmt=$222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,816 - DEBUG - find_def_from_top label 220
2024-07-01 16:52:44,816 - DEBUG - insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 220
2024-07-01 16:52:44,816 - DEBUG - find_def_from_bottom label 192
2024-07-01 16:52:44,817 - DEBUG - incoming_def ok.1 = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,817 - DEBUG - find_def_from_bottom label 174
2024-07-01 16:52:44,817 - DEBUG - incoming_def ok = origsize == $const180.2
2024-07-01 16:52:44,817 - DEBUG - replaced with: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,817 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,817 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,817 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,817 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,817 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,818 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,818 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,818 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,818 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,818 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-07-01 16:52:44,818 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,818 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,818 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,818 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,819 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,819 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,819 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,819 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,819 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,819 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,819 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66036010>
2024-07-01 16:52:44,819 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,819 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,819 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,820 - DEBUG - Fix SSA violator on var neg_ax
2024-07-01 16:52:44,820 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,820 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,820 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,820 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,820 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,820 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,820 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,820 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,820 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,821 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,821 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,821 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,821 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,821 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,821 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,821 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,821 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,821 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,821 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,821 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,822 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,822 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,822 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,822 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,822 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,822 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,822 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,822 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,822 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,823 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,823 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,823 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,823 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,823 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,823 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,823 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,823 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,823 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,823 - DEBUG - first assign: neg_ax
2024-07-01 16:52:44,823 - DEBUG - replaced with: neg_ax = ax
2024-07-01 16:52:44,824 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,824 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,824 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,824 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,824 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-07-01 16:52:44,824 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,824 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,824 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,824 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,824 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-01 16:52:44,824 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,825 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,825 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,825 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,825 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,825 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-01 16:52:44,825 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,825 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,825 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,825 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,825 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,826 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,826 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,826 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,826 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,826 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,826 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,826 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,826 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,826 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,826 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,826 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,827 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,827 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-01 16:52:44,827 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,827 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,827 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,827 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,827 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,827 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,827 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-01 16:52:44,827 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,827 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,828 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,828 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,828 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,828 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,828 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,828 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,828 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,828 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,828 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,828 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-07-01 16:52:44,828 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-01 16:52:44,828 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,829 - DEBUG - on stmt: ok.1 = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,829 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,829 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,829 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,829 - DEBUG - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[192, 174])
2024-07-01 16:52:44,829 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-07-01 16:52:44,829 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,829 - DEBUG - on stmt: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,829 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,829 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,829 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,830 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,830 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,830 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,830 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,830 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,830 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,830 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-07-01 16:52:44,830 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,830 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,830 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,830 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,830 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,831 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,831 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,831 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,831 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,832 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,832 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66035cd0>
2024-07-01 16:52:44,832 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,832 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,832 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,832 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {64: [<numba.core.ir.Assign object at 0x7f1c660354d0>]})
2024-07-01 16:52:44,832 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:44,832 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,832 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-07-01 16:52:44,833 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-07-01 16:52:44,833 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-07-01 16:52:44,833 - DEBUG - on stmt: known_size = const(int, 1)
2024-07-01 16:52:44,833 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-07-01 16:52:44,833 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,833 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-07-01 16:52:44,833 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-07-01 16:52:44,833 - DEBUG - on stmt: jump 42
2024-07-01 16:52:44,833 - DEBUG - ==== SSA block rewrite pass on 42
2024-07-01 16:52:44,833 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,834 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,834 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-07-01 16:52:44,834 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-07-01 16:52:44,834 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-07-01 16:52:44,834 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-07-01 16:52:44,834 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-07-01 16:52:44,834 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-07-01 16:52:44,834 - DEBUG - ==== SSA block rewrite pass on 44
2024-07-01 16:52:44,834 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,834 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-07-01 16:52:44,835 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,835 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-07-01 16:52:44,835 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-07-01 16:52:44,835 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-07-01 16:52:44,835 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-07-01 16:52:44,835 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-07-01 16:52:44,835 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,835 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,835 - DEBUG - on stmt: branch $62pred, 64, 80
2024-07-01 16:52:44,836 - DEBUG - ==== SSA block rewrite pass on 64
2024-07-01 16:52:44,836 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,836 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-07-01 16:52:44,836 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,836 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-07-01 16:52:44,836 - DEBUG - on stmt: neg_ax = ax
2024-07-01 16:52:44,836 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,836 - DEBUG - ==== SSA block rewrite pass on 80
2024-07-01 16:52:44,836 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,836 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:44,836 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-07-01 16:52:44,837 - DEBUG - on stmt: jump 269
2024-07-01 16:52:44,837 - DEBUG - ==== SSA block rewrite pass on 92
2024-07-01 16:52:44,837 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,837 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-07-01 16:52:44,837 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-07-01 16:52:44,837 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,837 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,837 - DEBUG - on stmt: branch $102pred, 104, 150
2024-07-01 16:52:44,837 - DEBUG - ==== SSA block rewrite pass on 104
2024-07-01 16:52:44,837 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,837 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-07-01 16:52:44,838 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,838 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,838 - DEBUG - on stmt: branch $114pred, 116, 146
2024-07-01 16:52:44,838 - DEBUG - ==== SSA block rewrite pass on 116
2024-07-01 16:52:44,838 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,838 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,838 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,838 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,838 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,838 - DEBUG - ==== SSA block rewrite pass on 146
2024-07-01 16:52:44,838 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,838 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-07-01 16:52:44,839 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-07-01 16:52:44,839 - DEBUG - on stmt: return $148return_value.1
2024-07-01 16:52:44,839 - DEBUG - ==== SSA block rewrite pass on 150
2024-07-01 16:52:44,839 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,839 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-07-01 16:52:44,839 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-07-01 16:52:44,839 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,839 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,839 - DEBUG - on stmt: branch $160pred, 162, 268
2024-07-01 16:52:44,839 - DEBUG - ==== SSA block rewrite pass on 162
2024-07-01 16:52:44,840 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,840 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-07-01 16:52:44,840 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-07-01 16:52:44,840 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,840 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,840 - DEBUG - on stmt: branch $172pred, 174, 192
2024-07-01 16:52:44,840 - DEBUG - ==== SSA block rewrite pass on 174
2024-07-01 16:52:44,840 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,840 - DEBUG - on stmt: inferred = const(int, 0)
2024-07-01 16:52:44,841 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-07-01 16:52:44,841 - DEBUG - on stmt: ok = origsize == $const180.2
2024-07-01 16:52:44,841 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,841 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:44,841 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,841 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-07-01 16:52:44,841 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-07-01 16:52:44,841 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-07-01 16:52:44,841 - DEBUG - on stmt: ok.1 = $binop_mod206.5 == $const210.6
2024-07-01 16:52:44,841 - DEBUG - on stmt: jump 220
2024-07-01 16:52:44,841 - DEBUG - ==== SSA block rewrite pass on 220
2024-07-01 16:52:44,842 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,842 - DEBUG - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[192, 174])
2024-07-01 16:52:44,842 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-07-01 16:52:44,842 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-07-01 16:52:44,842 - DEBUG - on stmt: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,842 - DEBUG - on stmt: branch $222pred, 254, 224
2024-07-01 16:52:44,842 - DEBUG - ==== SSA block rewrite pass on 224
2024-07-01 16:52:44,842 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,842 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,842 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-07-01 16:52:44,843 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,843 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-07-01 16:52:44,843 - DEBUG - ==== SSA block rewrite pass on 254
2024-07-01 16:52:44,843 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,843 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-07-01 16:52:44,843 - DEBUG - find_def var='neg_ax' stmt=shape[neg_ax] = inferred.2
2024-07-01 16:52:44,843 - DEBUG - find_def_from_top label 254
2024-07-01 16:52:44,843 - DEBUG - idom 220 from label 254
2024-07-01 16:52:44,843 - DEBUG - find_def_from_bottom label 220
2024-07-01 16:52:44,843 - DEBUG - find_def_from_top label 220
2024-07-01 16:52:44,843 - DEBUG - idom 162 from label 220
2024-07-01 16:52:44,844 - DEBUG - find_def_from_bottom label 162
2024-07-01 16:52:44,844 - DEBUG - find_def_from_top label 162
2024-07-01 16:52:44,844 - DEBUG - idom 150 from label 162
2024-07-01 16:52:44,844 - DEBUG - find_def_from_bottom label 150
2024-07-01 16:52:44,844 - DEBUG - find_def_from_top label 150
2024-07-01 16:52:44,844 - DEBUG - idom 92 from label 150
2024-07-01 16:52:44,844 - DEBUG - find_def_from_bottom label 92
2024-07-01 16:52:44,845 - DEBUG - find_def_from_top label 92
2024-07-01 16:52:44,845 - DEBUG - idom 42 from label 92
2024-07-01 16:52:44,845 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,845 - DEBUG - find_def_from_top label 42
2024-07-01 16:52:44,845 - DEBUG - insert phi node neg_ax.1 = phi(incoming_values=[], incoming_blocks=[]) at 42
2024-07-01 16:52:44,846 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:44,846 - DEBUG - find_def_from_top label 0
2024-07-01 16:52:44,846 - DEBUG - incoming_def <class 'numba.core.ssa.UndefinedVariable'>
2024-07-01 16:52:44,846 - DEBUG - find_def_from_bottom label 269
2024-07-01 16:52:44,846 - DEBUG - find_def_from_top label 269
2024-07-01 16:52:44,846 - DEBUG - insert phi node neg_ax.2 = phi(incoming_values=[], incoming_blocks=[]) at 269
2024-07-01 16:52:44,846 - DEBUG - find_def_from_bottom label 64
2024-07-01 16:52:44,846 - DEBUG - incoming_def neg_ax = ax
2024-07-01 16:52:44,846 - DEBUG - find_def_from_bottom label 80
2024-07-01 16:52:44,846 - DEBUG - find_def_from_top label 80
2024-07-01 16:52:44,847 - DEBUG - idom 44 from label 80
2024-07-01 16:52:44,847 - DEBUG - find_def_from_bottom label 44
2024-07-01 16:52:44,847 - DEBUG - find_def_from_top label 44
2024-07-01 16:52:44,847 - DEBUG - idom 42 from label 44
2024-07-01 16:52:44,847 - DEBUG - find_def_from_bottom label 42
2024-07-01 16:52:44,847 - DEBUG - incoming_def neg_ax.1 = phi(incoming_values=[Undefined], incoming_blocks=[0])
2024-07-01 16:52:44,847 - DEBUG - incoming_def neg_ax.2 = phi(incoming_values=[Var(neg_ax, arrayobj.py:2052), Var(neg_ax.1, arrayobj.py:2070)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,848 - DEBUG - replaced with: shape[neg_ax.1] = inferred.2
2024-07-01 16:52:44,848 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-07-01 16:52:44,848 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-07-01 16:52:44,848 - DEBUG - on stmt: return $266return_value.4
2024-07-01 16:52:44,848 - DEBUG - ==== SSA block rewrite pass on 268
2024-07-01 16:52:44,848 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,848 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:44,848 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-07-01 16:52:44,849 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:44,849 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-07-01 16:52:44,849 - DEBUG - ==== SSA block rewrite pass on 269
2024-07-01 16:52:44,849 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66035390>
2024-07-01 16:52:44,849 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,849 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-07-01 16:52:44,849 - DEBUG - on stmt: jump 42
2024-07-01 16:52:45,067 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-07-01 16:52:45,067 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:45,068 - DEBUG - stack: []
2024-07-01 16:52:45,068 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:45,068 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-07-01 16:52:45,068 - DEBUG - stack []
2024-07-01 16:52:45,068 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-07-01 16:52:45,068 - DEBUG - stack []
2024-07-01 16:52:45,068 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-07-01 16:52:45,068 - DEBUG - stack []
2024-07-01 16:52:45,068 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-07-01 16:52:45,068 - DEBUG - stack ['$a4.0']
2024-07-01 16:52:45,068 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-07-01 16:52:45,068 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-07-01 16:52:45,069 - DEBUG - dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-07-01 16:52:45,069 - DEBUG - stack ['$8compare_op.2']
2024-07-01 16:52:45,069 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,069 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:45,069 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:45,069 - DEBUG - defmap: {}
2024-07-01 16:52:45,069 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,069 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,069 - DEBUG - keep phismap: {}
2024-07-01 16:52:45,069 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:45,070 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:45,070 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,070 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-07-01 16:52:45,074 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:45,074 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66204a50>
2024-07-01 16:52:45,075 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:45,075 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-07-01 16:52:45,075 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-07-01 16:52:45,075 - DEBUG - on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-07-01 16:52:45,075 - DEBUG - on stmt: return $14return_value.3
2024-07-01 16:52:45,075 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x7f1c66207610>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c66205490>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c66204c90>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7f1c662079d0>, 0)]})
2024-07-01 16:52:45,076 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66204a50>
2024-07-01 16:52:45,119 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=3535)
           2	RESUME(arg=0, lineno=3535)
           4	LOAD_GLOBAL(arg=1, lineno=3536)
          16	LOAD_FAST(arg=0, lineno=3536)
          18	PRECALL(arg=1, lineno=3536)
          22	CALL(arg=1, lineno=3536)
          32	STORE_FAST(arg=2, lineno=3536)
          34	LOAD_GLOBAL(arg=3, lineno=3537)
          46	LOAD_FAST(arg=2, lineno=3537)
          48	PRECALL(arg=1, lineno=3537)
          52	CALL(arg=1, lineno=3537)
          62	GET_ITER(arg=None, lineno=3537)
>         64	FOR_ITER(arg=54, lineno=3537)
          66	STORE_FAST(arg=3, lineno=3537)
          68	LOAD_FAST(arg=0, lineno=3538)
          70	LOAD_FAST(arg=3, lineno=3538)
          72	BINARY_SUBSCR(arg=None, lineno=3538)
          82	LOAD_FAST(arg=1, lineno=3538)
          84	LOAD_GLOBAL(arg=1, lineno=3538)
          96	LOAD_FAST(arg=1, lineno=3538)
          98	PRECALL(arg=1, lineno=3538)
         102	CALL(arg=1, lineno=3538)
         112	LOAD_FAST(arg=2, lineno=3538)
         114	BINARY_OP(arg=10, lineno=3538)
         118	LOAD_FAST(arg=3, lineno=3538)
         120	BINARY_OP(arg=0, lineno=3538)
         124	BINARY_SUBSCR(arg=None, lineno=3538)
         134	COMPARE_OP(arg=3, lineno=3538)
         140	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=3538)
         142	LOAD_GLOBAL(arg=5, lineno=3539)
         154	LOAD_CONST(arg=1, lineno=3539)
         156	PRECALL(arg=1, lineno=3539)
         160	CALL(arg=1, lineno=3539)
         170	RAISE_VARARGS(arg=1, lineno=3539)
>        172	JUMP_BACKWARD(arg=55, lineno=3538)
>        174	LOAD_CONST(arg=0, lineno=3537)
         176	RETURN_VALUE(arg=None, lineno=3537)
2024-07-01 16:52:45,120 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:45,120 - DEBUG - stack: []
2024-07-01 16:52:45,120 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:45,120 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=3535)
2024-07-01 16:52:45,120 - DEBUG - stack []
2024-07-01 16:52:45,120 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=3535)
2024-07-01 16:52:45,120 - DEBUG - stack []
2024-07-01 16:52:45,120 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=3536)
2024-07-01 16:52:45,120 - DEBUG - stack []
2024-07-01 16:52:45,121 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=3536)
2024-07-01 16:52:45,121 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:45,121 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=3536)
2024-07-01 16:52:45,121 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$shape16.2']
2024-07-01 16:52:45,121 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=3536)
2024-07-01 16:52:45,121 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$shape16.2']
2024-07-01 16:52:45,121 - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=2, lineno=3536)
2024-07-01 16:52:45,121 - DEBUG - stack ['$22call.3']
2024-07-01 16:52:45,121 - DEBUG - dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=3537)
2024-07-01 16:52:45,121 - DEBUG - stack []
2024-07-01 16:52:45,122 - DEBUG - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=3537)
2024-07-01 16:52:45,122 - DEBUG - stack ['$null$34.5', '$34load_global.4']
2024-07-01 16:52:45,122 - DEBUG - dispatch pc=48, inst=PRECALL(arg=1, lineno=3537)
2024-07-01 16:52:45,122 - DEBUG - stack ['$null$34.5', '$34load_global.4', '$n46.6']
2024-07-01 16:52:45,122 - DEBUG - dispatch pc=52, inst=CALL(arg=1, lineno=3537)
2024-07-01 16:52:45,122 - DEBUG - stack ['$null$34.5', '$34load_global.4', '$n46.6']
2024-07-01 16:52:45,122 - DEBUG - dispatch pc=62, inst=GET_ITER(arg=None, lineno=3537)
2024-07-01 16:52:45,122 - DEBUG - stack ['$52call.7']
2024-07-01 16:52:45,122 - DEBUG - end state. edges=[Edge(pc=64, stack=('$62get_iter.8',), blockstack=(), npush=0)]
2024-07-01 16:52:45,122 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=1)])
2024-07-01 16:52:45,122 - DEBUG - stack: ['$phi64.0']
2024-07-01 16:52:45,122 - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=1)
2024-07-01 16:52:45,123 - DEBUG - dispatch pc=64, inst=FOR_ITER(arg=54, lineno=3537)
2024-07-01 16:52:45,123 - DEBUG - stack ['$phi64.0']
2024-07-01 16:52:45,123 - DEBUG - end state. edges=[Edge(pc=174, stack=(), blockstack=(), npush=0), Edge(pc=66, stack=('$phi64.0', '$64for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:45,123 - DEBUG - pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=66 nstack_initial=2)])
2024-07-01 16:52:45,123 - DEBUG - stack: []
2024-07-01 16:52:45,123 - DEBUG - state.pc_initial: State(pc_initial=174 nstack_initial=0)
2024-07-01 16:52:45,123 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=0, lineno=3537)
2024-07-01 16:52:45,123 - DEBUG - stack []
2024-07-01 16:52:45,123 - DEBUG - dispatch pc=176, inst=RETURN_VALUE(arg=None, lineno=3537)
2024-07-01 16:52:45,123 - DEBUG - stack ['$const174.0']
2024-07-01 16:52:45,123 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,123 - DEBUG - pending: deque([State(pc_initial=66 nstack_initial=2)])
2024-07-01 16:52:45,123 - DEBUG - stack: ['$phi66.0', '$phi66.1']
2024-07-01 16:52:45,123 - DEBUG - state.pc_initial: State(pc_initial=66 nstack_initial=2)
2024-07-01 16:52:45,124 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=3, lineno=3537)
2024-07-01 16:52:45,124 - DEBUG - stack ['$phi66.0', '$phi66.1']
2024-07-01 16:52:45,124 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=3538)
2024-07-01 16:52:45,124 - DEBUG - stack ['$phi66.0']
2024-07-01 16:52:45,124 - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=3, lineno=3538)
2024-07-01 16:52:45,124 - DEBUG - stack ['$phi66.0', '$shape68.2']
2024-07-01 16:52:45,124 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2024-07-01 16:52:45,124 - DEBUG - stack ['$phi66.0', '$shape68.2', '$i70.3']
2024-07-01 16:52:45,124 - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=1, lineno=3538)
2024-07-01 16:52:45,124 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4']
2024-07-01 16:52:45,124 - DEBUG - dispatch pc=84, inst=LOAD_GLOBAL(arg=1, lineno=3538)
2024-07-01 16:52:45,124 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5']
2024-07-01 16:52:45,124 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=1, lineno=3538)
2024-07-01 16:52:45,125 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6']
2024-07-01 16:52:45,125 - DEBUG - dispatch pc=98, inst=PRECALL(arg=1, lineno=3538)
2024-07-01 16:52:45,125 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6', '$main_shape96.8']
2024-07-01 16:52:45,125 - DEBUG - dispatch pc=102, inst=CALL(arg=1, lineno=3538)
2024-07-01 16:52:45,125 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6', '$main_shape96.8']
2024-07-01 16:52:45,125 - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=3538)
2024-07-01 16:52:45,125 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$102call.9']
2024-07-01 16:52:45,125 - DEBUG - dispatch pc=114, inst=BINARY_OP(arg=10, lineno=3538)
2024-07-01 16:52:45,125 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$102call.9', '$n112.10']
2024-07-01 16:52:45,125 - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=3538)
2024-07-01 16:52:45,125 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_sub114.11']
2024-07-01 16:52:45,125 - DEBUG - dispatch pc=120, inst=BINARY_OP(arg=0, lineno=3538)
2024-07-01 16:52:45,125 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_sub114.11', '$i118.12']
2024-07-01 16:52:45,126 - DEBUG - dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2024-07-01 16:52:45,126 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_add120.13']
2024-07-01 16:52:45,126 - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=3538)
2024-07-01 16:52:45,126 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$124binary_subscr.14']
2024-07-01 16:52:45,126 - DEBUG - dispatch pc=140, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=3538)
2024-07-01 16:52:45,126 - DEBUG - stack ['$phi66.0', '$134compare_op.15']
2024-07-01 16:52:45,126 - DEBUG - end state. edges=[Edge(pc=142, stack=('$phi66.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi66.0',), blockstack=(), npush=0)]
2024-07-01 16:52:45,126 - DEBUG - pending: deque([State(pc_initial=142 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
2024-07-01 16:52:45,126 - DEBUG - stack: ['$phi142.0']
2024-07-01 16:52:45,126 - DEBUG - state.pc_initial: State(pc_initial=142 nstack_initial=1)
2024-07-01 16:52:45,126 - DEBUG - dispatch pc=142, inst=LOAD_GLOBAL(arg=5, lineno=3539)
2024-07-01 16:52:45,127 - DEBUG - stack ['$phi142.0']
2024-07-01 16:52:45,127 - DEBUG - dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=3539)
2024-07-01 16:52:45,127 - DEBUG - stack ['$phi142.0', '$null$142.2', '$142load_global.1']
2024-07-01 16:52:45,127 - DEBUG - dispatch pc=156, inst=PRECALL(arg=1, lineno=3539)
2024-07-01 16:52:45,127 - DEBUG - stack ['$phi142.0', '$null$142.2', '$142load_global.1', '$const154.3']
2024-07-01 16:52:45,127 - DEBUG - dispatch pc=160, inst=CALL(arg=1, lineno=3539)
2024-07-01 16:52:45,127 - DEBUG - stack ['$phi142.0', '$null$142.2', '$142load_global.1', '$const154.3']
2024-07-01 16:52:45,127 - DEBUG - dispatch pc=170, inst=RAISE_VARARGS(arg=1, lineno=3539)
2024-07-01 16:52:45,127 - DEBUG - stack ['$phi142.0', '$160call.4']
2024-07-01 16:52:45,127 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,127 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=1)])
2024-07-01 16:52:45,127 - DEBUG - stack: ['$phi172.0']
2024-07-01 16:52:45,127 - DEBUG - state.pc_initial: State(pc_initial=172 nstack_initial=1)
2024-07-01 16:52:45,128 - DEBUG - dispatch pc=172, inst=JUMP_BACKWARD(arg=55, lineno=3538)
2024-07-01 16:52:45,128 - DEBUG - stack ['$phi172.0']
2024-07-01 16:52:45,128 - DEBUG - end state. edges=[Edge(pc=64, stack=('$phi172.0',), blockstack=(), npush=0)]
2024-07-01 16:52:45,128 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=1)])
2024-07-01 16:52:45,128 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:45,128 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=1): {'$phi64.0'},
             State(pc_initial=66 nstack_initial=2): {'$phi66.1'},
             State(pc_initial=142 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=174 nstack_initial=0): set()})
2024-07-01 16:52:45,128 - DEBUG - defmap: {'$phi64.0': State(pc_initial=0 nstack_initial=0),
 '$phi66.1': State(pc_initial=64 nstack_initial=1)}
2024-07-01 16:52:45,128 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$phi66.0', State(pc_initial=66 nstack_initial=2))},
             '$phi172.0': {('$phi66.0', State(pc_initial=66 nstack_initial=2))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi172.0',
                           State(pc_initial=172 nstack_initial=1))},
             '$phi66.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-07-01 16:52:45,129 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi172.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-07-01 16:52:45,129 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-07-01 16:52:45,129 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-07-01 16:52:45,130 - DEBUG - keep phismap: {'$phi64.0': {('$62get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi66.1': {('$64for_iter.2', State(pc_initial=64 nstack_initial=1))}}
2024-07-01 16:52:45,130 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi64.0': '$62get_iter.8'},
             State(pc_initial=64 nstack_initial=1): {'$phi66.1': '$64for_iter.2'}})
2024-07-01 16:52:45,130 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:45,130 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$shape16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$shape16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'value': '$22call.3'}), (34, {'idx': 1, 'res': '$34load_global.4'}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'res': '$n46.6'}), (48, {}), (50, {}), (52, {'func': '$34load_global.4', 'args': ['$n46.6'], 'kw_names': None, 'res': '$52call.7'}), (54, {}), (56, {}), (58, {}), (60, {}), (62, {'value': '$52call.7', 'res': '$62get_iter.8'})), outgoing_phis={'$phi64.0': '$62get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$62get_iter.8',)})
2024-07-01 16:52:45,130 - DEBUG - block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'iterator': '$phi64.0', 'pair': '$64for_iter.1', 'indval': '$64for_iter.2', 'pred': '$64for_iter.3'}),), outgoing_phis={'$phi66.1': '$64for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: (), 66: ('$phi64.0', '$64for_iter.2')})
2024-07-01 16:52:45,130 - DEBUG - block_infos State(pc_initial=66 nstack_initial=2):
AdaptBlockInfo(insts=((66, {'value': '$phi66.1'}), (68, {'res': '$shape68.2'}), (70, {'res': '$i70.3'}), (72, {'index': '$i70.3', 'target': '$shape68.2', 'res': '$72binary_subscr.4'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'res': '$main_shape82.5'}), (84, {'idx': 0, 'res': '$84load_global.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'res': '$main_shape96.8'}), (98, {}), (100, {}), (102, {'func': '$84load_global.6', 'args': ['$main_shape96.8'], 'kw_names': None, 'res': '$102call.9'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'res': '$n112.10'}), (114, {'op': '-', 'lhs': '$102call.9', 'rhs': '$n112.10', 'res': '$binop_sub114.11'}), (116, {}), (118, {'res': '$i118.12'}), (120, {'op': '+', 'lhs': '$binop_sub114.11', 'rhs': '$i118.12', 'res': '$binop_add120.13'}), (122, {}), (124, {'index': '$binop_add120.13', 'target': '$main_shape82.5', 'res': '$124binary_subscr.14'}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'lhs': '$72binary_subscr.4', 'rhs': '$124binary_subscr.14', 'res': '$134compare_op.15'}), (136, {}), (138, {}), (140, {'pred': '$134compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={142: ('$phi66.0',), 172: ('$phi66.0',)})
2024-07-01 16:52:45,130 - DEBUG - block_infos State(pc_initial=142 nstack_initial=1):
AdaptBlockInfo(insts=((142, {'idx': 2, 'res': '$142load_global.1'}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$const154.3'}), (156, {}), (158, {}), (160, {'func': '$142load_global.1', 'args': ['$const154.3'], 'kw_names': None, 'res': '$160call.4'}), (162, {}), (164, {}), (166, {}), (168, {}), (170, {'exc': '$160call.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,131 - DEBUG - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi172.0',)})
2024-07-01 16:52:45,131 - DEBUG - block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=((174, {'res': '$const174.0'}), (176, {'retval': '$const174.0', 'castval': '$176return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,132 - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    n = call $4load_global.0(shape, func=$4load_global.0, args=[Var(shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'n', 'shape']
    $34load_global.4 = global(range: <class 'range'>) ['$34load_global.4']
    $52call.7 = call $34load_global.4(n, func=$34load_global.4, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.4', '$52call.7', 'n']
    $62get_iter.8 = getiter(value=$52call.7) ['$52call.7', '$62get_iter.8']
    $phi64.0 = $62get_iter.8                 ['$62get_iter.8', '$phi64.0']
    jump 64                                  []
label 64:
    $64for_iter.1 = iternext(value=$phi64.0) ['$64for_iter.1', '$phi64.0']
    $64for_iter.2 = pair_first(value=$64for_iter.1) ['$64for_iter.1', '$64for_iter.2']
    $64for_iter.3 = pair_second(value=$64for_iter.1) ['$64for_iter.1', '$64for_iter.3']
    $phi66.1 = $64for_iter.2                 ['$64for_iter.2', '$phi66.1']
    branch $64for_iter.3, 66, 174            ['$64for_iter.3']
label 66:
    i = $phi66.1                             ['$phi66.1', 'i']
    $72binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$72binary_subscr.4', 'i', 'shape']
    $84load_global.6 = global(len: <built-in function len>) ['$84load_global.6']
    $102call.9 = call $84load_global.6(main_shape, func=$84load_global.6, args=[Var(main_shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$102call.9', '$84load_global.6', 'main_shape']
    $binop_sub114.11 = $102call.9 - n        ['$102call.9', '$binop_sub114.11', 'n']
    $binop_add120.13 = $binop_sub114.11 + i  ['$binop_add120.13', '$binop_sub114.11', 'i']
    $124binary_subscr.14 = getitem(value=main_shape, index=$binop_add120.13, fn=<built-in function getitem>) ['$124binary_subscr.14', '$binop_add120.13', 'main_shape']
    $134compare_op.15 = $72binary_subscr.4 != $124binary_subscr.14 ['$124binary_subscr.14', '$134compare_op.15', '$72binary_subscr.4']
    bool140 = global(bool: <class 'bool'>)   ['bool140']
    $140pred = call bool140($134compare_op.15, func=bool140, args=(Var($134compare_op.15, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.15', '$140pred', 'bool140']
    branch $140pred, 142, 172                ['$140pred']
label 142:
    $142load_global.1 = global(ValueError: <class 'ValueError'>) ['$142load_global.1']
    $const154.3 = const(str, nditer(): operands could not be broadcast together) ['$const154.3']
    $160call.4 = call $142load_global.1($const154.3, func=$142load_global.1, args=[Var($const154.3, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None) ['$142load_global.1', '$160call.4', '$const154.3']
    raise $160call.4                         ['$160call.4']
label 172:
    jump 64                                  []
label 174:
    $const174.0 = const(NoneType, None)      ['$const174.0']
    $176return_value.1 = cast(value=$const174.0) ['$176return_value.1', '$const174.0']
    return $176return_value.1                ['$176return_value.1']

2024-07-01 16:52:45,139 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:45,139 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6622ef50>
2024-07-01 16:52:45,139 - DEBUG - on stmt: shape = arg(0, name=shape)
2024-07-01 16:52:45,139 - DEBUG - on stmt: main_shape = arg(1, name=main_shape)
2024-07-01 16:52:45,139 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2024-07-01 16:52:45,139 - DEBUG - on stmt: n = const(int, 1)
2024-07-01 16:52:45,139 - DEBUG - on stmt: $34load_global.4 = global(range: <class 'range'>)
2024-07-01 16:52:45,139 - DEBUG - on stmt: $52call.7 = call $34load_global.4(n, func=$34load_global.4, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,139 - DEBUG - on stmt: $62get_iter.8 = getiter(value=$52call.7)
2024-07-01 16:52:45,140 - DEBUG - on stmt: $phi64.0 = $62get_iter.8
2024-07-01 16:52:45,140 - DEBUG - on stmt: jump 64
2024-07-01 16:52:45,140 - DEBUG - ==== SSA block analysis pass on 64
2024-07-01 16:52:45,140 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6622ef50>
2024-07-01 16:52:45,140 - DEBUG - on stmt: $64for_iter.1 = iternext(value=$phi64.0)
2024-07-01 16:52:45,140 - DEBUG - on stmt: $64for_iter.2 = pair_first(value=$64for_iter.1)
2024-07-01 16:52:45,140 - DEBUG - on stmt: $64for_iter.3 = pair_second(value=$64for_iter.1)
2024-07-01 16:52:45,140 - DEBUG - on stmt: $phi66.1 = $64for_iter.2
2024-07-01 16:52:45,140 - DEBUG - on stmt: branch $64for_iter.3, 66, 174
2024-07-01 16:52:45,140 - DEBUG - ==== SSA block analysis pass on 66
2024-07-01 16:52:45,140 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6622ef50>
2024-07-01 16:52:45,140 - DEBUG - on stmt: i = $phi66.1
2024-07-01 16:52:45,140 - DEBUG - on stmt: $72binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
2024-07-01 16:52:45,141 - DEBUG - on stmt: $84load_global.6 = global(len: <built-in function len>)
2024-07-01 16:52:45,141 - DEBUG - on stmt: $102call.9 = const(int, 1)
2024-07-01 16:52:45,141 - DEBUG - on stmt: $binop_sub114.11 = $102call.9 - n
2024-07-01 16:52:45,141 - DEBUG - on stmt: $binop_add120.13 = $binop_sub114.11 + i
2024-07-01 16:52:45,141 - DEBUG - on stmt: $124binary_subscr.14 = getitem(value=main_shape, index=$binop_add120.13, fn=<built-in function getitem>)
2024-07-01 16:52:45,141 - DEBUG - on stmt: $134compare_op.15 = $72binary_subscr.4 != $124binary_subscr.14
2024-07-01 16:52:45,141 - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,141 - DEBUG - on stmt: $140pred = call bool140($134compare_op.15, func=bool140, args=(Var($134compare_op.15, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,141 - DEBUG - on stmt: branch $140pred, 142, 172
2024-07-01 16:52:45,141 - DEBUG - ==== SSA block analysis pass on 142
2024-07-01 16:52:45,141 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6622ef50>
2024-07-01 16:52:45,141 - DEBUG - on stmt: $142load_global.1 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:45,142 - DEBUG - on stmt: $const154.3 = const(str, nditer(): operands could not be broadcast together)
2024-07-01 16:52:45,142 - DEBUG - on stmt: $160call.4 = call $142load_global.1($const154.3, func=$142load_global.1, args=[Var($const154.3, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,142 - DEBUG - on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
2024-07-01 16:52:45,142 - DEBUG - ==== SSA block analysis pass on 172
2024-07-01 16:52:45,142 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6622ef50>
2024-07-01 16:52:45,142 - DEBUG - on stmt: jump 64
2024-07-01 16:52:45,142 - DEBUG - ==== SSA block analysis pass on 174
2024-07-01 16:52:45,142 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6622ef50>
2024-07-01 16:52:45,142 - DEBUG - on stmt: $const174.0 = const(NoneType, None)
2024-07-01 16:52:45,142 - DEBUG - on stmt: $176return_value.1 = cast(value=$const174.0)
2024-07-01 16:52:45,142 - DEBUG - on stmt: return $176return_value.1
2024-07-01 16:52:45,143 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102call.9': [(<numba.core.ir.Assign object at 0x7f1c6611ed10>,
                             66)],
             '$124binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f1c6611c0d0>,
                                       66)],
             '$134compare_op.15': [(<numba.core.ir.Assign object at 0x7f1c6611fc90>,
                                    66)],
             '$140pred': [(<numba.core.ir.Assign object at 0x7f1c6611d8d0>,
                           66)],
             '$142load_global.1': [(<numba.core.ir.Assign object at 0x7f1c6611e510>,
                                    142)],
             '$160call.4': [(<numba.core.ir.Assign object at 0x7f1c6611f190>,
                             142)],
             '$176return_value.1': [(<numba.core.ir.Assign object at 0x7f1c6611da10>,
                                     174)],
             '$34load_global.4': [(<numba.core.ir.Assign object at 0x7f1c65e54750>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c66023150>,
                                  0)],
             '$52call.7': [(<numba.core.ir.Assign object at 0x7f1c65e57750>,
                            0)],
             '$62get_iter.8': [(<numba.core.ir.Assign object at 0x7f1c6611f350>,
                                0)],
             '$64for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c6611fe10>,
                                64)],
             '$64for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c6611c9d0>,
                                64)],
             '$64for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c6611fc10>,
                                64)],
             '$72binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1c6611da90>,
                                     66)],
             '$84load_global.6': [(<numba.core.ir.Assign object at 0x7f1c6611c4d0>,
                                   66)],
             '$binop_add120.13': [(<numba.core.ir.Assign object at 0x7f1c6611c790>,
                                   66)],
             '$binop_sub114.11': [(<numba.core.ir.Assign object at 0x7f1c6611cb50>,
                                   66)],
             '$const154.3': [(<numba.core.ir.Assign object at 0x7f1c6611f990>,
                              142)],
             '$const174.0': [(<numba.core.ir.Assign object at 0x7f1c6611d810>,
                              174)],
             '$phi64.0': [(<numba.core.ir.Assign object at 0x7f1c65e54390>, 0)],
             '$phi66.1': [(<numba.core.ir.Assign object at 0x7f1c6611cfd0>,
                           64)],
             'bool140': [(<numba.core.ir.Assign object at 0x7f1c6611e010>, 66)],
             'i': [(<numba.core.ir.Assign object at 0x7f1c6611c990>, 66)],
             'main_shape': [(<numba.core.ir.Assign object at 0x7f1c66023590>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x7f1c65e54510>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7f1c65e40150>, 0)]})
2024-07-01 16:52:45,143 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c6622ef50>
2024-07-01 16:52:45,262 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-07-01 16:52:45,263 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:45,263 - DEBUG - stack: []
2024-07-01 16:52:45,263 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:45,263 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-07-01 16:52:45,263 - DEBUG - stack []
2024-07-01 16:52:45,263 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-07-01 16:52:45,263 - DEBUG - stack []
2024-07-01 16:52:45,263 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-07-01 16:52:45,263 - DEBUG - stack []
2024-07-01 16:52:45,263 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-07-01 16:52:45,263 - DEBUG - stack []
2024-07-01 16:52:45,263 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-07-01 16:52:45,263 - DEBUG - stack ['$6load_deref.0']
2024-07-01 16:52:45,263 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-07-01 16:52:45,264 - DEBUG - stack []
2024-07-01 16:52:45,264 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-07-01 16:52:45,264 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-07-01 16:52:45,264 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-07-01 16:52:45,264 - DEBUG - stack ['$null$10.2', '$22load_attr.3']
2024-07-01 16:52:45,264 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-07-01 16:52:45,264 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-01 16:52:45,264 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-07-01 16:52:45,264 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-01 16:52:45,264 - DEBUG - dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-07-01 16:52:45,264 - DEBUG - stack ['$38call.5']
2024-07-01 16:52:45,264 - DEBUG - end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-07-01 16:52:45,264 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-01 16:52:45,264 - DEBUG - stack: ['$phi50.0']
2024-07-01 16:52:45,265 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-01 16:52:45,265 - DEBUG - dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-07-01 16:52:45,265 - DEBUG - stack ['$phi50.0']
2024-07-01 16:52:45,265 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:45,265 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-07-01 16:52:45,265 - DEBUG - stack: []
2024-07-01 16:52:45,265 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-01 16:52:45,265 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-07-01 16:52:45,265 - DEBUG - stack []
2024-07-01 16:52:45,265 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-07-01 16:52:45,265 - DEBUG - stack ['$c102.0']
2024-07-01 16:52:45,265 - DEBUG - dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-07-01 16:52:45,265 - DEBUG - stack ['$c102.0', '$a104.1']
2024-07-01 16:52:45,266 - DEBUG - dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-07-01 16:52:45,266 - DEBUG - stack ['$c102.0', '$106load_attr.2']
2024-07-01 16:52:45,266 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-07-01 16:52:45,266 - DEBUG - stack ['$binop_truediv116.3']
2024-07-01 16:52:45,266 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,266 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-07-01 16:52:45,266 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2024-07-01 16:52:45,266 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-07-01 16:52:45,266 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-07-01 16:52:45,266 - DEBUG - stack ['$phi52.0', '$phi52.1']
2024-07-01 16:52:45,266 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-07-01 16:52:45,266 - DEBUG - stack ['$phi52.0']
2024-07-01 16:52:45,266 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-07-01 16:52:45,266 - DEBUG - stack ['$phi52.0', '$c54.2']
2024-07-01 16:52:45,266 - DEBUG - dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-07-01 16:52:45,267 - DEBUG - stack ['$phi52.0', '$c54.2', '$v56.3']
2024-07-01 16:52:45,267 - DEBUG - dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-07-01 16:52:45,267 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-01 16:52:45,267 - DEBUG - dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-07-01 16:52:45,267 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-01 16:52:45,267 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-07-01 16:52:45,267 - DEBUG - stack ['$phi52.0', '$c54.2', '$84call.6']
2024-07-01 16:52:45,267 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-07-01 16:52:45,267 - DEBUG - stack ['$phi52.0', '$binop_iadd94.7']
2024-07-01 16:52:45,267 - DEBUG - dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-07-01 16:52:45,267 - DEBUG - stack ['$phi52.0']
2024-07-01 16:52:45,267 - DEBUG - end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-07-01 16:52:45,267 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-01 16:52:45,268 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:45,268 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-07-01 16:52:45,268 - DEBUG - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-07-01 16:52:45,268 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:45,269 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:45,269 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:45,270 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:45,270 - DEBUG - keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-07-01 16:52:45,270 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-07-01 16:52:45,271 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:45,271 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-07-01 16:52:45,271 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-07-01 16:52:45,271 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-07-01 16:52:45,271 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,272 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-07-01 16:52:45,278 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:45,278 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb1690>
2024-07-01 16:52:45,278 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:45,278 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:45,278 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,278 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:45,278 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,278 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:45,278 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:45,279 - DEBUG - on stmt: jump 50
2024-07-01 16:52:45,279 - DEBUG - ==== SSA block analysis pass on 50
2024-07-01 16:52:45,279 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb1690>
2024-07-01 16:52:45,279 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:45,279 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:45,279 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:45,279 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:45,279 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:45,279 - DEBUG - ==== SSA block analysis pass on 52
2024-07-01 16:52:45,279 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb1690>
2024-07-01 16:52:45,279 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:45,279 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:45,279 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,279 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,280 - DEBUG - on stmt: c = $binop_iadd94.7
2024-07-01 16:52:45,280 - DEBUG - on stmt: jump 50
2024-07-01 16:52:45,280 - DEBUG - ==== SSA block analysis pass on 102
2024-07-01 16:52:45,280 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65fb1690>
2024-07-01 16:52:45,280 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:45,280 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:45,280 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:45,280 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:45,281 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c664eb2d0>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7f1c66379110>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x7f1c664ea810>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x7f1c66378c50>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x7f1c66378910>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x7f1c66378510>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c6649b010>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c664991d0>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c6649a350>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x7f1c664ebd90>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x7f1c664ebc10>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x7f1c664ebc90>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x7f1c664eaa90>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7f1c66379090>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7f1c6649bed0>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c65f95e10>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7f1c65f71350>, 0),
                   (<numba.core.ir.Assign object at 0x7f1c664eb150>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x7f1c66498410>, 52)]})
2024-07-01 16:52:45,281 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c65fb1690>
2024-07-01 16:52:45,281 - DEBUG - Fix SSA violator on var c
2024-07-01 16:52:45,281 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:45,281 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f70150>
2024-07-01 16:52:45,281 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:45,281 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:45,281 - DEBUG - first assign: c
2024-07-01 16:52:45,281 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-07-01 16:52:45,281 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,281 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:45,282 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,282 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:45,282 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:45,282 - DEBUG - on stmt: jump 50
2024-07-01 16:52:45,282 - DEBUG - ==== SSA block rewrite pass on 50
2024-07-01 16:52:45,282 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f70150>
2024-07-01 16:52:45,282 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:45,282 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:45,282 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:45,282 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:45,282 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:45,282 - DEBUG - ==== SSA block rewrite pass on 52
2024-07-01 16:52:45,282 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f70150>
2024-07-01 16:52:45,282 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:45,282 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:45,283 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,283 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,283 - DEBUG - on stmt: c = $binop_iadd94.7
2024-07-01 16:52:45,283 - DEBUG - replaced with: c.1 = $binop_iadd94.7
2024-07-01 16:52:45,283 - DEBUG - on stmt: jump 50
2024-07-01 16:52:45,283 - DEBUG - ==== SSA block rewrite pass on 102
2024-07-01 16:52:45,283 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c65f70150>
2024-07-01 16:52:45,283 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:45,283 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:45,283 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:45,283 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:45,283 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c664eb550>],
             52: [<numba.core.ir.Assign object at 0x7f1c664eb010>]})
2024-07-01 16:52:45,283 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:45,284 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c664eb0d0>
2024-07-01 16:52:45,284 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:45,284 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:45,284 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,284 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:45,284 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,284 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:45,284 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:45,284 - DEBUG - on stmt: jump 50
2024-07-01 16:52:45,284 - DEBUG - ==== SSA block rewrite pass on 50
2024-07-01 16:52:45,284 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c664eb0d0>
2024-07-01 16:52:45,284 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:45,285 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:45,285 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:45,285 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:45,285 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:45,285 - DEBUG - ==== SSA block rewrite pass on 52
2024-07-01 16:52:45,285 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c664eb0d0>
2024-07-01 16:52:45,285 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:45,285 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:45,285 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,285 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,285 - DEBUG - find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,285 - DEBUG - find_def_from_top label 52
2024-07-01 16:52:45,285 - DEBUG - idom 50 from label 52
2024-07-01 16:52:45,286 - DEBUG - find_def_from_bottom label 50
2024-07-01 16:52:45,286 - DEBUG - find_def_from_top label 50
2024-07-01 16:52:45,286 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-07-01 16:52:45,286 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:45,286 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-07-01 16:52:45,286 - DEBUG - find_def_from_bottom label 52
2024-07-01 16:52:45,286 - DEBUG - incoming_def c.1 = $binop_iadd94.7
2024-07-01 16:52:45,286 - DEBUG - replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,286 - DEBUG - on stmt: c.1 = $binop_iadd94.7
2024-07-01 16:52:45,286 - DEBUG - on stmt: jump 50
2024-07-01 16:52:45,287 - DEBUG - ==== SSA block rewrite pass on 102
2024-07-01 16:52:45,287 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c664eb0d0>
2024-07-01 16:52:45,287 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:45,287 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:45,287 - DEBUG - find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:45,287 - DEBUG - find_def_from_top label 102
2024-07-01 16:52:45,287 - DEBUG - idom 50 from label 102
2024-07-01 16:52:45,287 - DEBUG - find_def_from_bottom label 50
2024-07-01 16:52:45,287 - DEBUG - replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-07-01 16:52:45,288 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:45,288 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:45,566 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:45,566 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:45,566 - DEBUG - stack: []
2024-07-01 16:52:45,566 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:45,566 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-07-01 16:52:45,566 - DEBUG - stack []
2024-07-01 16:52:45,566 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-07-01 16:52:45,566 - DEBUG - stack []
2024-07-01 16:52:45,566 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:45,566 - DEBUG - stack []
2024-07-01 16:52:45,566 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:45,566 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:45,566 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:45,566 - DEBUG - stack ['$x4.0', '$const6.1']
2024-07-01 16:52:45,567 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-07-01 16:52:45,567 - DEBUG - stack ['$8binary_subscr.2']
2024-07-01 16:52:45,567 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-07-01 16:52:45,567 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-07-01 16:52:45,567 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:45,567 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-07-01 16:52:45,567 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-07-01 16:52:45,567 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-07-01 16:52:45,567 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-07-01 16:52:45,567 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-07-01 16:52:45,567 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-07-01 16:52:45,567 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-07-01 16:52:45,567 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:45,567 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-07-01 16:52:45,568 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-07-01 16:52:45,568 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-07-01 16:52:45,568 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:45,568 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-07-01 16:52:45,568 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:45,568 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-07-01 16:52:45,568 - DEBUG - dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-07-01 16:52:45,568 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-01 16:52:45,568 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-07-01 16:52:45,568 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-01 16:52:45,568 - DEBUG - dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-07-01 16:52:45,568 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-07-01 16:52:45,568 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:45,568 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-07-01 16:52:45,569 - DEBUG - dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-07-01 16:52:45,569 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-01 16:52:45,569 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-07-01 16:52:45,569 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-01 16:52:45,569 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-07-01 16:52:45,569 - DEBUG - stack ['$8binary_subscr.2', '$112call.19']
2024-07-01 16:52:45,569 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-07-01 16:52:45,569 - DEBUG - stack ['$122compare_op.20']
2024-07-01 16:52:45,569 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:45,569 - DEBUG - stack ['$122compare_op.20', '$peaks128.21']
2024-07-01 16:52:45,569 - DEBUG - dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:45,569 - DEBUG - stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-07-01 16:52:45,569 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-07-01 16:52:45,570 - DEBUG - stack []
2024-07-01 16:52:45,570 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:45,570 - DEBUG - stack ['$peaks136.23']
2024-07-01 16:52:45,570 - DEBUG - dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-07-01 16:52:45,570 - DEBUG - stack ['$peaks136.23', '$const138.24']
2024-07-01 16:52:45,570 - DEBUG - dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-07-01 16:52:45,570 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-07-01 16:52:45,570 - DEBUG - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:45,570 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-07-01 16:52:45,570 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:45,570 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-07-01 16:52:45,570 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:45,570 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-07-01 16:52:45,571 - DEBUG - dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:45,571 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-07-01 16:52:45,571 - DEBUG - dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-07-01 16:52:45,571 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-07-01 16:52:45,571 - DEBUG - dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-07-01 16:52:45,571 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-07-01 16:52:45,571 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:45,571 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-07-01 16:52:45,571 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-07-01 16:52:45,571 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-07-01 16:52:45,571 - DEBUG - dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-07-01 16:52:45,571 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-07-01 16:52:45,572 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-07-01 16:52:45,572 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-07-01 16:52:45,572 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:45,572 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-07-01 16:52:45,572 - DEBUG - dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-07-01 16:52:45,572 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-07-01 16:52:45,572 - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:45,572 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-07-01 16:52:45,572 - DEBUG - dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:45,572 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-07-01 16:52:45,572 - DEBUG - dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-07-01 16:52:45,572 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-01 16:52:45,572 - DEBUG - dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-07-01 16:52:45,573 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-01 16:52:45,573 - DEBUG - dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-07-01 16:52:45,573 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-07-01 16:52:45,573 - DEBUG - dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:45,573 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-07-01 16:52:45,573 - DEBUG - dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-07-01 16:52:45,573 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-01 16:52:45,573 - DEBUG - dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-07-01 16:52:45,573 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-01 16:52:45,573 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-07-01 16:52:45,573 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-07-01 16:52:45,573 - DEBUG - dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-07-01 16:52:45,573 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-07-01 16:52:45,573 - DEBUG - dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-07-01 16:52:45,574 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-07-01 16:52:45,574 - DEBUG - dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-07-01 16:52:45,574 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-07-01 16:52:45,574 - DEBUG - dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-07-01 16:52:45,574 - DEBUG - stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-07-01 16:52:45,574 - DEBUG - dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-07-01 16:52:45,574 - DEBUG - stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-07-01 16:52:45,574 - DEBUG - dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:45,574 - DEBUG - stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-07-01 16:52:45,574 - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-07-01 16:52:45,574 - DEBUG - stack []
2024-07-01 16:52:45,574 - DEBUG - dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-07-01 16:52:45,574 - DEBUG - stack ['$peaks296.50']
2024-07-01 16:52:45,574 - DEBUG - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-07-01 16:52:45,574 - DEBUG - stack ['$peaks296.50', '$const298.51']
2024-07-01 16:52:45,575 - DEBUG - dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-07-01 16:52:45,575 - DEBUG - stack ['$300binary_subscr.52']
2024-07-01 16:52:45,575 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,575 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-07-01 16:52:45,575 - DEBUG - stack: []
2024-07-01 16:52:45,575 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-07-01 16:52:45,575 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-07-01 16:52:45,575 - DEBUG - stack []
2024-07-01 16:52:45,575 - DEBUG - dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-07-01 16:52:45,575 - DEBUG - stack ['$wait312.0']
2024-07-01 16:52:45,575 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-07-01 16:52:45,575 - DEBUG - stack ['$wait312.0', '$const314.1']
2024-07-01 16:52:45,575 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-07-01 16:52:45,575 - DEBUG - stack ['$binop_add316.2']
2024-07-01 16:52:45,575 - DEBUG - dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-07-01 16:52:45,576 - DEBUG - stack []
2024-07-01 16:52:45,576 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,576 - DEBUG - pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:45,576 - DEBUG - stack: []
2024-07-01 16:52:45,576 - DEBUG - state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-07-01 16:52:45,576 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-07-01 16:52:45,576 - DEBUG - stack []
2024-07-01 16:52:45,576 - DEBUG - dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-07-01 16:52:45,576 - DEBUG - stack ['$const324.0']
2024-07-01 16:52:45,576 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,576 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:45,576 - DEBUG - stack: []
2024-07-01 16:52:45,576 - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-07-01 16:52:45,576 - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-01 16:52:45,576 - DEBUG - stack []
2024-07-01 16:52:45,577 - DEBUG - dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-01 16:52:45,577 - DEBUG - stack ['$n328.0']
2024-07-01 16:52:45,577 - DEBUG - dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-01 16:52:45,577 - DEBUG - stack ['$n328.0', '$x330.1']
2024-07-01 16:52:45,577 - DEBUG - dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-01 16:52:45,577 - DEBUG - stack ['$n328.0', '$332load_attr.2']
2024-07-01 16:52:45,577 - DEBUG - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-01 16:52:45,577 - DEBUG - stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-07-01 16:52:45,577 - DEBUG - dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-01 16:52:45,577 - DEBUG - stack ['$n328.0', '$344binary_subscr.4']
2024-07-01 16:52:45,577 - DEBUG - dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-07-01 16:52:45,577 - DEBUG - stack ['$354compare_op.5']
2024-07-01 16:52:45,577 - DEBUG - end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,577 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-01 16:52:45,578 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-01 16:52:45,578 - DEBUG - stack: []
2024-07-01 16:52:45,578 - DEBUG - state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-07-01 16:52:45,578 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-07-01 16:52:45,578 - DEBUG - stack []
2024-07-01 16:52:45,578 - DEBUG - dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-07-01 16:52:45,578 - DEBUG - stack ['$null$362.1', '$362load_global.0']
2024-07-01 16:52:45,578 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-01 16:52:45,578 - DEBUG - stack ['$null$362.1', '$374load_attr.2']
2024-07-01 16:52:45,578 - DEBUG - dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-07-01 16:52:45,578 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-07-01 16:52:45,578 - DEBUG - dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-01 16:52:45,578 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-07-01 16:52:45,578 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-01 16:52:45,579 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-07-01 16:52:45,579 - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-07-01 16:52:45,579 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-07-01 16:52:45,579 - DEBUG - dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-07-01 16:52:45,579 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-07-01 16:52:45,579 - DEBUG - dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-07-01 16:52:45,579 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-01 16:52:45,579 - DEBUG - dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-07-01 16:52:45,579 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-01 16:52:45,579 - DEBUG - dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-07-01 16:52:45,579 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-07-01 16:52:45,579 - DEBUG - dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-01 16:52:45,580 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-07-01 16:52:45,580 - DEBUG - dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-07-01 16:52:45,580 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-07-01 16:52:45,580 - DEBUG - dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-07-01 16:52:45,580 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-07-01 16:52:45,580 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-01 16:52:45,580 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-07-01 16:52:45,580 - DEBUG - dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-07-01 16:52:45,580 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-07-01 16:52:45,580 - DEBUG - dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-01 16:52:45,580 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-07-01 16:52:45,580 - DEBUG - dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-01 16:52:45,580 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-07-01 16:52:45,580 - DEBUG - dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-07-01 16:52:45,580 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-01 16:52:45,581 - DEBUG - dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-07-01 16:52:45,581 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-01 16:52:45,581 - DEBUG - dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-07-01 16:52:45,581 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-07-01 16:52:45,581 - DEBUG - dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-01 16:52:45,581 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-07-01 16:52:45,581 - DEBUG - dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-07-01 16:52:45,581 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-01 16:52:45,581 - DEBUG - dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-07-01 16:52:45,581 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-01 16:52:45,581 - DEBUG - dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-07-01 16:52:45,581 - DEBUG - stack ['$496call.24']
2024-07-01 16:52:45,581 - DEBUG - dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-07-01 16:52:45,582 - DEBUG - stack []
2024-07-01 16:52:45,582 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-01 16:52:45,582 - DEBUG - stack ['$x508.25']
2024-07-01 16:52:45,582 - DEBUG - dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-07-01 16:52:45,582 - DEBUG - stack ['$x508.25', '$n510.26']
2024-07-01 16:52:45,582 - DEBUG - dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-07-01 16:52:45,582 - DEBUG - stack ['$512binary_subscr.27']
2024-07-01 16:52:45,582 - DEBUG - dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-07-01 16:52:45,582 - DEBUG - stack ['$512binary_subscr.27', '$maxn522.28']
2024-07-01 16:52:45,582 - DEBUG - dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-07-01 16:52:45,582 - DEBUG - stack ['$524compare_op.29']
2024-07-01 16:52:45,582 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-01 16:52:45,582 - DEBUG - stack ['$524compare_op.29', '$peaks530.30']
2024-07-01 16:52:45,582 - DEBUG - dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-07-01 16:52:45,583 - DEBUG - stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-07-01 16:52:45,583 - DEBUG - dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-07-01 16:52:45,583 - DEBUG - stack []
2024-07-01 16:52:45,583 - DEBUG - dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-07-01 16:52:45,583 - DEBUG - stack ['$peaks538.32']
2024-07-01 16:52:45,583 - DEBUG - dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-07-01 16:52:45,583 - DEBUG - stack ['$peaks538.32', '$n540.33']
2024-07-01 16:52:45,583 - DEBUG - dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-07-01 16:52:45,583 - DEBUG - stack ['$542binary_subscr.34']
2024-07-01 16:52:45,583 - DEBUG - end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,583 - DEBUG - pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-01 16:52:45,583 - DEBUG - stack: []
2024-07-01 16:52:45,583 - DEBUG - state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-07-01 16:52:45,583 - DEBUG - dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-01 16:52:45,583 - DEBUG - stack []
2024-07-01 16:52:45,584 - DEBUG - dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:45,584 - DEBUG - stack ['$const852.0']
2024-07-01 16:52:45,584 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,584 - DEBUG - pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-01 16:52:45,584 - DEBUG - stack: []
2024-07-01 16:52:45,584 - DEBUG - state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-07-01 16:52:45,584 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-07-01 16:52:45,584 - DEBUG - stack []
2024-07-01 16:52:45,584 - DEBUG - dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-07-01 16:52:45,584 - DEBUG - stack ['$n554.0']
2024-07-01 16:52:45,584 - DEBUG - dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-07-01 16:52:45,584 - DEBUG - stack ['$n554.0', '$const556.1']
2024-07-01 16:52:45,585 - DEBUG - dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-07-01 16:52:45,585 - DEBUG - stack ['$binop_iadd558.2']
2024-07-01 16:52:45,585 - DEBUG - dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-07-01 16:52:45,585 - DEBUG - stack []
2024-07-01 16:52:45,585 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,585 - DEBUG - pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:45,585 - DEBUG - stack: []
2024-07-01 16:52:45,585 - DEBUG - state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-07-01 16:52:45,585 - DEBUG - dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-07-01 16:52:45,585 - DEBUG - stack []
2024-07-01 16:52:45,585 - DEBUG - dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-07-01 16:52:45,585 - DEBUG - stack ['$null$566.1', '$566load_global.0']
2024-07-01 16:52:45,586 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-01 16:52:45,586 - DEBUG - stack ['$null$566.1', '$578load_attr.2']
2024-07-01 16:52:45,586 - DEBUG - dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-07-01 16:52:45,586 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-07-01 16:52:45,586 - DEBUG - dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-01 16:52:45,586 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-07-01 16:52:45,586 - DEBUG - dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-01 16:52:45,586 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-07-01 16:52:45,586 - DEBUG - dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-07-01 16:52:45,586 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-07-01 16:52:45,586 - DEBUG - dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-07-01 16:52:45,586 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-07-01 16:52:45,586 - DEBUG - dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-07-01 16:52:45,586 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-01 16:52:45,587 - DEBUG - dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-07-01 16:52:45,587 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-01 16:52:45,587 - DEBUG - dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-07-01 16:52:45,587 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-07-01 16:52:45,587 - DEBUG - dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-01 16:52:45,587 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-07-01 16:52:45,587 - DEBUG - dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-07-01 16:52:45,587 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-07-01 16:52:45,587 - DEBUG - dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-07-01 16:52:45,587 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-07-01 16:52:45,587 - DEBUG - dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-01 16:52:45,587 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-07-01 16:52:45,587 - DEBUG - dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-07-01 16:52:45,587 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-07-01 16:52:45,587 - DEBUG - dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-01 16:52:45,588 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-07-01 16:52:45,588 - DEBUG - dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-01 16:52:45,588 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-07-01 16:52:45,588 - DEBUG - dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-07-01 16:52:45,588 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-01 16:52:45,588 - DEBUG - dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-07-01 16:52:45,588 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-01 16:52:45,588 - DEBUG - dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-07-01 16:52:45,588 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-07-01 16:52:45,588 - DEBUG - dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-01 16:52:45,588 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-07-01 16:52:45,588 - DEBUG - dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-07-01 16:52:45,588 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-01 16:52:45,588 - DEBUG - dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-07-01 16:52:45,589 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-01 16:52:45,589 - DEBUG - dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-07-01 16:52:45,589 - DEBUG - stack ['$700call.24']
2024-07-01 16:52:45,589 - DEBUG - dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-07-01 16:52:45,589 - DEBUG - stack []
2024-07-01 16:52:45,589 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-01 16:52:45,589 - DEBUG - stack ['$peaks712.25']
2024-07-01 16:52:45,589 - DEBUG - dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-07-01 16:52:45,589 - DEBUG - stack ['$peaks712.25', '$n714.26']
2024-07-01 16:52:45,589 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-07-01 16:52:45,589 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-07-01 16:52:45,589 - DEBUG - dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:45,589 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-07-01 16:52:45,589 - DEBUG - dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-07-01 16:52:45,589 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-07-01 16:52:45,590 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-01 16:52:45,590 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-07-01 16:52:45,590 - DEBUG - dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:45,590 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-07-01 16:52:45,590 - DEBUG - dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-07-01 16:52:45,590 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-07-01 16:52:45,590 - DEBUG - dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-07-01 16:52:45,590 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-07-01 16:52:45,590 - DEBUG - dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-07-01 16:52:45,590 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-07-01 16:52:45,590 - DEBUG - dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-07-01 16:52:45,590 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-07-01 16:52:45,590 - DEBUG - dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-07-01 16:52:45,590 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-07-01 16:52:45,591 - DEBUG - dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-07-01 16:52:45,591 - DEBUG - stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-07-01 16:52:45,591 - DEBUG - dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-07-01 16:52:45,591 - DEBUG - stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-07-01 16:52:45,591 - DEBUG - dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:45,591 - DEBUG - stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-07-01 16:52:45,591 - DEBUG - dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-07-01 16:52:45,591 - DEBUG - stack []
2024-07-01 16:52:45,591 - DEBUG - dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-07-01 16:52:45,591 - DEBUG - stack ['$peaks770.36']
2024-07-01 16:52:45,591 - DEBUG - dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-07-01 16:52:45,591 - DEBUG - stack ['$peaks770.36', '$n772.37']
2024-07-01 16:52:45,591 - DEBUG - dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-07-01 16:52:45,591 - DEBUG - stack ['$774binary_subscr.38']
2024-07-01 16:52:45,592 - DEBUG - end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,592 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-01 16:52:45,592 - DEBUG - pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-01 16:52:45,592 - DEBUG - stack: []
2024-07-01 16:52:45,592 - DEBUG - state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-07-01 16:52:45,592 - DEBUG - dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-07-01 16:52:45,592 - DEBUG - stack []
2024-07-01 16:52:45,592 - DEBUG - dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-07-01 16:52:45,592 - DEBUG - stack ['$n786.0']
2024-07-01 16:52:45,592 - DEBUG - dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-07-01 16:52:45,592 - DEBUG - stack ['$n786.0', '$const788.1']
2024-07-01 16:52:45,592 - DEBUG - dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-07-01 16:52:45,592 - DEBUG - stack ['$binop_iadd790.2']
2024-07-01 16:52:45,592 - DEBUG - dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-07-01 16:52:45,592 - DEBUG - stack []
2024-07-01 16:52:45,593 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,593 - DEBUG - pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:45,593 - DEBUG - stack: []
2024-07-01 16:52:45,593 - DEBUG - state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-07-01 16:52:45,593 - DEBUG - dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-07-01 16:52:45,593 - DEBUG - stack []
2024-07-01 16:52:45,593 - DEBUG - dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-07-01 16:52:45,593 - DEBUG - stack ['$n798.0']
2024-07-01 16:52:45,593 - DEBUG - dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-07-01 16:52:45,593 - DEBUG - stack ['$n798.0', '$wait800.1']
2024-07-01 16:52:45,593 - DEBUG - dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-07-01 16:52:45,593 - DEBUG - stack ['$n798.0', '$wait800.1', '$const802.2']
2024-07-01 16:52:45,593 - DEBUG - dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-07-01 16:52:45,593 - DEBUG - stack ['$n798.0', '$binop_add804.3']
2024-07-01 16:52:45,593 - DEBUG - dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-07-01 16:52:45,594 - DEBUG - stack ['$binop_iadd808.4']
2024-07-01 16:52:45,594 - DEBUG - dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-01 16:52:45,594 - DEBUG - stack []
2024-07-01 16:52:45,594 - DEBUG - dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-01 16:52:45,594 - DEBUG - stack ['$n814.5']
2024-07-01 16:52:45,594 - DEBUG - dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-01 16:52:45,594 - DEBUG - stack ['$n814.5', '$x816.6']
2024-07-01 16:52:45,594 - DEBUG - dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-01 16:52:45,594 - DEBUG - stack ['$n814.5', '$818load_attr.7']
2024-07-01 16:52:45,594 - DEBUG - dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-01 16:52:45,594 - DEBUG - stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-07-01 16:52:45,594 - DEBUG - dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-01 16:52:45,594 - DEBUG - stack ['$n814.5', '$830binary_subscr.9']
2024-07-01 16:52:45,594 - DEBUG - dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-07-01 16:52:45,595 - DEBUG - stack ['$840compare_op.10']
2024-07-01 16:52:45,595 - DEBUG - end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,595 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:45,595 - DEBUG - pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:45,595 - DEBUG - stack: []
2024-07-01 16:52:45,595 - DEBUG - state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-07-01 16:52:45,595 - DEBUG - dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-01 16:52:45,595 - DEBUG - stack []
2024-07-01 16:52:45,595 - DEBUG - dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:45,595 - DEBUG - stack ['$const848.0']
2024-07-01 16:52:45,595 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,595 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:45,595 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:45,596 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-07-01 16:52:45,596 - DEBUG - defmap: {}
2024-07-01 16:52:45,596 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,596 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,596 - DEBUG - keep phismap: {}
2024-07-01 16:52:45,596 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:45,596 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:45,596 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-07-01 16:52:45,597 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:45,597 - DEBUG - block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:45,597 - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-07-01 16:52:45,597 - DEBUG - block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-07-01 16:52:45,597 - DEBUG - block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:45,597 - DEBUG - block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-07-01 16:52:45,597 - DEBUG - block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:45,597 - DEBUG - block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-07-01 16:52:45,597 - DEBUG - block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,598 - DEBUG - block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,601 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-07-01 16:52:45,616 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:45,616 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,616 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:45,616 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:45,616 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:45,616 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:45,616 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:45,617 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:45,617 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:45,617 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:45,617 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:45,617 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:45,617 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,617 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:45,617 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:45,617 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:45,617 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,617 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:45,617 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:45,618 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,618 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,618 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,618 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:45,618 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,618 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:45,618 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:45,618 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:45,618 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:45,618 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:45,618 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:45,618 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,619 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:45,620 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:45,620 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,620 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:45,620 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:45,620 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:45,620 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,620 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,620 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:45,620 - DEBUG - ==== SSA block analysis pass on 312
2024-07-01 16:52:45,620 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,620 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:45,620 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:45,620 - DEBUG - on stmt: jump 328
2024-07-01 16:52:45,621 - DEBUG - ==== SSA block analysis pass on 324
2024-07-01 16:52:45,621 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,621 - DEBUG - on stmt: n = const(int, 1)
2024-07-01 16:52:45,621 - DEBUG - on stmt: jump 328
2024-07-01 16:52:45,621 - DEBUG - ==== SSA block analysis pass on 328
2024-07-01 16:52:45,621 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,621 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,621 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:45,621 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:45,621 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:45,621 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,621 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,621 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:45,621 - DEBUG - ==== SSA block analysis pass on 362
2024-07-01 16:52:45,622 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,622 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,622 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:45,622 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:45,622 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:45,622 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:45,622 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,622 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:45,622 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:45,622 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,622 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:45,622 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:45,622 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,623 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,623 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,623 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:45,623 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,623 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,623 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:45,623 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:45,623 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,623 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,623 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,623 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:45,623 - DEBUG - ==== SSA block analysis pass on 554
2024-07-01 16:52:45,624 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,624 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:45,624 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,624 - DEBUG - on stmt: n = $binop_iadd558.2
2024-07-01 16:52:45,624 - DEBUG - on stmt: jump 853
2024-07-01 16:52:45,624 - DEBUG - ==== SSA block analysis pass on 566
2024-07-01 16:52:45,624 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,624 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,624 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:45,624 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:45,624 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:45,624 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:45,624 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,624 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:45,625 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:45,625 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,625 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:45,625 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:45,625 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,625 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,625 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,625 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:45,625 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,625 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,625 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,626 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:45,626 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:45,626 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,626 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:45,626 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,626 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,626 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,626 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:45,626 - DEBUG - ==== SSA block analysis pass on 786
2024-07-01 16:52:45,626 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,626 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:45,626 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,626 - DEBUG - on stmt: n = $binop_iadd790.2
2024-07-01 16:52:45,626 - DEBUG - on stmt: jump 853
2024-07-01 16:52:45,627 - DEBUG - ==== SSA block analysis pass on 798
2024-07-01 16:52:45,627 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,627 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:45,627 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:45,627 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,627 - DEBUG - on stmt: n = $binop_iadd808.4
2024-07-01 16:52:45,627 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,627 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:45,627 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:45,627 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:45,627 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,627 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,628 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:45,628 - DEBUG - ==== SSA block analysis pass on 848
2024-07-01 16:52:45,628 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,628 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:45,628 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:45,628 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:45,628 - DEBUG - ==== SSA block analysis pass on 852
2024-07-01 16:52:45,628 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,628 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:45,628 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:45,628 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:45,628 - DEBUG - ==== SSA block analysis pass on 853
2024-07-01 16:52:45,628 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65e57690>
2024-07-01 16:52:45,629 - DEBUG - on stmt: jump 328
2024-07-01 16:52:45,631 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x7f1c6685fed0>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x7f1c6685e550>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x7f1c795a2750>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x7f1c795a3f50>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x7f1c6685d650>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x7f1c6685cc50>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x7f1c79562b50>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x7f1c6685e510>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x7f1c6685c250>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x7f1c795a0d10>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x7f1c79295e50>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x7f1c79294b90>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x7f1c79294150>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x7f1c792969d0>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x7f1c79294210>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x7f1c79295350>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x7f1c795a3ad0>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x7f1c79560b90>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7f1c792964d0>, 0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79294c10>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1c795a2310>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c79297ad0>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x7f1c79297f10>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79296050>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79297390>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x7f1c79296dd0>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x7f1c79193a50>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x7f1c79191c50>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x7f1c79192950>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x7f1c6685e690>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1c795a2b90>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x7f1c79191290>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x7f1c6f0f4b90>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x7f1c6f0f6e50>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f1c6f0f7f50>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f1c6f0f77d0>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x7f1c6f0f74d0>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x7f1c6f0f6c50>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x7f1c6f0f6f10>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x7f1c6f0f5250>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c6f0f5190>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x7f1c6f0f4cd0>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7f1c6685f090>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x7f1c6f0f4150>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x7f1c6f0f44d0>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x7f1c6f0f65d0>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1c79297c10>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x7f1c66855390>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x7f1c66855210>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x7f1c66855ed0>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f1c66855c10>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f1c668564d0>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f1c795a2590>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x7f1c66856fd0>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x7f1c66856a90>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x7f1c66854f50>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x7f1c668543d0>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x7f1c66857b10>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c664c3550>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c7919fbd0>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x7f1c7919c590>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x7f1c7919ca50>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x7f1c7919e1d0>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7f1c6685f690>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c795a0750>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x7f1c6685f990>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x7f1c6685e490>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x7f1c6685fc50>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x7f1c79294710>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x7f1c79192290>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x7f1c6f0f4a50>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x7f1c66857710>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x7f1c66854d50>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x7f1c6f0f57d0>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x7f1c66854790>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x7f1c66855450>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x7f1c79295190>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x7f1c66855b90>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x7f1c79193310>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x7f1c6f0f60d0>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x7f1c6685e190>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x7f1c6685d8d0>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x7f1c6685dc10>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x7f1c6685cd50>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x7f1c6685c090>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x7f1c79296510>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x7f1c79297e90>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x7f1c79294a10>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x7f1c79192410>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x7f1c6685e6d0>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x7f1c79192590>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x7f1c6f0f6e10>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c79560ad0>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x7f1c6f0f4dd0>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x7f1c66857850>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x7f1c6685f2d0>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x7f1c66857490>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x7f1c66854c10>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x7f1c7919fe50>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x7f1c7919ce90>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x7f1c7919ef50>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x7f1c66856410>, 566)],
             'bool310': [(<numba.core.ir.Assign object at 0x7f1c79296950>, 0)],
             'bool360': [(<numba.core.ir.Assign object at 0x7f1c79296a10>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x7f1c6f0f6ed0>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x7f1c66854290>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x7f1c7919f210>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x7f1c65fb1ed0>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7f1c6f0f7d50>, 362)],
             'n': [(<numba.core.ir.Assign object at 0x7f1c79296f90>, 312),
                   (<numba.core.ir.Assign object at 0x7f1c79297810>, 324),
                   (<numba.core.ir.Assign object at 0x7f1c6f0f5ad0>, 554),
                   (<numba.core.ir.Assign object at 0x7f1c668546d0>, 786),
                   (<numba.core.ir.Assign object at 0x7f1c66857bd0>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x7f1c79563d90>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7f1c6602d750>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7f1c661ce9d0>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7f1c660166d0>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7f1c65fdd4d0>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7f1c795626d0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c664be550>, 0)]})
2024-07-01 16:52:45,631 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c65e57690>
2024-07-01 16:52:45,631 - DEBUG - Fix SSA violator on var n
2024-07-01 16:52:45,632 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:45,632 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,632 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:45,632 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:45,632 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:45,632 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:45,632 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:45,632 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:45,632 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:45,632 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:45,632 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:45,632 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,633 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:45,634 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:45,634 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:45,634 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:45,634 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:45,635 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,635 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,635 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,635 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:45,635 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,635 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:45,635 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:45,635 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,635 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:45,635 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:45,635 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:45,635 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,635 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,635 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:45,636 - DEBUG - ==== SSA block rewrite pass on 312
2024-07-01 16:52:45,636 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,636 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:45,636 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:45,636 - DEBUG - first assign: n
2024-07-01 16:52:45,636 - DEBUG - replaced with: n = wait + $const314.1
2024-07-01 16:52:45,636 - DEBUG - on stmt: jump 328
2024-07-01 16:52:45,636 - DEBUG - ==== SSA block rewrite pass on 324
2024-07-01 16:52:45,636 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,636 - DEBUG - on stmt: n = const(int, 1)
2024-07-01 16:52:45,636 - DEBUG - replaced with: n.1 = const(int, 1)
2024-07-01 16:52:45,636 - DEBUG - on stmt: jump 328
2024-07-01 16:52:45,636 - DEBUG - ==== SSA block rewrite pass on 328
2024-07-01 16:52:45,636 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,637 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,637 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:45,637 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:45,637 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:45,637 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,637 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,637 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:45,637 - DEBUG - ==== SSA block rewrite pass on 362
2024-07-01 16:52:45,637 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,637 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,637 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:45,637 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:45,637 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:45,638 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:45,638 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:45,638 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,638 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,639 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:45,639 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:45,639 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,639 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,639 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,639 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:45,639 - DEBUG - ==== SSA block rewrite pass on 554
2024-07-01 16:52:45,639 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,639 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:45,639 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,639 - DEBUG - on stmt: n = $binop_iadd558.2
2024-07-01 16:52:45,639 - DEBUG - replaced with: n.2 = $binop_iadd558.2
2024-07-01 16:52:45,640 - DEBUG - on stmt: jump 853
2024-07-01 16:52:45,640 - DEBUG - ==== SSA block rewrite pass on 566
2024-07-01 16:52:45,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,640 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,640 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:45,640 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:45,640 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:45,640 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:45,640 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,640 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:45,640 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:45,640 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,640 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:45,640 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:45,640 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,641 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,641 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,641 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:45,641 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,641 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,641 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,641 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:45,641 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:45,641 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,641 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:45,641 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,642 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,642 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,642 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:45,642 - DEBUG - ==== SSA block rewrite pass on 786
2024-07-01 16:52:45,642 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,642 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:45,642 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,642 - DEBUG - on stmt: n = $binop_iadd790.2
2024-07-01 16:52:45,642 - DEBUG - replaced with: n.3 = $binop_iadd790.2
2024-07-01 16:52:45,642 - DEBUG - on stmt: jump 853
2024-07-01 16:52:45,642 - DEBUG - ==== SSA block rewrite pass on 798
2024-07-01 16:52:45,642 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,642 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:45,642 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:45,642 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,643 - DEBUG - on stmt: n = $binop_iadd808.4
2024-07-01 16:52:45,643 - DEBUG - replaced with: n.4 = $binop_iadd808.4
2024-07-01 16:52:45,643 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,643 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:45,643 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:45,643 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:45,643 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,643 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,643 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:45,643 - DEBUG - ==== SSA block rewrite pass on 848
2024-07-01 16:52:45,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,643 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:45,643 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:45,643 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:45,644 - DEBUG - ==== SSA block rewrite pass on 852
2024-07-01 16:52:45,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,644 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:45,644 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:45,644 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:45,644 - DEBUG - ==== SSA block rewrite pass on 853
2024-07-01 16:52:45,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6667d710>
2024-07-01 16:52:45,644 - DEBUG - on stmt: jump 328
2024-07-01 16:52:45,644 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x7f1c65f78110>],
             324: [<numba.core.ir.Assign object at 0x7f1c66002450>],
             554: [<numba.core.ir.Assign object at 0x7f1c66002550>],
             786: [<numba.core.ir.Assign object at 0x7f1c666aec10>],
             798: [<numba.core.ir.Assign object at 0x7f1c65fc5dd0>]})
2024-07-01 16:52:45,644 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:45,644 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,644 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:45,644 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:45,644 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:45,645 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:45,645 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:45,645 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:45,645 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:45,645 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:45,645 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:45,645 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:45,645 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,645 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:45,645 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:45,645 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:45,645 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,645 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:45,645 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:45,646 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:45,646 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:45,646 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:45,646 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,647 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:45,648 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,648 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:45,648 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:45,648 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,648 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:45,648 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:45,648 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:45,648 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,648 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,648 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:45,648 - DEBUG - ==== SSA block rewrite pass on 312
2024-07-01 16:52:45,648 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,648 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:45,649 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:45,649 - DEBUG - on stmt: jump 328
2024-07-01 16:52:45,649 - DEBUG - ==== SSA block rewrite pass on 324
2024-07-01 16:52:45,649 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,649 - DEBUG - on stmt: n.1 = const(int, 1)
2024-07-01 16:52:45,649 - DEBUG - on stmt: jump 328
2024-07-01 16:52:45,649 - DEBUG - ==== SSA block rewrite pass on 328
2024-07-01 16:52:45,649 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,649 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,649 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:45,649 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:45,649 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:45,649 - DEBUG - find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:45,650 - DEBUG - find_def_from_top label 328
2024-07-01 16:52:45,650 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-07-01 16:52:45,650 - DEBUG - find_def_from_bottom label 312
2024-07-01 16:52:45,650 - DEBUG - incoming_def n = wait + $const314.1
2024-07-01 16:52:45,650 - DEBUG - find_def_from_bottom label 324
2024-07-01 16:52:45,650 - DEBUG - incoming_def n.1 = const(int, 1)
2024-07-01 16:52:45,650 - DEBUG - find_def_from_bottom label 853
2024-07-01 16:52:45,650 - DEBUG - find_def_from_top label 853
2024-07-01 16:52:45,650 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-07-01 16:52:45,650 - DEBUG - find_def_from_bottom label 554
2024-07-01 16:52:45,650 - DEBUG - incoming_def n.2 = $binop_iadd558.2
2024-07-01 16:52:45,650 - DEBUG - find_def_from_bottom label 786
2024-07-01 16:52:45,650 - DEBUG - incoming_def n.3 = $binop_iadd790.2
2024-07-01 16:52:45,650 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-07-01 16:52:45,651 - DEBUG - replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-07-01 16:52:45,651 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,651 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,651 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:45,651 - DEBUG - ==== SSA block rewrite pass on 362
2024-07-01 16:52:45,651 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,651 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,651 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:45,651 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:45,651 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:45,651 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:45,651 - DEBUG - find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-07-01 16:52:45,652 - DEBUG - find_def_from_top label 362
2024-07-01 16:52:45,652 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-07-01 16:52:45,652 - DEBUG - find_def_from_bottom label 328
2024-07-01 16:52:45,652 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-07-01 16:52:45,652 - DEBUG - find_def_from_bottom label 798
2024-07-01 16:52:45,652 - DEBUG - incoming_def n.4 = $binop_iadd808.4
2024-07-01 16:52:45,652 - DEBUG - replaced with: $binop_sub404.9 = n.7 - pre_max
2024-07-01 16:52:45,652 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,652 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:45,652 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:45,652 - DEBUG - find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-07-01 16:52:45,652 - DEBUG - replaced with: $binop_add438.15 = n.7 + post_max
2024-07-01 16:52:45,653 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,653 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:45,653 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:45,653 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,653 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,653 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,653 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:45,653 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,653 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,653 - DEBUG - find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,653 - DEBUG - replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:45,653 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:45,654 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:45,654 - DEBUG - find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-07-01 16:52:45,654 - DEBUG - replaced with: peaks[n.7] = $524compare_op.29
2024-07-01 16:52:45,654 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,654 - DEBUG - find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,654 - DEBUG - replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:45,654 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,654 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,654 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:45,654 - DEBUG - ==== SSA block rewrite pass on 554
2024-07-01 16:52:45,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,654 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:45,655 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,655 - DEBUG - find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,655 - DEBUG - find_def_from_top label 554
2024-07-01 16:52:45,655 - DEBUG - idom 362 from label 554
2024-07-01 16:52:45,655 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:45,655 - DEBUG - replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,655 - DEBUG - on stmt: n.2 = $binop_iadd558.2
2024-07-01 16:52:45,655 - DEBUG - on stmt: jump 853
2024-07-01 16:52:45,655 - DEBUG - ==== SSA block rewrite pass on 566
2024-07-01 16:52:45,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,655 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,656 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:45,656 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:45,656 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:45,656 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:45,656 - DEBUG - find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-07-01 16:52:45,656 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:45,656 - DEBUG - idom 362 from label 566
2024-07-01 16:52:45,656 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:45,656 - DEBUG - replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-07-01 16:52:45,656 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,656 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:45,656 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:45,656 - DEBUG - find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-07-01 16:52:45,657 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:45,657 - DEBUG - idom 362 from label 566
2024-07-01 16:52:45,657 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:45,657 - DEBUG - replaced with: $binop_add642.15 = n.7 + post_avg
2024-07-01 16:52:45,657 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,657 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:45,657 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:45,657 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,657 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:45,657 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,657 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:45,658 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,658 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,658 - DEBUG - find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,658 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:45,658 - DEBUG - idom 362 from label 566
2024-07-01 16:52:45,658 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:45,658 - DEBUG - replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:45,658 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,658 - DEBUG - find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,658 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:45,658 - DEBUG - idom 362 from label 566
2024-07-01 16:52:45,658 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:45,658 - DEBUG - replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:45,659 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:45,659 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:45,659 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,659 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:45,659 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-07-01 16:52:45,659 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:45,659 - DEBUG - idom 362 from label 566
2024-07-01 16:52:45,659 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:45,659 - DEBUG - replaced with: peaks[n.7] = $binop_iand758.35
2024-07-01 16:52:45,659 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,659 - DEBUG - find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:45,659 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:45,660 - DEBUG - idom 362 from label 566
2024-07-01 16:52:45,660 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:45,660 - DEBUG - replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:45,660 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,660 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,660 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:45,660 - DEBUG - ==== SSA block rewrite pass on 786
2024-07-01 16:52:45,660 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,660 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:45,660 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,660 - DEBUG - find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,661 - DEBUG - find_def_from_top label 786
2024-07-01 16:52:45,661 - DEBUG - idom 566 from label 786
2024-07-01 16:52:45,661 - DEBUG - find_def_from_bottom label 566
2024-07-01 16:52:45,661 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:45,661 - DEBUG - idom 362 from label 566
2024-07-01 16:52:45,661 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:45,661 - DEBUG - replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,661 - DEBUG - on stmt: n.3 = $binop_iadd790.2
2024-07-01 16:52:45,661 - DEBUG - on stmt: jump 853
2024-07-01 16:52:45,661 - DEBUG - ==== SSA block rewrite pass on 798
2024-07-01 16:52:45,661 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,661 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:45,662 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:45,662 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,662 - DEBUG - find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,662 - DEBUG - find_def_from_top label 798
2024-07-01 16:52:45,662 - DEBUG - idom 566 from label 798
2024-07-01 16:52:45,662 - DEBUG - find_def_from_bottom label 566
2024-07-01 16:52:45,662 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:45,662 - DEBUG - idom 362 from label 566
2024-07-01 16:52:45,662 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:45,662 - DEBUG - replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:45,662 - DEBUG - on stmt: n.4 = $binop_iadd808.4
2024-07-01 16:52:45,662 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:45,663 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:45,663 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:45,663 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:45,663 - DEBUG - find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:45,663 - DEBUG - replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-07-01 16:52:45,663 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,663 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,663 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:45,663 - DEBUG - ==== SSA block rewrite pass on 848
2024-07-01 16:52:45,664 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,664 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:45,664 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:45,664 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:45,664 - DEBUG - ==== SSA block rewrite pass on 852
2024-07-01 16:52:45,664 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,664 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:45,664 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:45,664 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:45,664 - DEBUG - ==== SSA block rewrite pass on 853
2024-07-01 16:52:45,664 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f97090>
2024-07-01 16:52:45,664 - DEBUG - on stmt: jump 328
2024-07-01 16:52:45,673 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-07-01 16:52:45,673 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:45,673 - DEBUG - stack: []
2024-07-01 16:52:45,673 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:45,673 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-07-01 16:52:45,673 - DEBUG - stack []
2024-07-01 16:52:45,673 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-07-01 16:52:45,673 - DEBUG - stack []
2024-07-01 16:52:45,673 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-07-01 16:52:45,673 - DEBUG - stack []
2024-07-01 16:52:45,674 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-07-01 16:52:45,674 - DEBUG - stack []
2024-07-01 16:52:45,674 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-07-01 16:52:45,674 - DEBUG - stack ['$a6.0']
2024-07-01 16:52:45,674 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-07-01 16:52:45,674 - DEBUG - stack ['$8load_attr.1']
2024-07-01 16:52:45,674 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-07-01 16:52:45,674 - DEBUG - stack ['$8load_attr.1', '$const18.2']
2024-07-01 16:52:45,674 - DEBUG - dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-07-01 16:52:45,674 - DEBUG - stack ['$20compare_op.3']
2024-07-01 16:52:45,674 - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,674 - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:45,675 - DEBUG - stack: []
2024-07-01 16:52:45,675 - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-07-01 16:52:45,675 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-07-01 16:52:45,675 - DEBUG - stack []
2024-07-01 16:52:45,675 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-07-01 16:52:45,675 - DEBUG - stack ['$null$28.1', '$28load_global.0']
2024-07-01 16:52:45,675 - DEBUG - dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-07-01 16:52:45,675 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-01 16:52:45,675 - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-07-01 16:52:45,675 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-01 16:52:45,675 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-07-01 16:52:45,676 - DEBUG - stack ['$46call.3']
2024-07-01 16:52:45,676 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,676 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:45,676 - DEBUG - stack: []
2024-07-01 16:52:45,676 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-01 16:52:45,676 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-07-01 16:52:45,676 - DEBUG - stack []
2024-07-01 16:52:45,676 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-07-01 16:52:45,676 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-07-01 16:52:45,676 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-07-01 16:52:45,676 - DEBUG - stack ['$null$58.1', '$70load_attr.2']
2024-07-01 16:52:45,676 - DEBUG - dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-07-01 16:52:45,677 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-01 16:52:45,677 - DEBUG - dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-07-01 16:52:45,677 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-01 16:52:45,677 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-07-01 16:52:45,677 - DEBUG - stack ['$86call.4']
2024-07-01 16:52:45,677 - DEBUG - dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-07-01 16:52:45,677 - DEBUG - stack []
2024-07-01 16:52:45,677 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-07-01 16:52:45,677 - DEBUG - stack ['$null$98.6', '$98load_global.5']
2024-07-01 16:52:45,677 - DEBUG - dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-07-01 16:52:45,677 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-01 16:52:45,677 - DEBUG - dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-07-01 16:52:45,678 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-01 16:52:45,678 - DEBUG - dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-07-01 16:52:45,678 - DEBUG - stack ['$116call.8']
2024-07-01 16:52:45,678 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-07-01 16:52:45,678 - DEBUG - stack ['$null$126.9', '$126load_method.10']
2024-07-01 16:52:45,678 - DEBUG - dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-07-01 16:52:45,678 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-01 16:52:45,678 - DEBUG - dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-07-01 16:52:45,678 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-01 16:52:45,678 - DEBUG - dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-07-01 16:52:45,678 - DEBUG - stack ['$154call.12']
2024-07-01 16:52:45,678 - DEBUG - dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-07-01 16:52:45,679 - DEBUG - stack []
2024-07-01 16:52:45,679 - DEBUG - dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-07-01 16:52:45,679 - DEBUG - stack ['$null$166.13']
2024-07-01 16:52:45,679 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-07-01 16:52:45,679 - DEBUG - stack ['$null$166.13', '$168load_deref.14']
2024-07-01 16:52:45,679 - DEBUG - dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-07-01 16:52:45,679 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-01 16:52:45,679 - DEBUG - dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-07-01 16:52:45,679 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-01 16:52:45,679 - DEBUG - dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-07-01 16:52:45,679 - DEBUG - stack ['$176call.16']
2024-07-01 16:52:45,679 - DEBUG - end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,679 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:45,680 - DEBUG - stack: []
2024-07-01 16:52:45,680 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-07-01 16:52:45,680 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-07-01 16:52:45,680 - DEBUG - stack []
2024-07-01 16:52:45,680 - DEBUG - dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-07-01 16:52:45,680 - DEBUG - stack ['$max_value188.0']
2024-07-01 16:52:45,680 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,680 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:45,680 - DEBUG - stack: []
2024-07-01 16:52:45,680 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-01 16:52:45,680 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-07-01 16:52:45,680 - DEBUG - stack []
2024-07-01 16:52:45,680 - DEBUG - dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-07-01 16:52:45,680 - DEBUG - stack ['$it192.0']
2024-07-01 16:52:45,681 - DEBUG - end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-07-01 16:52:45,681 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:45,681 - DEBUG - stack: ['$phi196.0']
2024-07-01 16:52:45,681 - DEBUG - state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-07-01 16:52:45,681 - DEBUG - dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-07-01 16:52:45,681 - DEBUG - stack ['$phi196.0']
2024-07-01 16:52:45,681 - DEBUG - end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:45,681 - DEBUG - pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-07-01 16:52:45,681 - DEBUG - stack: []
2024-07-01 16:52:45,681 - DEBUG - state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-07-01 16:52:45,681 - DEBUG - dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-07-01 16:52:45,681 - DEBUG - stack []
2024-07-01 16:52:45,681 - DEBUG - dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-07-01 16:52:45,682 - DEBUG - stack ['$max_value300.0']
2024-07-01 16:52:45,682 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,682 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-07-01 16:52:45,682 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2024-07-01 16:52:45,682 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-07-01 16:52:45,682 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-07-01 16:52:45,682 - DEBUG - stack ['$phi198.0', '$phi198.1']
2024-07-01 16:52:45,682 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-07-01 16:52:45,682 - DEBUG - stack ['$phi198.0']
2024-07-01 16:52:45,682 - DEBUG - dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-07-01 16:52:45,682 - DEBUG - stack ['$phi198.0', '$view200.2']
2024-07-01 16:52:45,682 - DEBUG - dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-07-01 16:52:45,682 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-01 16:52:45,683 - DEBUG - dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-07-01 16:52:45,683 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-01 16:52:45,683 - DEBUG - dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-07-01 16:52:45,683 - DEBUG - stack ['$phi198.0', '$228call.5']
2024-07-01 16:52:45,683 - DEBUG - dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-07-01 16:52:45,683 - DEBUG - stack ['$phi198.0']
2024-07-01 16:52:45,683 - DEBUG - dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-07-01 16:52:45,683 - DEBUG - stack ['$phi198.0', '$null$240.6']
2024-07-01 16:52:45,683 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-07-01 16:52:45,683 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-07-01 16:52:45,683 - DEBUG - dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-07-01 16:52:45,683 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-01 16:52:45,683 - DEBUG - dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-07-01 16:52:45,684 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-01 16:52:45,684 - DEBUG - dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-07-01 16:52:45,684 - DEBUG - stack ['$phi198.0', '$250call.9']
2024-07-01 16:52:45,684 - DEBUG - end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-07-01 16:52:45,684 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-07-01 16:52:45,684 - DEBUG - stack: ['$phi262.0']
2024-07-01 16:52:45,684 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-07-01 16:52:45,684 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-07-01 16:52:45,684 - DEBUG - stack ['$phi262.0']
2024-07-01 16:52:45,684 - DEBUG - dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-07-01 16:52:45,684 - DEBUG - stack ['$phi262.0', '$v262.1']
2024-07-01 16:52:45,684 - DEBUG - dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-07-01 16:52:45,684 - DEBUG - stack ['$v262.1', '$phi262.0']
2024-07-01 16:52:45,685 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-07-01 16:52:45,685 - DEBUG - stack ['$v262.1']
2024-07-01 16:52:45,685 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,685 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-07-01 16:52:45,685 - DEBUG - stack: ['$phi270.0']
2024-07-01 16:52:45,685 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-07-01 16:52:45,685 - DEBUG - dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-07-01 16:52:45,685 - DEBUG - stack ['$phi270.0']
2024-07-01 16:52:45,685 - DEBUG - dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-07-01 16:52:45,685 - DEBUG - stack ['$phi270.0', '$null$270.1']
2024-07-01 16:52:45,685 - DEBUG - dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-07-01 16:52:45,685 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-07-01 16:52:45,685 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-07-01 16:52:45,685 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-07-01 16:52:45,685 - DEBUG - dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-07-01 16:52:45,686 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-01 16:52:45,686 - DEBUG - dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-07-01 16:52:45,686 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-01 16:52:45,686 - DEBUG - dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-07-01 16:52:45,686 - DEBUG - stack ['$phi270.0', '$282call.5']
2024-07-01 16:52:45,686 - DEBUG - end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-07-01 16:52:45,686 - DEBUG - pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-01 16:52:45,686 - DEBUG - stack: ['$phi294.0']
2024-07-01 16:52:45,686 - DEBUG - state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-07-01 16:52:45,686 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-07-01 16:52:45,686 - DEBUG - stack ['$phi294.0']
2024-07-01 16:52:45,687 - DEBUG - dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-07-01 16:52:45,687 - DEBUG - stack ['$phi294.0', '$v294.1']
2024-07-01 16:52:45,687 - DEBUG - end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-07-01 16:52:45,687 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-01 16:52:45,687 - DEBUG - stack: ['$phi298.0']
2024-07-01 16:52:45,687 - DEBUG - state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-07-01 16:52:45,687 - DEBUG - dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-07-01 16:52:45,687 - DEBUG - stack ['$phi298.0']
2024-07-01 16:52:45,687 - DEBUG - end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-07-01 16:52:45,687 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:45,687 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:45,688 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:45,688 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-07-01 16:52:45,688 - DEBUG - defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-07-01 16:52:45,689 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-07-01 16:52:45,690 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:45,691 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:45,692 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:45,692 - DEBUG - keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-07-01 16:52:45,693 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-07-01 16:52:45,693 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:45,693 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-07-01 16:52:45,693 - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,693 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-07-01 16:52:45,694 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,694 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-07-01 16:52:45,694 - DEBUG - block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-07-01 16:52:45,694 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-07-01 16:52:45,694 - DEBUG - block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,694 - DEBUG - block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-07-01 16:52:45,694 - DEBUG - block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-07-01 16:52:45,694 - DEBUG - block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-07-01 16:52:45,694 - DEBUG - block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,696 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-07-01 16:52:45,706 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:45,706 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,706 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:45,706 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:45,706 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:45,706 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:45,706 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,706 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,706 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:45,706 - DEBUG - ==== SSA block analysis pass on 28
2024-07-01 16:52:45,706 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,706 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:45,707 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:45,707 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,707 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:45,707 - DEBUG - ==== SSA block analysis pass on 58
2024-07-01 16:52:45,707 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,707 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,707 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:45,707 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,707 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:45,707 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,707 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:45,707 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:45,708 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,708 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:45,708 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,708 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,708 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,708 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:45,708 - DEBUG - ==== SSA block analysis pass on 188
2024-07-01 16:52:45,708 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,708 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:45,708 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:45,708 - DEBUG - ==== SSA block analysis pass on 192
2024-07-01 16:52:45,708 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,709 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:45,709 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:45,709 - DEBUG - on stmt: jump 196
2024-07-01 16:52:45,709 - DEBUG - ==== SSA block analysis pass on 196
2024-07-01 16:52:45,709 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,709 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:45,709 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:45,709 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:45,709 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:45,709 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:45,709 - DEBUG - ==== SSA block analysis pass on 198
2024-07-01 16:52:45,710 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,710 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:45,710 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:45,710 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,710 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:45,710 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,710 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,710 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,710 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:45,711 - DEBUG - ==== SSA block analysis pass on 262
2024-07-01 16:52:45,711 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,711 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:45,711 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:45,711 - DEBUG - ==== SSA block analysis pass on 270
2024-07-01 16:52:45,711 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,711 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:45,711 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,711 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,711 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,711 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:45,711 - DEBUG - ==== SSA block analysis pass on 294
2024-07-01 16:52:45,711 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,711 - DEBUG - on stmt: max_value = v
2024-07-01 16:52:45,712 - DEBUG - on stmt: jump 298
2024-07-01 16:52:45,712 - DEBUG - ==== SSA block analysis pass on 298
2024-07-01 16:52:45,712 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,712 - DEBUG - on stmt: jump 196
2024-07-01 16:52:45,712 - DEBUG - ==== SSA block analysis pass on 300
2024-07-01 16:52:45,712 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6685ef90>
2024-07-01 16:52:45,712 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:45,712 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:45,713 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x7f1c791796d0>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x7f1c791799d0>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x7f1c7917ad90>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x7f1c7917a490>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f1c791789d0>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x7f1c79178190>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x7f1c791833d0>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c791839d0>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c79183010>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c79183fd0>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x7f1c791804d0>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x7f1c79294950>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x7f1c79182d10>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x7f1c791826d0>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x7f1c79182390>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x7f1c79181990>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7f1c7917ac90>, 0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x7f1c79181cd0>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x7f1c79181590>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79178cd0>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x7f1c791812d0>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x7f1c79180890>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x7f1c7917b610>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79178350>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c7917b5d0>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7f1c79589f50>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x7f1c79178590>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x7f1c79179bd0>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x7f1c79583590>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x7f1c7917ba90>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x7f1c79183650>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x7f1c79183950>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c79589ed0>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f1c7917a750>, 58)],
             'bool26': [(<numba.core.ir.Assign object at 0x7f1c79296390>, 0)],
             'bool260': [(<numba.core.ir.Assign object at 0x7f1c791821d0>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x7f1c79181310>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x7f1c7917b450>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7f1c79179d90>,
                            58),
                           (<numba.core.ir.Assign object at 0x7f1c79180d10>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x7f1c79182d90>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x7f1c79183850>, 198)]})
2024-07-01 16:52:45,714 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c6685ef90>
2024-07-01 16:52:45,714 - DEBUG - Fix SSA violator on var max_value
2024-07-01 16:52:45,714 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:45,714 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,714 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:45,714 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:45,714 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:45,714 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:45,714 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,714 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,714 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:45,715 - DEBUG - ==== SSA block rewrite pass on 28
2024-07-01 16:52:45,715 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,715 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:45,715 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:45,715 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,715 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:45,715 - DEBUG - ==== SSA block rewrite pass on 58
2024-07-01 16:52:45,715 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,715 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,715 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:45,715 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,715 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:45,715 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,716 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:45,716 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:45,716 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,716 - DEBUG - first assign: max_value
2024-07-01 16:52:45,716 - DEBUG - replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,716 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:45,716 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,716 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,716 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,716 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:45,716 - DEBUG - ==== SSA block rewrite pass on 188
2024-07-01 16:52:45,716 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,716 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:45,717 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:45,717 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:45,717 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,717 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:45,717 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:45,717 - DEBUG - on stmt: jump 196
2024-07-01 16:52:45,717 - DEBUG - ==== SSA block rewrite pass on 196
2024-07-01 16:52:45,717 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,717 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:45,717 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:45,717 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:45,717 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:45,717 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:45,717 - DEBUG - ==== SSA block rewrite pass on 198
2024-07-01 16:52:45,717 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,718 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:45,718 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:45,718 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,718 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:45,718 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,718 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,718 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,718 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:45,718 - DEBUG - ==== SSA block rewrite pass on 262
2024-07-01 16:52:45,718 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,718 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:45,718 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:45,718 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:45,718 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,719 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:45,719 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,719 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,719 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,719 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:45,719 - DEBUG - ==== SSA block rewrite pass on 294
2024-07-01 16:52:45,719 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,719 - DEBUG - on stmt: max_value = v
2024-07-01 16:52:45,719 - DEBUG - replaced with: max_value.1 = v
2024-07-01 16:52:45,719 - DEBUG - on stmt: jump 298
2024-07-01 16:52:45,719 - DEBUG - ==== SSA block rewrite pass on 298
2024-07-01 16:52:45,719 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,719 - DEBUG - on stmt: jump 196
2024-07-01 16:52:45,719 - DEBUG - ==== SSA block rewrite pass on 300
2024-07-01 16:52:45,720 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79580090>
2024-07-01 16:52:45,720 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:45,720 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:45,720 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7f1c79180ad0>],
             294: [<numba.core.ir.Assign object at 0x7f1c795888d0>]})
2024-07-01 16:52:45,720 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:45,720 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,720 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:45,720 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:45,720 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:45,720 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:45,720 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,720 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,720 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:45,721 - DEBUG - ==== SSA block rewrite pass on 28
2024-07-01 16:52:45,721 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,721 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:45,721 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:45,721 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,721 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:45,721 - DEBUG - ==== SSA block rewrite pass on 58
2024-07-01 16:52:45,721 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,721 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:45,721 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:45,721 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,721 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:45,721 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,722 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:45,722 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:45,722 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,722 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:45,722 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,722 - DEBUG - find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,722 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,722 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,722 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:45,722 - DEBUG - ==== SSA block rewrite pass on 188
2024-07-01 16:52:45,722 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,722 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:45,723 - DEBUG - find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-07-01 16:52:45,723 - DEBUG - find_def_from_top label 188
2024-07-01 16:52:45,723 - DEBUG - idom 58 from label 188
2024-07-01 16:52:45,723 - DEBUG - find_def_from_bottom label 58
2024-07-01 16:52:45,723 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:45,723 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:45,723 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,723 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:45,723 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:45,723 - DEBUG - on stmt: jump 196
2024-07-01 16:52:45,723 - DEBUG - ==== SSA block rewrite pass on 196
2024-07-01 16:52:45,723 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,723 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:45,724 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:45,724 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:45,724 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:45,724 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:45,724 - DEBUG - ==== SSA block rewrite pass on 198
2024-07-01 16:52:45,724 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,724 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:45,724 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:45,724 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,724 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-07-01 16:52:45,724 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,724 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,724 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,725 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:45,725 - DEBUG - ==== SSA block rewrite pass on 262
2024-07-01 16:52:45,725 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,725 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:45,725 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:45,725 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:45,725 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,725 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:45,725 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,725 - DEBUG - find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,725 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:45,725 - DEBUG - idom 198 from label 270
2024-07-01 16:52:45,726 - DEBUG - find_def_from_bottom label 198
2024-07-01 16:52:45,726 - DEBUG - find_def_from_top label 198
2024-07-01 16:52:45,726 - DEBUG - idom 196 from label 198
2024-07-01 16:52:45,726 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:45,726 - DEBUG - find_def_from_top label 196
2024-07-01 16:52:45,726 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-07-01 16:52:45,726 - DEBUG - find_def_from_bottom label 192
2024-07-01 16:52:45,726 - DEBUG - find_def_from_top label 192
2024-07-01 16:52:45,726 - DEBUG - idom 58 from label 192
2024-07-01 16:52:45,726 - DEBUG - find_def_from_bottom label 58
2024-07-01 16:52:45,726 - DEBUG - incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,727 - DEBUG - find_def_from_bottom label 298
2024-07-01 16:52:45,727 - DEBUG - find_def_from_top label 298
2024-07-01 16:52:45,727 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-07-01 16:52:45,727 - DEBUG - find_def_from_bottom label 294
2024-07-01 16:52:45,727 - DEBUG - incoming_def max_value.1 = v
2024-07-01 16:52:45,727 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:45,727 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:45,728 - DEBUG - idom 198 from label 270
2024-07-01 16:52:45,728 - DEBUG - find_def_from_bottom label 198
2024-07-01 16:52:45,728 - DEBUG - find_def_from_top label 198
2024-07-01 16:52:45,728 - DEBUG - idom 196 from label 198
2024-07-01 16:52:45,728 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:45,728 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-07-01 16:52:45,728 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-07-01 16:52:45,728 - DEBUG - replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,729 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,729 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,729 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:45,729 - DEBUG - ==== SSA block rewrite pass on 294
2024-07-01 16:52:45,729 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,729 - DEBUG - on stmt: max_value.1 = v
2024-07-01 16:52:45,729 - DEBUG - on stmt: jump 298
2024-07-01 16:52:45,729 - DEBUG - ==== SSA block rewrite pass on 298
2024-07-01 16:52:45,729 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,729 - DEBUG - on stmt: jump 196
2024-07-01 16:52:45,729 - DEBUG - ==== SSA block rewrite pass on 300
2024-07-01 16:52:45,729 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7958b110>
2024-07-01 16:52:45,729 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:45,729 - DEBUG - find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-07-01 16:52:45,730 - DEBUG - find_def_from_top label 300
2024-07-01 16:52:45,730 - DEBUG - idom 196 from label 300
2024-07-01 16:52:45,730 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:45,730 - DEBUG - replaced with: $302return_value.1 = cast(value=max_value.2)
2024-07-01 16:52:45,730 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:45,736 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-07-01 16:52:45,736 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:45,736 - DEBUG - stack: []
2024-07-01 16:52:45,736 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:45,736 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-07-01 16:52:45,736 - DEBUG - stack []
2024-07-01 16:52:45,736 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-07-01 16:52:45,736 - DEBUG - stack []
2024-07-01 16:52:45,736 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-01 16:52:45,736 - DEBUG - stack []
2024-07-01 16:52:45,736 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-01 16:52:45,736 - DEBUG - stack ['$indices4.0']
2024-07-01 16:52:45,737 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-01 16:52:45,737 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-07-01 16:52:45,737 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-07-01 16:52:45,737 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-07-01 16:52:45,737 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-07-01 16:52:45,737 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-07-01 16:52:45,737 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-07-01 16:52:45,737 - DEBUG - stack ['$indices4.0', '$binop_sub20.4']
2024-07-01 16:52:45,737 - DEBUG - dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-07-01 16:52:45,737 - DEBUG - stack ['$24compare_op.5']
2024-07-01 16:52:45,737 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,737 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-07-01 16:52:45,737 - DEBUG - stack: []
2024-07-01 16:52:45,738 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-07-01 16:52:45,738 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-01 16:52:45,738 - DEBUG - stack []
2024-07-01 16:52:45,738 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-01 16:52:45,738 - DEBUG - stack ['$indices32.0']
2024-07-01 16:52:45,738 - DEBUG - dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-01 16:52:45,738 - DEBUG - stack ['$indices32.0', '$a34.1']
2024-07-01 16:52:45,738 - DEBUG - dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-07-01 16:52:45,738 - DEBUG - stack ['$indices32.0', '$36load_attr.2']
2024-07-01 16:52:45,738 - DEBUG - dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-07-01 16:52:45,738 - DEBUG - stack ['$indices32.0', '$46unary_negative.3']
2024-07-01 16:52:45,738 - DEBUG - dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-07-01 16:52:45,738 - DEBUG - stack ['$48compare_op.4']
2024-07-01 16:52:45,738 - DEBUG - end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:45,739 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:45,739 - DEBUG - stack: []
2024-07-01 16:52:45,739 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-07-01 16:52:45,739 - DEBUG - dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-07-01 16:52:45,739 - DEBUG - stack []
2024-07-01 16:52:45,739 - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-07-01 16:52:45,739 - DEBUG - stack ['$null$56.1', '$56load_global.0']
2024-07-01 16:52:45,739 - DEBUG - dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-07-01 16:52:45,739 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-01 16:52:45,739 - DEBUG - dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-07-01 16:52:45,739 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-01 16:52:45,739 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-07-01 16:52:45,740 - DEBUG - stack ['$74call.3']
2024-07-01 16:52:45,740 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,740 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:45,740 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:45,740 - DEBUG - stack: []
2024-07-01 16:52:45,740 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-07-01 16:52:45,740 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-07-01 16:52:45,740 - DEBUG - stack []
2024-07-01 16:52:45,740 - DEBUG - dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-07-01 16:52:45,740 - DEBUG - stack ['$a86.0']
2024-07-01 16:52:45,740 - DEBUG - dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-07-01 16:52:45,740 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-07-01 16:52:45,740 - DEBUG - dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-07-01 16:52:45,740 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-07-01 16:52:45,741 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-07-01 16:52:45,741 - DEBUG - stack ['$114call.3']
2024-07-01 16:52:45,741 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-07-01 16:52:45,741 - DEBUG - stack ['$114call.3', '$indices124.4']
2024-07-01 16:52:45,741 - DEBUG - dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-07-01 16:52:45,741 - DEBUG - stack ['$126binary_subscr.5']
2024-07-01 16:52:45,741 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,741 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:45,741 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-07-01 16:52:45,741 - DEBUG - defmap: {}
2024-07-01 16:52:45,742 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,742 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,742 - DEBUG - keep phismap: {}
2024-07-01 16:52:45,742 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:45,742 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:45,742 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-07-01 16:52:45,742 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-07-01 16:52:45,742 - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,742 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,744 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-07-01 16:52:45,752 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:45,752 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7955bd10>
2024-07-01 16:52:45,752 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:45,752 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-07-01 16:52:45,752 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:45,752 - DEBUG - on stmt: $const18.3 = const(int, 1)
2024-07-01 16:52:45,752 - DEBUG - on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-07-01 16:52:45,753 - DEBUG - on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-07-01 16:52:45,753 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,753 - DEBUG - on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,753 - DEBUG - on stmt: branch $30pred, 56, 32
2024-07-01 16:52:45,753 - DEBUG - ==== SSA block analysis pass on 32
2024-07-01 16:52:45,753 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7955bd10>
2024-07-01 16:52:45,753 - DEBUG - on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:45,753 - DEBUG - on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-07-01 16:52:45,753 - DEBUG - on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-07-01 16:52:45,753 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-07-01 16:52:45,754 - DEBUG - on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,754 - DEBUG - on stmt: branch $54pred, 56, 86
2024-07-01 16:52:45,754 - DEBUG - ==== SSA block analysis pass on 56
2024-07-01 16:52:45,754 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7955bd10>
2024-07-01 16:52:45,754 - DEBUG - on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-07-01 16:52:45,754 - DEBUG - on stmt: $const68.2 = const(str, Index out of bounds)
2024-07-01 16:52:45,754 - DEBUG - on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,754 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-07-01 16:52:45,754 - DEBUG - ==== SSA block analysis pass on 86
2024-07-01 16:52:45,754 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7955bd10>
2024-07-01 16:52:45,755 - DEBUG - on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-07-01 16:52:45,755 - DEBUG - on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,755 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-07-01 16:52:45,755 - DEBUG - on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-07-01 16:52:45,755 - DEBUG - on stmt: return $136return_value.6
2024-07-01 16:52:45,756 - DEBUG - defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x7f1c79430290>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c794327d0>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x7f1c794328d0>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c79432f50>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x7f1c79433f90>, 0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79433610>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x7f1c79433190>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x7f1c79431c10>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f1c79433b50>, 32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79433c10>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x7f1c794322d0>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x7f1c79431090>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79559750>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x7f1c7955a0d0>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x7f1c7955b850>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x7f1c79432450>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c7955ba50>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x7f1c79432290>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f1c79432d10>, 32)],
             'indices': [(<numba.core.ir.Assign object at 0x7f1c7955ba10>, 0)]})
2024-07-01 16:52:45,756 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7955bd10>
2024-07-01 16:52:45,778 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-07-01 16:52:45,778 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:45,778 - DEBUG - stack: []
2024-07-01 16:52:45,778 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:45,778 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-07-01 16:52:45,778 - DEBUG - stack []
2024-07-01 16:52:45,778 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-07-01 16:52:45,778 - DEBUG - stack []
2024-07-01 16:52:45,778 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-01 16:52:45,778 - DEBUG - stack []
2024-07-01 16:52:45,779 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-07-01 16:52:45,779 - DEBUG - stack ['$ary4.0']
2024-07-01 16:52:45,779 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-01 16:52:45,779 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-07-01 16:52:45,779 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-07-01 16:52:45,779 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-07-01 16:52:45,779 - DEBUG - dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-07-01 16:52:45,779 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-01 16:52:45,779 - DEBUG - dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-07-01 16:52:45,779 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-01 16:52:45,779 - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-07-01 16:52:45,779 - DEBUG - stack ['$44call.5']
2024-07-01 16:52:45,779 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,779 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:45,780 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:45,780 - DEBUG - defmap: {}
2024-07-01 16:52:45,780 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,780 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,780 - DEBUG - keep phismap: {}
2024-07-01 16:52:45,780 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:45,780 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:45,780 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,781 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-07-01 16:52:45,785 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:45,785 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795cddd0>
2024-07-01 16:52:45,785 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-07-01 16:52:45,785 - DEBUG - on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-07-01 16:52:45,785 - DEBUG - on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-07-01 16:52:45,785 - DEBUG - on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:45,785 - DEBUG - on stmt: $54return_value.6 = cast(value=$44call.5)
2024-07-01 16:52:45,786 - DEBUG - on stmt: return $54return_value.6
2024-07-01 16:52:45,786 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x7f1c795cead0>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x7f1c795ce8d0>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x7f1c795cf5d0>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f1c795ce150>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x7f1c795cc750>, 0)]})
2024-07-01 16:52:45,786 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c795cddd0>
2024-07-01 16:52:45,871 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-07-01 16:52:45,871 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:45,871 - DEBUG - stack: []
2024-07-01 16:52:45,871 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:45,871 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-07-01 16:52:45,871 - DEBUG - stack []
2024-07-01 16:52:45,871 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-07-01 16:52:45,871 - DEBUG - stack []
2024-07-01 16:52:45,872 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-07-01 16:52:45,872 - DEBUG - stack []
2024-07-01 16:52:45,872 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-07-01 16:52:45,872 - DEBUG - stack ['$a4.0']
2024-07-01 16:52:45,872 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-07-01 16:52:45,872 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-07-01 16:52:45,872 - DEBUG - dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-07-01 16:52:45,872 - DEBUG - stack ['$8compare_op.2']
2024-07-01 16:52:45,872 - DEBUG - end state. edges=[]
2024-07-01 16:52:45,872 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:45,872 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:45,872 - DEBUG - defmap: {}
2024-07-01 16:52:45,872 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,873 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:45,873 - DEBUG - keep phismap: {}
2024-07-01 16:52:45,873 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:45,873 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:45,873 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:45,873 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-07-01 16:52:45,877 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:45,877 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c796aa350>
2024-07-01 16:52:45,877 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:45,877 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-07-01 16:52:45,877 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-07-01 16:52:45,877 - DEBUG - on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-07-01 16:52:45,878 - DEBUG - on stmt: return $14return_value.3
2024-07-01 16:52:45,878 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x7f1c796abfd0>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c796aa190>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c796aab50>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7f1c796aa390>, 0)]})
2024-07-01 16:52:45,878 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c796aa350>
2024-07-01 16:52:45,997 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-07-01 16:52:45,997 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:45,997 - DEBUG - stack: []
2024-07-01 16:52:45,997 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:45,997 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-07-01 16:52:45,997 - DEBUG - stack []
2024-07-01 16:52:45,997 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-07-01 16:52:45,997 - DEBUG - stack []
2024-07-01 16:52:45,998 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-07-01 16:52:45,998 - DEBUG - stack []
2024-07-01 16:52:45,998 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-07-01 16:52:45,998 - DEBUG - stack []
2024-07-01 16:52:45,998 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-07-01 16:52:45,998 - DEBUG - stack ['$6load_deref.0']
2024-07-01 16:52:45,998 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-07-01 16:52:45,998 - DEBUG - stack []
2024-07-01 16:52:45,998 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-07-01 16:52:45,998 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-07-01 16:52:45,998 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-07-01 16:52:45,998 - DEBUG - stack ['$null$10.2', '$22load_attr.3']
2024-07-01 16:52:45,998 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-07-01 16:52:45,998 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-01 16:52:45,998 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-07-01 16:52:45,998 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-01 16:52:45,999 - DEBUG - dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-07-01 16:52:45,999 - DEBUG - stack ['$38call.5']
2024-07-01 16:52:45,999 - DEBUG - end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-07-01 16:52:45,999 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-01 16:52:45,999 - DEBUG - stack: ['$phi50.0']
2024-07-01 16:52:45,999 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-01 16:52:45,999 - DEBUG - dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-07-01 16:52:45,999 - DEBUG - stack ['$phi50.0']
2024-07-01 16:52:45,999 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:45,999 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-07-01 16:52:45,999 - DEBUG - stack: []
2024-07-01 16:52:45,999 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-01 16:52:45,999 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-07-01 16:52:46,000 - DEBUG - stack []
2024-07-01 16:52:46,000 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-07-01 16:52:46,000 - DEBUG - stack ['$c102.0']
2024-07-01 16:52:46,000 - DEBUG - dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-07-01 16:52:46,000 - DEBUG - stack ['$c102.0', '$a104.1']
2024-07-01 16:52:46,000 - DEBUG - dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-07-01 16:52:46,000 - DEBUG - stack ['$c102.0', '$106load_attr.2']
2024-07-01 16:52:46,000 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-07-01 16:52:46,000 - DEBUG - stack ['$binop_truediv116.3']
2024-07-01 16:52:46,000 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,000 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-07-01 16:52:46,000 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2024-07-01 16:52:46,000 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-07-01 16:52:46,000 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-07-01 16:52:46,000 - DEBUG - stack ['$phi52.0', '$phi52.1']
2024-07-01 16:52:46,001 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-07-01 16:52:46,001 - DEBUG - stack ['$phi52.0']
2024-07-01 16:52:46,001 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-07-01 16:52:46,001 - DEBUG - stack ['$phi52.0', '$c54.2']
2024-07-01 16:52:46,001 - DEBUG - dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-07-01 16:52:46,001 - DEBUG - stack ['$phi52.0', '$c54.2', '$v56.3']
2024-07-01 16:52:46,001 - DEBUG - dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-07-01 16:52:46,001 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-01 16:52:46,001 - DEBUG - dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-07-01 16:52:46,001 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-01 16:52:46,001 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-07-01 16:52:46,001 - DEBUG - stack ['$phi52.0', '$c54.2', '$84call.6']
2024-07-01 16:52:46,001 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-07-01 16:52:46,001 - DEBUG - stack ['$phi52.0', '$binop_iadd94.7']
2024-07-01 16:52:46,002 - DEBUG - dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-07-01 16:52:46,002 - DEBUG - stack ['$phi52.0']
2024-07-01 16:52:46,002 - DEBUG - end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-07-01 16:52:46,002 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-01 16:52:46,002 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:46,002 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-07-01 16:52:46,002 - DEBUG - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-07-01 16:52:46,002 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:46,003 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:46,003 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:46,004 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:46,004 - DEBUG - keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-07-01 16:52:46,004 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-07-01 16:52:46,005 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:46,005 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-07-01 16:52:46,005 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-07-01 16:52:46,005 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-07-01 16:52:46,005 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,006 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-07-01 16:52:46,012 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:46,012 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79147050>
2024-07-01 16:52:46,012 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,012 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,012 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,012 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:46,012 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,012 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:46,013 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:46,013 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,013 - DEBUG - ==== SSA block analysis pass on 50
2024-07-01 16:52:46,013 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79147050>
2024-07-01 16:52:46,013 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:46,013 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:46,013 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:46,013 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:46,013 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:46,013 - DEBUG - ==== SSA block analysis pass on 52
2024-07-01 16:52:46,013 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79147050>
2024-07-01 16:52:46,013 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:46,013 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:46,013 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,014 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,014 - DEBUG - on stmt: c = $binop_iadd94.7
2024-07-01 16:52:46,014 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,014 - DEBUG - ==== SSA block analysis pass on 102
2024-07-01 16:52:46,014 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79147050>
2024-07-01 16:52:46,014 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:46,014 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:46,014 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:46,014 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:46,015 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c7915c650>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7f1c79147150>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x7f1c7915c9d0>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x7f1c79145dd0>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x7f1c79146050>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x7f1c79146b50>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c7915e8d0>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c7915e290>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c7915e710>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x7f1c7915eed0>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x7f1c7915edd0>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x7f1c7915fad0>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x7f1c7915c910>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7f1c791476d0>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7f1c7915e010>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c79146210>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7f1c79146090>, 0),
                   (<numba.core.ir.Assign object at 0x7f1c7915fcd0>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x7f1c7915e1d0>, 52)]})
2024-07-01 16:52:46,015 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79147050>
2024-07-01 16:52:46,015 - DEBUG - Fix SSA violator on var c
2024-07-01 16:52:46,015 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:46,015 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7915d790>
2024-07-01 16:52:46,015 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,016 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,016 - DEBUG - first assign: c
2024-07-01 16:52:46,016 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,016 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,016 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:46,016 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,016 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:46,016 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:46,016 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,016 - DEBUG - ==== SSA block rewrite pass on 50
2024-07-01 16:52:46,016 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7915d790>
2024-07-01 16:52:46,016 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:46,016 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:46,016 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:46,016 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:46,017 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:46,017 - DEBUG - ==== SSA block rewrite pass on 52
2024-07-01 16:52:46,017 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7915d790>
2024-07-01 16:52:46,017 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:46,017 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:46,017 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,017 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,017 - DEBUG - on stmt: c = $binop_iadd94.7
2024-07-01 16:52:46,017 - DEBUG - replaced with: c.1 = $binop_iadd94.7
2024-07-01 16:52:46,017 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,017 - DEBUG - ==== SSA block rewrite pass on 102
2024-07-01 16:52:46,017 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c7915d790>
2024-07-01 16:52:46,018 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:46,018 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:46,018 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:46,018 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:46,018 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c7915d710>],
             52: [<numba.core.ir.Assign object at 0x7f1c7915d690>]})
2024-07-01 16:52:46,018 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:46,018 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7915ff90>
2024-07-01 16:52:46,018 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,018 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,018 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,018 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:46,019 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,019 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:46,019 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:46,019 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,019 - DEBUG - ==== SSA block rewrite pass on 50
2024-07-01 16:52:46,019 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7915ff90>
2024-07-01 16:52:46,019 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:46,019 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:46,019 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:46,019 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:46,019 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:46,020 - DEBUG - ==== SSA block rewrite pass on 52
2024-07-01 16:52:46,020 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7915ff90>
2024-07-01 16:52:46,020 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:46,020 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:46,020 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,020 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,020 - DEBUG - find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,020 - DEBUG - find_def_from_top label 52
2024-07-01 16:52:46,020 - DEBUG - idom 50 from label 52
2024-07-01 16:52:46,020 - DEBUG - find_def_from_bottom label 50
2024-07-01 16:52:46,020 - DEBUG - find_def_from_top label 50
2024-07-01 16:52:46,021 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-07-01 16:52:46,021 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:46,021 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,021 - DEBUG - find_def_from_bottom label 52
2024-07-01 16:52:46,021 - DEBUG - incoming_def c.1 = $binop_iadd94.7
2024-07-01 16:52:46,021 - DEBUG - replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,021 - DEBUG - on stmt: c.1 = $binop_iadd94.7
2024-07-01 16:52:46,021 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,021 - DEBUG - ==== SSA block rewrite pass on 102
2024-07-01 16:52:46,021 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7915ff90>
2024-07-01 16:52:46,021 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:46,021 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:46,022 - DEBUG - find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:46,022 - DEBUG - find_def_from_top label 102
2024-07-01 16:52:46,022 - DEBUG - idom 50 from label 102
2024-07-01 16:52:46,022 - DEBUG - find_def_from_bottom label 50
2024-07-01 16:52:46,022 - DEBUG - replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-07-01 16:52:46,022 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:46,022 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:46,295 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:46,295 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:46,295 - DEBUG - stack: []
2024-07-01 16:52:46,295 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:46,295 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-07-01 16:52:46,296 - DEBUG - stack []
2024-07-01 16:52:46,296 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-07-01 16:52:46,296 - DEBUG - stack []
2024-07-01 16:52:46,296 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:46,296 - DEBUG - stack []
2024-07-01 16:52:46,296 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:46,296 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:46,296 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:46,296 - DEBUG - stack ['$x4.0', '$const6.1']
2024-07-01 16:52:46,296 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-07-01 16:52:46,296 - DEBUG - stack ['$8binary_subscr.2']
2024-07-01 16:52:46,296 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-07-01 16:52:46,296 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-07-01 16:52:46,296 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:46,296 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-07-01 16:52:46,297 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-07-01 16:52:46,297 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-07-01 16:52:46,297 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-07-01 16:52:46,297 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-07-01 16:52:46,297 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-07-01 16:52:46,297 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-07-01 16:52:46,297 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:46,297 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-07-01 16:52:46,297 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-07-01 16:52:46,297 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-07-01 16:52:46,297 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:46,297 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-07-01 16:52:46,297 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:46,297 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-07-01 16:52:46,297 - DEBUG - dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-07-01 16:52:46,298 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-01 16:52:46,298 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-07-01 16:52:46,298 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-01 16:52:46,298 - DEBUG - dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-07-01 16:52:46,298 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-07-01 16:52:46,298 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:46,298 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-07-01 16:52:46,298 - DEBUG - dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-07-01 16:52:46,298 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-01 16:52:46,298 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-07-01 16:52:46,298 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-01 16:52:46,298 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-07-01 16:52:46,298 - DEBUG - stack ['$8binary_subscr.2', '$112call.19']
2024-07-01 16:52:46,298 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-07-01 16:52:46,299 - DEBUG - stack ['$122compare_op.20']
2024-07-01 16:52:46,299 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:46,299 - DEBUG - stack ['$122compare_op.20', '$peaks128.21']
2024-07-01 16:52:46,299 - DEBUG - dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:46,299 - DEBUG - stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-07-01 16:52:46,299 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-07-01 16:52:46,299 - DEBUG - stack []
2024-07-01 16:52:46,299 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:46,299 - DEBUG - stack ['$peaks136.23']
2024-07-01 16:52:46,299 - DEBUG - dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-07-01 16:52:46,299 - DEBUG - stack ['$peaks136.23', '$const138.24']
2024-07-01 16:52:46,299 - DEBUG - dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-07-01 16:52:46,299 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-07-01 16:52:46,299 - DEBUG - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:46,299 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-07-01 16:52:46,300 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:46,300 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-07-01 16:52:46,300 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:46,300 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-07-01 16:52:46,300 - DEBUG - dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:46,300 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-07-01 16:52:46,300 - DEBUG - dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-07-01 16:52:46,300 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-07-01 16:52:46,300 - DEBUG - dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-07-01 16:52:46,300 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-07-01 16:52:46,300 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:46,300 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-07-01 16:52:46,300 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-07-01 16:52:46,300 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-07-01 16:52:46,301 - DEBUG - dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-07-01 16:52:46,301 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-07-01 16:52:46,301 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-07-01 16:52:46,301 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-07-01 16:52:46,301 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:46,301 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-07-01 16:52:46,301 - DEBUG - dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-07-01 16:52:46,301 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-07-01 16:52:46,301 - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:46,301 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-07-01 16:52:46,301 - DEBUG - dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:46,301 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-07-01 16:52:46,301 - DEBUG - dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-07-01 16:52:46,302 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-01 16:52:46,302 - DEBUG - dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-07-01 16:52:46,302 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-01 16:52:46,302 - DEBUG - dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-07-01 16:52:46,302 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-07-01 16:52:46,302 - DEBUG - dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:46,302 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-07-01 16:52:46,302 - DEBUG - dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-07-01 16:52:46,302 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-01 16:52:46,302 - DEBUG - dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-07-01 16:52:46,302 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-01 16:52:46,302 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-07-01 16:52:46,302 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-07-01 16:52:46,302 - DEBUG - dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-07-01 16:52:46,303 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-07-01 16:52:46,303 - DEBUG - dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-07-01 16:52:46,303 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-07-01 16:52:46,303 - DEBUG - dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-07-01 16:52:46,303 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-07-01 16:52:46,303 - DEBUG - dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-07-01 16:52:46,303 - DEBUG - stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-07-01 16:52:46,303 - DEBUG - dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-07-01 16:52:46,303 - DEBUG - stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-07-01 16:52:46,303 - DEBUG - dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:46,303 - DEBUG - stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-07-01 16:52:46,303 - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-07-01 16:52:46,303 - DEBUG - stack []
2024-07-01 16:52:46,303 - DEBUG - dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-07-01 16:52:46,303 - DEBUG - stack ['$peaks296.50']
2024-07-01 16:52:46,304 - DEBUG - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-07-01 16:52:46,304 - DEBUG - stack ['$peaks296.50', '$const298.51']
2024-07-01 16:52:46,304 - DEBUG - dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-07-01 16:52:46,304 - DEBUG - stack ['$300binary_subscr.52']
2024-07-01 16:52:46,304 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,304 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-07-01 16:52:46,304 - DEBUG - stack: []
2024-07-01 16:52:46,304 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-07-01 16:52:46,304 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-07-01 16:52:46,304 - DEBUG - stack []
2024-07-01 16:52:46,304 - DEBUG - dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-07-01 16:52:46,304 - DEBUG - stack ['$wait312.0']
2024-07-01 16:52:46,304 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-07-01 16:52:46,304 - DEBUG - stack ['$wait312.0', '$const314.1']
2024-07-01 16:52:46,305 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-07-01 16:52:46,305 - DEBUG - stack ['$binop_add316.2']
2024-07-01 16:52:46,305 - DEBUG - dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-07-01 16:52:46,305 - DEBUG - stack []
2024-07-01 16:52:46,305 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,305 - DEBUG - pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:46,305 - DEBUG - stack: []
2024-07-01 16:52:46,305 - DEBUG - state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-07-01 16:52:46,305 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-07-01 16:52:46,305 - DEBUG - stack []
2024-07-01 16:52:46,305 - DEBUG - dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-07-01 16:52:46,305 - DEBUG - stack ['$const324.0']
2024-07-01 16:52:46,305 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,305 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:46,306 - DEBUG - stack: []
2024-07-01 16:52:46,306 - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-07-01 16:52:46,306 - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-01 16:52:46,306 - DEBUG - stack []
2024-07-01 16:52:46,306 - DEBUG - dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-01 16:52:46,306 - DEBUG - stack ['$n328.0']
2024-07-01 16:52:46,306 - DEBUG - dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-01 16:52:46,306 - DEBUG - stack ['$n328.0', '$x330.1']
2024-07-01 16:52:46,306 - DEBUG - dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-01 16:52:46,306 - DEBUG - stack ['$n328.0', '$332load_attr.2']
2024-07-01 16:52:46,306 - DEBUG - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-01 16:52:46,306 - DEBUG - stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-07-01 16:52:46,306 - DEBUG - dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-01 16:52:46,307 - DEBUG - stack ['$n328.0', '$344binary_subscr.4']
2024-07-01 16:52:46,307 - DEBUG - dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-07-01 16:52:46,307 - DEBUG - stack ['$354compare_op.5']
2024-07-01 16:52:46,307 - DEBUG - end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,307 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-01 16:52:46,307 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-01 16:52:46,307 - DEBUG - stack: []
2024-07-01 16:52:46,307 - DEBUG - state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-07-01 16:52:46,307 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-07-01 16:52:46,307 - DEBUG - stack []
2024-07-01 16:52:46,308 - DEBUG - dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-07-01 16:52:46,308 - DEBUG - stack ['$null$362.1', '$362load_global.0']
2024-07-01 16:52:46,308 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-01 16:52:46,308 - DEBUG - stack ['$null$362.1', '$374load_attr.2']
2024-07-01 16:52:46,308 - DEBUG - dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-07-01 16:52:46,308 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-07-01 16:52:46,308 - DEBUG - dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-01 16:52:46,308 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-07-01 16:52:46,309 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-01 16:52:46,309 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-07-01 16:52:46,309 - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-07-01 16:52:46,309 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-07-01 16:52:46,309 - DEBUG - dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-07-01 16:52:46,309 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-07-01 16:52:46,309 - DEBUG - dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-07-01 16:52:46,309 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-01 16:52:46,309 - DEBUG - dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-07-01 16:52:46,309 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-01 16:52:46,309 - DEBUG - dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-07-01 16:52:46,309 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-07-01 16:52:46,309 - DEBUG - dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-01 16:52:46,310 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-07-01 16:52:46,310 - DEBUG - dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-07-01 16:52:46,310 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-07-01 16:52:46,310 - DEBUG - dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-07-01 16:52:46,310 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-07-01 16:52:46,310 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-01 16:52:46,310 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-07-01 16:52:46,310 - DEBUG - dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-07-01 16:52:46,310 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-07-01 16:52:46,310 - DEBUG - dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-01 16:52:46,310 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-07-01 16:52:46,310 - DEBUG - dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-01 16:52:46,310 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-07-01 16:52:46,311 - DEBUG - dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-07-01 16:52:46,311 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-01 16:52:46,311 - DEBUG - dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-07-01 16:52:46,311 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-01 16:52:46,311 - DEBUG - dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-07-01 16:52:46,311 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-07-01 16:52:46,311 - DEBUG - dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-01 16:52:46,311 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-07-01 16:52:46,311 - DEBUG - dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-07-01 16:52:46,311 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-01 16:52:46,311 - DEBUG - dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-07-01 16:52:46,311 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-01 16:52:46,311 - DEBUG - dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-07-01 16:52:46,311 - DEBUG - stack ['$496call.24']
2024-07-01 16:52:46,312 - DEBUG - dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-07-01 16:52:46,312 - DEBUG - stack []
2024-07-01 16:52:46,312 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-01 16:52:46,312 - DEBUG - stack ['$x508.25']
2024-07-01 16:52:46,312 - DEBUG - dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-07-01 16:52:46,312 - DEBUG - stack ['$x508.25', '$n510.26']
2024-07-01 16:52:46,312 - DEBUG - dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-07-01 16:52:46,312 - DEBUG - stack ['$512binary_subscr.27']
2024-07-01 16:52:46,312 - DEBUG - dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-07-01 16:52:46,312 - DEBUG - stack ['$512binary_subscr.27', '$maxn522.28']
2024-07-01 16:52:46,312 - DEBUG - dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-07-01 16:52:46,312 - DEBUG - stack ['$524compare_op.29']
2024-07-01 16:52:46,312 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-01 16:52:46,312 - DEBUG - stack ['$524compare_op.29', '$peaks530.30']
2024-07-01 16:52:46,313 - DEBUG - dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-07-01 16:52:46,313 - DEBUG - stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-07-01 16:52:46,313 - DEBUG - dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-07-01 16:52:46,313 - DEBUG - stack []
2024-07-01 16:52:46,313 - DEBUG - dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-07-01 16:52:46,313 - DEBUG - stack ['$peaks538.32']
2024-07-01 16:52:46,313 - DEBUG - dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-07-01 16:52:46,313 - DEBUG - stack ['$peaks538.32', '$n540.33']
2024-07-01 16:52:46,313 - DEBUG - dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-07-01 16:52:46,313 - DEBUG - stack ['$542binary_subscr.34']
2024-07-01 16:52:46,313 - DEBUG - end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,313 - DEBUG - pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-01 16:52:46,313 - DEBUG - stack: []
2024-07-01 16:52:46,313 - DEBUG - state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-07-01 16:52:46,314 - DEBUG - dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-01 16:52:46,314 - DEBUG - stack []
2024-07-01 16:52:46,314 - DEBUG - dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:46,314 - DEBUG - stack ['$const852.0']
2024-07-01 16:52:46,314 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,314 - DEBUG - pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-01 16:52:46,314 - DEBUG - stack: []
2024-07-01 16:52:46,314 - DEBUG - state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-07-01 16:52:46,314 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-07-01 16:52:46,314 - DEBUG - stack []
2024-07-01 16:52:46,314 - DEBUG - dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-07-01 16:52:46,314 - DEBUG - stack ['$n554.0']
2024-07-01 16:52:46,314 - DEBUG - dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-07-01 16:52:46,314 - DEBUG - stack ['$n554.0', '$const556.1']
2024-07-01 16:52:46,315 - DEBUG - dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-07-01 16:52:46,315 - DEBUG - stack ['$binop_iadd558.2']
2024-07-01 16:52:46,315 - DEBUG - dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-07-01 16:52:46,315 - DEBUG - stack []
2024-07-01 16:52:46,315 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,315 - DEBUG - pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:46,315 - DEBUG - stack: []
2024-07-01 16:52:46,315 - DEBUG - state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-07-01 16:52:46,315 - DEBUG - dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-07-01 16:52:46,315 - DEBUG - stack []
2024-07-01 16:52:46,315 - DEBUG - dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-07-01 16:52:46,315 - DEBUG - stack ['$null$566.1', '$566load_global.0']
2024-07-01 16:52:46,315 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-01 16:52:46,315 - DEBUG - stack ['$null$566.1', '$578load_attr.2']
2024-07-01 16:52:46,316 - DEBUG - dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-07-01 16:52:46,316 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-07-01 16:52:46,316 - DEBUG - dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-01 16:52:46,316 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-07-01 16:52:46,316 - DEBUG - dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-01 16:52:46,316 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-07-01 16:52:46,316 - DEBUG - dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-07-01 16:52:46,316 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-07-01 16:52:46,316 - DEBUG - dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-07-01 16:52:46,316 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-07-01 16:52:46,316 - DEBUG - dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-07-01 16:52:46,316 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-01 16:52:46,316 - DEBUG - dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-07-01 16:52:46,316 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-01 16:52:46,317 - DEBUG - dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-07-01 16:52:46,317 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-07-01 16:52:46,317 - DEBUG - dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-01 16:52:46,317 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-07-01 16:52:46,317 - DEBUG - dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-07-01 16:52:46,317 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-07-01 16:52:46,317 - DEBUG - dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-07-01 16:52:46,317 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-07-01 16:52:46,317 - DEBUG - dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-01 16:52:46,317 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-07-01 16:52:46,317 - DEBUG - dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-07-01 16:52:46,317 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-07-01 16:52:46,317 - DEBUG - dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-01 16:52:46,317 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-07-01 16:52:46,318 - DEBUG - dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-01 16:52:46,318 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-07-01 16:52:46,318 - DEBUG - dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-07-01 16:52:46,318 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-01 16:52:46,318 - DEBUG - dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-07-01 16:52:46,318 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-01 16:52:46,318 - DEBUG - dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-07-01 16:52:46,318 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-07-01 16:52:46,318 - DEBUG - dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-01 16:52:46,318 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-07-01 16:52:46,318 - DEBUG - dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-07-01 16:52:46,318 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-01 16:52:46,318 - DEBUG - dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-07-01 16:52:46,319 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-01 16:52:46,319 - DEBUG - dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-07-01 16:52:46,319 - DEBUG - stack ['$700call.24']
2024-07-01 16:52:46,319 - DEBUG - dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-07-01 16:52:46,319 - DEBUG - stack []
2024-07-01 16:52:46,319 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-01 16:52:46,319 - DEBUG - stack ['$peaks712.25']
2024-07-01 16:52:46,319 - DEBUG - dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-07-01 16:52:46,319 - DEBUG - stack ['$peaks712.25', '$n714.26']
2024-07-01 16:52:46,319 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-07-01 16:52:46,319 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-07-01 16:52:46,319 - DEBUG - dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:46,319 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-07-01 16:52:46,319 - DEBUG - dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-07-01 16:52:46,319 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-07-01 16:52:46,320 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-01 16:52:46,320 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-07-01 16:52:46,320 - DEBUG - dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:46,320 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-07-01 16:52:46,320 - DEBUG - dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-07-01 16:52:46,320 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-07-01 16:52:46,320 - DEBUG - dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-07-01 16:52:46,320 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-07-01 16:52:46,320 - DEBUG - dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-07-01 16:52:46,320 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-07-01 16:52:46,320 - DEBUG - dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-07-01 16:52:46,320 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-07-01 16:52:46,320 - DEBUG - dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-07-01 16:52:46,320 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-07-01 16:52:46,321 - DEBUG - dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-07-01 16:52:46,321 - DEBUG - stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-07-01 16:52:46,321 - DEBUG - dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-07-01 16:52:46,321 - DEBUG - stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-07-01 16:52:46,321 - DEBUG - dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:46,321 - DEBUG - stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-07-01 16:52:46,321 - DEBUG - dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-07-01 16:52:46,321 - DEBUG - stack []
2024-07-01 16:52:46,321 - DEBUG - dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-07-01 16:52:46,321 - DEBUG - stack ['$peaks770.36']
2024-07-01 16:52:46,321 - DEBUG - dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-07-01 16:52:46,321 - DEBUG - stack ['$peaks770.36', '$n772.37']
2024-07-01 16:52:46,321 - DEBUG - dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-07-01 16:52:46,321 - DEBUG - stack ['$774binary_subscr.38']
2024-07-01 16:52:46,322 - DEBUG - end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,322 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-01 16:52:46,322 - DEBUG - pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-01 16:52:46,322 - DEBUG - stack: []
2024-07-01 16:52:46,322 - DEBUG - state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-07-01 16:52:46,322 - DEBUG - dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-07-01 16:52:46,322 - DEBUG - stack []
2024-07-01 16:52:46,322 - DEBUG - dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-07-01 16:52:46,322 - DEBUG - stack ['$n786.0']
2024-07-01 16:52:46,322 - DEBUG - dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-07-01 16:52:46,322 - DEBUG - stack ['$n786.0', '$const788.1']
2024-07-01 16:52:46,322 - DEBUG - dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-07-01 16:52:46,322 - DEBUG - stack ['$binop_iadd790.2']
2024-07-01 16:52:46,322 - DEBUG - dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-07-01 16:52:46,323 - DEBUG - stack []
2024-07-01 16:52:46,323 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,323 - DEBUG - pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:46,324 - DEBUG - stack: []
2024-07-01 16:52:46,324 - DEBUG - state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-07-01 16:52:46,324 - DEBUG - dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-07-01 16:52:46,324 - DEBUG - stack []
2024-07-01 16:52:46,324 - DEBUG - dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-07-01 16:52:46,324 - DEBUG - stack ['$n798.0']
2024-07-01 16:52:46,324 - DEBUG - dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-07-01 16:52:46,324 - DEBUG - stack ['$n798.0', '$wait800.1']
2024-07-01 16:52:46,325 - DEBUG - dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-07-01 16:52:46,325 - DEBUG - stack ['$n798.0', '$wait800.1', '$const802.2']
2024-07-01 16:52:46,325 - DEBUG - dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-07-01 16:52:46,325 - DEBUG - stack ['$n798.0', '$binop_add804.3']
2024-07-01 16:52:46,325 - DEBUG - dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-07-01 16:52:46,325 - DEBUG - stack ['$binop_iadd808.4']
2024-07-01 16:52:46,325 - DEBUG - dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-01 16:52:46,325 - DEBUG - stack []
2024-07-01 16:52:46,325 - DEBUG - dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-01 16:52:46,325 - DEBUG - stack ['$n814.5']
2024-07-01 16:52:46,325 - DEBUG - dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-01 16:52:46,326 - DEBUG - stack ['$n814.5', '$x816.6']
2024-07-01 16:52:46,326 - DEBUG - dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-01 16:52:46,326 - DEBUG - stack ['$n814.5', '$818load_attr.7']
2024-07-01 16:52:46,326 - DEBUG - dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-01 16:52:46,326 - DEBUG - stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-07-01 16:52:46,326 - DEBUG - dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-01 16:52:46,326 - DEBUG - stack ['$n814.5', '$830binary_subscr.9']
2024-07-01 16:52:46,326 - DEBUG - dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-07-01 16:52:46,326 - DEBUG - stack ['$840compare_op.10']
2024-07-01 16:52:46,326 - DEBUG - end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,326 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:46,326 - DEBUG - pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:46,326 - DEBUG - stack: []
2024-07-01 16:52:46,326 - DEBUG - state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-07-01 16:52:46,327 - DEBUG - dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-01 16:52:46,327 - DEBUG - stack []
2024-07-01 16:52:46,327 - DEBUG - dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:46,327 - DEBUG - stack ['$const848.0']
2024-07-01 16:52:46,327 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,327 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:46,327 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:46,327 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-07-01 16:52:46,328 - DEBUG - defmap: {}
2024-07-01 16:52:46,328 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,328 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,328 - DEBUG - keep phismap: {}
2024-07-01 16:52:46,328 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:46,328 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:46,328 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-07-01 16:52:46,328 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:46,328 - DEBUG - block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:46,329 - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-07-01 16:52:46,329 - DEBUG - block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-07-01 16:52:46,329 - DEBUG - block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:46,329 - DEBUG - block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-07-01 16:52:46,329 - DEBUG - block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:46,329 - DEBUG - block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-07-01 16:52:46,329 - DEBUG - block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,330 - DEBUG - block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,333 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-07-01 16:52:46,348 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:46,348 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,348 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:46,348 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:46,348 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:46,348 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:46,348 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:46,348 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:46,348 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:46,348 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,349 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:46,350 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:46,350 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:46,350 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:46,350 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:46,351 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,351 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:46,351 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:46,351 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,351 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,351 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,351 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:46,351 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,351 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:46,351 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:46,351 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,351 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:46,351 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:46,352 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:46,352 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,352 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,352 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:46,352 - DEBUG - ==== SSA block analysis pass on 312
2024-07-01 16:52:46,352 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,352 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:46,352 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:46,352 - DEBUG - on stmt: jump 328
2024-07-01 16:52:46,352 - DEBUG - ==== SSA block analysis pass on 324
2024-07-01 16:52:46,352 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,352 - DEBUG - on stmt: n = const(int, 1)
2024-07-01 16:52:46,352 - DEBUG - on stmt: jump 328
2024-07-01 16:52:46,353 - DEBUG - ==== SSA block analysis pass on 328
2024-07-01 16:52:46,353 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,353 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,353 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:46,353 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:46,353 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:46,353 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,353 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,353 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:46,353 - DEBUG - ==== SSA block analysis pass on 362
2024-07-01 16:52:46,353 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,353 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,353 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:46,353 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:46,354 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:46,354 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:46,354 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,354 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:46,354 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:46,354 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,354 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:46,354 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:46,354 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,354 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,354 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,355 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:46,355 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,355 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,355 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:46,355 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:46,355 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,355 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,355 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,355 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:46,355 - DEBUG - ==== SSA block analysis pass on 554
2024-07-01 16:52:46,355 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,355 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:46,355 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,356 - DEBUG - on stmt: n = $binop_iadd558.2
2024-07-01 16:52:46,356 - DEBUG - on stmt: jump 853
2024-07-01 16:52:46,356 - DEBUG - ==== SSA block analysis pass on 566
2024-07-01 16:52:46,356 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,356 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,356 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:46,356 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:46,356 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:46,356 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:46,356 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,356 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:46,356 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:46,356 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,356 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:46,357 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:46,357 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,357 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,357 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,357 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:46,357 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,357 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,357 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,357 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:46,357 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:46,357 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,357 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:46,358 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,358 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,358 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,358 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:46,358 - DEBUG - ==== SSA block analysis pass on 786
2024-07-01 16:52:46,358 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,358 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:46,358 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,358 - DEBUG - on stmt: n = $binop_iadd790.2
2024-07-01 16:52:46,358 - DEBUG - on stmt: jump 853
2024-07-01 16:52:46,358 - DEBUG - ==== SSA block analysis pass on 798
2024-07-01 16:52:46,358 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,358 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:46,358 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:46,359 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,359 - DEBUG - on stmt: n = $binop_iadd808.4
2024-07-01 16:52:46,359 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,359 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:46,359 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:46,359 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:46,359 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,359 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,359 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:46,359 - DEBUG - ==== SSA block analysis pass on 848
2024-07-01 16:52:46,359 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,359 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:46,359 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:46,359 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:46,360 - DEBUG - ==== SSA block analysis pass on 852
2024-07-01 16:52:46,360 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,360 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:46,360 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:46,360 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:46,360 - DEBUG - ==== SSA block analysis pass on 853
2024-07-01 16:52:46,360 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,360 - DEBUG - on stmt: jump 328
2024-07-01 16:52:46,363 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x7f1c79824650>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x7f1c79826fd0>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x7f1c65fa4250>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x7f1c66855790>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x7f1c79824350>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x7f1c79824090>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x7f1c79245bd0>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x7f1c798244d0>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x7f1c791f2190>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x7f1c66854790>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x7f1c791f3d50>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x7f1c791f3a90>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x7f1c791f26d0>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x7f1c791f3890>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x7f1c791f1350>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x7f1c791f0110>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x7f1c6602d350>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x7f1c79245f10>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7f1c791f1010>, 0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c791f1890>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1c65fa7d10>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c7963c6d0>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x7f1c7963c990>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x7f1c7963c190>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c7963e150>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x7f1c7963cd90>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x7f1c7963d5d0>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x7f1c7963f490>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x7f1c7963d510>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x7f1c792456d0>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1c79a31a90>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x7f1c7963ee10>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x7f1c7963c7d0>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x7f1c7963ec90>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f1c7963ead0>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f1c791e2c10>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x7f1c791e0290>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x7f1c791e0610>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x7f1c791e1b10>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x7f1c7947a4d0>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79479590>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x7f1c7934c5d0>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7f1c792444d0>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x7f1c7934d790>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x7f1c7934c090>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x7f1c7934d210>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1c797c2f50>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x7f1c7934f290>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x7f1c7934c650>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x7f1c7934e210>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f1c7934c990>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f1c7934fad0>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f1c79193d10>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x7f1c7934d150>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x7f1c7946a790>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x7f1c79469190>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x7f1c79468e50>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x7f1c7947ea90>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c79193cd0>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c7947cd90>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x7f1c7947c350>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x7f1c7947e610>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x7f1c7947c910>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7f1c79244090>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c79193550>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x7f1c79244cd0>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x7f1c79244c10>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x7f1c79827d50>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x7f1c791f3350>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x7f1c7963f2d0>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x7f1c7934dad0>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x7f1c7934c550>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x7f1c7947f890>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x7f1c791e3850>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x7f1c7947e8d0>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x7f1c7947d090>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x7f1c791f0690>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x7f1c79469590>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x7f1c7963f350>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x7f1c7934d110>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x7f1c79827210>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x7f1c79826d10>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x7f1c79827610>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x7f1c79827850>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x7f1c791f25d0>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x7f1c791f31d0>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x7f1c791f3bd0>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x7f1c7963f990>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x7f1c7963da50>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x7f1c79245950>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x7f1c7963d590>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x7f1c791e1810>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c79244b10>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x7f1c7934fd90>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x7f1c7934e1d0>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x7f1c79244550>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x7f1c79469150>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x7f1c7947df90>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x7f1c7947ee50>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x7f1c7947c690>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x7f1c7947cdd0>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x7f1c7934e890>, 566)],
             'bool310': [(<numba.core.ir.Assign object at 0x7f1c791f0c50>, 0)],
             'bool360': [(<numba.core.ir.Assign object at 0x7f1c7963c610>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x7f1c791e0f10>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x7f1c7946a750>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x7f1c7947e910>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x7f1c795a03d0>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7f1c7963ecd0>, 362)],
             'n': [(<numba.core.ir.Assign object at 0x7f1c791f19d0>, 312),
                   (<numba.core.ir.Assign object at 0x7f1c791f35d0>, 324),
                   (<numba.core.ir.Assign object at 0x7f1c791e2a10>, 554),
                   (<numba.core.ir.Assign object at 0x7f1c7947dc90>, 786),
                   (<numba.core.ir.Assign object at 0x7f1c7947c190>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x7f1c664eb410>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7f1c795a09d0>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7f1c79745090>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7f1c79506250>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7f1c797458d0>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7f1c79318a10>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c797465d0>, 0)]})
2024-07-01 16:52:46,363 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c6f0f6050>
2024-07-01 16:52:46,363 - DEBUG - Fix SSA violator on var n
2024-07-01 16:52:46,363 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:46,363 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,363 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:46,363 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:46,363 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:46,364 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:46,364 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:46,364 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:46,364 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:46,364 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:46,364 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:46,364 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:46,364 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,364 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:46,364 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:46,364 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:46,364 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,364 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:46,364 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:46,365 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:46,365 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:46,365 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,365 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,366 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:46,366 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:46,366 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,366 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:46,367 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:46,367 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:46,367 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,367 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,367 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:46,367 - DEBUG - ==== SSA block rewrite pass on 312
2024-07-01 16:52:46,367 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,367 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:46,367 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:46,367 - DEBUG - first assign: n
2024-07-01 16:52:46,367 - DEBUG - replaced with: n = wait + $const314.1
2024-07-01 16:52:46,367 - DEBUG - on stmt: jump 328
2024-07-01 16:52:46,367 - DEBUG - ==== SSA block rewrite pass on 324
2024-07-01 16:52:46,367 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,367 - DEBUG - on stmt: n = const(int, 1)
2024-07-01 16:52:46,368 - DEBUG - replaced with: n.1 = const(int, 1)
2024-07-01 16:52:46,368 - DEBUG - on stmt: jump 328
2024-07-01 16:52:46,368 - DEBUG - ==== SSA block rewrite pass on 328
2024-07-01 16:52:46,368 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,368 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,368 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:46,368 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:46,368 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:46,368 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,368 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,368 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:46,368 - DEBUG - ==== SSA block rewrite pass on 362
2024-07-01 16:52:46,368 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,368 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:46,369 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:46,369 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,369 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,370 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:46,370 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,370 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,370 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:46,370 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:46,370 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,370 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,370 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,370 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:46,370 - DEBUG - ==== SSA block rewrite pass on 554
2024-07-01 16:52:46,370 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,370 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:46,370 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,371 - DEBUG - on stmt: n = $binop_iadd558.2
2024-07-01 16:52:46,371 - DEBUG - replaced with: n.2 = $binop_iadd558.2
2024-07-01 16:52:46,371 - DEBUG - on stmt: jump 853
2024-07-01 16:52:46,371 - DEBUG - ==== SSA block rewrite pass on 566
2024-07-01 16:52:46,371 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,371 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,371 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:46,371 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:46,371 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:46,371 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:46,371 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,371 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:46,371 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:46,372 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,372 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:46,372 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:46,372 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,372 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,372 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,372 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:46,372 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,372 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,372 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,372 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:46,372 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:46,372 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,373 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:46,373 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,373 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,373 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,373 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:46,373 - DEBUG - ==== SSA block rewrite pass on 786
2024-07-01 16:52:46,373 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,373 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:46,373 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,373 - DEBUG - on stmt: n = $binop_iadd790.2
2024-07-01 16:52:46,373 - DEBUG - replaced with: n.3 = $binop_iadd790.2
2024-07-01 16:52:46,373 - DEBUG - on stmt: jump 853
2024-07-01 16:52:46,373 - DEBUG - ==== SSA block rewrite pass on 798
2024-07-01 16:52:46,373 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,374 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:46,374 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:46,374 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,374 - DEBUG - on stmt: n = $binop_iadd808.4
2024-07-01 16:52:46,374 - DEBUG - replaced with: n.4 = $binop_iadd808.4
2024-07-01 16:52:46,374 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,374 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:46,374 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:46,374 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:46,374 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,374 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,374 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:46,374 - DEBUG - ==== SSA block rewrite pass on 848
2024-07-01 16:52:46,375 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,375 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:46,375 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:46,375 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:46,375 - DEBUG - ==== SSA block rewrite pass on 852
2024-07-01 16:52:46,375 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,375 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:46,375 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:46,375 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:46,375 - DEBUG - ==== SSA block rewrite pass on 853
2024-07-01 16:52:46,375 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c664eb110>
2024-07-01 16:52:46,375 - DEBUG - on stmt: jump 328
2024-07-01 16:52:46,376 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x7f1c79baf410>],
             324: [<numba.core.ir.Assign object at 0x7f1c666bf250>],
             554: [<numba.core.ir.Assign object at 0x7f1c79563110>],
             786: [<numba.core.ir.Assign object at 0x7f1c795a0110>],
             798: [<numba.core.ir.Assign object at 0x7f1c795a0410>]})
2024-07-01 16:52:46,376 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:46,376 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,376 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:46,376 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:46,376 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:46,376 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:46,376 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:46,376 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:46,376 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:46,376 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:46,376 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:46,376 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:46,376 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,377 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:46,378 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:46,378 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:46,378 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:46,378 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,379 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,379 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,379 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:46,379 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,379 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:46,379 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:46,379 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,379 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:46,379 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:46,379 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:46,379 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,379 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,380 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:46,380 - DEBUG - ==== SSA block rewrite pass on 312
2024-07-01 16:52:46,380 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,380 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:46,380 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:46,380 - DEBUG - on stmt: jump 328
2024-07-01 16:52:46,380 - DEBUG - ==== SSA block rewrite pass on 324
2024-07-01 16:52:46,380 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,380 - DEBUG - on stmt: n.1 = const(int, 1)
2024-07-01 16:52:46,380 - DEBUG - on stmt: jump 328
2024-07-01 16:52:46,380 - DEBUG - ==== SSA block rewrite pass on 328
2024-07-01 16:52:46,380 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,380 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,380 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:46,381 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:46,381 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:46,381 - DEBUG - find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:46,381 - DEBUG - find_def_from_top label 328
2024-07-01 16:52:46,381 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-07-01 16:52:46,381 - DEBUG - find_def_from_bottom label 312
2024-07-01 16:52:46,381 - DEBUG - incoming_def n = wait + $const314.1
2024-07-01 16:52:46,381 - DEBUG - find_def_from_bottom label 324
2024-07-01 16:52:46,381 - DEBUG - incoming_def n.1 = const(int, 1)
2024-07-01 16:52:46,381 - DEBUG - find_def_from_bottom label 853
2024-07-01 16:52:46,381 - DEBUG - find_def_from_top label 853
2024-07-01 16:52:46,381 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-07-01 16:52:46,381 - DEBUG - find_def_from_bottom label 554
2024-07-01 16:52:46,381 - DEBUG - incoming_def n.2 = $binop_iadd558.2
2024-07-01 16:52:46,382 - DEBUG - find_def_from_bottom label 786
2024-07-01 16:52:46,382 - DEBUG - incoming_def n.3 = $binop_iadd790.2
2024-07-01 16:52:46,382 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-07-01 16:52:46,382 - DEBUG - replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-07-01 16:52:46,382 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,382 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,382 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:46,382 - DEBUG - ==== SSA block rewrite pass on 362
2024-07-01 16:52:46,382 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,382 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,382 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:46,382 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:46,382 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:46,383 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:46,383 - DEBUG - find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-07-01 16:52:46,383 - DEBUG - find_def_from_top label 362
2024-07-01 16:52:46,383 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-07-01 16:52:46,383 - DEBUG - find_def_from_bottom label 328
2024-07-01 16:52:46,383 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-07-01 16:52:46,383 - DEBUG - find_def_from_bottom label 798
2024-07-01 16:52:46,383 - DEBUG - incoming_def n.4 = $binop_iadd808.4
2024-07-01 16:52:46,383 - DEBUG - replaced with: $binop_sub404.9 = n.7 - pre_max
2024-07-01 16:52:46,383 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,383 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:46,383 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:46,383 - DEBUG - find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-07-01 16:52:46,384 - DEBUG - replaced with: $binop_add438.15 = n.7 + post_max
2024-07-01 16:52:46,384 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,384 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:46,384 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:46,384 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,384 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,384 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,384 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:46,384 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,384 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,384 - DEBUG - find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,385 - DEBUG - replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:46,385 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:46,385 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:46,385 - DEBUG - find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-07-01 16:52:46,385 - DEBUG - replaced with: peaks[n.7] = $524compare_op.29
2024-07-01 16:52:46,385 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,385 - DEBUG - find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,385 - DEBUG - replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:46,385 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,385 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,385 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:46,385 - DEBUG - ==== SSA block rewrite pass on 554
2024-07-01 16:52:46,386 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,386 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:46,386 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,386 - DEBUG - find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,386 - DEBUG - find_def_from_top label 554
2024-07-01 16:52:46,386 - DEBUG - idom 362 from label 554
2024-07-01 16:52:46,386 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:46,386 - DEBUG - replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,386 - DEBUG - on stmt: n.2 = $binop_iadd558.2
2024-07-01 16:52:46,386 - DEBUG - on stmt: jump 853
2024-07-01 16:52:46,386 - DEBUG - ==== SSA block rewrite pass on 566
2024-07-01 16:52:46,386 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,387 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,387 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:46,387 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:46,387 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:46,387 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:46,387 - DEBUG - find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-07-01 16:52:46,387 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:46,387 - DEBUG - idom 362 from label 566
2024-07-01 16:52:46,387 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:46,387 - DEBUG - replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-07-01 16:52:46,387 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,388 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:46,388 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:46,388 - DEBUG - find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-07-01 16:52:46,388 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:46,388 - DEBUG - idom 362 from label 566
2024-07-01 16:52:46,388 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:46,388 - DEBUG - replaced with: $binop_add642.15 = n.7 + post_avg
2024-07-01 16:52:46,388 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,388 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:46,388 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:46,388 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,388 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:46,388 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,389 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:46,389 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,389 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,389 - DEBUG - find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,389 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:46,389 - DEBUG - idom 362 from label 566
2024-07-01 16:52:46,389 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:46,389 - DEBUG - replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:46,389 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,389 - DEBUG - find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,389 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:46,389 - DEBUG - idom 362 from label 566
2024-07-01 16:52:46,389 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:46,389 - DEBUG - replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:46,390 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:46,390 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:46,390 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,390 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:46,390 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-07-01 16:52:46,390 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:46,390 - DEBUG - idom 362 from label 566
2024-07-01 16:52:46,390 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:46,390 - DEBUG - replaced with: peaks[n.7] = $binop_iand758.35
2024-07-01 16:52:46,390 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,390 - DEBUG - find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:46,390 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:46,391 - DEBUG - idom 362 from label 566
2024-07-01 16:52:46,391 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:46,391 - DEBUG - replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:46,391 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,391 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,391 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:46,391 - DEBUG - ==== SSA block rewrite pass on 786
2024-07-01 16:52:46,391 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,391 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:46,391 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,391 - DEBUG - find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,391 - DEBUG - find_def_from_top label 786
2024-07-01 16:52:46,391 - DEBUG - idom 566 from label 786
2024-07-01 16:52:46,391 - DEBUG - find_def_from_bottom label 566
2024-07-01 16:52:46,392 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:46,392 - DEBUG - idom 362 from label 566
2024-07-01 16:52:46,392 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:46,392 - DEBUG - replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,392 - DEBUG - on stmt: n.3 = $binop_iadd790.2
2024-07-01 16:52:46,392 - DEBUG - on stmt: jump 853
2024-07-01 16:52:46,392 - DEBUG - ==== SSA block rewrite pass on 798
2024-07-01 16:52:46,392 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,392 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:46,392 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:46,392 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,392 - DEBUG - find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,392 - DEBUG - find_def_from_top label 798
2024-07-01 16:52:46,392 - DEBUG - idom 566 from label 798
2024-07-01 16:52:46,393 - DEBUG - find_def_from_bottom label 566
2024-07-01 16:52:46,393 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:46,393 - DEBUG - idom 362 from label 566
2024-07-01 16:52:46,393 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:46,393 - DEBUG - replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,393 - DEBUG - on stmt: n.4 = $binop_iadd808.4
2024-07-01 16:52:46,393 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:46,393 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:46,393 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:46,393 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:46,393 - DEBUG - find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:46,393 - DEBUG - replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-07-01 16:52:46,393 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,393 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,394 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:46,394 - DEBUG - ==== SSA block rewrite pass on 848
2024-07-01 16:52:46,394 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,394 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:46,394 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:46,394 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:46,394 - DEBUG - ==== SSA block rewrite pass on 852
2024-07-01 16:52:46,394 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,394 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:46,394 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:46,394 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:46,394 - DEBUG - ==== SSA block rewrite pass on 853
2024-07-01 16:52:46,394 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c65f78550>
2024-07-01 16:52:46,395 - DEBUG - on stmt: jump 328
2024-07-01 16:52:46,403 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-07-01 16:52:46,403 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:46,403 - DEBUG - stack: []
2024-07-01 16:52:46,403 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:46,403 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-07-01 16:52:46,403 - DEBUG - stack []
2024-07-01 16:52:46,403 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-07-01 16:52:46,403 - DEBUG - stack []
2024-07-01 16:52:46,403 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-07-01 16:52:46,403 - DEBUG - stack []
2024-07-01 16:52:46,403 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-07-01 16:52:46,403 - DEBUG - stack []
2024-07-01 16:52:46,403 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-07-01 16:52:46,403 - DEBUG - stack ['$a6.0']
2024-07-01 16:52:46,403 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-07-01 16:52:46,404 - DEBUG - stack ['$8load_attr.1']
2024-07-01 16:52:46,404 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-07-01 16:52:46,404 - DEBUG - stack ['$8load_attr.1', '$const18.2']
2024-07-01 16:52:46,404 - DEBUG - dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-07-01 16:52:46,404 - DEBUG - stack ['$20compare_op.3']
2024-07-01 16:52:46,404 - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,404 - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:46,404 - DEBUG - stack: []
2024-07-01 16:52:46,404 - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-07-01 16:52:46,404 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-07-01 16:52:46,404 - DEBUG - stack []
2024-07-01 16:52:46,404 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-07-01 16:52:46,405 - DEBUG - stack ['$null$28.1', '$28load_global.0']
2024-07-01 16:52:46,405 - DEBUG - dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-07-01 16:52:46,405 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-01 16:52:46,405 - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-07-01 16:52:46,405 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-01 16:52:46,405 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-07-01 16:52:46,405 - DEBUG - stack ['$46call.3']
2024-07-01 16:52:46,405 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,405 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:46,405 - DEBUG - stack: []
2024-07-01 16:52:46,405 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-01 16:52:46,405 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-07-01 16:52:46,405 - DEBUG - stack []
2024-07-01 16:52:46,405 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-07-01 16:52:46,405 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-07-01 16:52:46,406 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-07-01 16:52:46,406 - DEBUG - stack ['$null$58.1', '$70load_attr.2']
2024-07-01 16:52:46,406 - DEBUG - dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-07-01 16:52:46,406 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-01 16:52:46,406 - DEBUG - dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-07-01 16:52:46,406 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-01 16:52:46,406 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-07-01 16:52:46,406 - DEBUG - stack ['$86call.4']
2024-07-01 16:52:46,406 - DEBUG - dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-07-01 16:52:46,406 - DEBUG - stack []
2024-07-01 16:52:46,406 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-07-01 16:52:46,406 - DEBUG - stack ['$null$98.6', '$98load_global.5']
2024-07-01 16:52:46,406 - DEBUG - dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-07-01 16:52:46,406 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-01 16:52:46,407 - DEBUG - dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-07-01 16:52:46,407 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-01 16:52:46,407 - DEBUG - dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-07-01 16:52:46,407 - DEBUG - stack ['$116call.8']
2024-07-01 16:52:46,407 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-07-01 16:52:46,407 - DEBUG - stack ['$null$126.9', '$126load_method.10']
2024-07-01 16:52:46,407 - DEBUG - dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-07-01 16:52:46,407 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-01 16:52:46,407 - DEBUG - dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-07-01 16:52:46,407 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-01 16:52:46,407 - DEBUG - dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-07-01 16:52:46,408 - DEBUG - stack ['$154call.12']
2024-07-01 16:52:46,408 - DEBUG - dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-07-01 16:52:46,408 - DEBUG - stack []
2024-07-01 16:52:46,408 - DEBUG - dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-07-01 16:52:46,408 - DEBUG - stack ['$null$166.13']
2024-07-01 16:52:46,408 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-07-01 16:52:46,408 - DEBUG - stack ['$null$166.13', '$168load_deref.14']
2024-07-01 16:52:46,408 - DEBUG - dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-07-01 16:52:46,408 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-01 16:52:46,408 - DEBUG - dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-07-01 16:52:46,408 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-01 16:52:46,408 - DEBUG - dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-07-01 16:52:46,408 - DEBUG - stack ['$176call.16']
2024-07-01 16:52:46,408 - DEBUG - end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,409 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:46,409 - DEBUG - stack: []
2024-07-01 16:52:46,409 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-07-01 16:52:46,409 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-07-01 16:52:46,409 - DEBUG - stack []
2024-07-01 16:52:46,409 - DEBUG - dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-07-01 16:52:46,409 - DEBUG - stack ['$max_value188.0']
2024-07-01 16:52:46,409 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,409 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:46,409 - DEBUG - stack: []
2024-07-01 16:52:46,409 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-01 16:52:46,409 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-07-01 16:52:46,409 - DEBUG - stack []
2024-07-01 16:52:46,409 - DEBUG - dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-07-01 16:52:46,410 - DEBUG - stack ['$it192.0']
2024-07-01 16:52:46,410 - DEBUG - end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-07-01 16:52:46,410 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:46,410 - DEBUG - stack: ['$phi196.0']
2024-07-01 16:52:46,410 - DEBUG - state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-07-01 16:52:46,410 - DEBUG - dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-07-01 16:52:46,410 - DEBUG - stack ['$phi196.0']
2024-07-01 16:52:46,410 - DEBUG - end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:46,410 - DEBUG - pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-07-01 16:52:46,410 - DEBUG - stack: []
2024-07-01 16:52:46,410 - DEBUG - state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-07-01 16:52:46,410 - DEBUG - dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-07-01 16:52:46,410 - DEBUG - stack []
2024-07-01 16:52:46,411 - DEBUG - dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-07-01 16:52:46,411 - DEBUG - stack ['$max_value300.0']
2024-07-01 16:52:46,411 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,411 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-07-01 16:52:46,411 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2024-07-01 16:52:46,411 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-07-01 16:52:46,411 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-07-01 16:52:46,411 - DEBUG - stack ['$phi198.0', '$phi198.1']
2024-07-01 16:52:46,411 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-07-01 16:52:46,411 - DEBUG - stack ['$phi198.0']
2024-07-01 16:52:46,411 - DEBUG - dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-07-01 16:52:46,411 - DEBUG - stack ['$phi198.0', '$view200.2']
2024-07-01 16:52:46,411 - DEBUG - dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-07-01 16:52:46,411 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-01 16:52:46,412 - DEBUG - dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-07-01 16:52:46,412 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-01 16:52:46,412 - DEBUG - dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-07-01 16:52:46,412 - DEBUG - stack ['$phi198.0', '$228call.5']
2024-07-01 16:52:46,412 - DEBUG - dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-07-01 16:52:46,412 - DEBUG - stack ['$phi198.0']
2024-07-01 16:52:46,412 - DEBUG - dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-07-01 16:52:46,412 - DEBUG - stack ['$phi198.0', '$null$240.6']
2024-07-01 16:52:46,412 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-07-01 16:52:46,412 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-07-01 16:52:46,412 - DEBUG - dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-07-01 16:52:46,412 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-01 16:52:46,412 - DEBUG - dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-07-01 16:52:46,412 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-01 16:52:46,413 - DEBUG - dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-07-01 16:52:46,413 - DEBUG - stack ['$phi198.0', '$250call.9']
2024-07-01 16:52:46,413 - DEBUG - end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-07-01 16:52:46,413 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-07-01 16:52:46,413 - DEBUG - stack: ['$phi262.0']
2024-07-01 16:52:46,413 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-07-01 16:52:46,413 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-07-01 16:52:46,413 - DEBUG - stack ['$phi262.0']
2024-07-01 16:52:46,413 - DEBUG - dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-07-01 16:52:46,413 - DEBUG - stack ['$phi262.0', '$v262.1']
2024-07-01 16:52:46,413 - DEBUG - dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-07-01 16:52:46,413 - DEBUG - stack ['$v262.1', '$phi262.0']
2024-07-01 16:52:46,413 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-07-01 16:52:46,413 - DEBUG - stack ['$v262.1']
2024-07-01 16:52:46,414 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,414 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-07-01 16:52:46,414 - DEBUG - stack: ['$phi270.0']
2024-07-01 16:52:46,414 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-07-01 16:52:46,414 - DEBUG - dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-07-01 16:52:46,414 - DEBUG - stack ['$phi270.0']
2024-07-01 16:52:46,414 - DEBUG - dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-07-01 16:52:46,414 - DEBUG - stack ['$phi270.0', '$null$270.1']
2024-07-01 16:52:46,414 - DEBUG - dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-07-01 16:52:46,414 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-07-01 16:52:46,414 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-07-01 16:52:46,414 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-07-01 16:52:46,414 - DEBUG - dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-07-01 16:52:46,414 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-01 16:52:46,414 - DEBUG - dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-07-01 16:52:46,415 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-01 16:52:46,415 - DEBUG - dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-07-01 16:52:46,415 - DEBUG - stack ['$phi270.0', '$282call.5']
2024-07-01 16:52:46,415 - DEBUG - end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-07-01 16:52:46,415 - DEBUG - pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-01 16:52:46,415 - DEBUG - stack: ['$phi294.0']
2024-07-01 16:52:46,415 - DEBUG - state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-07-01 16:52:46,415 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-07-01 16:52:46,415 - DEBUG - stack ['$phi294.0']
2024-07-01 16:52:46,415 - DEBUG - dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-07-01 16:52:46,415 - DEBUG - stack ['$phi294.0', '$v294.1']
2024-07-01 16:52:46,415 - DEBUG - end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-07-01 16:52:46,415 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-01 16:52:46,416 - DEBUG - stack: ['$phi298.0']
2024-07-01 16:52:46,416 - DEBUG - state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-07-01 16:52:46,416 - DEBUG - dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-07-01 16:52:46,416 - DEBUG - stack ['$phi298.0']
2024-07-01 16:52:46,416 - DEBUG - end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-07-01 16:52:46,416 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:46,416 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:46,416 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:46,416 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-07-01 16:52:46,417 - DEBUG - defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-07-01 16:52:46,417 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-07-01 16:52:46,418 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:46,420 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:46,421 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:46,422 - DEBUG - keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-07-01 16:52:46,422 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-07-01 16:52:46,422 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:46,422 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-07-01 16:52:46,422 - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-07-01 16:52:46,423 - DEBUG - block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,425 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-07-01 16:52:46,435 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:46,435 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,435 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,435 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:46,435 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:46,435 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:46,435 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,435 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,435 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:46,436 - DEBUG - ==== SSA block analysis pass on 28
2024-07-01 16:52:46,436 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,436 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:46,436 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:46,436 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,436 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:46,436 - DEBUG - ==== SSA block analysis pass on 58
2024-07-01 16:52:46,436 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,436 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,436 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:46,436 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,436 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:46,436 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,437 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:46,437 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:46,437 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,437 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:46,437 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,437 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,437 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,437 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:46,437 - DEBUG - ==== SSA block analysis pass on 188
2024-07-01 16:52:46,437 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,437 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:46,437 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:46,438 - DEBUG - ==== SSA block analysis pass on 192
2024-07-01 16:52:46,438 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,438 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:46,438 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:46,438 - DEBUG - on stmt: jump 196
2024-07-01 16:52:46,438 - DEBUG - ==== SSA block analysis pass on 196
2024-07-01 16:52:46,438 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,438 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:46,438 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:46,438 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:46,438 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:46,438 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:46,438 - DEBUG - ==== SSA block analysis pass on 198
2024-07-01 16:52:46,439 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,439 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:46,439 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:46,439 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,439 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:46,439 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,439 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,439 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,439 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:46,439 - DEBUG - ==== SSA block analysis pass on 262
2024-07-01 16:52:46,439 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,439 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:46,440 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:46,440 - DEBUG - ==== SSA block analysis pass on 270
2024-07-01 16:52:46,440 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,440 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:46,440 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,440 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,440 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,440 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:46,440 - DEBUG - ==== SSA block analysis pass on 294
2024-07-01 16:52:46,440 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,440 - DEBUG - on stmt: max_value = v
2024-07-01 16:52:46,440 - DEBUG - on stmt: jump 298
2024-07-01 16:52:46,441 - DEBUG - ==== SSA block analysis pass on 298
2024-07-01 16:52:46,441 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,441 - DEBUG - on stmt: jump 196
2024-07-01 16:52:46,441 - DEBUG - ==== SSA block analysis pass on 300
2024-07-01 16:52:46,441 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7963efd0>
2024-07-01 16:52:46,441 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:46,441 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:46,443 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x7f1c793dfd90>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x7f1c793dfbd0>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x7f1c793df350>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x7f1c793dc9d0>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f1c793dfc50>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x7f1c793c73d0>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x7f1c793c7e90>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c793c7a50>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c793c4a50>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c793c5fd0>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x7f1c793c7b50>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x7f1c7962e050>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x7f1c793c7510>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x7f1c793c6c90>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x7f1c793c5790>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x7f1c793da750>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7f1c793cf890>, 0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x7f1c793dbb90>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x7f1c793dbd50>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7f1c793cf990>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x7f1c793da0d0>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x7f1c793d98d0>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x7f1c793cce50>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f1c793dc310>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c793dc790>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7f1c79482f90>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x7f1c793ddcd0>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x7f1c793dc190>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x7f1c79483350>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x7f1c793ce190>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x7f1c793c4550>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x7f1c793c7f50>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c791f0590>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f1c793df1d0>, 58)],
             'bool26': [(<numba.core.ir.Assign object at 0x7f1c7963c690>, 0)],
             'bool260': [(<numba.core.ir.Assign object at 0x7f1c793c6590>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x7f1c793d9390>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x7f1c793dc3d0>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7f1c793ddb50>,
                            58),
                           (<numba.core.ir.Assign object at 0x7f1c793daf50>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x7f1c793c5510>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x7f1c793c7bd0>, 198)]})
2024-07-01 16:52:46,443 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7963efd0>
2024-07-01 16:52:46,443 - DEBUG - Fix SSA violator on var max_value
2024-07-01 16:52:46,443 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:46,443 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,443 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,444 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:46,444 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:46,444 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:46,444 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,444 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,444 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:46,444 - DEBUG - ==== SSA block rewrite pass on 28
2024-07-01 16:52:46,444 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,444 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:46,444 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:46,444 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,444 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:46,445 - DEBUG - ==== SSA block rewrite pass on 58
2024-07-01 16:52:46,445 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,445 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,445 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:46,445 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,445 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:46,445 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,445 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:46,445 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:46,445 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,445 - DEBUG - first assign: max_value
2024-07-01 16:52:46,445 - DEBUG - replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,446 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:46,446 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,446 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,446 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,446 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:46,446 - DEBUG - ==== SSA block rewrite pass on 188
2024-07-01 16:52:46,446 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,446 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:46,446 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:46,446 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:46,446 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,446 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:46,447 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:46,447 - DEBUG - on stmt: jump 196
2024-07-01 16:52:46,447 - DEBUG - ==== SSA block rewrite pass on 196
2024-07-01 16:52:46,447 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,447 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:46,447 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:46,447 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:46,447 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:46,447 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:46,447 - DEBUG - ==== SSA block rewrite pass on 198
2024-07-01 16:52:46,447 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,447 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:46,447 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:46,448 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,448 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:46,448 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,448 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,448 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,448 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:46,448 - DEBUG - ==== SSA block rewrite pass on 262
2024-07-01 16:52:46,448 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,448 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:46,448 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:46,448 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:46,448 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,448 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:46,448 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,449 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,449 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,449 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:46,449 - DEBUG - ==== SSA block rewrite pass on 294
2024-07-01 16:52:46,449 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,449 - DEBUG - on stmt: max_value = v
2024-07-01 16:52:46,449 - DEBUG - replaced with: max_value.1 = v
2024-07-01 16:52:46,449 - DEBUG - on stmt: jump 298
2024-07-01 16:52:46,449 - DEBUG - ==== SSA block rewrite pass on 298
2024-07-01 16:52:46,449 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,449 - DEBUG - on stmt: jump 196
2024-07-01 16:52:46,449 - DEBUG - ==== SSA block rewrite pass on 300
2024-07-01 16:52:46,449 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793cc1d0>
2024-07-01 16:52:46,449 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:46,450 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:46,450 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7f1c6685c7d0>],
             294: [<numba.core.ir.Assign object at 0x7f1c7948b810>]})
2024-07-01 16:52:46,450 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:46,450 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,450 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,450 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:46,450 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:46,450 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:46,450 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,451 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,451 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:46,451 - DEBUG - ==== SSA block rewrite pass on 28
2024-07-01 16:52:46,451 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,451 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:46,451 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:46,451 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,451 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:46,451 - DEBUG - ==== SSA block rewrite pass on 58
2024-07-01 16:52:46,451 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,451 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,452 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:46,452 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,452 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:46,452 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,452 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:46,452 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:46,452 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,452 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:46,452 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,452 - DEBUG - find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,452 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,453 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,453 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:46,453 - DEBUG - ==== SSA block rewrite pass on 188
2024-07-01 16:52:46,453 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,453 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:46,453 - DEBUG - find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-07-01 16:52:46,453 - DEBUG - find_def_from_top label 188
2024-07-01 16:52:46,453 - DEBUG - idom 58 from label 188
2024-07-01 16:52:46,453 - DEBUG - find_def_from_bottom label 58
2024-07-01 16:52:46,453 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:46,453 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:46,453 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,453 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:46,453 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:46,454 - DEBUG - on stmt: jump 196
2024-07-01 16:52:46,454 - DEBUG - ==== SSA block rewrite pass on 196
2024-07-01 16:52:46,454 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,454 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:46,454 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:46,454 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:46,454 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:46,454 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:46,454 - DEBUG - ==== SSA block rewrite pass on 198
2024-07-01 16:52:46,454 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,454 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:46,454 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:46,454 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,455 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:46,455 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,455 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,455 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,455 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:46,455 - DEBUG - ==== SSA block rewrite pass on 262
2024-07-01 16:52:46,455 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,455 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:46,455 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:46,455 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:46,455 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,455 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:46,455 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,456 - DEBUG - find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,456 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:46,456 - DEBUG - idom 198 from label 270
2024-07-01 16:52:46,456 - DEBUG - find_def_from_bottom label 198
2024-07-01 16:52:46,456 - DEBUG - find_def_from_top label 198
2024-07-01 16:52:46,456 - DEBUG - idom 196 from label 198
2024-07-01 16:52:46,456 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:46,456 - DEBUG - find_def_from_top label 196
2024-07-01 16:52:46,456 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-07-01 16:52:46,456 - DEBUG - find_def_from_bottom label 192
2024-07-01 16:52:46,456 - DEBUG - find_def_from_top label 192
2024-07-01 16:52:46,457 - DEBUG - idom 58 from label 192
2024-07-01 16:52:46,457 - DEBUG - find_def_from_bottom label 58
2024-07-01 16:52:46,457 - DEBUG - incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,457 - DEBUG - find_def_from_bottom label 298
2024-07-01 16:52:46,457 - DEBUG - find_def_from_top label 298
2024-07-01 16:52:46,457 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-07-01 16:52:46,457 - DEBUG - find_def_from_bottom label 294
2024-07-01 16:52:46,458 - DEBUG - incoming_def max_value.1 = v
2024-07-01 16:52:46,458 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:46,458 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:46,458 - DEBUG - idom 198 from label 270
2024-07-01 16:52:46,458 - DEBUG - find_def_from_bottom label 198
2024-07-01 16:52:46,458 - DEBUG - find_def_from_top label 198
2024-07-01 16:52:46,458 - DEBUG - idom 196 from label 198
2024-07-01 16:52:46,458 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:46,459 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-07-01 16:52:46,459 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-07-01 16:52:46,459 - DEBUG - replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,459 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,459 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,459 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:46,459 - DEBUG - ==== SSA block rewrite pass on 294
2024-07-01 16:52:46,459 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,459 - DEBUG - on stmt: max_value.1 = v
2024-07-01 16:52:46,459 - DEBUG - on stmt: jump 298
2024-07-01 16:52:46,460 - DEBUG - ==== SSA block rewrite pass on 298
2024-07-01 16:52:46,460 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,460 - DEBUG - on stmt: jump 196
2024-07-01 16:52:46,460 - DEBUG - ==== SSA block rewrite pass on 300
2024-07-01 16:52:46,460 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c7948bf50>
2024-07-01 16:52:46,460 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:46,460 - DEBUG - find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-07-01 16:52:46,460 - DEBUG - find_def_from_top label 300
2024-07-01 16:52:46,460 - DEBUG - idom 196 from label 300
2024-07-01 16:52:46,460 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:46,460 - DEBUG - replaced with: $302return_value.1 = cast(value=max_value.2)
2024-07-01 16:52:46,460 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:46,468 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-07-01 16:52:46,468 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:46,468 - DEBUG - stack: []
2024-07-01 16:52:46,468 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:46,468 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-07-01 16:52:46,469 - DEBUG - stack []
2024-07-01 16:52:46,469 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-07-01 16:52:46,469 - DEBUG - stack []
2024-07-01 16:52:46,469 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-01 16:52:46,469 - DEBUG - stack []
2024-07-01 16:52:46,469 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-01 16:52:46,469 - DEBUG - stack ['$indices4.0']
2024-07-01 16:52:46,469 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-01 16:52:46,469 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-07-01 16:52:46,469 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-07-01 16:52:46,469 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-07-01 16:52:46,469 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-07-01 16:52:46,469 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-07-01 16:52:46,470 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-07-01 16:52:46,470 - DEBUG - stack ['$indices4.0', '$binop_sub20.4']
2024-07-01 16:52:46,470 - DEBUG - dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-07-01 16:52:46,470 - DEBUG - stack ['$24compare_op.5']
2024-07-01 16:52:46,470 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,470 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-07-01 16:52:46,470 - DEBUG - stack: []
2024-07-01 16:52:46,470 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-07-01 16:52:46,470 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-01 16:52:46,470 - DEBUG - stack []
2024-07-01 16:52:46,470 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-01 16:52:46,470 - DEBUG - stack ['$indices32.0']
2024-07-01 16:52:46,471 - DEBUG - dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-01 16:52:46,471 - DEBUG - stack ['$indices32.0', '$a34.1']
2024-07-01 16:52:46,471 - DEBUG - dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-07-01 16:52:46,471 - DEBUG - stack ['$indices32.0', '$36load_attr.2']
2024-07-01 16:52:46,471 - DEBUG - dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-07-01 16:52:46,471 - DEBUG - stack ['$indices32.0', '$46unary_negative.3']
2024-07-01 16:52:46,471 - DEBUG - dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-07-01 16:52:46,471 - DEBUG - stack ['$48compare_op.4']
2024-07-01 16:52:46,471 - DEBUG - end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:46,471 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:46,471 - DEBUG - stack: []
2024-07-01 16:52:46,471 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-07-01 16:52:46,471 - DEBUG - dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-07-01 16:52:46,472 - DEBUG - stack []
2024-07-01 16:52:46,472 - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-07-01 16:52:46,472 - DEBUG - stack ['$null$56.1', '$56load_global.0']
2024-07-01 16:52:46,472 - DEBUG - dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-07-01 16:52:46,472 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-01 16:52:46,472 - DEBUG - dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-07-01 16:52:46,472 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-01 16:52:46,472 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-07-01 16:52:46,472 - DEBUG - stack ['$74call.3']
2024-07-01 16:52:46,472 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,472 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:46,472 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:46,472 - DEBUG - stack: []
2024-07-01 16:52:46,472 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-07-01 16:52:46,473 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-07-01 16:52:46,473 - DEBUG - stack []
2024-07-01 16:52:46,473 - DEBUG - dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-07-01 16:52:46,473 - DEBUG - stack ['$a86.0']
2024-07-01 16:52:46,473 - DEBUG - dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-07-01 16:52:46,473 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-07-01 16:52:46,473 - DEBUG - dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-07-01 16:52:46,473 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-07-01 16:52:46,473 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-07-01 16:52:46,473 - DEBUG - stack ['$114call.3']
2024-07-01 16:52:46,473 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-07-01 16:52:46,473 - DEBUG - stack ['$114call.3', '$indices124.4']
2024-07-01 16:52:46,473 - DEBUG - dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-07-01 16:52:46,474 - DEBUG - stack ['$126binary_subscr.5']
2024-07-01 16:52:46,474 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,474 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:46,474 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-07-01 16:52:46,474 - DEBUG - defmap: {}
2024-07-01 16:52:46,474 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,474 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,474 - DEBUG - keep phismap: {}
2024-07-01 16:52:46,474 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:46,474 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:46,475 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-07-01 16:52:46,475 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-07-01 16:52:46,475 - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,475 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,476 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-07-01 16:52:46,482 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:46,483 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7962c810>
2024-07-01 16:52:46,483 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,483 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-07-01 16:52:46,483 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:46,483 - DEBUG - on stmt: $const18.3 = const(int, 1)
2024-07-01 16:52:46,483 - DEBUG - on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-07-01 16:52:46,483 - DEBUG - on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-07-01 16:52:46,483 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,483 - DEBUG - on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,483 - DEBUG - on stmt: branch $30pred, 56, 32
2024-07-01 16:52:46,484 - DEBUG - ==== SSA block analysis pass on 32
2024-07-01 16:52:46,484 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7962c810>
2024-07-01 16:52:46,484 - DEBUG - on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:46,484 - DEBUG - on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-07-01 16:52:46,484 - DEBUG - on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-07-01 16:52:46,484 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-07-01 16:52:46,484 - DEBUG - on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,484 - DEBUG - on stmt: branch $54pred, 56, 86
2024-07-01 16:52:46,484 - DEBUG - ==== SSA block analysis pass on 56
2024-07-01 16:52:46,484 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7962c810>
2024-07-01 16:52:46,484 - DEBUG - on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-07-01 16:52:46,484 - DEBUG - on stmt: $const68.2 = const(str, Index out of bounds)
2024-07-01 16:52:46,485 - DEBUG - on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,485 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-07-01 16:52:46,485 - DEBUG - ==== SSA block analysis pass on 86
2024-07-01 16:52:46,485 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7962c810>
2024-07-01 16:52:46,485 - DEBUG - on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-07-01 16:52:46,485 - DEBUG - on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,485 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-07-01 16:52:46,485 - DEBUG - on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-07-01 16:52:46,485 - DEBUG - on stmt: return $136return_value.6
2024-07-01 16:52:46,486 - DEBUG - defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x7f1c79a31f90>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c79a32110>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x7f1c79a33d10>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c79348750>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x7f1c79348710>, 0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c7934b7d0>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x7f1c79a31350>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x7f1c79a33650>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f1c79a33310>, 32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79a32250>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x7f1c79a30950>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x7f1c79a31a50>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79349150>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x7f1c79348910>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x7f1c79348e90>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x7f1c79a33e90>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c7934ac90>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x7f1c7934bad0>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f1c79a30e10>, 32)],
             'indices': [(<numba.core.ir.Assign object at 0x7f1c7934bc10>, 0)]})
2024-07-01 16:52:46,486 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7962c810>
2024-07-01 16:52:46,507 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-07-01 16:52:46,508 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:46,508 - DEBUG - stack: []
2024-07-01 16:52:46,508 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:46,508 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-07-01 16:52:46,508 - DEBUG - stack []
2024-07-01 16:52:46,508 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-07-01 16:52:46,508 - DEBUG - stack []
2024-07-01 16:52:46,508 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-01 16:52:46,508 - DEBUG - stack []
2024-07-01 16:52:46,508 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-07-01 16:52:46,508 - DEBUG - stack ['$ary4.0']
2024-07-01 16:52:46,508 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-01 16:52:46,508 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-07-01 16:52:46,509 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-07-01 16:52:46,509 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-07-01 16:52:46,509 - DEBUG - dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-07-01 16:52:46,509 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-01 16:52:46,509 - DEBUG - dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-07-01 16:52:46,509 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-01 16:52:46,509 - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-07-01 16:52:46,509 - DEBUG - stack ['$44call.5']
2024-07-01 16:52:46,509 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,509 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:46,509 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:46,510 - DEBUG - defmap: {}
2024-07-01 16:52:46,510 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,510 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,510 - DEBUG - keep phismap: {}
2024-07-01 16:52:46,510 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:46,510 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:46,510 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,511 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-07-01 16:52:46,515 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:46,515 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79863850>
2024-07-01 16:52:46,516 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-07-01 16:52:46,516 - DEBUG - on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-07-01 16:52:46,516 - DEBUG - on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-07-01 16:52:46,516 - DEBUG - on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,516 - DEBUG - on stmt: $54return_value.6 = cast(value=$44call.5)
2024-07-01 16:52:46,516 - DEBUG - on stmt: return $54return_value.6
2024-07-01 16:52:46,516 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x7f1c79861990>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x7f1c79863d10>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x7f1c79862690>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f1c79863f90>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x7f1c79863410>, 0)]})
2024-07-01 16:52:46,516 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79863850>
2024-07-01 16:52:46,607 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	RESUME(arg=0, lineno=486)
           4	LOAD_CONST(arg=1, lineno=488)
           6	RETURN_VALUE(arg=None, lineno=488)
2024-07-01 16:52:46,607 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:46,607 - DEBUG - stack: []
2024-07-01 16:52:46,608 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:46,608 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=486)
2024-07-01 16:52:46,608 - DEBUG - stack []
2024-07-01 16:52:46,608 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=486)
2024-07-01 16:52:46,608 - DEBUG - stack []
2024-07-01 16:52:46,608 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=488)
2024-07-01 16:52:46,608 - DEBUG - stack []
2024-07-01 16:52:46,608 - DEBUG - dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=488)
2024-07-01 16:52:46,608 - DEBUG - stack ['$const4.0']
2024-07-01 16:52:46,608 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,608 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:46,608 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:46,609 - DEBUG - defmap: {}
2024-07-01 16:52:46,609 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,609 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,609 - DEBUG - keep phismap: {}
2024-07-01 16:52:46,609 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:46,609 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:46,609 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'retval': '$const4.0', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,609 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0 = const(bool, False)           ['$const4.0']
    $6return_value.1 = cast(value=$const4.0) ['$6return_value.1', '$const4.0']
    return $6return_value.1                  ['$6return_value.1']

2024-07-01 16:52:46,614 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:46,614 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c795e5c10>
2024-07-01 16:52:46,614 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,614 - DEBUG - on stmt: $const4.0 = const(bool, False)
2024-07-01 16:52:46,614 - DEBUG - on stmt: $6return_value.1 = cast(value=$const4.0)
2024-07-01 16:52:46,614 - DEBUG - on stmt: return $6return_value.1
2024-07-01 16:52:46,614 - DEBUG - defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x7f1c795e6b10>,
                                   0)],
             '$const4.0': [(<numba.core.ir.Assign object at 0x7f1c795e45d0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c795e6c50>, 0)]})
2024-07-01 16:52:46,615 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c795e5c10>
2024-07-01 16:52:46,636 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-07-01 16:52:46,636 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:46,636 - DEBUG - stack: []
2024-07-01 16:52:46,636 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:46,637 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-07-01 16:52:46,637 - DEBUG - stack []
2024-07-01 16:52:46,637 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-07-01 16:52:46,637 - DEBUG - stack []
2024-07-01 16:52:46,637 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-07-01 16:52:46,637 - DEBUG - stack []
2024-07-01 16:52:46,637 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-07-01 16:52:46,637 - DEBUG - stack ['$a4.0']
2024-07-01 16:52:46,637 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-07-01 16:52:46,637 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-07-01 16:52:46,637 - DEBUG - dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-07-01 16:52:46,637 - DEBUG - stack ['$8compare_op.2']
2024-07-01 16:52:46,637 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,638 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:46,638 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:46,638 - DEBUG - defmap: {}
2024-07-01 16:52:46,638 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,638 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:46,638 - DEBUG - keep phismap: {}
2024-07-01 16:52:46,638 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:46,638 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:46,638 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,639 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-07-01 16:52:46,642 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:46,642 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7956a910>
2024-07-01 16:52:46,643 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,643 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-07-01 16:52:46,643 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-07-01 16:52:46,643 - DEBUG - on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-07-01 16:52:46,643 - DEBUG - on stmt: return $14return_value.3
2024-07-01 16:52:46,643 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x7f1c79568b10>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c79569010>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c79568e10>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7f1c7956b610>, 0)]})
2024-07-01 16:52:46,643 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7956a910>
2024-07-01 16:52:46,779 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-07-01 16:52:46,780 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:46,780 - DEBUG - stack: []
2024-07-01 16:52:46,780 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:46,780 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-07-01 16:52:46,780 - DEBUG - stack []
2024-07-01 16:52:46,780 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-07-01 16:52:46,780 - DEBUG - stack []
2024-07-01 16:52:46,780 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-07-01 16:52:46,780 - DEBUG - stack []
2024-07-01 16:52:46,780 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-07-01 16:52:46,780 - DEBUG - stack []
2024-07-01 16:52:46,780 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-07-01 16:52:46,780 - DEBUG - stack ['$6load_deref.0']
2024-07-01 16:52:46,781 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-07-01 16:52:46,781 - DEBUG - stack []
2024-07-01 16:52:46,781 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-07-01 16:52:46,781 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-07-01 16:52:46,781 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-07-01 16:52:46,781 - DEBUG - stack ['$null$10.2', '$22load_attr.3']
2024-07-01 16:52:46,781 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-07-01 16:52:46,781 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-01 16:52:46,781 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-07-01 16:52:46,781 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-01 16:52:46,781 - DEBUG - dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-07-01 16:52:46,781 - DEBUG - stack ['$38call.5']
2024-07-01 16:52:46,781 - DEBUG - end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-07-01 16:52:46,782 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-01 16:52:46,782 - DEBUG - stack: ['$phi50.0']
2024-07-01 16:52:46,782 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-01 16:52:46,782 - DEBUG - dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-07-01 16:52:46,782 - DEBUG - stack ['$phi50.0']
2024-07-01 16:52:46,782 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:46,782 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-07-01 16:52:46,782 - DEBUG - stack: []
2024-07-01 16:52:46,782 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-01 16:52:46,782 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-07-01 16:52:46,782 - DEBUG - stack []
2024-07-01 16:52:46,782 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-07-01 16:52:46,782 - DEBUG - stack ['$c102.0']
2024-07-01 16:52:46,782 - DEBUG - dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-07-01 16:52:46,783 - DEBUG - stack ['$c102.0', '$a104.1']
2024-07-01 16:52:46,783 - DEBUG - dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-07-01 16:52:46,783 - DEBUG - stack ['$c102.0', '$106load_attr.2']
2024-07-01 16:52:46,783 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-07-01 16:52:46,783 - DEBUG - stack ['$binop_truediv116.3']
2024-07-01 16:52:46,783 - DEBUG - end state. edges=[]
2024-07-01 16:52:46,783 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-07-01 16:52:46,783 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2024-07-01 16:52:46,783 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-07-01 16:52:46,783 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-07-01 16:52:46,783 - DEBUG - stack ['$phi52.0', '$phi52.1']
2024-07-01 16:52:46,783 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-07-01 16:52:46,783 - DEBUG - stack ['$phi52.0']
2024-07-01 16:52:46,783 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-07-01 16:52:46,784 - DEBUG - stack ['$phi52.0', '$c54.2']
2024-07-01 16:52:46,784 - DEBUG - dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-07-01 16:52:46,784 - DEBUG - stack ['$phi52.0', '$c54.2', '$v56.3']
2024-07-01 16:52:46,784 - DEBUG - dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-07-01 16:52:46,784 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-01 16:52:46,784 - DEBUG - dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-07-01 16:52:46,784 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-01 16:52:46,784 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-07-01 16:52:46,784 - DEBUG - stack ['$phi52.0', '$c54.2', '$84call.6']
2024-07-01 16:52:46,784 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-07-01 16:52:46,784 - DEBUG - stack ['$phi52.0', '$binop_iadd94.7']
2024-07-01 16:52:46,784 - DEBUG - dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-07-01 16:52:46,784 - DEBUG - stack ['$phi52.0']
2024-07-01 16:52:46,785 - DEBUG - end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-07-01 16:52:46,785 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-01 16:52:46,785 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:46,785 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-07-01 16:52:46,785 - DEBUG - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-07-01 16:52:46,785 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:46,786 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:46,787 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:46,787 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:46,788 - DEBUG - keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-07-01 16:52:46,788 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-07-01 16:52:46,788 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:46,788 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-07-01 16:52:46,788 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-07-01 16:52:46,788 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-07-01 16:52:46,789 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:46,789 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-07-01 16:52:46,796 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:46,796 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793daf50>
2024-07-01 16:52:46,796 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,796 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,796 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,796 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:46,797 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,797 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:46,797 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:46,797 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,797 - DEBUG - ==== SSA block analysis pass on 50
2024-07-01 16:52:46,797 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793daf50>
2024-07-01 16:52:46,797 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:46,797 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:46,797 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:46,797 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:46,797 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:46,797 - DEBUG - ==== SSA block analysis pass on 52
2024-07-01 16:52:46,798 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793daf50>
2024-07-01 16:52:46,798 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:46,798 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:46,798 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,798 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,798 - DEBUG - on stmt: c = $binop_iadd94.7
2024-07-01 16:52:46,798 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,798 - DEBUG - ==== SSA block analysis pass on 102
2024-07-01 16:52:46,798 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c793daf50>
2024-07-01 16:52:46,798 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:46,799 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:46,799 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:46,799 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:46,800 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79666490>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7f1c79665690>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x7f1c79680490>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x7f1c79665190>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x7f1c79664cd0>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x7f1c796645d0>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c79666310>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c79666d50>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c79667310>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x7f1c79666a90>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x7f1c79667550>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x7f1c79667510>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x7f1c796800d0>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7f1c79664b50>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7f1c79667110>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c793ce4d0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7f1c793da510>, 0),
                   (<numba.core.ir.Assign object at 0x7f1c79667e50>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x7f1c796678d0>, 52)]})
2024-07-01 16:52:46,800 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c793daf50>
2024-07-01 16:52:46,800 - DEBUG - Fix SSA violator on var c
2024-07-01 16:52:46,800 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:46,800 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79666850>
2024-07-01 16:52:46,800 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,800 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,801 - DEBUG - first assign: c
2024-07-01 16:52:46,801 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,801 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,801 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:46,801 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,801 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:46,801 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:46,801 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,801 - DEBUG - ==== SSA block rewrite pass on 50
2024-07-01 16:52:46,801 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79666850>
2024-07-01 16:52:46,801 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:46,801 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:46,801 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:46,802 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:46,802 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:46,802 - DEBUG - ==== SSA block rewrite pass on 52
2024-07-01 16:52:46,802 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79666850>
2024-07-01 16:52:46,802 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:46,802 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:46,802 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,802 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,802 - DEBUG - on stmt: c = $binop_iadd94.7
2024-07-01 16:52:46,802 - DEBUG - replaced with: c.1 = $binop_iadd94.7
2024-07-01 16:52:46,802 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,803 - DEBUG - ==== SSA block rewrite pass on 102
2024-07-01 16:52:46,803 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79666850>
2024-07-01 16:52:46,803 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:46,803 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:46,803 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:46,803 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:46,803 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c79683b90>],
             52: [<numba.core.ir.Assign object at 0x7f1c796832d0>]})
2024-07-01 16:52:46,803 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:46,803 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79683a50>
2024-07-01 16:52:46,803 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:46,803 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,803 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:46,803 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:46,804 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,804 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:46,804 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:46,804 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,804 - DEBUG - ==== SSA block rewrite pass on 50
2024-07-01 16:52:46,804 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79683a50>
2024-07-01 16:52:46,804 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:46,804 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:46,804 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:46,804 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:46,804 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:46,804 - DEBUG - ==== SSA block rewrite pass on 52
2024-07-01 16:52:46,804 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79683a50>
2024-07-01 16:52:46,804 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:46,805 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:46,805 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:46,805 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,805 - DEBUG - find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,805 - DEBUG - find_def_from_top label 52
2024-07-01 16:52:46,805 - DEBUG - idom 50 from label 52
2024-07-01 16:52:46,805 - DEBUG - find_def_from_bottom label 50
2024-07-01 16:52:46,805 - DEBUG - find_def_from_top label 50
2024-07-01 16:52:46,805 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-07-01 16:52:46,805 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:46,805 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-07-01 16:52:46,805 - DEBUG - find_def_from_bottom label 52
2024-07-01 16:52:46,806 - DEBUG - incoming_def c.1 = $binop_iadd94.7
2024-07-01 16:52:46,806 - DEBUG - replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:46,806 - DEBUG - on stmt: c.1 = $binop_iadd94.7
2024-07-01 16:52:46,806 - DEBUG - on stmt: jump 50
2024-07-01 16:52:46,806 - DEBUG - ==== SSA block rewrite pass on 102
2024-07-01 16:52:46,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c79683a50>
2024-07-01 16:52:46,806 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:46,806 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:46,806 - DEBUG - find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:46,806 - DEBUG - find_def_from_top label 102
2024-07-01 16:52:46,806 - DEBUG - idom 50 from label 102
2024-07-01 16:52:46,806 - DEBUG - find_def_from_bottom label 50
2024-07-01 16:52:46,807 - DEBUG - replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-07-01 16:52:46,807 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:46,807 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:47,118 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:47,118 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:47,118 - DEBUG - stack: []
2024-07-01 16:52:47,118 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:47,118 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-07-01 16:52:47,118 - DEBUG - stack []
2024-07-01 16:52:47,118 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-07-01 16:52:47,118 - DEBUG - stack []
2024-07-01 16:52:47,118 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:47,118 - DEBUG - stack []
2024-07-01 16:52:47,119 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:47,119 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:47,119 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:47,119 - DEBUG - stack ['$x4.0', '$const6.1']
2024-07-01 16:52:47,119 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-07-01 16:52:47,119 - DEBUG - stack ['$8binary_subscr.2']
2024-07-01 16:52:47,119 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-07-01 16:52:47,119 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-07-01 16:52:47,119 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:47,119 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-07-01 16:52:47,119 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-07-01 16:52:47,119 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-07-01 16:52:47,119 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-07-01 16:52:47,120 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-07-01 16:52:47,120 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-07-01 16:52:47,120 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-07-01 16:52:47,120 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-07-01 16:52:47,120 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-07-01 16:52:47,120 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-07-01 16:52:47,120 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-07-01 16:52:47,120 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:47,120 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-07-01 16:52:47,120 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:47,120 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-07-01 16:52:47,121 - DEBUG - dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-07-01 16:52:47,121 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-01 16:52:47,121 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-07-01 16:52:47,121 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-07-01 16:52:47,121 - DEBUG - dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-07-01 16:52:47,121 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-07-01 16:52:47,121 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:47,121 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-07-01 16:52:47,121 - DEBUG - dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-07-01 16:52:47,121 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-01 16:52:47,121 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-07-01 16:52:47,121 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-07-01 16:52:47,121 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-07-01 16:52:47,121 - DEBUG - stack ['$8binary_subscr.2', '$112call.19']
2024-07-01 16:52:47,122 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-07-01 16:52:47,122 - DEBUG - stack ['$122compare_op.20']
2024-07-01 16:52:47,122 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-07-01 16:52:47,122 - DEBUG - stack ['$122compare_op.20', '$peaks128.21']
2024-07-01 16:52:47,122 - DEBUG - dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-07-01 16:52:47,122 - DEBUG - stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-07-01 16:52:47,122 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-07-01 16:52:47,122 - DEBUG - stack []
2024-07-01 16:52:47,122 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:47,122 - DEBUG - stack ['$peaks136.23']
2024-07-01 16:52:47,122 - DEBUG - dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-07-01 16:52:47,122 - DEBUG - stack ['$peaks136.23', '$const138.24']
2024-07-01 16:52:47,122 - DEBUG - dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-07-01 16:52:47,122 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-07-01 16:52:47,122 - DEBUG - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:47,123 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-07-01 16:52:47,123 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:47,123 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-07-01 16:52:47,123 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:47,123 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-07-01 16:52:47,123 - DEBUG - dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:47,123 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-07-01 16:52:47,123 - DEBUG - dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-07-01 16:52:47,123 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-07-01 16:52:47,123 - DEBUG - dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-07-01 16:52:47,123 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-07-01 16:52:47,123 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:47,123 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-07-01 16:52:47,124 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-07-01 16:52:47,124 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-07-01 16:52:47,124 - DEBUG - dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-07-01 16:52:47,124 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-07-01 16:52:47,124 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-07-01 16:52:47,124 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-07-01 16:52:47,124 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-07-01 16:52:47,124 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-07-01 16:52:47,124 - DEBUG - dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-07-01 16:52:47,124 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-07-01 16:52:47,124 - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-07-01 16:52:47,124 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-07-01 16:52:47,124 - DEBUG - dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:47,124 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-07-01 16:52:47,125 - DEBUG - dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-07-01 16:52:47,125 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-01 16:52:47,125 - DEBUG - dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-07-01 16:52:47,125 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-07-01 16:52:47,125 - DEBUG - dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-07-01 16:52:47,125 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-07-01 16:52:47,125 - DEBUG - dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:47,125 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-07-01 16:52:47,125 - DEBUG - dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-07-01 16:52:47,125 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-01 16:52:47,125 - DEBUG - dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-07-01 16:52:47,125 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-07-01 16:52:47,125 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-07-01 16:52:47,126 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-07-01 16:52:47,126 - DEBUG - dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-07-01 16:52:47,126 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-07-01 16:52:47,126 - DEBUG - dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-07-01 16:52:47,126 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-07-01 16:52:47,126 - DEBUG - dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-07-01 16:52:47,126 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-07-01 16:52:47,126 - DEBUG - dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-07-01 16:52:47,126 - DEBUG - stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-07-01 16:52:47,126 - DEBUG - dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-07-01 16:52:47,126 - DEBUG - stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-07-01 16:52:47,126 - DEBUG - dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-07-01 16:52:47,126 - DEBUG - stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-07-01 16:52:47,127 - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-07-01 16:52:47,127 - DEBUG - stack []
2024-07-01 16:52:47,127 - DEBUG - dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-07-01 16:52:47,127 - DEBUG - stack ['$peaks296.50']
2024-07-01 16:52:47,127 - DEBUG - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-07-01 16:52:47,127 - DEBUG - stack ['$peaks296.50', '$const298.51']
2024-07-01 16:52:47,127 - DEBUG - dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-07-01 16:52:47,127 - DEBUG - stack ['$300binary_subscr.52']
2024-07-01 16:52:47,127 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,127 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-07-01 16:52:47,127 - DEBUG - stack: []
2024-07-01 16:52:47,127 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-07-01 16:52:47,128 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-07-01 16:52:47,128 - DEBUG - stack []
2024-07-01 16:52:47,128 - DEBUG - dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-07-01 16:52:47,128 - DEBUG - stack ['$wait312.0']
2024-07-01 16:52:47,128 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-07-01 16:52:47,128 - DEBUG - stack ['$wait312.0', '$const314.1']
2024-07-01 16:52:47,128 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-07-01 16:52:47,128 - DEBUG - stack ['$binop_add316.2']
2024-07-01 16:52:47,128 - DEBUG - dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-07-01 16:52:47,128 - DEBUG - stack []
2024-07-01 16:52:47,128 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,128 - DEBUG - pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:47,128 - DEBUG - stack: []
2024-07-01 16:52:47,128 - DEBUG - state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-07-01 16:52:47,128 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-07-01 16:52:47,128 - DEBUG - stack []
2024-07-01 16:52:47,129 - DEBUG - dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-07-01 16:52:47,129 - DEBUG - stack ['$const324.0']
2024-07-01 16:52:47,129 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,129 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:47,129 - DEBUG - stack: []
2024-07-01 16:52:47,129 - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-07-01 16:52:47,129 - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-01 16:52:47,129 - DEBUG - stack []
2024-07-01 16:52:47,129 - DEBUG - dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-01 16:52:47,129 - DEBUG - stack ['$n328.0']
2024-07-01 16:52:47,129 - DEBUG - dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-01 16:52:47,129 - DEBUG - stack ['$n328.0', '$x330.1']
2024-07-01 16:52:47,129 - DEBUG - dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-01 16:52:47,129 - DEBUG - stack ['$n328.0', '$332load_attr.2']
2024-07-01 16:52:47,130 - DEBUG - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-01 16:52:47,130 - DEBUG - stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-07-01 16:52:47,130 - DEBUG - dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-01 16:52:47,130 - DEBUG - stack ['$n328.0', '$344binary_subscr.4']
2024-07-01 16:52:47,130 - DEBUG - dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-07-01 16:52:47,130 - DEBUG - stack ['$354compare_op.5']
2024-07-01 16:52:47,130 - DEBUG - end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,130 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-01 16:52:47,130 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-07-01 16:52:47,130 - DEBUG - stack: []
2024-07-01 16:52:47,130 - DEBUG - state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-07-01 16:52:47,130 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-07-01 16:52:47,130 - DEBUG - stack []
2024-07-01 16:52:47,130 - DEBUG - dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-07-01 16:52:47,131 - DEBUG - stack ['$null$362.1', '$362load_global.0']
2024-07-01 16:52:47,131 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-01 16:52:47,131 - DEBUG - stack ['$null$362.1', '$374load_attr.2']
2024-07-01 16:52:47,131 - DEBUG - dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-07-01 16:52:47,131 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-07-01 16:52:47,131 - DEBUG - dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-01 16:52:47,131 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-07-01 16:52:47,131 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-01 16:52:47,131 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-07-01 16:52:47,131 - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-07-01 16:52:47,131 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-07-01 16:52:47,131 - DEBUG - dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-07-01 16:52:47,131 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-07-01 16:52:47,131 - DEBUG - dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-07-01 16:52:47,132 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-01 16:52:47,132 - DEBUG - dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-07-01 16:52:47,132 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-07-01 16:52:47,132 - DEBUG - dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-07-01 16:52:47,132 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-07-01 16:52:47,132 - DEBUG - dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-07-01 16:52:47,132 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-07-01 16:52:47,132 - DEBUG - dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-07-01 16:52:47,132 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-07-01 16:52:47,132 - DEBUG - dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-07-01 16:52:47,132 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-07-01 16:52:47,132 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-07-01 16:52:47,132 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-07-01 16:52:47,133 - DEBUG - dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-07-01 16:52:47,133 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-07-01 16:52:47,133 - DEBUG - dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-07-01 16:52:47,133 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-07-01 16:52:47,133 - DEBUG - dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-01 16:52:47,133 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-07-01 16:52:47,133 - DEBUG - dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-07-01 16:52:47,133 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-01 16:52:47,133 - DEBUG - dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-07-01 16:52:47,133 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-07-01 16:52:47,133 - DEBUG - dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-07-01 16:52:47,133 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-07-01 16:52:47,133 - DEBUG - dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-07-01 16:52:47,133 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-07-01 16:52:47,134 - DEBUG - dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-07-01 16:52:47,134 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-01 16:52:47,134 - DEBUG - dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-07-01 16:52:47,134 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-07-01 16:52:47,134 - DEBUG - dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-07-01 16:52:47,134 - DEBUG - stack ['$496call.24']
2024-07-01 16:52:47,134 - DEBUG - dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-07-01 16:52:47,134 - DEBUG - stack []
2024-07-01 16:52:47,134 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-01 16:52:47,134 - DEBUG - stack ['$x508.25']
2024-07-01 16:52:47,134 - DEBUG - dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-07-01 16:52:47,134 - DEBUG - stack ['$x508.25', '$n510.26']
2024-07-01 16:52:47,134 - DEBUG - dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-07-01 16:52:47,135 - DEBUG - stack ['$512binary_subscr.27']
2024-07-01 16:52:47,135 - DEBUG - dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-07-01 16:52:47,135 - DEBUG - stack ['$512binary_subscr.27', '$maxn522.28']
2024-07-01 16:52:47,135 - DEBUG - dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-07-01 16:52:47,135 - DEBUG - stack ['$524compare_op.29']
2024-07-01 16:52:47,135 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-07-01 16:52:47,135 - DEBUG - stack ['$524compare_op.29', '$peaks530.30']
2024-07-01 16:52:47,135 - DEBUG - dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-07-01 16:52:47,135 - DEBUG - stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-07-01 16:52:47,135 - DEBUG - dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-07-01 16:52:47,135 - DEBUG - stack []
2024-07-01 16:52:47,135 - DEBUG - dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-07-01 16:52:47,135 - DEBUG - stack ['$peaks538.32']
2024-07-01 16:52:47,136 - DEBUG - dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-07-01 16:52:47,136 - DEBUG - stack ['$peaks538.32', '$n540.33']
2024-07-01 16:52:47,136 - DEBUG - dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-07-01 16:52:47,136 - DEBUG - stack ['$542binary_subscr.34']
2024-07-01 16:52:47,136 - DEBUG - end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,136 - DEBUG - pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-01 16:52:47,136 - DEBUG - stack: []
2024-07-01 16:52:47,136 - DEBUG - state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-07-01 16:52:47,136 - DEBUG - dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-01 16:52:47,136 - DEBUG - stack []
2024-07-01 16:52:47,136 - DEBUG - dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:47,136 - DEBUG - stack ['$const852.0']
2024-07-01 16:52:47,137 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,137 - DEBUG - pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-07-01 16:52:47,137 - DEBUG - stack: []
2024-07-01 16:52:47,137 - DEBUG - state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-07-01 16:52:47,137 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-07-01 16:52:47,137 - DEBUG - stack []
2024-07-01 16:52:47,137 - DEBUG - dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-07-01 16:52:47,137 - DEBUG - stack ['$n554.0']
2024-07-01 16:52:47,137 - DEBUG - dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-07-01 16:52:47,137 - DEBUG - stack ['$n554.0', '$const556.1']
2024-07-01 16:52:47,137 - DEBUG - dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-07-01 16:52:47,137 - DEBUG - stack ['$binop_iadd558.2']
2024-07-01 16:52:47,137 - DEBUG - dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-07-01 16:52:47,137 - DEBUG - stack []
2024-07-01 16:52:47,137 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,138 - DEBUG - pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:47,138 - DEBUG - stack: []
2024-07-01 16:52:47,138 - DEBUG - state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-07-01 16:52:47,138 - DEBUG - dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-07-01 16:52:47,138 - DEBUG - stack []
2024-07-01 16:52:47,138 - DEBUG - dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-07-01 16:52:47,138 - DEBUG - stack ['$null$566.1', '$566load_global.0']
2024-07-01 16:52:47,138 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-01 16:52:47,138 - DEBUG - stack ['$null$566.1', '$578load_attr.2']
2024-07-01 16:52:47,138 - DEBUG - dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-07-01 16:52:47,138 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-07-01 16:52:47,138 - DEBUG - dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-01 16:52:47,138 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-07-01 16:52:47,138 - DEBUG - dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-01 16:52:47,139 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-07-01 16:52:47,139 - DEBUG - dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-07-01 16:52:47,139 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-07-01 16:52:47,139 - DEBUG - dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-07-01 16:52:47,139 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-07-01 16:52:47,139 - DEBUG - dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-07-01 16:52:47,139 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-01 16:52:47,139 - DEBUG - dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-07-01 16:52:47,139 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-07-01 16:52:47,139 - DEBUG - dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-07-01 16:52:47,139 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-07-01 16:52:47,139 - DEBUG - dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-07-01 16:52:47,139 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-07-01 16:52:47,139 - DEBUG - dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-07-01 16:52:47,140 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-07-01 16:52:47,140 - DEBUG - dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-07-01 16:52:47,140 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-07-01 16:52:47,140 - DEBUG - dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-07-01 16:52:47,140 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-07-01 16:52:47,140 - DEBUG - dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-07-01 16:52:47,140 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-07-01 16:52:47,140 - DEBUG - dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-07-01 16:52:47,140 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-07-01 16:52:47,140 - DEBUG - dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-01 16:52:47,140 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-07-01 16:52:47,140 - DEBUG - dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-07-01 16:52:47,141 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-01 16:52:47,141 - DEBUG - dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-07-01 16:52:47,141 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-07-01 16:52:47,141 - DEBUG - dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-07-01 16:52:47,141 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-07-01 16:52:47,141 - DEBUG - dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-07-01 16:52:47,141 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-07-01 16:52:47,141 - DEBUG - dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-07-01 16:52:47,141 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-01 16:52:47,141 - DEBUG - dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-07-01 16:52:47,141 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-07-01 16:52:47,141 - DEBUG - dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-07-01 16:52:47,141 - DEBUG - stack ['$700call.24']
2024-07-01 16:52:47,142 - DEBUG - dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-07-01 16:52:47,142 - DEBUG - stack []
2024-07-01 16:52:47,142 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-01 16:52:47,142 - DEBUG - stack ['$peaks712.25']
2024-07-01 16:52:47,142 - DEBUG - dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-07-01 16:52:47,142 - DEBUG - stack ['$peaks712.25', '$n714.26']
2024-07-01 16:52:47,142 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-07-01 16:52:47,142 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-07-01 16:52:47,142 - DEBUG - dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:47,142 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-07-01 16:52:47,142 - DEBUG - dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-07-01 16:52:47,142 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-07-01 16:52:47,142 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-07-01 16:52:47,142 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-07-01 16:52:47,143 - DEBUG - dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:47,143 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-07-01 16:52:47,143 - DEBUG - dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-07-01 16:52:47,143 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-07-01 16:52:47,143 - DEBUG - dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-07-01 16:52:47,143 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-07-01 16:52:47,143 - DEBUG - dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-07-01 16:52:47,143 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-07-01 16:52:47,143 - DEBUG - dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-07-01 16:52:47,143 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-07-01 16:52:47,143 - DEBUG - dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-07-01 16:52:47,143 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-07-01 16:52:47,143 - DEBUG - dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-07-01 16:52:47,144 - DEBUG - stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-07-01 16:52:47,144 - DEBUG - dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-07-01 16:52:47,144 - DEBUG - stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-07-01 16:52:47,144 - DEBUG - dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-07-01 16:52:47,144 - DEBUG - stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-07-01 16:52:47,144 - DEBUG - dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-07-01 16:52:47,144 - DEBUG - stack []
2024-07-01 16:52:47,144 - DEBUG - dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-07-01 16:52:47,144 - DEBUG - stack ['$peaks770.36']
2024-07-01 16:52:47,144 - DEBUG - dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-07-01 16:52:47,144 - DEBUG - stack ['$peaks770.36', '$n772.37']
2024-07-01 16:52:47,144 - DEBUG - dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-07-01 16:52:47,144 - DEBUG - stack ['$774binary_subscr.38']
2024-07-01 16:52:47,144 - DEBUG - end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,144 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-01 16:52:47,145 - DEBUG - pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-07-01 16:52:47,145 - DEBUG - stack: []
2024-07-01 16:52:47,145 - DEBUG - state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-07-01 16:52:47,145 - DEBUG - dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-07-01 16:52:47,145 - DEBUG - stack []
2024-07-01 16:52:47,145 - DEBUG - dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-07-01 16:52:47,145 - DEBUG - stack ['$n786.0']
2024-07-01 16:52:47,145 - DEBUG - dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-07-01 16:52:47,145 - DEBUG - stack ['$n786.0', '$const788.1']
2024-07-01 16:52:47,145 - DEBUG - dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-07-01 16:52:47,145 - DEBUG - stack ['$binop_iadd790.2']
2024-07-01 16:52:47,145 - DEBUG - dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-07-01 16:52:47,145 - DEBUG - stack []
2024-07-01 16:52:47,145 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,146 - DEBUG - pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-07-01 16:52:47,146 - DEBUG - stack: []
2024-07-01 16:52:47,146 - DEBUG - state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-07-01 16:52:47,146 - DEBUG - dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-07-01 16:52:47,146 - DEBUG - stack []
2024-07-01 16:52:47,146 - DEBUG - dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-07-01 16:52:47,146 - DEBUG - stack ['$n798.0']
2024-07-01 16:52:47,146 - DEBUG - dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-07-01 16:52:47,146 - DEBUG - stack ['$n798.0', '$wait800.1']
2024-07-01 16:52:47,146 - DEBUG - dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-07-01 16:52:47,146 - DEBUG - stack ['$n798.0', '$wait800.1', '$const802.2']
2024-07-01 16:52:47,146 - DEBUG - dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-07-01 16:52:47,146 - DEBUG - stack ['$n798.0', '$binop_add804.3']
2024-07-01 16:52:47,146 - DEBUG - dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-07-01 16:52:47,147 - DEBUG - stack ['$binop_iadd808.4']
2024-07-01 16:52:47,147 - DEBUG - dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-07-01 16:52:47,147 - DEBUG - stack []
2024-07-01 16:52:47,147 - DEBUG - dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-07-01 16:52:47,147 - DEBUG - stack ['$n814.5']
2024-07-01 16:52:47,147 - DEBUG - dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-07-01 16:52:47,147 - DEBUG - stack ['$n814.5', '$x816.6']
2024-07-01 16:52:47,147 - DEBUG - dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-07-01 16:52:47,147 - DEBUG - stack ['$n814.5', '$818load_attr.7']
2024-07-01 16:52:47,147 - DEBUG - dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-07-01 16:52:47,147 - DEBUG - stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-07-01 16:52:47,147 - DEBUG - dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-07-01 16:52:47,147 - DEBUG - stack ['$n814.5', '$830binary_subscr.9']
2024-07-01 16:52:47,147 - DEBUG - dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-07-01 16:52:47,148 - DEBUG - stack ['$840compare_op.10']
2024-07-01 16:52:47,148 - DEBUG - end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,148 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:47,148 - DEBUG - pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:47,148 - DEBUG - stack: []
2024-07-01 16:52:47,148 - DEBUG - state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-07-01 16:52:47,148 - DEBUG - dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-07-01 16:52:47,148 - DEBUG - stack []
2024-07-01 16:52:47,148 - DEBUG - dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-07-01 16:52:47,148 - DEBUG - stack ['$const848.0']
2024-07-01 16:52:47,148 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,148 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-07-01 16:52:47,148 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:47,149 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-07-01 16:52:47,149 - DEBUG - defmap: {}
2024-07-01 16:52:47,149 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,149 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,149 - DEBUG - keep phismap: {}
2024-07-01 16:52:47,149 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:47,149 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:47,149 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-07-01 16:52:47,150 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:47,150 - DEBUG - block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:47,150 - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-07-01 16:52:47,150 - DEBUG - block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-07-01 16:52:47,150 - DEBUG - block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:47,150 - DEBUG - block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-07-01 16:52:47,150 - DEBUG - block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-07-01 16:52:47,150 - DEBUG - block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-07-01 16:52:47,151 - DEBUG - block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,151 - DEBUG - block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,154 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-07-01 16:52:47,171 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:47,171 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,171 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:47,171 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:47,171 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:47,171 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:47,171 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:47,171 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:47,171 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:47,171 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,172 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,173 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,173 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:47,173 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,173 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:47,173 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:47,173 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:47,173 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:47,173 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:47,173 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:47,173 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:47,173 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,174 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:47,175 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:47,175 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,175 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:47,175 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:47,175 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:47,175 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,175 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,175 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:47,175 - DEBUG - ==== SSA block analysis pass on 312
2024-07-01 16:52:47,175 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,175 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:47,175 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:47,176 - DEBUG - on stmt: jump 328
2024-07-01 16:52:47,176 - DEBUG - ==== SSA block analysis pass on 324
2024-07-01 16:52:47,176 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,176 - DEBUG - on stmt: n = const(int, 1)
2024-07-01 16:52:47,176 - DEBUG - on stmt: jump 328
2024-07-01 16:52:47,176 - DEBUG - ==== SSA block analysis pass on 328
2024-07-01 16:52:47,176 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,176 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,176 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:47,176 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:47,176 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:47,176 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,176 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,177 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:47,177 - DEBUG - ==== SSA block analysis pass on 362
2024-07-01 16:52:47,177 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,177 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,177 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:47,177 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:47,177 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:47,177 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:47,177 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,177 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:47,177 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:47,178 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,178 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:47,178 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:47,178 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,178 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,178 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,178 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:47,178 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,178 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,178 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:47,178 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:47,179 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,179 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,179 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,179 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:47,179 - DEBUG - ==== SSA block analysis pass on 554
2024-07-01 16:52:47,179 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,179 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:47,179 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,179 - DEBUG - on stmt: n = $binop_iadd558.2
2024-07-01 16:52:47,179 - DEBUG - on stmt: jump 853
2024-07-01 16:52:47,179 - DEBUG - ==== SSA block analysis pass on 566
2024-07-01 16:52:47,179 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,179 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:47,180 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:47,180 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,180 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,181 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,181 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:47,181 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,181 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,181 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,181 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:47,181 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:47,181 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,181 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:47,181 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,181 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,181 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,182 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:47,182 - DEBUG - ==== SSA block analysis pass on 786
2024-07-01 16:52:47,182 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,182 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:47,182 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,182 - DEBUG - on stmt: n = $binop_iadd790.2
2024-07-01 16:52:47,182 - DEBUG - on stmt: jump 853
2024-07-01 16:52:47,182 - DEBUG - ==== SSA block analysis pass on 798
2024-07-01 16:52:47,182 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,182 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:47,182 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:47,182 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,182 - DEBUG - on stmt: n = $binop_iadd808.4
2024-07-01 16:52:47,182 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,183 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:47,183 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:47,183 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:47,183 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,183 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,183 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:47,183 - DEBUG - ==== SSA block analysis pass on 848
2024-07-01 16:52:47,183 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,183 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:47,183 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:47,183 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:47,184 - DEBUG - ==== SSA block analysis pass on 852
2024-07-01 16:52:47,184 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,184 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:47,184 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:47,184 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:47,184 - DEBUG - ==== SSA block analysis pass on 853
2024-07-01 16:52:47,184 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c79680150>
2024-07-01 16:52:47,184 - DEBUG - on stmt: jump 328
2024-07-01 16:52:47,187 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x7f1c79251110>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x7f1c79250a90>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x7f1c79733850>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x7f1c792dce50>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x7f1c79252c10>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x7f1c79252f50>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x7f1c792bebd0>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x7f1c79253490>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x7f1c79252450>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x7f1c792de150>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x7f1c79203890>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x7f1c79201b50>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x7f1c79203b90>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x7f1c79202c50>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x7f1c79203390>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x7f1c79202490>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x7f1c792ddbd0>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x7f1c792bf950>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7f1c79202910>, 0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79201710>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1c79733050>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c79200cd0>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x7f1c79200390>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79201250>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c792004d0>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x7f1c79203550>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x7f1c7925b810>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x7f1c7925ad10>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x7f1c7925b250>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x7f1c79250650>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1c66015090>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x7f1c792591d0>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x7f1c79258bd0>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x7f1c79258a90>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f1c7925a350>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f1c79259a90>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x7f1c79259690>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x7f1c7925b110>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x7f1c792583d0>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79258e50>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c79258f90>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x7f1c79277710>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7f1c792539d0>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x7f1c79277910>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x7f1c79277810>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x7f1c79275dd0>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1c65e54210>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x7f1c79275b50>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x7f1c79275810>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x7f1c79275890>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f1c79276090>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f1c79274210>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f1c79733e50>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x7f1c79275350>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x7f1c79274910>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x7f1c792245d0>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x7f1c79224a50>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x7f1c79225e90>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1c797336d0>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c79226450>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x7f1c79226810>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x7f1c79226b90>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x7f1c79227090>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7f1c79250950>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f1c797339d0>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x7f1c79250050>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x7f1c79250e90>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x7f1c79250f10>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x7f1c79200990>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x7f1c7925aa90>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x7f1c79276cd0>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x7f1c79274710>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x7f1c79225610>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x7f1c792587d0>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x7f1c79224c90>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x7f1c79225850>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x7f1c792027d0>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x7f1c79277e90>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x7f1c7925b690>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x7f1c79277650>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x7f1c792517d0>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x7f1c79250390>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x7f1c79252050>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x7f1c79253450>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x7f1c79252350>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x7f1c79203190>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x7f1c79202050>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x7f1c79200550>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x7f1c79203810>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x7f1c792bcb50>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x7f1c7925b3d0>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x7f1c7925bb50>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f1c792bf2d0>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x7f1c79276dd0>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x7f1c79276950>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x7f1c79250590>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x7f1c79224290>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x7f1c792253d0>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x7f1c79226010>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x7f1c792269d0>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x7f1c79226e50>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x7f1c79275690>, 566)],
             'bool310': [(<numba.core.ir.Assign object at 0x7f1c79202d50>, 0)],
             'bool360': [(<numba.core.ir.Assign object at 0x7f1c792009d0>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x7f1c7925b8d0>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x7f1c79224890>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x7f1c79226650>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x7f1c6f0f71d0>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7f1c79259ed0>, 362)],
             'n': [(<numba.core.ir.Assign object at 0x7f1c79201e50>, 312),
                   (<numba.core.ir.Assign object at 0x7f1c79200bd0>, 324),
                   (<numba.core.ir.Assign object at 0x7f1c79258510>, 554),
                   (<numba.core.ir.Assign object at 0x7f1c79224e10>, 786),
                   (<numba.core.ir.Assign object at 0x7f1c792259d0>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x7f1c792bdb50>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7f1c7934cb50>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7f1c7952e210>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7f1c79733d50>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7f1c794bc9d0>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7f1c7963f2d0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c792dc4d0>, 0)]})
2024-07-01 16:52:47,187 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c79680150>
2024-07-01 16:52:47,187 - DEBUG - Fix SSA violator on var n
2024-07-01 16:52:47,187 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:47,187 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,187 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:47,187 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:47,187 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:47,187 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:47,187 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:47,188 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:47,188 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:47,188 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:47,188 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,189 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,189 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,189 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:47,189 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,189 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:47,189 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:47,189 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:47,189 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:47,189 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:47,189 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:47,189 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:47,189 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,190 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:47,191 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:47,191 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,191 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:47,191 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:47,191 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:47,191 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,191 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,191 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:47,191 - DEBUG - ==== SSA block rewrite pass on 312
2024-07-01 16:52:47,191 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,191 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:47,191 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:47,191 - DEBUG - first assign: n
2024-07-01 16:52:47,192 - DEBUG - replaced with: n = wait + $const314.1
2024-07-01 16:52:47,192 - DEBUG - on stmt: jump 328
2024-07-01 16:52:47,192 - DEBUG - ==== SSA block rewrite pass on 324
2024-07-01 16:52:47,192 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,192 - DEBUG - on stmt: n = const(int, 1)
2024-07-01 16:52:47,192 - DEBUG - replaced with: n.1 = const(int, 1)
2024-07-01 16:52:47,192 - DEBUG - on stmt: jump 328
2024-07-01 16:52:47,192 - DEBUG - ==== SSA block rewrite pass on 328
2024-07-01 16:52:47,192 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,192 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,192 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:47,192 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:47,192 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:47,192 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,193 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,193 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:47,193 - DEBUG - ==== SSA block rewrite pass on 362
2024-07-01 16:52:47,193 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,193 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,193 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:47,193 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:47,193 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:47,193 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:47,193 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,193 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:47,193 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:47,193 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,194 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:47,194 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:47,194 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,194 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,194 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,194 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:47,194 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,194 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,194 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:47,194 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:47,194 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,195 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,195 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,195 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:47,195 - DEBUG - ==== SSA block rewrite pass on 554
2024-07-01 16:52:47,195 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,195 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:47,195 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,195 - DEBUG - on stmt: n = $binop_iadd558.2
2024-07-01 16:52:47,195 - DEBUG - replaced with: n.2 = $binop_iadd558.2
2024-07-01 16:52:47,195 - DEBUG - on stmt: jump 853
2024-07-01 16:52:47,195 - DEBUG - ==== SSA block rewrite pass on 566
2024-07-01 16:52:47,195 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,196 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,196 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:47,196 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:47,196 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:47,196 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:47,196 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,196 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:47,196 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:47,196 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,196 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:47,196 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:47,196 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,197 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,197 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,197 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:47,197 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,197 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,197 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,197 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:47,197 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:47,197 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,197 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:47,197 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,197 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,198 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,198 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:47,198 - DEBUG - ==== SSA block rewrite pass on 786
2024-07-01 16:52:47,198 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,198 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:47,198 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,198 - DEBUG - on stmt: n = $binop_iadd790.2
2024-07-01 16:52:47,198 - DEBUG - replaced with: n.3 = $binop_iadd790.2
2024-07-01 16:52:47,198 - DEBUG - on stmt: jump 853
2024-07-01 16:52:47,198 - DEBUG - ==== SSA block rewrite pass on 798
2024-07-01 16:52:47,198 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,198 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:47,199 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:47,199 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,199 - DEBUG - on stmt: n = $binop_iadd808.4
2024-07-01 16:52:47,199 - DEBUG - replaced with: n.4 = $binop_iadd808.4
2024-07-01 16:52:47,199 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,199 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:47,199 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:47,199 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:47,199 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,199 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,199 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:47,199 - DEBUG - ==== SSA block rewrite pass on 848
2024-07-01 16:52:47,200 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,200 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:47,200 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:47,200 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:47,200 - DEBUG - ==== SSA block rewrite pass on 852
2024-07-01 16:52:47,200 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,200 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:47,201 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:47,201 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:47,201 - DEBUG - ==== SSA block rewrite pass on 853
2024-07-01 16:52:47,201 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c793d8b90>
2024-07-01 16:52:47,201 - DEBUG - on stmt: jump 328
2024-07-01 16:52:47,201 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x7f1c79218710>],
             324: [<numba.core.ir.Assign object at 0x7f1c668f5dd0>],
             554: [<numba.core.ir.Assign object at 0x7f1c66115390>],
             786: [<numba.core.ir.Assign object at 0x7f1c792dd450>],
             798: [<numba.core.ir.Assign object at 0x7f1c792dc910>]})
2024-07-01 16:52:47,201 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:47,201 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,201 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:47,201 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-07-01 16:52:47,201 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-07-01 16:52:47,202 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-07-01 16:52:47,202 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-07-01 16:52:47,202 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-07-01 16:52:47,202 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-07-01 16:52:47,202 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-07-01 16:52:47,202 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-07-01 16:52:47,202 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-07-01 16:52:47,202 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,202 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-07-01 16:52:47,202 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-07-01 16:52:47,202 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-07-01 16:52:47,202 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,202 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-07-01 16:52:47,203 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-07-01 16:52:47,203 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,203 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,203 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,203 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-07-01 16:52:47,203 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,203 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-07-01 16:52:47,203 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-07-01 16:52:47,203 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-07-01 16:52:47,203 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-07-01 16:52:47,203 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-07-01 16:52:47,203 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,204 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,205 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-07-01 16:52:47,205 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,205 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-07-01 16:52:47,205 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-07-01 16:52:47,205 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,205 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-07-01 16:52:47,205 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-07-01 16:52:47,205 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-07-01 16:52:47,205 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,205 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,205 - DEBUG - on stmt: branch $310pred, 312, 324
2024-07-01 16:52:47,205 - DEBUG - ==== SSA block rewrite pass on 312
2024-07-01 16:52:47,206 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,206 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-07-01 16:52:47,206 - DEBUG - on stmt: n = wait + $const314.1
2024-07-01 16:52:47,206 - DEBUG - on stmt: jump 328
2024-07-01 16:52:47,206 - DEBUG - ==== SSA block rewrite pass on 324
2024-07-01 16:52:47,206 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,206 - DEBUG - on stmt: n.1 = const(int, 1)
2024-07-01 16:52:47,206 - DEBUG - on stmt: jump 328
2024-07-01 16:52:47,206 - DEBUG - ==== SSA block rewrite pass on 328
2024-07-01 16:52:47,206 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,206 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,206 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-07-01 16:52:47,206 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-07-01 16:52:47,207 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:47,207 - DEBUG - find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-07-01 16:52:47,207 - DEBUG - find_def_from_top label 328
2024-07-01 16:52:47,207 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-07-01 16:52:47,207 - DEBUG - find_def_from_bottom label 312
2024-07-01 16:52:47,207 - DEBUG - incoming_def n = wait + $const314.1
2024-07-01 16:52:47,207 - DEBUG - find_def_from_bottom label 324
2024-07-01 16:52:47,207 - DEBUG - incoming_def n.1 = const(int, 1)
2024-07-01 16:52:47,207 - DEBUG - find_def_from_bottom label 853
2024-07-01 16:52:47,207 - DEBUG - find_def_from_top label 853
2024-07-01 16:52:47,207 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-07-01 16:52:47,207 - DEBUG - find_def_from_bottom label 554
2024-07-01 16:52:47,207 - DEBUG - incoming_def n.2 = $binop_iadd558.2
2024-07-01 16:52:47,208 - DEBUG - find_def_from_bottom label 786
2024-07-01 16:52:47,208 - DEBUG - incoming_def n.3 = $binop_iadd790.2
2024-07-01 16:52:47,208 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-07-01 16:52:47,208 - DEBUG - replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-07-01 16:52:47,208 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,208 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,208 - DEBUG - on stmt: branch $360pred, 362, 852
2024-07-01 16:52:47,208 - DEBUG - ==== SSA block rewrite pass on 362
2024-07-01 16:52:47,208 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,208 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,208 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-07-01 16:52:47,208 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:47,209 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-07-01 16:52:47,209 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-07-01 16:52:47,209 - DEBUG - find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-07-01 16:52:47,209 - DEBUG - find_def_from_top label 362
2024-07-01 16:52:47,209 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-07-01 16:52:47,209 - DEBUG - find_def_from_bottom label 328
2024-07-01 16:52:47,209 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-07-01 16:52:47,209 - DEBUG - find_def_from_bottom label 798
2024-07-01 16:52:47,209 - DEBUG - incoming_def n.4 = $binop_iadd808.4
2024-07-01 16:52:47,209 - DEBUG - replaced with: $binop_sub404.9 = n.7 - pre_max
2024-07-01 16:52:47,209 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,210 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:47,210 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-07-01 16:52:47,210 - DEBUG - find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-07-01 16:52:47,210 - DEBUG - replaced with: $binop_add438.15 = n.7 + post_max
2024-07-01 16:52:47,210 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,210 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-07-01 16:52:47,210 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-07-01 16:52:47,210 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,210 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,210 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,211 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:47,211 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,211 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,211 - DEBUG - find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,211 - DEBUG - replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:47,211 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-07-01 16:52:47,211 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-07-01 16:52:47,211 - DEBUG - find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-07-01 16:52:47,211 - DEBUG - replaced with: peaks[n.7] = $524compare_op.29
2024-07-01 16:52:47,211 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,212 - DEBUG - find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,212 - DEBUG - replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:47,212 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,212 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,212 - DEBUG - on stmt: branch $552pred, 566, 554
2024-07-01 16:52:47,212 - DEBUG - ==== SSA block rewrite pass on 554
2024-07-01 16:52:47,212 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,212 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-07-01 16:52:47,212 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,212 - DEBUG - find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,212 - DEBUG - find_def_from_top label 554
2024-07-01 16:52:47,212 - DEBUG - idom 362 from label 554
2024-07-01 16:52:47,213 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:47,213 - DEBUG - replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,213 - DEBUG - on stmt: n.2 = $binop_iadd558.2
2024-07-01 16:52:47,213 - DEBUG - on stmt: jump 853
2024-07-01 16:52:47,213 - DEBUG - ==== SSA block rewrite pass on 566
2024-07-01 16:52:47,213 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,213 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,213 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-07-01 16:52:47,213 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-07-01 16:52:47,213 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-07-01 16:52:47,213 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-07-01 16:52:47,213 - DEBUG - find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-07-01 16:52:47,213 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:47,214 - DEBUG - idom 362 from label 566
2024-07-01 16:52:47,214 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:47,214 - DEBUG - replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-07-01 16:52:47,214 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,214 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-07-01 16:52:47,214 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-07-01 16:52:47,214 - DEBUG - find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-07-01 16:52:47,214 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:47,214 - DEBUG - idom 362 from label 566
2024-07-01 16:52:47,214 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:47,214 - DEBUG - replaced with: $binop_add642.15 = n.7 + post_avg
2024-07-01 16:52:47,214 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,215 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-07-01 16:52:47,215 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-07-01 16:52:47,215 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,215 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-07-01 16:52:47,215 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,215 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-07-01 16:52:47,215 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,215 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,215 - DEBUG - find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,215 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:47,216 - DEBUG - idom 362 from label 566
2024-07-01 16:52:47,216 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:47,216 - DEBUG - replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:47,216 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,216 - DEBUG - find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,216 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:47,216 - DEBUG - idom 362 from label 566
2024-07-01 16:52:47,216 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:47,216 - DEBUG - replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:47,216 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-07-01 16:52:47,216 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-07-01 16:52:47,216 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,216 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-07-01 16:52:47,217 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-07-01 16:52:47,217 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:47,217 - DEBUG - idom 362 from label 566
2024-07-01 16:52:47,217 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:47,217 - DEBUG - replaced with: peaks[n.7] = $binop_iand758.35
2024-07-01 16:52:47,217 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,217 - DEBUG - find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-07-01 16:52:47,217 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:47,217 - DEBUG - idom 362 from label 566
2024-07-01 16:52:47,217 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:47,217 - DEBUG - replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-07-01 16:52:47,217 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,217 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,218 - DEBUG - on stmt: branch $784pred, 798, 786
2024-07-01 16:52:47,218 - DEBUG - ==== SSA block rewrite pass on 786
2024-07-01 16:52:47,218 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,218 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-07-01 16:52:47,218 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,218 - DEBUG - find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,218 - DEBUG - find_def_from_top label 786
2024-07-01 16:52:47,218 - DEBUG - idom 566 from label 786
2024-07-01 16:52:47,218 - DEBUG - find_def_from_bottom label 566
2024-07-01 16:52:47,218 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:47,218 - DEBUG - idom 362 from label 566
2024-07-01 16:52:47,218 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:47,218 - DEBUG - replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,219 - DEBUG - on stmt: n.3 = $binop_iadd790.2
2024-07-01 16:52:47,219 - DEBUG - on stmt: jump 853
2024-07-01 16:52:47,219 - DEBUG - ==== SSA block rewrite pass on 798
2024-07-01 16:52:47,219 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,219 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-07-01 16:52:47,219 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-07-01 16:52:47,219 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,219 - DEBUG - find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,219 - DEBUG - find_def_from_top label 798
2024-07-01 16:52:47,219 - DEBUG - idom 566 from label 798
2024-07-01 16:52:47,219 - DEBUG - find_def_from_bottom label 566
2024-07-01 16:52:47,219 - DEBUG - find_def_from_top label 566
2024-07-01 16:52:47,219 - DEBUG - idom 362 from label 566
2024-07-01 16:52:47,219 - DEBUG - find_def_from_bottom label 362
2024-07-01 16:52:47,220 - DEBUG - replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,220 - DEBUG - on stmt: n.4 = $binop_iadd808.4
2024-07-01 16:52:47,220 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-07-01 16:52:47,220 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-07-01 16:52:47,220 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-07-01 16:52:47,220 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:47,220 - DEBUG - find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-07-01 16:52:47,220 - DEBUG - replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-07-01 16:52:47,220 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,220 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,220 - DEBUG - on stmt: branch $846pred, 362, 848
2024-07-01 16:52:47,220 - DEBUG - ==== SSA block rewrite pass on 848
2024-07-01 16:52:47,220 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,220 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-07-01 16:52:47,221 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-07-01 16:52:47,221 - DEBUG - on stmt: return $850return_value.1
2024-07-01 16:52:47,221 - DEBUG - ==== SSA block rewrite pass on 852
2024-07-01 16:52:47,221 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,221 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-07-01 16:52:47,221 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-07-01 16:52:47,221 - DEBUG - on stmt: return $854return_value.1
2024-07-01 16:52:47,221 - DEBUG - ==== SSA block rewrite pass on 853
2024-07-01 16:52:47,221 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c792dc410>
2024-07-01 16:52:47,221 - DEBUG - on stmt: jump 328
2024-07-01 16:52:47,230 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-07-01 16:52:47,231 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:47,231 - DEBUG - stack: []
2024-07-01 16:52:47,231 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:47,231 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-07-01 16:52:47,231 - DEBUG - stack []
2024-07-01 16:52:47,231 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-07-01 16:52:47,231 - DEBUG - stack []
2024-07-01 16:52:47,231 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-07-01 16:52:47,231 - DEBUG - stack []
2024-07-01 16:52:47,232 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-07-01 16:52:47,232 - DEBUG - stack []
2024-07-01 16:52:47,232 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-07-01 16:52:47,232 - DEBUG - stack ['$a6.0']
2024-07-01 16:52:47,232 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-07-01 16:52:47,232 - DEBUG - stack ['$8load_attr.1']
2024-07-01 16:52:47,232 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-07-01 16:52:47,232 - DEBUG - stack ['$8load_attr.1', '$const18.2']
2024-07-01 16:52:47,232 - DEBUG - dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-07-01 16:52:47,232 - DEBUG - stack ['$20compare_op.3']
2024-07-01 16:52:47,232 - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,233 - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:47,233 - DEBUG - stack: []
2024-07-01 16:52:47,233 - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-07-01 16:52:47,233 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-07-01 16:52:47,233 - DEBUG - stack []
2024-07-01 16:52:47,233 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-07-01 16:52:47,233 - DEBUG - stack ['$null$28.1', '$28load_global.0']
2024-07-01 16:52:47,233 - DEBUG - dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-07-01 16:52:47,233 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-01 16:52:47,233 - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-07-01 16:52:47,233 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-07-01 16:52:47,233 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-07-01 16:52:47,233 - DEBUG - stack ['$46call.3']
2024-07-01 16:52:47,234 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,234 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-07-01 16:52:47,234 - DEBUG - stack: []
2024-07-01 16:52:47,234 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-07-01 16:52:47,234 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-07-01 16:52:47,234 - DEBUG - stack []
2024-07-01 16:52:47,234 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-07-01 16:52:47,234 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-07-01 16:52:47,234 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-07-01 16:52:47,234 - DEBUG - stack ['$null$58.1', '$70load_attr.2']
2024-07-01 16:52:47,234 - DEBUG - dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-07-01 16:52:47,234 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-01 16:52:47,234 - DEBUG - dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-07-01 16:52:47,234 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-07-01 16:52:47,235 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-07-01 16:52:47,235 - DEBUG - stack ['$86call.4']
2024-07-01 16:52:47,235 - DEBUG - dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-07-01 16:52:47,235 - DEBUG - stack []
2024-07-01 16:52:47,235 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-07-01 16:52:47,235 - DEBUG - stack ['$null$98.6', '$98load_global.5']
2024-07-01 16:52:47,235 - DEBUG - dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-07-01 16:52:47,235 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-01 16:52:47,235 - DEBUG - dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-07-01 16:52:47,235 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-07-01 16:52:47,235 - DEBUG - dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-07-01 16:52:47,235 - DEBUG - stack ['$116call.8']
2024-07-01 16:52:47,235 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-07-01 16:52:47,236 - DEBUG - stack ['$null$126.9', '$126load_method.10']
2024-07-01 16:52:47,236 - DEBUG - dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-07-01 16:52:47,236 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-01 16:52:47,236 - DEBUG - dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-07-01 16:52:47,236 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-07-01 16:52:47,236 - DEBUG - dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-07-01 16:52:47,236 - DEBUG - stack ['$154call.12']
2024-07-01 16:52:47,236 - DEBUG - dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-07-01 16:52:47,236 - DEBUG - stack []
2024-07-01 16:52:47,236 - DEBUG - dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-07-01 16:52:47,236 - DEBUG - stack ['$null$166.13']
2024-07-01 16:52:47,236 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-07-01 16:52:47,236 - DEBUG - stack ['$null$166.13', '$168load_deref.14']
2024-07-01 16:52:47,237 - DEBUG - dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-07-01 16:52:47,237 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-01 16:52:47,237 - DEBUG - dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-07-01 16:52:47,237 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-07-01 16:52:47,237 - DEBUG - dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-07-01 16:52:47,237 - DEBUG - stack ['$176call.16']
2024-07-01 16:52:47,237 - DEBUG - end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,237 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:47,237 - DEBUG - stack: []
2024-07-01 16:52:47,237 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-07-01 16:52:47,237 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-07-01 16:52:47,237 - DEBUG - stack []
2024-07-01 16:52:47,237 - DEBUG - dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-07-01 16:52:47,237 - DEBUG - stack ['$max_value188.0']
2024-07-01 16:52:47,238 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,238 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-07-01 16:52:47,238 - DEBUG - stack: []
2024-07-01 16:52:47,238 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-07-01 16:52:47,238 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-07-01 16:52:47,238 - DEBUG - stack []
2024-07-01 16:52:47,238 - DEBUG - dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-07-01 16:52:47,238 - DEBUG - stack ['$it192.0']
2024-07-01 16:52:47,238 - DEBUG - end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-07-01 16:52:47,238 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:47,238 - DEBUG - stack: ['$phi196.0']
2024-07-01 16:52:47,238 - DEBUG - state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-07-01 16:52:47,238 - DEBUG - dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-07-01 16:52:47,238 - DEBUG - stack ['$phi196.0']
2024-07-01 16:52:47,238 - DEBUG - end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:47,239 - DEBUG - pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-07-01 16:52:47,239 - DEBUG - stack: []
2024-07-01 16:52:47,239 - DEBUG - state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-07-01 16:52:47,239 - DEBUG - dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-07-01 16:52:47,239 - DEBUG - stack []
2024-07-01 16:52:47,239 - DEBUG - dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-07-01 16:52:47,239 - DEBUG - stack ['$max_value300.0']
2024-07-01 16:52:47,239 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,239 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-07-01 16:52:47,239 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2024-07-01 16:52:47,239 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-07-01 16:52:47,239 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-07-01 16:52:47,239 - DEBUG - stack ['$phi198.0', '$phi198.1']
2024-07-01 16:52:47,240 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-07-01 16:52:47,240 - DEBUG - stack ['$phi198.0']
2024-07-01 16:52:47,240 - DEBUG - dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-07-01 16:52:47,240 - DEBUG - stack ['$phi198.0', '$view200.2']
2024-07-01 16:52:47,240 - DEBUG - dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-07-01 16:52:47,240 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-01 16:52:47,240 - DEBUG - dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-07-01 16:52:47,240 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-07-01 16:52:47,240 - DEBUG - dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-07-01 16:52:47,240 - DEBUG - stack ['$phi198.0', '$228call.5']
2024-07-01 16:52:47,240 - DEBUG - dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-07-01 16:52:47,240 - DEBUG - stack ['$phi198.0']
2024-07-01 16:52:47,241 - DEBUG - dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-07-01 16:52:47,241 - DEBUG - stack ['$phi198.0', '$null$240.6']
2024-07-01 16:52:47,241 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-07-01 16:52:47,241 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-07-01 16:52:47,241 - DEBUG - dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-07-01 16:52:47,241 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-01 16:52:47,241 - DEBUG - dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-07-01 16:52:47,241 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-07-01 16:52:47,241 - DEBUG - dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-07-01 16:52:47,241 - DEBUG - stack ['$phi198.0', '$250call.9']
2024-07-01 16:52:47,241 - DEBUG - end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-07-01 16:52:47,241 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-07-01 16:52:47,241 - DEBUG - stack: ['$phi262.0']
2024-07-01 16:52:47,242 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-07-01 16:52:47,242 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-07-01 16:52:47,242 - DEBUG - stack ['$phi262.0']
2024-07-01 16:52:47,242 - DEBUG - dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-07-01 16:52:47,242 - DEBUG - stack ['$phi262.0', '$v262.1']
2024-07-01 16:52:47,242 - DEBUG - dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-07-01 16:52:47,242 - DEBUG - stack ['$v262.1', '$phi262.0']
2024-07-01 16:52:47,242 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-07-01 16:52:47,242 - DEBUG - stack ['$v262.1']
2024-07-01 16:52:47,242 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,242 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-07-01 16:52:47,242 - DEBUG - stack: ['$phi270.0']
2024-07-01 16:52:47,242 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-07-01 16:52:47,242 - DEBUG - dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-07-01 16:52:47,243 - DEBUG - stack ['$phi270.0']
2024-07-01 16:52:47,243 - DEBUG - dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-07-01 16:52:47,243 - DEBUG - stack ['$phi270.0', '$null$270.1']
2024-07-01 16:52:47,243 - DEBUG - dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-07-01 16:52:47,243 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-07-01 16:52:47,243 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-07-01 16:52:47,243 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-07-01 16:52:47,243 - DEBUG - dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-07-01 16:52:47,243 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-01 16:52:47,243 - DEBUG - dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-07-01 16:52:47,243 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-07-01 16:52:47,243 - DEBUG - dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-07-01 16:52:47,243 - DEBUG - stack ['$phi270.0', '$282call.5']
2024-07-01 16:52:47,244 - DEBUG - end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-07-01 16:52:47,244 - DEBUG - pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-01 16:52:47,244 - DEBUG - stack: ['$phi294.0']
2024-07-01 16:52:47,244 - DEBUG - state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-07-01 16:52:47,244 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-07-01 16:52:47,244 - DEBUG - stack ['$phi294.0']
2024-07-01 16:52:47,244 - DEBUG - dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-07-01 16:52:47,244 - DEBUG - stack ['$phi294.0', '$v294.1']
2024-07-01 16:52:47,244 - DEBUG - end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-07-01 16:52:47,244 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-07-01 16:52:47,244 - DEBUG - stack: ['$phi298.0']
2024-07-01 16:52:47,244 - DEBUG - state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-07-01 16:52:47,244 - DEBUG - dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-07-01 16:52:47,245 - DEBUG - stack ['$phi298.0']
2024-07-01 16:52:47,245 - DEBUG - end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-07-01 16:52:47,245 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:47,245 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-07-01 16:52:47,245 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:47,245 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-07-01 16:52:47,246 - DEBUG - defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-07-01 16:52:47,246 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-07-01 16:52:47,247 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:47,248 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:47,249 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-07-01 16:52:47,250 - DEBUG - keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-07-01 16:52:47,250 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-07-01 16:52:47,250 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:47,250 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-07-01 16:52:47,251 - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,251 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-07-01 16:52:47,251 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,251 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-07-01 16:52:47,251 - DEBUG - block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-07-01 16:52:47,251 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-07-01 16:52:47,252 - DEBUG - block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,252 - DEBUG - block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-07-01 16:52:47,252 - DEBUG - block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-07-01 16:52:47,252 - DEBUG - block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-07-01 16:52:47,252 - DEBUG - block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,254 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-07-01 16:52:47,263 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:47,263 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,264 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:47,264 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:47,264 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:47,264 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:47,264 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,264 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,264 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:47,264 - DEBUG - ==== SSA block analysis pass on 28
2024-07-01 16:52:47,264 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,264 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:47,264 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:47,264 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,265 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:47,265 - DEBUG - ==== SSA block analysis pass on 58
2024-07-01 16:52:47,265 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,265 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,265 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:47,265 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,265 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:47,265 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,265 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:47,265 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:47,266 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,266 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:47,266 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,266 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,266 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,266 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:47,266 - DEBUG - ==== SSA block analysis pass on 188
2024-07-01 16:52:47,266 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,266 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:47,266 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:47,266 - DEBUG - ==== SSA block analysis pass on 192
2024-07-01 16:52:47,266 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,267 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:47,267 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:47,267 - DEBUG - on stmt: jump 196
2024-07-01 16:52:47,267 - DEBUG - ==== SSA block analysis pass on 196
2024-07-01 16:52:47,267 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,267 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:47,267 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:47,267 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:47,267 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:47,267 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:47,267 - DEBUG - ==== SSA block analysis pass on 198
2024-07-01 16:52:47,267 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,267 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:47,268 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:47,268 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,268 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:47,268 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,268 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,268 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,268 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:47,268 - DEBUG - ==== SSA block analysis pass on 262
2024-07-01 16:52:47,268 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,268 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:47,268 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:47,269 - DEBUG - ==== SSA block analysis pass on 270
2024-07-01 16:52:47,269 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,269 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:47,269 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,269 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,269 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,269 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:47,269 - DEBUG - ==== SSA block analysis pass on 294
2024-07-01 16:52:47,269 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,269 - DEBUG - on stmt: max_value = v
2024-07-01 16:52:47,269 - DEBUG - on stmt: jump 298
2024-07-01 16:52:47,269 - DEBUG - ==== SSA block analysis pass on 298
2024-07-01 16:52:47,269 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,270 - DEBUG - on stmt: jump 196
2024-07-01 16:52:47,270 - DEBUG - ==== SSA block analysis pass on 300
2024-07-01 16:52:47,270 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,270 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:47,270 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:47,271 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x7f1c79279990>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x7f1c7927bc10>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x7f1c79278210>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x7f1c79278890>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f1c7927a8d0>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x7f1c661b0590>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x7f1c661b0750>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c661b1310>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c661b0090>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c661b0f50>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x7f1c661b19d0>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x7f1c6623add0>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x7f1c661b2a10>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x7f1c661b2550>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x7f1c661b2710>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x7f1c661b2d50>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7f1c6623bf10>, 0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x7f1c661b3210>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x7f1c661b3850>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79279410>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x7f1c661b3dd0>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x7f1c661b1e10>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x7f1c7927b410>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f1c7927bed0>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c7927ba50>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7f1c6623a650>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x7f1c79278a10>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x7f1c7927ab50>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x7f1c6623ad10>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x7f1c7927a690>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x7f1c661b00d0>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x7f1c661b0c10>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c66238c90>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f1c79278e90>, 58)],
             'bool26': [(<numba.core.ir.Assign object at 0x7f1c6623bf90>, 0)],
             'bool260': [(<numba.core.ir.Assign object at 0x7f1c661b2450>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x7f1c661b3f50>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x7f1c7927b850>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7f1c792787d0>,
                            58),
                           (<numba.core.ir.Assign object at 0x7f1c661b1ad0>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x7f1c661b1790>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x7f1c661b0e90>, 198)]})
2024-07-01 16:52:47,272 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7927a9d0>
2024-07-01 16:52:47,272 - DEBUG - Fix SSA violator on var max_value
2024-07-01 16:52:47,272 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:47,272 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,272 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:47,272 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:47,272 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:47,272 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:47,272 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,272 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,272 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:47,273 - DEBUG - ==== SSA block rewrite pass on 28
2024-07-01 16:52:47,273 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,273 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:47,273 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:47,273 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,273 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:47,273 - DEBUG - ==== SSA block rewrite pass on 58
2024-07-01 16:52:47,273 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,273 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,273 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:47,273 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,273 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:47,273 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,274 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:47,274 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:47,274 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,274 - DEBUG - first assign: max_value
2024-07-01 16:52:47,274 - DEBUG - replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,274 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:47,274 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,274 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,274 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,274 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:47,274 - DEBUG - ==== SSA block rewrite pass on 188
2024-07-01 16:52:47,274 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,275 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:47,275 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:47,275 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:47,275 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,275 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:47,275 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:47,275 - DEBUG - on stmt: jump 196
2024-07-01 16:52:47,275 - DEBUG - ==== SSA block rewrite pass on 196
2024-07-01 16:52:47,275 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,275 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:47,275 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:47,275 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:47,275 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:47,275 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:47,276 - DEBUG - ==== SSA block rewrite pass on 198
2024-07-01 16:52:47,276 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,276 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:47,276 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:47,276 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,276 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:47,276 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,276 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,276 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,276 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:47,276 - DEBUG - ==== SSA block rewrite pass on 262
2024-07-01 16:52:47,276 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,276 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:47,276 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:47,277 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:47,277 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,277 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:47,277 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,277 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,277 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,277 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:47,277 - DEBUG - ==== SSA block rewrite pass on 294
2024-07-01 16:52:47,277 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,277 - DEBUG - on stmt: max_value = v
2024-07-01 16:52:47,277 - DEBUG - replaced with: max_value.1 = v
2024-07-01 16:52:47,278 - DEBUG - on stmt: jump 298
2024-07-01 16:52:47,278 - DEBUG - ==== SSA block rewrite pass on 298
2024-07-01 16:52:47,278 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,278 - DEBUG - on stmt: jump 196
2024-07-01 16:52:47,278 - DEBUG - ==== SSA block rewrite pass on 300
2024-07-01 16:52:47,278 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c79202710>
2024-07-01 16:52:47,278 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:47,278 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:47,278 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7f1c79203d10>],
             294: [<numba.core.ir.Assign object at 0x7f1c6623b1d0>]})
2024-07-01 16:52:47,279 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:47,279 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,279 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:47,279 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-07-01 16:52:47,279 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-07-01 16:52:47,279 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-07-01 16:52:47,279 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,279 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,280 - DEBUG - on stmt: branch $26pred, 28, 58
2024-07-01 16:52:47,280 - DEBUG - ==== SSA block rewrite pass on 28
2024-07-01 16:52:47,280 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,280 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-07-01 16:52:47,280 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-07-01 16:52:47,280 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,280 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-07-01 16:52:47,280 - DEBUG - ==== SSA block rewrite pass on 58
2024-07-01 16:52:47,280 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,280 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,280 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-07-01 16:52:47,280 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,281 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-07-01 16:52:47,281 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,281 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-07-01 16:52:47,281 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-07-01 16:52:47,281 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,281 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:47,281 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,281 - DEBUG - find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,281 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,281 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,281 - DEBUG - on stmt: branch $186pred, 188, 192
2024-07-01 16:52:47,282 - DEBUG - ==== SSA block rewrite pass on 188
2024-07-01 16:52:47,282 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,282 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-07-01 16:52:47,282 - DEBUG - find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-07-01 16:52:47,282 - DEBUG - find_def_from_top label 188
2024-07-01 16:52:47,282 - DEBUG - idom 58 from label 188
2024-07-01 16:52:47,282 - DEBUG - find_def_from_bottom label 58
2024-07-01 16:52:47,282 - DEBUG - on stmt: return $190return_value.1
2024-07-01 16:52:47,282 - DEBUG - ==== SSA block rewrite pass on 192
2024-07-01 16:52:47,282 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,282 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-07-01 16:52:47,282 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-07-01 16:52:47,282 - DEBUG - on stmt: jump 196
2024-07-01 16:52:47,283 - DEBUG - ==== SSA block rewrite pass on 196
2024-07-01 16:52:47,283 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,283 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-07-01 16:52:47,283 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-07-01 16:52:47,283 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-07-01 16:52:47,283 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-07-01 16:52:47,283 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-07-01 16:52:47,283 - DEBUG - ==== SSA block rewrite pass on 198
2024-07-01 16:52:47,283 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,283 - DEBUG - on stmt: view = $phi198.1
2024-07-01 16:52:47,283 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-07-01 16:52:47,283 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,284 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f1c7a099ee0>)
2024-07-01 16:52:47,284 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,284 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,284 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,284 - DEBUG - on stmt: branch $260pred, 262, 270
2024-07-01 16:52:47,284 - DEBUG - ==== SSA block rewrite pass on 262
2024-07-01 16:52:47,284 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,284 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-07-01 16:52:47,284 - DEBUG - on stmt: return $268return_value.2
2024-07-01 16:52:47,284 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:47,285 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,285 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f1c7a099580>)
2024-07-01 16:52:47,285 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,285 - DEBUG - find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,285 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:47,285 - DEBUG - idom 198 from label 270
2024-07-01 16:52:47,285 - DEBUG - find_def_from_bottom label 198
2024-07-01 16:52:47,285 - DEBUG - find_def_from_top label 198
2024-07-01 16:52:47,285 - DEBUG - idom 196 from label 198
2024-07-01 16:52:47,285 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:47,285 - DEBUG - find_def_from_top label 196
2024-07-01 16:52:47,285 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-07-01 16:52:47,285 - DEBUG - find_def_from_bottom label 192
2024-07-01 16:52:47,286 - DEBUG - find_def_from_top label 192
2024-07-01 16:52:47,286 - DEBUG - idom 58 from label 192
2024-07-01 16:52:47,286 - DEBUG - find_def_from_bottom label 58
2024-07-01 16:52:47,286 - DEBUG - incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,286 - DEBUG - find_def_from_bottom label 298
2024-07-01 16:52:47,286 - DEBUG - find_def_from_top label 298
2024-07-01 16:52:47,286 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-07-01 16:52:47,287 - DEBUG - find_def_from_bottom label 294
2024-07-01 16:52:47,287 - DEBUG - incoming_def max_value.1 = v
2024-07-01 16:52:47,287 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:47,287 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:47,287 - DEBUG - idom 198 from label 270
2024-07-01 16:52:47,287 - DEBUG - find_def_from_bottom label 198
2024-07-01 16:52:47,288 - DEBUG - find_def_from_top label 198
2024-07-01 16:52:47,288 - DEBUG - idom 196 from label 198
2024-07-01 16:52:47,288 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:47,288 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-07-01 16:52:47,288 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-07-01 16:52:47,288 - DEBUG - replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,288 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,288 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,289 - DEBUG - on stmt: branch $292pred, 294, 298
2024-07-01 16:52:47,289 - DEBUG - ==== SSA block rewrite pass on 294
2024-07-01 16:52:47,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,289 - DEBUG - on stmt: max_value.1 = v
2024-07-01 16:52:47,289 - DEBUG - on stmt: jump 298
2024-07-01 16:52:47,289 - DEBUG - ==== SSA block rewrite pass on 298
2024-07-01 16:52:47,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,289 - DEBUG - on stmt: jump 196
2024-07-01 16:52:47,289 - DEBUG - ==== SSA block rewrite pass on 300
2024-07-01 16:52:47,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66238fd0>
2024-07-01 16:52:47,289 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-07-01 16:52:47,289 - DEBUG - find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-07-01 16:52:47,289 - DEBUG - find_def_from_top label 300
2024-07-01 16:52:47,289 - DEBUG - idom 196 from label 300
2024-07-01 16:52:47,290 - DEBUG - find_def_from_bottom label 196
2024-07-01 16:52:47,290 - DEBUG - replaced with: $302return_value.1 = cast(value=max_value.2)
2024-07-01 16:52:47,290 - DEBUG - on stmt: return $302return_value.1
2024-07-01 16:52:47,296 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-07-01 16:52:47,296 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:47,297 - DEBUG - stack: []
2024-07-01 16:52:47,297 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:47,297 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-07-01 16:52:47,297 - DEBUG - stack []
2024-07-01 16:52:47,297 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-07-01 16:52:47,297 - DEBUG - stack []
2024-07-01 16:52:47,297 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-01 16:52:47,297 - DEBUG - stack []
2024-07-01 16:52:47,297 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-01 16:52:47,297 - DEBUG - stack ['$indices4.0']
2024-07-01 16:52:47,297 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-01 16:52:47,297 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-07-01 16:52:47,297 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-07-01 16:52:47,298 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-07-01 16:52:47,298 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-07-01 16:52:47,298 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-07-01 16:52:47,298 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-07-01 16:52:47,298 - DEBUG - stack ['$indices4.0', '$binop_sub20.4']
2024-07-01 16:52:47,298 - DEBUG - dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-07-01 16:52:47,298 - DEBUG - stack ['$24compare_op.5']
2024-07-01 16:52:47,298 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,298 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-07-01 16:52:47,298 - DEBUG - stack: []
2024-07-01 16:52:47,298 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-07-01 16:52:47,299 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-07-01 16:52:47,299 - DEBUG - stack []
2024-07-01 16:52:47,299 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-07-01 16:52:47,299 - DEBUG - stack ['$indices32.0']
2024-07-01 16:52:47,299 - DEBUG - dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-07-01 16:52:47,299 - DEBUG - stack ['$indices32.0', '$a34.1']
2024-07-01 16:52:47,299 - DEBUG - dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-07-01 16:52:47,299 - DEBUG - stack ['$indices32.0', '$36load_attr.2']
2024-07-01 16:52:47,299 - DEBUG - dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-07-01 16:52:47,299 - DEBUG - stack ['$indices32.0', '$46unary_negative.3']
2024-07-01 16:52:47,299 - DEBUG - dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-07-01 16:52:47,299 - DEBUG - stack ['$48compare_op.4']
2024-07-01 16:52:47,299 - DEBUG - end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:47,300 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:47,300 - DEBUG - stack: []
2024-07-01 16:52:47,300 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-07-01 16:52:47,300 - DEBUG - dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-07-01 16:52:47,300 - DEBUG - stack []
2024-07-01 16:52:47,300 - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-07-01 16:52:47,300 - DEBUG - stack ['$null$56.1', '$56load_global.0']
2024-07-01 16:52:47,300 - DEBUG - dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-07-01 16:52:47,300 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-01 16:52:47,300 - DEBUG - dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-07-01 16:52:47,300 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-07-01 16:52:47,300 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-07-01 16:52:47,301 - DEBUG - stack ['$74call.3']
2024-07-01 16:52:47,301 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,301 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:47,301 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-07-01 16:52:47,301 - DEBUG - stack: []
2024-07-01 16:52:47,301 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-07-01 16:52:47,301 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-07-01 16:52:47,301 - DEBUG - stack []
2024-07-01 16:52:47,301 - DEBUG - dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-07-01 16:52:47,301 - DEBUG - stack ['$a86.0']
2024-07-01 16:52:47,301 - DEBUG - dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-07-01 16:52:47,301 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-07-01 16:52:47,301 - DEBUG - dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-07-01 16:52:47,302 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-07-01 16:52:47,302 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-07-01 16:52:47,302 - DEBUG - stack ['$114call.3']
2024-07-01 16:52:47,302 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-07-01 16:52:47,302 - DEBUG - stack ['$114call.3', '$indices124.4']
2024-07-01 16:52:47,302 - DEBUG - dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-07-01 16:52:47,302 - DEBUG - stack ['$126binary_subscr.5']
2024-07-01 16:52:47,302 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,302 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:47,302 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-07-01 16:52:47,302 - DEBUG - defmap: {}
2024-07-01 16:52:47,303 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,303 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,303 - DEBUG - keep phismap: {}
2024-07-01 16:52:47,303 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:47,303 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:47,303 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-07-01 16:52:47,303 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-07-01 16:52:47,303 - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,303 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,304 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-07-01 16:52:47,311 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:47,311 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66187e90>
2024-07-01 16:52:47,311 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:47,312 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-07-01 16:52:47,312 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:47,312 - DEBUG - on stmt: $const18.3 = const(int, 1)
2024-07-01 16:52:47,312 - DEBUG - on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-07-01 16:52:47,312 - DEBUG - on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-07-01 16:52:47,312 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,312 - DEBUG - on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,312 - DEBUG - on stmt: branch $30pred, 56, 32
2024-07-01 16:52:47,312 - DEBUG - ==== SSA block analysis pass on 32
2024-07-01 16:52:47,312 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66187e90>
2024-07-01 16:52:47,312 - DEBUG - on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:47,312 - DEBUG - on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-07-01 16:52:47,313 - DEBUG - on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-07-01 16:52:47,313 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-07-01 16:52:47,313 - DEBUG - on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,313 - DEBUG - on stmt: branch $54pred, 56, 86
2024-07-01 16:52:47,313 - DEBUG - ==== SSA block analysis pass on 56
2024-07-01 16:52:47,313 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66187e90>
2024-07-01 16:52:47,313 - DEBUG - on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-07-01 16:52:47,313 - DEBUG - on stmt: $const68.2 = const(str, Index out of bounds)
2024-07-01 16:52:47,313 - DEBUG - on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,313 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-07-01 16:52:47,313 - DEBUG - ==== SSA block analysis pass on 86
2024-07-01 16:52:47,313 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66187e90>
2024-07-01 16:52:47,314 - DEBUG - on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-07-01 16:52:47,314 - DEBUG - on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,314 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-07-01 16:52:47,314 - DEBUG - on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-07-01 16:52:47,314 - DEBUG - on stmt: return $136return_value.6
2024-07-01 16:52:47,314 - DEBUG - defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x7f1c7929a190>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1c7929a4d0>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x7f1c7929a7d0>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c66187290>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x7f1c66184a90>, 0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c66185290>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x7f1c66186190>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x7f1c66184e90>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f1c66185cd0>, 32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f1c79298fd0>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x7f1c79299850>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x7f1c7929a050>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c66185050>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x7f1c661850d0>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x7f1c66185250>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x7f1c792998d0>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c66185b10>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x7f1c66184690>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f1c66184190>, 32)],
             'indices': [(<numba.core.ir.Assign object at 0x7f1c66187450>, 0)]})
2024-07-01 16:52:47,315 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66187e90>
2024-07-01 16:52:47,336 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-07-01 16:52:47,336 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:47,336 - DEBUG - stack: []
2024-07-01 16:52:47,336 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:47,336 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-07-01 16:52:47,336 - DEBUG - stack []
2024-07-01 16:52:47,336 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-07-01 16:52:47,337 - DEBUG - stack []
2024-07-01 16:52:47,337 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-01 16:52:47,337 - DEBUG - stack []
2024-07-01 16:52:47,337 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-07-01 16:52:47,337 - DEBUG - stack ['$ary4.0']
2024-07-01 16:52:47,337 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-07-01 16:52:47,337 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-07-01 16:52:47,337 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-07-01 16:52:47,337 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-07-01 16:52:47,337 - DEBUG - dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-07-01 16:52:47,337 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-01 16:52:47,337 - DEBUG - dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-07-01 16:52:47,338 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-07-01 16:52:47,338 - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-07-01 16:52:47,338 - DEBUG - stack ['$44call.5']
2024-07-01 16:52:47,338 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,338 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:47,338 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:47,338 - DEBUG - defmap: {}
2024-07-01 16:52:47,338 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,338 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,338 - DEBUG - keep phismap: {}
2024-07-01 16:52:47,338 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:47,338 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:47,338 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,339 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-07-01 16:52:47,343 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:47,343 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c7920b3d0>
2024-07-01 16:52:47,344 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-07-01 16:52:47,344 - DEBUG - on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-07-01 16:52:47,344 - DEBUG - on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-07-01 16:52:47,344 - DEBUG - on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,344 - DEBUG - on stmt: $54return_value.6 = cast(value=$44call.5)
2024-07-01 16:52:47,344 - DEBUG - on stmt: return $54return_value.6
2024-07-01 16:52:47,344 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x7f1c79209e90>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x7f1c79209b90>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x7f1c7920a410>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f1c79209cd0>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x7f1c79209810>, 0)]})
2024-07-01 16:52:47,344 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c7920b3d0>
2024-07-01 16:52:47,427 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	RESUME(arg=0, lineno=486)
           4	LOAD_CONST(arg=1, lineno=488)
           6	RETURN_VALUE(arg=None, lineno=488)
2024-07-01 16:52:47,427 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:47,427 - DEBUG - stack: []
2024-07-01 16:52:47,427 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:47,427 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=486)
2024-07-01 16:52:47,427 - DEBUG - stack []
2024-07-01 16:52:47,427 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=486)
2024-07-01 16:52:47,427 - DEBUG - stack []
2024-07-01 16:52:47,427 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=488)
2024-07-01 16:52:47,427 - DEBUG - stack []
2024-07-01 16:52:47,428 - DEBUG - dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=488)
2024-07-01 16:52:47,428 - DEBUG - stack ['$const4.0']
2024-07-01 16:52:47,428 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,428 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:47,428 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:47,428 - DEBUG - defmap: {}
2024-07-01 16:52:47,428 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,428 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,428 - DEBUG - keep phismap: {}
2024-07-01 16:52:47,428 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:47,428 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:47,428 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'retval': '$const4.0', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,429 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0 = const(bool, False)           ['$const4.0']
    $6return_value.1 = cast(value=$const4.0) ['$6return_value.1', '$const4.0']
    return $6return_value.1                  ['$6return_value.1']

2024-07-01 16:52:47,432 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:47,432 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66464510>
2024-07-01 16:52:47,433 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:47,433 - DEBUG - on stmt: $const4.0 = const(bool, False)
2024-07-01 16:52:47,433 - DEBUG - on stmt: $6return_value.1 = cast(value=$const4.0)
2024-07-01 16:52:47,433 - DEBUG - on stmt: return $6return_value.1
2024-07-01 16:52:47,433 - DEBUG - defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x7f1c66512d50>,
                                   0)],
             '$const4.0': [(<numba.core.ir.Assign object at 0x7f1c66512010>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c66511bd0>, 0)]})
2024-07-01 16:52:47,433 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66464510>
2024-07-01 16:52:47,454 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-07-01 16:52:47,454 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:47,454 - DEBUG - stack: []
2024-07-01 16:52:47,454 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:47,454 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-07-01 16:52:47,454 - DEBUG - stack []
2024-07-01 16:52:47,454 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-07-01 16:52:47,454 - DEBUG - stack []
2024-07-01 16:52:47,454 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-07-01 16:52:47,455 - DEBUG - stack []
2024-07-01 16:52:47,455 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-07-01 16:52:47,455 - DEBUG - stack ['$a4.0']
2024-07-01 16:52:47,455 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-07-01 16:52:47,455 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-07-01 16:52:47,455 - DEBUG - dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-07-01 16:52:47,455 - DEBUG - stack ['$8compare_op.2']
2024-07-01 16:52:47,455 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,455 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:47,455 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:47,455 - DEBUG - defmap: {}
2024-07-01 16:52:47,455 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,455 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:47,455 - DEBUG - keep phismap: {}
2024-07-01 16:52:47,456 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:47,456 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:47,456 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,456 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-07-01 16:52:47,460 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:47,460 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66456c90>
2024-07-01 16:52:47,460 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:47,460 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-07-01 16:52:47,460 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-07-01 16:52:47,460 - DEBUG - on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-07-01 16:52:47,460 - DEBUG - on stmt: return $14return_value.3
2024-07-01 16:52:47,461 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x7f1c66455e50>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c66455bd0>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c66455510>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7f1c66455610>, 0)]})
2024-07-01 16:52:47,461 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c66456c90>
2024-07-01 16:52:47,594 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-07-01 16:52:47,594 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:47,594 - DEBUG - stack: []
2024-07-01 16:52:47,594 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:47,594 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-07-01 16:52:47,594 - DEBUG - stack []
2024-07-01 16:52:47,595 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-07-01 16:52:47,595 - DEBUG - stack []
2024-07-01 16:52:47,595 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-07-01 16:52:47,595 - DEBUG - stack []
2024-07-01 16:52:47,595 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-07-01 16:52:47,595 - DEBUG - stack []
2024-07-01 16:52:47,595 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-07-01 16:52:47,595 - DEBUG - stack ['$6load_deref.0']
2024-07-01 16:52:47,595 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-07-01 16:52:47,595 - DEBUG - stack []
2024-07-01 16:52:47,595 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-07-01 16:52:47,595 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-07-01 16:52:47,595 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-07-01 16:52:47,595 - DEBUG - stack ['$null$10.2', '$22load_attr.3']
2024-07-01 16:52:47,595 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-07-01 16:52:47,595 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-01 16:52:47,596 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-07-01 16:52:47,596 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-07-01 16:52:47,596 - DEBUG - dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-07-01 16:52:47,596 - DEBUG - stack ['$38call.5']
2024-07-01 16:52:47,596 - DEBUG - end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-07-01 16:52:47,596 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-01 16:52:47,596 - DEBUG - stack: ['$phi50.0']
2024-07-01 16:52:47,596 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-07-01 16:52:47,596 - DEBUG - dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-07-01 16:52:47,596 - DEBUG - stack ['$phi50.0']
2024-07-01 16:52:47,596 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-07-01 16:52:47,597 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-07-01 16:52:47,597 - DEBUG - stack: []
2024-07-01 16:52:47,597 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-01 16:52:47,597 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-07-01 16:52:47,597 - DEBUG - stack []
2024-07-01 16:52:47,597 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-07-01 16:52:47,597 - DEBUG - stack ['$c102.0']
2024-07-01 16:52:47,597 - DEBUG - dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-07-01 16:52:47,597 - DEBUG - stack ['$c102.0', '$a104.1']
2024-07-01 16:52:47,597 - DEBUG - dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-07-01 16:52:47,597 - DEBUG - stack ['$c102.0', '$106load_attr.2']
2024-07-01 16:52:47,597 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-07-01 16:52:47,598 - DEBUG - stack ['$binop_truediv116.3']
2024-07-01 16:52:47,598 - DEBUG - end state. edges=[]
2024-07-01 16:52:47,598 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-07-01 16:52:47,598 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2024-07-01 16:52:47,598 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-07-01 16:52:47,598 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-07-01 16:52:47,598 - DEBUG - stack ['$phi52.0', '$phi52.1']
2024-07-01 16:52:47,598 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-07-01 16:52:47,598 - DEBUG - stack ['$phi52.0']
2024-07-01 16:52:47,598 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-07-01 16:52:47,598 - DEBUG - stack ['$phi52.0', '$c54.2']
2024-07-01 16:52:47,598 - DEBUG - dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-07-01 16:52:47,598 - DEBUG - stack ['$phi52.0', '$c54.2', '$v56.3']
2024-07-01 16:52:47,599 - DEBUG - dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-07-01 16:52:47,599 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-01 16:52:47,599 - DEBUG - dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-07-01 16:52:47,599 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-07-01 16:52:47,599 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-07-01 16:52:47,599 - DEBUG - stack ['$phi52.0', '$c54.2', '$84call.6']
2024-07-01 16:52:47,599 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-07-01 16:52:47,599 - DEBUG - stack ['$phi52.0', '$binop_iadd94.7']
2024-07-01 16:52:47,599 - DEBUG - dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-07-01 16:52:47,599 - DEBUG - stack ['$phi52.0']
2024-07-01 16:52:47,599 - DEBUG - end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-07-01 16:52:47,599 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-07-01 16:52:47,600 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:47,600 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-07-01 16:52:47,600 - DEBUG - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-07-01 16:52:47,600 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:47,601 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:47,601 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:47,601 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-07-01 16:52:47,602 - DEBUG - keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-07-01 16:52:47,602 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-07-01 16:52:47,602 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:47,603 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-07-01 16:52:47,603 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-07-01 16:52:47,603 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-07-01 16:52:47,603 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:47,604 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-07-01 16:52:47,610 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:47,610 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6623bd10>
2024-07-01 16:52:47,610 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:47,610 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:47,611 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,611 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:47,611 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,611 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:47,611 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:47,611 - DEBUG - on stmt: jump 50
2024-07-01 16:52:47,611 - DEBUG - ==== SSA block analysis pass on 50
2024-07-01 16:52:47,611 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6623bd10>
2024-07-01 16:52:47,611 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:47,611 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:47,611 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:47,611 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:47,612 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:47,612 - DEBUG - ==== SSA block analysis pass on 52
2024-07-01 16:52:47,612 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6623bd10>
2024-07-01 16:52:47,612 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:47,612 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:47,612 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,612 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,612 - DEBUG - on stmt: c = $binop_iadd94.7
2024-07-01 16:52:47,612 - DEBUG - on stmt: jump 50
2024-07-01 16:52:47,612 - DEBUG - ==== SSA block analysis pass on 102
2024-07-01 16:52:47,612 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6623bd10>
2024-07-01 16:52:47,612 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:47,612 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:47,613 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:47,613 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:47,613 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c660a5d10>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7f1c660b2890>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x7f1c660a62d0>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x7f1c660b2b10>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x7f1c660b2e10>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x7f1c660b2fd0>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7f1c660b3210>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7f1c660b3450>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7f1c660b34d0>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x7f1c660b3dd0>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x7f1c660b3ed0>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x7f1c660b1750>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x7f1c660a5fd0>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7f1c660b2610>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7f1c660b37d0>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c66454090>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7f1c661b0190>, 0),
                   (<numba.core.ir.Assign object at 0x7f1c660b14d0>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x7f1c660b3810>, 52)]})
2024-07-01 16:52:47,614 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c6623bd10>
2024-07-01 16:52:47,614 - DEBUG - Fix SSA violator on var c
2024-07-01 16:52:47,614 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:47,614 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c660a6bd0>
2024-07-01 16:52:47,614 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:47,614 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:47,614 - DEBUG - first assign: c
2024-07-01 16:52:47,614 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-07-01 16:52:47,614 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,614 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:47,614 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,614 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:47,615 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:47,615 - DEBUG - on stmt: jump 50
2024-07-01 16:52:47,615 - DEBUG - ==== SSA block rewrite pass on 50
2024-07-01 16:52:47,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c660a6bd0>
2024-07-01 16:52:47,615 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:47,615 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:47,615 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:47,615 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:47,615 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:47,615 - DEBUG - ==== SSA block rewrite pass on 52
2024-07-01 16:52:47,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c660a6bd0>
2024-07-01 16:52:47,615 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:47,615 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:47,615 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,616 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,616 - DEBUG - on stmt: c = $binop_iadd94.7
2024-07-01 16:52:47,616 - DEBUG - replaced with: c.1 = $binop_iadd94.7
2024-07-01 16:52:47,616 - DEBUG - on stmt: jump 50
2024-07-01 16:52:47,616 - DEBUG - ==== SSA block rewrite pass on 102
2024-07-01 16:52:47,616 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c660a6bd0>
2024-07-01 16:52:47,616 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:47,616 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:47,616 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:47,616 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:47,616 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c660a6c10>],
             52: [<numba.core.ir.Assign object at 0x7f1c660a6690>]})
2024-07-01 16:52:47,616 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:47,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c660a6910>
2024-07-01 16:52:47,617 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:47,617 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-07-01 16:52:47,617 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:47,617 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-07-01 16:52:47,617 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,617 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-07-01 16:52:47,617 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-07-01 16:52:47,617 - DEBUG - on stmt: jump 50
2024-07-01 16:52:47,617 - DEBUG - ==== SSA block rewrite pass on 50
2024-07-01 16:52:47,617 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c660a6910>
2024-07-01 16:52:47,617 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-07-01 16:52:47,617 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-07-01 16:52:47,618 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-07-01 16:52:47,618 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-07-01 16:52:47,618 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-07-01 16:52:47,618 - DEBUG - ==== SSA block rewrite pass on 52
2024-07-01 16:52:47,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c660a6910>
2024-07-01 16:52:47,618 - DEBUG - on stmt: v = $phi52.1
2024-07-01 16:52:47,618 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-07-01 16:52:47,618 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:47,618 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,618 - DEBUG - find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,618 - DEBUG - find_def_from_top label 52
2024-07-01 16:52:47,618 - DEBUG - idom 50 from label 52
2024-07-01 16:52:47,618 - DEBUG - find_def_from_bottom label 50
2024-07-01 16:52:47,619 - DEBUG - find_def_from_top label 50
2024-07-01 16:52:47,619 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-07-01 16:52:47,619 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:47,619 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-07-01 16:52:47,619 - DEBUG - find_def_from_bottom label 52
2024-07-01 16:52:47,619 - DEBUG - incoming_def c.1 = $binop_iadd94.7
2024-07-01 16:52:47,619 - DEBUG - replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:47,619 - DEBUG - on stmt: c.1 = $binop_iadd94.7
2024-07-01 16:52:47,619 - DEBUG - on stmt: jump 50
2024-07-01 16:52:47,619 - DEBUG - ==== SSA block rewrite pass on 102
2024-07-01 16:52:47,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c660a6910>
2024-07-01 16:52:47,619 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-07-01 16:52:47,620 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:47,620 - DEBUG - find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-07-01 16:52:47,620 - DEBUG - find_def_from_top label 102
2024-07-01 16:52:47,620 - DEBUG - idom 50 from label 102
2024-07-01 16:52:47,620 - DEBUG - find_def_from_bottom label 50
2024-07-01 16:52:47,620 - DEBUG - replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-07-01 16:52:47,620 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-07-01 16:52:47,620 - DEBUG - on stmt: return $120return_value.4
2024-07-01 16:52:48,365 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	RESUME(arg=0, lineno=2452)
           4	LOAD_FAST(arg=0, lineno=2457)
           6	LOAD_ATTR(arg=0, lineno=2457)
          16	LOAD_CONST(arg=1, lineno=2457)
          18	BINARY_OP(arg=8, lineno=2457)
          22	LOAD_FAST(arg=0, lineno=2457)
          24	LOAD_ATTR(arg=1, lineno=2457)
          34	LOAD_CONST(arg=1, lineno=2457)
          36	BINARY_OP(arg=8, lineno=2457)
          40	BINARY_OP(arg=0, lineno=2457)
          44	RETURN_VALUE(arg=None, lineno=2457)
2024-07-01 16:52:48,365 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:48,365 - DEBUG - stack: []
2024-07-01 16:52:48,365 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:48,365 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2452)
2024-07-01 16:52:48,365 - DEBUG - stack []
2024-07-01 16:52:48,365 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2452)
2024-07-01 16:52:48,365 - DEBUG - stack []
2024-07-01 16:52:48,365 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2457)
2024-07-01 16:52:48,366 - DEBUG - stack []
2024-07-01 16:52:48,366 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2457)
2024-07-01 16:52:48,366 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:48,366 - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=2457)
2024-07-01 16:52:48,366 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:48,366 - DEBUG - dispatch pc=18, inst=BINARY_OP(arg=8, lineno=2457)
2024-07-01 16:52:48,366 - DEBUG - stack ['$6load_attr.1', '$const16.2']
2024-07-01 16:52:48,366 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2457)
2024-07-01 16:52:48,366 - DEBUG - stack ['$binop_pow18.3']
2024-07-01 16:52:48,366 - DEBUG - dispatch pc=24, inst=LOAD_ATTR(arg=1, lineno=2457)
2024-07-01 16:52:48,366 - DEBUG - stack ['$binop_pow18.3', '$x22.4']
2024-07-01 16:52:48,367 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=2457)
2024-07-01 16:52:48,367 - DEBUG - stack ['$binop_pow18.3', '$24load_attr.5']
2024-07-01 16:52:48,367 - DEBUG - dispatch pc=36, inst=BINARY_OP(arg=8, lineno=2457)
2024-07-01 16:52:48,367 - DEBUG - stack ['$binop_pow18.3', '$24load_attr.5', '$const34.6']
2024-07-01 16:52:48,367 - DEBUG - dispatch pc=40, inst=BINARY_OP(arg=0, lineno=2457)
2024-07-01 16:52:48,367 - DEBUG - stack ['$binop_pow18.3', '$binop_pow36.7']
2024-07-01 16:52:48,367 - DEBUG - dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=2457)
2024-07-01 16:52:48,367 - DEBUG - stack ['$binop_add40.8']
2024-07-01 16:52:48,367 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,367 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:48,368 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:48,368 - DEBUG - defmap: {}
2024-07-01 16:52:48,368 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:48,368 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:48,368 - DEBUG - keep phismap: {}
2024-07-01 16:52:48,368 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:48,368 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:48,368 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$const16.2'}), (18, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const16.2', 'res': '$binop_pow18.3'}), (20, {}), (22, {'res': '$x22.4'}), (24, {'item': '$x22.4', 'res': '$24load_attr.5'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'res': '$const34.6'}), (36, {'op': '**', 'lhs': '$24load_attr.5', 'rhs': '$const34.6', 'res': '$binop_pow36.7'}), (38, {}), (40, {'op': '+', 'lhs': '$binop_pow18.3', 'rhs': '$binop_pow36.7', 'res': '$binop_add40.8'}), (42, {}), (44, {'retval': '$binop_add40.8', 'castval': '$44return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,369 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const16.2 = const(int, 2)               ['$const16.2']
    $binop_pow18.3 = $6load_attr.1 ** $const16.2 ['$6load_attr.1', '$binop_pow18.3', '$const16.2']
    $24load_attr.5 = getattr(value=x, attr=imag) ['$24load_attr.5', 'x']
    $const34.6 = const(int, 2)               ['$const34.6']
    $binop_pow36.7 = $24load_attr.5 ** $const34.6 ['$24load_attr.5', '$binop_pow36.7', '$const34.6']
    $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7 ['$binop_add40.8', '$binop_pow18.3', '$binop_pow36.7']
    $44return_value.9 = cast(value=$binop_add40.8) ['$44return_value.9', '$binop_add40.8']
    return $44return_value.9                 ['$44return_value.9']

2024-07-01 16:52:48,373 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:48,373 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6665ff90>
2024-07-01 16:52:48,373 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:48,374 - DEBUG - on stmt: $6load_attr.1 = getattr(value=x, attr=real)
2024-07-01 16:52:48,374 - DEBUG - on stmt: $const16.2 = const(int, 2)
2024-07-01 16:52:48,374 - DEBUG - on stmt: $binop_pow18.3 = $6load_attr.1 ** $const16.2
2024-07-01 16:52:48,374 - DEBUG - on stmt: $24load_attr.5 = getattr(value=x, attr=imag)
2024-07-01 16:52:48,374 - DEBUG - on stmt: $const34.6 = const(int, 2)
2024-07-01 16:52:48,374 - DEBUG - on stmt: $binop_pow36.7 = $24load_attr.5 ** $const34.6
2024-07-01 16:52:48,374 - DEBUG - on stmt: $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7
2024-07-01 16:52:48,374 - DEBUG - on stmt: $44return_value.9 = cast(value=$binop_add40.8)
2024-07-01 16:52:48,374 - DEBUG - on stmt: return $44return_value.9
2024-07-01 16:52:48,375 - DEBUG - defs defaultdict(<class 'list'>,
            {'$24load_attr.5': [(<numba.core.ir.Assign object at 0x7f1c6672f290>,
                                 0)],
             '$44return_value.9': [(<numba.core.ir.Assign object at 0x7f1c6672fa10>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x7f1c6672e490>,
                                0)],
             '$binop_add40.8': [(<numba.core.ir.Assign object at 0x7f1c6672f950>,
                                 0)],
             '$binop_pow18.3': [(<numba.core.ir.Assign object at 0x7f1c6672e9d0>,
                                 0)],
             '$binop_pow36.7': [(<numba.core.ir.Assign object at 0x7f1c6672f590>,
                                 0)],
             '$const16.2': [(<numba.core.ir.Assign object at 0x7f1c6672e710>,
                             0)],
             '$const34.6': [(<numba.core.ir.Assign object at 0x7f1c6672f490>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c6672e110>, 0)]})
2024-07-01 16:52:48,375 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c6665ff90>
2024-07-01 16:52:48,384 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	PRECALL(arg=1, lineno=216)
          16	CALL(arg=1, lineno=216)
          26	STORE_FAST(arg=2, lineno=216)
          28	PUSH_NULL(arg=None, lineno=217)
          30	LOAD_DEREF(arg=6, lineno=217)
          32	LOAD_FAST(arg=0, lineno=217)
          34	PRECALL(arg=1, lineno=217)
          38	CALL(arg=1, lineno=217)
          48	STORE_FAST(arg=0, lineno=217)
          50	LOAD_FAST(arg=1, lineno=218)
          52	LOAD_CONST(arg=2, lineno=218)
          54	COMPARE_OP(arg=0, lineno=218)
          60	POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
          62	LOAD_CONST(arg=3, lineno=219)
          64	STORE_FAST(arg=3, lineno=219)
          66	LOAD_FAST(arg=1, lineno=220)
          68	UNARY_NEGATIVE(arg=None, lineno=220)
          70	STORE_FAST(arg=4, lineno=220)
          72	LOAD_FAST(arg=4, lineno=221)
          74	LOAD_CONST(arg=2, lineno=221)
          76	COMPARE_OP(arg=0, lineno=221)
          82	POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
          84	LOAD_GLOBAL(arg=0, lineno=222)
          96	RAISE_VARARGS(arg=1, lineno=222)
>         98	LOAD_DEREF(arg=5, lineno=223)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
         102	LOAD_FAST(arg=0, lineno=224)
         104	LOAD_CONST(arg=2, lineno=224)
         106	COMPARE_OP(arg=2, lineno=224)
         112	POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
         114	LOAD_DEREF(arg=7, lineno=225)
         116	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
         118	LOAD_DEREF(arg=7, lineno=226)
         120	RETURN_VALUE(arg=None, lineno=226)
>        122	LOAD_GLOBAL(arg=3, lineno=228)
         134	LOAD_CONST(arg=4, lineno=228)
         136	PRECALL(arg=1, lineno=228)
         140	CALL(arg=1, lineno=228)
         150	RAISE_VARARGS(arg=1, lineno=228)
>        152	LOAD_FAST(arg=0, lineno=229)
         154	LOAD_CONST(arg=1, lineno=229)
         156	COMPARE_OP(arg=3, lineno=229)
         162	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
         164	LOAD_FAST(arg=0, lineno=229)
         166	LOAD_CONST(arg=5, lineno=229)
         168	COMPARE_OP(arg=3, lineno=229)
         174	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
         176	LOAD_CONST(arg=2, lineno=230)
         178	RETURN_VALUE(arg=None, lineno=230)
>        180	JUMP_FORWARD(arg=4, lineno=230)
>        182	LOAD_CONST(arg=6, lineno=232)
         184	STORE_FAST(arg=3, lineno=232)
         186	LOAD_FAST(arg=1, lineno=233)
         188	STORE_FAST(arg=4, lineno=233)
>        190	LOAD_FAST(arg=4, lineno=234)
         192	LOAD_CONST(arg=7, lineno=234)
         194	COMPARE_OP(arg=4, lineno=234)
         200	POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
         202	LOAD_GLOBAL(arg=5, lineno=236)
         214	LOAD_ATTR(arg=3, lineno=236)
         224	LOAD_FAST(arg=0, lineno=236)
         226	LOAD_GLOBAL(arg=9, lineno=236)
         238	LOAD_FAST(arg=1, lineno=236)
         240	PRECALL(arg=1, lineno=236)
         244	CALL(arg=1, lineno=236)
         254	PRECALL(arg=2, lineno=236)
         258	CALL(arg=2, lineno=236)
         268	RETURN_VALUE(arg=None, lineno=236)
>        270	LOAD_FAST(arg=4, lineno=237)
         272	LOAD_CONST(arg=2, lineno=237)
         274	COMPARE_OP(arg=3, lineno=237)
         280	POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
>        282	LOAD_FAST(arg=4, lineno=238)
         284	LOAD_CONST(arg=1, lineno=238)
         286	BINARY_OP(arg=1, lineno=238)
         290	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
         292	LOAD_FAST(arg=2, lineno=239)
         294	LOAD_FAST(arg=0, lineno=239)
         296	BINARY_OP(arg=18, lineno=239)
         300	STORE_FAST(arg=2, lineno=239)
>        302	LOAD_FAST(arg=4, lineno=240)
         304	LOAD_CONST(arg=1, lineno=240)
         306	BINARY_OP(arg=22, lineno=240)
         310	STORE_FAST(arg=4, lineno=240)
         312	LOAD_FAST(arg=0, lineno=241)
         314	LOAD_FAST(arg=0, lineno=241)
         316	BINARY_OP(arg=18, lineno=241)
         320	STORE_FAST(arg=0, lineno=241)
         322	LOAD_FAST(arg=4, lineno=237)
         324	LOAD_CONST(arg=2, lineno=237)
         326	COMPARE_OP(arg=3, lineno=237)
         332	POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
>        334	LOAD_FAST(arg=3, lineno=243)
         336	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
         338	LOAD_CONST(arg=8, lineno=243)
         340	LOAD_FAST(arg=2, lineno=243)
         342	BINARY_OP(arg=11, lineno=243)
         346	JUMP_FORWARD(arg=1, lineno=243)
>        348	LOAD_FAST(arg=2, lineno=243)
>        350	RETURN_VALUE(arg=None, lineno=243)
2024-07-01 16:52:48,385 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:48,385 - DEBUG - stack: []
2024-07-01 16:52:48,385 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:48,385 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2024-07-01 16:52:48,385 - DEBUG - stack []
2024-07-01 16:52:48,385 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
2024-07-01 16:52:48,385 - DEBUG - stack []
2024-07-01 16:52:48,385 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=214)
2024-07-01 16:52:48,385 - DEBUG - stack []
2024-07-01 16:52:48,385 - DEBUG - dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
2024-07-01 16:52:48,385 - DEBUG - stack []
2024-07-01 16:52:48,386 - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
2024-07-01 16:52:48,386 - DEBUG - stack ['$null$6.0']
2024-07-01 16:52:48,386 - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
2024-07-01 16:52:48,386 - DEBUG - stack ['$null$6.0', '$8load_deref.1']
2024-07-01 16:52:48,386 - DEBUG - dispatch pc=12, inst=PRECALL(arg=1, lineno=216)
2024-07-01 16:52:48,386 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-07-01 16:52:48,386 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=216)
2024-07-01 16:52:48,386 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-07-01 16:52:48,386 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=2, lineno=216)
2024-07-01 16:52:48,386 - DEBUG - stack ['$16call.3']
2024-07-01 16:52:48,386 - DEBUG - dispatch pc=28, inst=PUSH_NULL(arg=None, lineno=217)
2024-07-01 16:52:48,386 - DEBUG - stack []
2024-07-01 16:52:48,386 - DEBUG - dispatch pc=30, inst=LOAD_DEREF(arg=6, lineno=217)
2024-07-01 16:52:48,386 - DEBUG - stack ['$null$28.4']
2024-07-01 16:52:48,387 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=217)
2024-07-01 16:52:48,387 - DEBUG - stack ['$null$28.4', '$30load_deref.5']
2024-07-01 16:52:48,387 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=217)
2024-07-01 16:52:48,387 - DEBUG - stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-07-01 16:52:48,387 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=217)
2024-07-01 16:52:48,387 - DEBUG - stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-07-01 16:52:48,387 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=0, lineno=217)
2024-07-01 16:52:48,387 - DEBUG - stack ['$38call.7']
2024-07-01 16:52:48,387 - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=218)
2024-07-01 16:52:48,387 - DEBUG - stack []
2024-07-01 16:52:48,387 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=218)
2024-07-01 16:52:48,387 - DEBUG - stack ['$b50.8']
2024-07-01 16:52:48,387 - DEBUG - dispatch pc=54, inst=COMPARE_OP(arg=0, lineno=218)
2024-07-01 16:52:48,387 - DEBUG - stack ['$b50.8', '$const52.9']
2024-07-01 16:52:48,388 - DEBUG - dispatch pc=60, inst=POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
2024-07-01 16:52:48,388 - DEBUG - stack ['$54compare_op.10']
2024-07-01 16:52:48,388 - DEBUG - end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,388 - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
2024-07-01 16:52:48,388 - DEBUG - stack: []
2024-07-01 16:52:48,388 - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=0)
2024-07-01 16:52:48,388 - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=219)
2024-07-01 16:52:48,388 - DEBUG - stack []
2024-07-01 16:52:48,388 - DEBUG - dispatch pc=64, inst=STORE_FAST(arg=3, lineno=219)
2024-07-01 16:52:48,388 - DEBUG - stack ['$const62.0']
2024-07-01 16:52:48,388 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=220)
2024-07-01 16:52:48,388 - DEBUG - stack []
2024-07-01 16:52:48,388 - DEBUG - dispatch pc=68, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-07-01 16:52:48,388 - DEBUG - stack ['$b66.1']
2024-07-01 16:52:48,389 - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=220)
2024-07-01 16:52:48,389 - DEBUG - stack ['$68unary_negative.2']
2024-07-01 16:52:48,389 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=221)
2024-07-01 16:52:48,389 - DEBUG - stack []
2024-07-01 16:52:48,389 - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=221)
2024-07-01 16:52:48,389 - DEBUG - stack ['$exp72.3']
2024-07-01 16:52:48,389 - DEBUG - dispatch pc=76, inst=COMPARE_OP(arg=0, lineno=221)
2024-07-01 16:52:48,389 - DEBUG - stack ['$exp72.3', '$const74.4']
2024-07-01 16:52:48,389 - DEBUG - dispatch pc=82, inst=POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
2024-07-01 16:52:48,389 - DEBUG - stack ['$76compare_op.5']
2024-07-01 16:52:48,389 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,389 - DEBUG - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-07-01 16:52:48,389 - DEBUG - stack: []
2024-07-01 16:52:48,389 - DEBUG - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2024-07-01 16:52:48,390 - DEBUG - dispatch pc=182, inst=LOAD_CONST(arg=6, lineno=232)
2024-07-01 16:52:48,390 - DEBUG - stack []
2024-07-01 16:52:48,390 - DEBUG - dispatch pc=184, inst=STORE_FAST(arg=3, lineno=232)
2024-07-01 16:52:48,390 - DEBUG - stack ['$const182.0']
2024-07-01 16:52:48,390 - DEBUG - dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=233)
2024-07-01 16:52:48,390 - DEBUG - stack []
2024-07-01 16:52:48,390 - DEBUG - dispatch pc=188, inst=STORE_FAST(arg=4, lineno=233)
2024-07-01 16:52:48,390 - DEBUG - stack ['$b186.1']
2024-07-01 16:52:48,390 - DEBUG - end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,390 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-01 16:52:48,390 - DEBUG - stack: []
2024-07-01 16:52:48,390 - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2024-07-01 16:52:48,390 - DEBUG - dispatch pc=84, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-07-01 16:52:48,390 - DEBUG - stack []
2024-07-01 16:52:48,391 - DEBUG - dispatch pc=96, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-07-01 16:52:48,391 - DEBUG - stack ['$84load_global.0']
2024-07-01 16:52:48,391 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,391 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-01 16:52:48,391 - DEBUG - stack: []
2024-07-01 16:52:48,391 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2024-07-01 16:52:48,391 - DEBUG - dispatch pc=98, inst=LOAD_DEREF(arg=5, lineno=223)
2024-07-01 16:52:48,391 - DEBUG - stack []
2024-07-01 16:52:48,391 - DEBUG - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
2024-07-01 16:52:48,391 - DEBUG - stack ['$98load_deref.0']
2024-07-01 16:52:48,391 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,391 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,391 - DEBUG - stack: []
2024-07-01 16:52:48,391 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2024-07-01 16:52:48,392 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=4, lineno=234)
2024-07-01 16:52:48,392 - DEBUG - stack []
2024-07-01 16:52:48,392 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=7, lineno=234)
2024-07-01 16:52:48,392 - DEBUG - stack ['$exp190.0']
2024-07-01 16:52:48,392 - DEBUG - dispatch pc=194, inst=COMPARE_OP(arg=4, lineno=234)
2024-07-01 16:52:48,392 - DEBUG - stack ['$exp190.0', '$const192.1']
2024-07-01 16:52:48,392 - DEBUG - dispatch pc=200, inst=POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
2024-07-01 16:52:48,392 - DEBUG - stack ['$194compare_op.2']
2024-07-01 16:52:48,392 - DEBUG - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=270, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,392 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0)])
2024-07-01 16:52:48,392 - DEBUG - stack: []
2024-07-01 16:52:48,392 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-01 16:52:48,392 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=224)
2024-07-01 16:52:48,392 - DEBUG - stack []
2024-07-01 16:52:48,393 - DEBUG - dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=224)
2024-07-01 16:52:48,393 - DEBUG - stack ['$a102.0']
2024-07-01 16:52:48,393 - DEBUG - dispatch pc=106, inst=COMPARE_OP(arg=2, lineno=224)
2024-07-01 16:52:48,393 - DEBUG - stack ['$a102.0', '$const104.1']
2024-07-01 16:52:48,393 - DEBUG - dispatch pc=112, inst=POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
2024-07-01 16:52:48,393 - DEBUG - stack ['$106compare_op.2']
2024-07-01 16:52:48,393 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,393 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
2024-07-01 16:52:48,393 - DEBUG - stack: []
2024-07-01 16:52:48,393 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=0)
2024-07-01 16:52:48,393 - DEBUG - dispatch pc=180, inst=JUMP_FORWARD(arg=4, lineno=230)
2024-07-01 16:52:48,393 - DEBUG - stack []
2024-07-01 16:52:48,393 - DEBUG - end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,393 - DEBUG - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-01 16:52:48,393 - DEBUG - stack: []
2024-07-01 16:52:48,394 - DEBUG - state.pc_initial: State(pc_initial=202 nstack_initial=0)
2024-07-01 16:52:48,394 - DEBUG - dispatch pc=202, inst=LOAD_GLOBAL(arg=5, lineno=236)
2024-07-01 16:52:48,394 - DEBUG - stack []
2024-07-01 16:52:48,394 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=3, lineno=236)
2024-07-01 16:52:48,394 - DEBUG - stack ['$null$202.1', '$202load_global.0']
2024-07-01 16:52:48,394 - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=236)
2024-07-01 16:52:48,394 - DEBUG - stack ['$null$202.1', '$214load_attr.2']
2024-07-01 16:52:48,394 - DEBUG - dispatch pc=226, inst=LOAD_GLOBAL(arg=9, lineno=236)
2024-07-01 16:52:48,394 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3']
2024-07-01 16:52:48,394 - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=236)
2024-07-01 16:52:48,394 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4']
2024-07-01 16:52:48,394 - DEBUG - dispatch pc=240, inst=PRECALL(arg=1, lineno=236)
2024-07-01 16:52:48,394 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-07-01 16:52:48,395 - DEBUG - dispatch pc=244, inst=CALL(arg=1, lineno=236)
2024-07-01 16:52:48,395 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-07-01 16:52:48,395 - DEBUG - dispatch pc=254, inst=PRECALL(arg=2, lineno=236)
2024-07-01 16:52:48,395 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-07-01 16:52:48,395 - DEBUG - dispatch pc=258, inst=CALL(arg=2, lineno=236)
2024-07-01 16:52:48,395 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-07-01 16:52:48,395 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=236)
2024-07-01 16:52:48,395 - DEBUG - stack ['$258call.8']
2024-07-01 16:52:48,395 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,395 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-01 16:52:48,395 - DEBUG - stack: []
2024-07-01 16:52:48,395 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=0)
2024-07-01 16:52:48,395 - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=4, lineno=237)
2024-07-01 16:52:48,395 - DEBUG - stack []
2024-07-01 16:52:48,396 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=2, lineno=237)
2024-07-01 16:52:48,396 - DEBUG - stack ['$exp270.0']
2024-07-01 16:52:48,396 - DEBUG - dispatch pc=274, inst=COMPARE_OP(arg=3, lineno=237)
2024-07-01 16:52:48,396 - DEBUG - stack ['$exp270.0', '$const272.1']
2024-07-01 16:52:48,396 - DEBUG - dispatch pc=280, inst=POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
2024-07-01 16:52:48,396 - DEBUG - stack ['$274compare_op.2']
2024-07-01 16:52:48,396 - DEBUG - end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0), Edge(pc=334, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,396 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0)])
2024-07-01 16:52:48,397 - DEBUG - stack: []
2024-07-01 16:52:48,397 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2024-07-01 16:52:48,397 - DEBUG - dispatch pc=114, inst=LOAD_DEREF(arg=7, lineno=225)
2024-07-01 16:52:48,397 - DEBUG - stack []
2024-07-01 16:52:48,397 - DEBUG - dispatch pc=116, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
2024-07-01 16:52:48,397 - DEBUG - stack ['$114load_deref.0']
2024-07-01 16:52:48,397 - DEBUG - end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,397 - DEBUG - pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2024-07-01 16:52:48,397 - DEBUG - stack: []
2024-07-01 16:52:48,397 - DEBUG - state.pc_initial: State(pc_initial=152 nstack_initial=0)
2024-07-01 16:52:48,398 - DEBUG - dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=229)
2024-07-01 16:52:48,398 - DEBUG - stack []
2024-07-01 16:52:48,398 - DEBUG - dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=229)
2024-07-01 16:52:48,398 - DEBUG - stack ['$a152.0']
2024-07-01 16:52:48,398 - DEBUG - dispatch pc=156, inst=COMPARE_OP(arg=3, lineno=229)
2024-07-01 16:52:48,398 - DEBUG - stack ['$a152.0', '$const154.1']
2024-07-01 16:52:48,398 - DEBUG - dispatch pc=162, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
2024-07-01 16:52:48,398 - DEBUG - stack ['$156compare_op.2']
2024-07-01 16:52:48,398 - DEBUG - end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,398 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,398 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,399 - DEBUG - stack: []
2024-07-01 16:52:48,399 - DEBUG - state.pc_initial: State(pc_initial=282 nstack_initial=0)
2024-07-01 16:52:48,399 - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=238)
2024-07-01 16:52:48,399 - DEBUG - stack []
2024-07-01 16:52:48,399 - DEBUG - dispatch pc=284, inst=LOAD_CONST(arg=1, lineno=238)
2024-07-01 16:52:48,399 - DEBUG - stack ['$exp282.0']
2024-07-01 16:52:48,399 - DEBUG - dispatch pc=286, inst=BINARY_OP(arg=1, lineno=238)
2024-07-01 16:52:48,399 - DEBUG - stack ['$exp282.0', '$const284.1']
2024-07-01 16:52:48,399 - DEBUG - dispatch pc=290, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
2024-07-01 16:52:48,399 - DEBUG - stack ['$binop_and_286.2']
2024-07-01 16:52:48,399 - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,399 - DEBUG - pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-07-01 16:52:48,400 - DEBUG - stack: []
2024-07-01 16:52:48,400 - DEBUG - state.pc_initial: State(pc_initial=334 nstack_initial=0)
2024-07-01 16:52:48,400 - DEBUG - dispatch pc=334, inst=LOAD_FAST(arg=3, lineno=243)
2024-07-01 16:52:48,400 - DEBUG - stack []
2024-07-01 16:52:48,400 - DEBUG - dispatch pc=336, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
2024-07-01 16:52:48,400 - DEBUG - stack ['$invert334.0']
2024-07-01 16:52:48,400 - DEBUG - end state. edges=[Edge(pc=338, stack=(), blockstack=(), npush=0), Edge(pc=348, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,400 - DEBUG - pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-01 16:52:48,400 - DEBUG - stack: []
2024-07-01 16:52:48,400 - DEBUG - state.pc_initial: State(pc_initial=118 nstack_initial=0)
2024-07-01 16:52:48,400 - DEBUG - dispatch pc=118, inst=LOAD_DEREF(arg=7, lineno=226)
2024-07-01 16:52:48,401 - DEBUG - stack []
2024-07-01 16:52:48,401 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=226)
2024-07-01 16:52:48,401 - DEBUG - stack ['$118load_deref.0']
2024-07-01 16:52:48,401 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,401 - DEBUG - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-01 16:52:48,401 - DEBUG - stack: []
2024-07-01 16:52:48,401 - DEBUG - state.pc_initial: State(pc_initial=122 nstack_initial=0)
2024-07-01 16:52:48,401 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=3, lineno=228)
2024-07-01 16:52:48,401 - DEBUG - stack []
2024-07-01 16:52:48,401 - DEBUG - dispatch pc=134, inst=LOAD_CONST(arg=4, lineno=228)
2024-07-01 16:52:48,401 - DEBUG - stack ['$null$122.1', '$122load_global.0']
2024-07-01 16:52:48,401 - DEBUG - dispatch pc=136, inst=PRECALL(arg=1, lineno=228)
2024-07-01 16:52:48,401 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-07-01 16:52:48,402 - DEBUG - dispatch pc=140, inst=CALL(arg=1, lineno=228)
2024-07-01 16:52:48,402 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-07-01 16:52:48,402 - DEBUG - dispatch pc=150, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-07-01 16:52:48,402 - DEBUG - stack ['$140call.3']
2024-07-01 16:52:48,402 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,402 - DEBUG - pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-01 16:52:48,402 - DEBUG - stack: []
2024-07-01 16:52:48,402 - DEBUG - state.pc_initial: State(pc_initial=164 nstack_initial=0)
2024-07-01 16:52:48,402 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=229)
2024-07-01 16:52:48,402 - DEBUG - stack []
2024-07-01 16:52:48,402 - DEBUG - dispatch pc=166, inst=LOAD_CONST(arg=5, lineno=229)
2024-07-01 16:52:48,402 - DEBUG - stack ['$a164.0']
2024-07-01 16:52:48,402 - DEBUG - dispatch pc=168, inst=COMPARE_OP(arg=3, lineno=229)
2024-07-01 16:52:48,402 - DEBUG - stack ['$a164.0', '$const166.1']
2024-07-01 16:52:48,403 - DEBUG - dispatch pc=174, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
2024-07-01 16:52:48,403 - DEBUG - stack ['$168compare_op.2']
2024-07-01 16:52:48,403 - DEBUG - end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,403 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,403 - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,403 - DEBUG - stack: []
2024-07-01 16:52:48,403 - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2024-07-01 16:52:48,403 - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=239)
2024-07-01 16:52:48,403 - DEBUG - stack []
2024-07-01 16:52:48,403 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=0, lineno=239)
2024-07-01 16:52:48,403 - DEBUG - stack ['$r292.0']
2024-07-01 16:52:48,403 - DEBUG - dispatch pc=296, inst=BINARY_OP(arg=18, lineno=239)
2024-07-01 16:52:48,403 - DEBUG - stack ['$r292.0', '$a294.1']
2024-07-01 16:52:48,404 - DEBUG - dispatch pc=300, inst=STORE_FAST(arg=2, lineno=239)
2024-07-01 16:52:48,404 - DEBUG - stack ['$binop_imul296.2']
2024-07-01 16:52:48,404 - DEBUG - end state. edges=[Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,404 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-07-01 16:52:48,404 - DEBUG - stack: []
2024-07-01 16:52:48,404 - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2024-07-01 16:52:48,404 - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=4, lineno=240)
2024-07-01 16:52:48,404 - DEBUG - stack []
2024-07-01 16:52:48,404 - DEBUG - dispatch pc=304, inst=LOAD_CONST(arg=1, lineno=240)
2024-07-01 16:52:48,404 - DEBUG - stack ['$exp302.0']
2024-07-01 16:52:48,404 - DEBUG - dispatch pc=306, inst=BINARY_OP(arg=22, lineno=240)
2024-07-01 16:52:48,404 - DEBUG - stack ['$exp302.0', '$const304.1']
2024-07-01 16:52:48,404 - DEBUG - dispatch pc=310, inst=STORE_FAST(arg=4, lineno=240)
2024-07-01 16:52:48,405 - DEBUG - stack ['$binop_irshift306.2']
2024-07-01 16:52:48,405 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=0, lineno=241)
2024-07-01 16:52:48,405 - DEBUG - stack []
2024-07-01 16:52:48,405 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=0, lineno=241)
2024-07-01 16:52:48,405 - DEBUG - stack ['$a312.3']
2024-07-01 16:52:48,405 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=18, lineno=241)
2024-07-01 16:52:48,405 - DEBUG - stack ['$a312.3', '$a314.4']
2024-07-01 16:52:48,405 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=0, lineno=241)
2024-07-01 16:52:48,405 - DEBUG - stack ['$binop_imul316.5']
2024-07-01 16:52:48,405 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=4, lineno=237)
2024-07-01 16:52:48,405 - DEBUG - stack []
2024-07-01 16:52:48,405 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=2, lineno=237)
2024-07-01 16:52:48,405 - DEBUG - stack ['$exp322.6']
2024-07-01 16:52:48,406 - DEBUG - dispatch pc=326, inst=COMPARE_OP(arg=3, lineno=237)
2024-07-01 16:52:48,406 - DEBUG - stack ['$exp322.6', '$const324.7']
2024-07-01 16:52:48,406 - DEBUG - dispatch pc=332, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
2024-07-01 16:52:48,406 - DEBUG - stack ['$326compare_op.8']
2024-07-01 16:52:48,406 - DEBUG - end state. edges=[Edge(pc=334, stack=(), blockstack=(), npush=0), Edge(pc=282, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,406 - DEBUG - pending: deque([State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0)])
2024-07-01 16:52:48,406 - DEBUG - stack: []
2024-07-01 16:52:48,406 - DEBUG - state.pc_initial: State(pc_initial=338 nstack_initial=0)
2024-07-01 16:52:48,406 - DEBUG - dispatch pc=338, inst=LOAD_CONST(arg=8, lineno=243)
2024-07-01 16:52:48,406 - DEBUG - stack []
2024-07-01 16:52:48,406 - DEBUG - dispatch pc=340, inst=LOAD_FAST(arg=2, lineno=243)
2024-07-01 16:52:48,406 - DEBUG - stack ['$const338.0']
2024-07-01 16:52:48,406 - DEBUG - dispatch pc=342, inst=BINARY_OP(arg=11, lineno=243)
2024-07-01 16:52:48,406 - DEBUG - stack ['$const338.0', '$r340.1']
2024-07-01 16:52:48,407 - DEBUG - dispatch pc=346, inst=JUMP_FORWARD(arg=1, lineno=243)
2024-07-01 16:52:48,407 - DEBUG - stack ['$binop_truediv342.2']
2024-07-01 16:52:48,407 - DEBUG - end state. edges=[Edge(pc=350, stack=('$binop_truediv342.2',), blockstack=(), npush=0)]
2024-07-01 16:52:48,407 - DEBUG - pending: deque([State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,407 - DEBUG - stack: []
2024-07-01 16:52:48,407 - DEBUG - state.pc_initial: State(pc_initial=348 nstack_initial=0)
2024-07-01 16:52:48,407 - DEBUG - dispatch pc=348, inst=LOAD_FAST(arg=2, lineno=243)
2024-07-01 16:52:48,407 - DEBUG - stack []
2024-07-01 16:52:48,407 - DEBUG - end state. edges=[Edge(pc=350, stack=('$r348.0',), blockstack=(), npush=0)]
2024-07-01 16:52:48,407 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,407 - DEBUG - stack: []
2024-07-01 16:52:48,407 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=0)
2024-07-01 16:52:48,407 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=230)
2024-07-01 16:52:48,408 - DEBUG - stack []
2024-07-01 16:52:48,408 - DEBUG - dispatch pc=178, inst=RETURN_VALUE(arg=None, lineno=230)
2024-07-01 16:52:48,408 - DEBUG - stack ['$const176.0']
2024-07-01 16:52:48,408 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,408 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,408 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,408 - DEBUG - pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,408 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,408 - DEBUG - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,408 - DEBUG - stack: ['$phi350.0']
2024-07-01 16:52:48,408 - DEBUG - state.pc_initial: State(pc_initial=350 nstack_initial=1)
2024-07-01 16:52:48,408 - DEBUG - dispatch pc=350, inst=RETURN_VALUE(arg=None, lineno=243)
2024-07-01 16:52:48,408 - DEBUG - stack ['$phi350.0']
2024-07-01 16:52:48,408 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,408 - DEBUG - pending: deque([State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,409 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:48,409 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=270 nstack_initial=0): set(),
             State(pc_initial=282 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=334 nstack_initial=0): set(),
             State(pc_initial=338 nstack_initial=0): set(),
             State(pc_initial=348 nstack_initial=0): set(),
             State(pc_initial=350 nstack_initial=1): {'$phi350.0'}})
2024-07-01 16:52:48,409 - DEBUG - defmap: {'$phi350.0': State(pc_initial=348 nstack_initial=0)}
2024-07-01 16:52:48,409 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-07-01 16:52:48,410 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-07-01 16:52:48,410 - DEBUG - keep phismap: {'$phi350.0': {('$binop_truediv342.2', State(pc_initial=338 nstack_initial=0)),
               ('$r348.0', State(pc_initial=348 nstack_initial=0))}}
2024-07-01 16:52:48,410 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=338 nstack_initial=0): {'$phi350.0': '$binop_truediv342.2'},
             State(pc_initial=348 nstack_initial=0): {'$phi350.0': '$r348.0'}})
2024-07-01 16:52:48,411 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:48,411 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2'}), (12, {}), (14, {}), (16, {'func': '$8load_deref.1', 'args': ['$const10.2'], 'kw_names': None, 'res': '$16call.3'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'value': '$16call.3'}), (28, {}), (30, {'res': '$30load_deref.5'}), (32, {'res': '$a32.6'}), (34, {}), (36, {}), (38, {'func': '$30load_deref.5', 'args': ['$a32.6'], 'kw_names': None, 'res': '$38call.7'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.7'}), (50, {'res': '$b50.8'}), (52, {'res': '$const52.9'}), (54, {'lhs': '$b50.8', 'rhs': '$const52.9', 'res': '$54compare_op.10'}), (56, {}), (58, {}), (60, {'pred': '$54compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 182: ()})
2024-07-01 16:52:48,411 - DEBUG - block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0'}), (64, {'value': '$const62.0'}), (66, {'res': '$b66.1'}), (68, {'value': '$b66.1', 'res': '$68unary_negative.2'}), (70, {'value': '$68unary_negative.2'}), (72, {'res': '$exp72.3'}), (74, {'res': '$const74.4'}), (76, {'lhs': '$exp72.3', 'rhs': '$const74.4', 'res': '$76compare_op.5'}), (78, {}), (80, {}), (82, {'pred': '$76compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 98: ()})
2024-07-01 16:52:48,411 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'idx': 0, 'res': '$84load_global.0'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'exc': '$84load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,411 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'pred': '$98load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 180: ()})
2024-07-01 16:52:48,411 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$a102.0'}), (104, {'res': '$const104.1'}), (106, {'lhs': '$a102.0', 'rhs': '$const104.1', 'res': '$106compare_op.2'}), (108, {}), (110, {}), (112, {'pred': '$106compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 152: ()})
2024-07-01 16:52:48,411 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_deref.0'}), (116, {'pred': '$114load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: (), 122: ()})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$118load_deref.0'}), (120, {'retval': '$118load_deref.0', 'castval': '$120return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'idx': 1, 'res': '$122load_global.0'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'res': '$const134.2'}), (136, {}), (138, {}), (140, {'func': '$122load_global.0', 'args': ['$const134.2'], 'kw_names': None, 'res': '$140call.3'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'exc': '$140call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$a152.0'}), (154, {'res': '$const154.1'}), (156, {'lhs': '$a152.0', 'rhs': '$const154.1', 'res': '$156compare_op.2'}), (158, {}), (160, {}), (162, {'pred': '$156compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 180: ()})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'res': '$const166.1'}), (168, {'lhs': '$a164.0', 'rhs': '$const166.1', 'res': '$168compare_op.2'}), (170, {}), (172, {}), (174, {'pred': '$168compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 180: ()})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'retval': '$const176.0', 'castval': '$178return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'value': '$const182.0'}), (186, {'res': '$b186.1'}), (188, {'value': '$b186.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$exp190.0'}), (192, {'res': '$const192.1'}), (194, {'lhs': '$exp190.0', 'rhs': '$const192.1', 'res': '$194compare_op.2'}), (196, {}), (198, {}), (200, {'pred': '$194compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 270: ()})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'idx': 2, 'res': '$202load_global.0'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {'item': '$202load_global.0', 'res': '$214load_attr.2'}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {'res': '$a224.3'}), (226, {'idx': 4, 'res': '$226load_global.4'}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'res': '$b238.6'}), (240, {}), (242, {}), (244, {'func': '$226load_global.4', 'args': ['$b238.6'], 'kw_names': None, 'res': '$244call.7'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {'func': '$214load_attr.2', 'args': ['$a224.3', '$244call.7'], 'kw_names': None, 'res': '$258call.8'}), (260, {}), (262, {}), (264, {}), (266, {}), (268, {'retval': '$258call.8', 'castval': '$268return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=((270, {'res': '$exp270.0'}), (272, {'res': '$const272.1'}), (274, {'lhs': '$exp270.0', 'rhs': '$const272.1', 'res': '$274compare_op.2'}), (276, {}), (278, {}), (280, {'pred': '$274compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: (), 334: ()})
2024-07-01 16:52:48,412 - DEBUG - block_infos State(pc_initial=282 nstack_initial=0):
AdaptBlockInfo(insts=((282, {'res': '$exp282.0'}), (284, {'res': '$const284.1'}), (286, {'op': '&', 'lhs': '$exp282.0', 'rhs': '$const284.1', 'res': '$binop_and_286.2'}), (288, {}), (290, {'pred': '$binop_and_286.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2024-07-01 16:52:48,413 - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$r292.0'}), (294, {'res': '$a294.1'}), (296, {'op': '*=', 'lhs': '$r292.0', 'rhs': '$a294.1', 'res': '$binop_imul296.2'}), (298, {}), (300, {'value': '$binop_imul296.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ()})
2024-07-01 16:52:48,413 - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$exp302.0'}), (304, {'res': '$const304.1'}), (306, {'op': '>>=', 'lhs': '$exp302.0', 'rhs': '$const304.1', 'res': '$binop_irshift306.2'}), (308, {}), (310, {'value': '$binop_irshift306.2'}), (312, {'res': '$a312.3'}), (314, {'res': '$a314.4'}), (316, {'op': '*=', 'lhs': '$a312.3', 'rhs': '$a314.4', 'res': '$binop_imul316.5'}), (318, {}), (320, {'value': '$binop_imul316.5'}), (322, {'res': '$exp322.6'}), (324, {'res': '$const324.7'}), (326, {'lhs': '$exp322.6', 'rhs': '$const324.7', 'res': '$326compare_op.8'}), (328, {}), (330, {}), (332, {'pred': '$326compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: (), 282: ()})
2024-07-01 16:52:48,413 - DEBUG - block_infos State(pc_initial=334 nstack_initial=0):
AdaptBlockInfo(insts=((334, {'res': '$invert334.0'}), (336, {'pred': '$invert334.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={338: (), 348: ()})
2024-07-01 16:52:48,413 - DEBUG - block_infos State(pc_initial=338 nstack_initial=0):
AdaptBlockInfo(insts=((338, {'res': '$const338.0'}), (340, {'res': '$r340.1'}), (342, {'op': '/', 'lhs': '$const338.0', 'rhs': '$r340.1', 'res': '$binop_truediv342.2'}), (344, {}), (346, {})), outgoing_phis={'$phi350.0': '$binop_truediv342.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$binop_truediv342.2',)})
2024-07-01 16:52:48,413 - DEBUG - block_infos State(pc_initial=348 nstack_initial=0):
AdaptBlockInfo(insts=((348, {'res': '$r348.0'}),), outgoing_phis={'$phi350.0': '$r348.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$r348.0',)})
2024-07-01 16:52:48,413 - DEBUG - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'retval': '$phi350.0', 'castval': '$350return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,416 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float32)    ['$8load_deref.1']
    $const10.2 = const(int, 1)               ['$const10.2']
    r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2', 'r']
    $30load_deref.5 = freevar(tp: float32)   ['$30load_deref.5']
    a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_deref.5', 'a', 'a.1']
    $const52.9 = const(int, 0)               ['$const52.9']
    $54compare_op.10 = b < $const52.9        ['$54compare_op.10', '$const52.9', 'b']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.10', '$60pred', 'bool60']
    branch $60pred, 62, 182                  ['$60pred']
label 62:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const74.4 = const(int, 0)               ['$const74.4']
    $76compare_op.5 = exp < $const74.4       ['$76compare_op.5', '$const74.4', 'exp']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$76compare_op.5', '$82pred', 'bool82']
    branch $82pred, 84, 98                   ['$82pred']
label 84:
    $84load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$84load_global.0']
    raise $84load_global.0                   ['$84load_global.0']
label 98:
    $98load_deref.0 = freevar(is_integer: False) ['$98load_deref.0']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98load_deref.0', 'bool100']
    branch $100pred, 102, 180                ['$100pred']
label 102:
    $const104.1 = const(int, 0)              ['$const104.1']
    $106compare_op.2 = a.1 == $const104.1    ['$106compare_op.2', '$const104.1', 'a.1']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106compare_op.2, func=bool112, args=(Var($106compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$106compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 152                ['$112pred']
label 114:
    $114load_deref.0 = freevar(zerodiv_return: False) ['$114load_deref.0']
    bool116 = global(bool: <class 'bool'>)   ['bool116']
    $116pred = call bool116($114load_deref.0, func=bool116, args=(Var($114load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$114load_deref.0', '$116pred', 'bool116']
    branch $116pred, 118, 122                ['$116pred']
label 118:
    $118load_deref.0 = freevar(zerodiv_return: False) ['$118load_deref.0']
    $120return_value.1 = cast(value=$118load_deref.0) ['$118load_deref.0', '$120return_value.1']
    return $120return_value.1                ['$120return_value.1']
label 122:
    $122load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$122load_global.0']
    $const134.2 = const(str, 0 cannot be raised to a negative power) ['$const134.2']
    $140call.3 = call $122load_global.0($const134.2, func=$122load_global.0, args=[Var($const134.2, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.0', '$140call.3', '$const134.2']
    raise $140call.3                         ['$140call.3']
label 152:
    $const154.1 = const(int, 1)              ['$const154.1']
    $156compare_op.2 = a.1 != $const154.1    ['$156compare_op.2', '$const154.1', 'a.1']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($156compare_op.2, func=bool162, args=(Var($156compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$156compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 180                ['$162pred']
label 164:
    $const166.1 = const(int, -1)             ['$const166.1']
    $168compare_op.2 = a.1 != $const166.1    ['$168compare_op.2', '$const166.1', 'a.1']
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174($168compare_op.2, func=bool174, args=(Var($168compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.2', '$174pred', 'bool174']
    branch $174pred, 176, 180                ['$174pred']
label 176:
    $const176.0 = const(int, 0)              ['$const176.0']
    $178return_value.1 = cast(value=$const176.0) ['$178return_value.1', '$const176.0']
    return $178return_value.1                ['$178return_value.1']
label 180:
    jump 190                                 []
label 182:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 190                                 []
label 190:
    $const192.1 = const(int, 65536)          ['$const192.1']
    $194compare_op.2 = exp > $const192.1     ['$194compare_op.2', '$const192.1', 'exp']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$194compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 270                ['$200pred']
label 202:
    $202load_global.0 = global(math: <module 'math' (built-in)>) ['$202load_global.0']
    $214load_attr.2 = getattr(value=$202load_global.0, attr=pow) ['$202load_global.0', '$214load_attr.2']
    $226load_global.4 = global(float: <class 'float'>) ['$226load_global.4']
    $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_global.4', '$244call.7', 'b']
    $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.2', '$244call.7', '$258call.8', 'a.1']
    $268return_value.9 = cast(value=$258call.8) ['$258call.8', '$268return_value.9']
    return $268return_value.9                ['$268return_value.9']
label 270:
    $const272.1 = const(int, 0)              ['$const272.1']
    $274compare_op.2 = exp != $const272.1    ['$274compare_op.2', '$const272.1', 'exp']
    bool280 = global(bool: <class 'bool'>)   ['bool280']
    $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$274compare_op.2', '$280pred', 'bool280']
    branch $280pred, 282, 334                ['$280pred']
label 282:
    $const284.1 = const(int, 1)              ['$const284.1']
    $binop_and_286.2 = exp & $const284.1     ['$binop_and_286.2', '$const284.1', 'exp']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', '$binop_and_286.2', 'bool290']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul296.2', 'a.1', 'r']
    r = $binop_imul296.2                     ['$binop_imul296.2', 'r']
    jump 302                                 []
label 302:
    $const304.1 = const(int, 1)              ['$const304.1']
    $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift306.2', '$const304.1', 'exp']
    exp = $binop_irshift306.2                ['$binop_irshift306.2', 'exp']
    $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul316.5', 'a.1', 'a.1']
    a.1 = $binop_imul316.5                   ['$binop_imul316.5', 'a.1']
    $const324.7 = const(int, 0)              ['$const324.7']
    $326compare_op.8 = exp != $const324.7    ['$326compare_op.8', '$const324.7', 'exp']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$326compare_op.8', '$332pred', 'bool332']
    branch $332pred, 282, 334                ['$332pred']
label 334:
    bool336 = global(bool: <class 'bool'>)   ['bool336']
    $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$336pred', 'bool336', 'invert']
    branch $336pred, 338, 348                ['$336pred']
label 338:
    $const338.0 = const(float, 1.0)          ['$const338.0']
    $binop_truediv342.2 = $const338.0 / r    ['$binop_truediv342.2', '$const338.0', 'r']
    $phi350.0 = $binop_truediv342.2          ['$binop_truediv342.2', '$phi350.0']
    jump 350                                 []
label 348:
    $phi350.0 = r                            ['$phi350.0', 'r']
    jump 350                                 []
label 350:
    $350return_value.1 = cast(value=$phi350.0) ['$350return_value.1', '$phi350.0']
    return $350return_value.1                ['$350return_value.1']

2024-07-01 16:52:48,430 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:48,431 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,431 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,431 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,431 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,431 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,431 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,431 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,431 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,431 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,431 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,431 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,431 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,432 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,432 - DEBUG - ==== SSA block analysis pass on 62
2024-07-01 16:52:48,432 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,432 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,432 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,432 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,432 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,432 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,432 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,432 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,432 - DEBUG - ==== SSA block analysis pass on 84
2024-07-01 16:52:48,432 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,432 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,433 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,433 - DEBUG - ==== SSA block analysis pass on 98
2024-07-01 16:52:48,433 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,433 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,433 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,433 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,433 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,433 - DEBUG - ==== SSA block analysis pass on 180
2024-07-01 16:52:48,433 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,433 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,433 - DEBUG - ==== SSA block analysis pass on 182
2024-07-01 16:52:48,433 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,433 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,433 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,434 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,434 - DEBUG - ==== SSA block analysis pass on 190
2024-07-01 16:52:48,434 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,434 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,434 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,434 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,434 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,434 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,434 - DEBUG - ==== SSA block analysis pass on 202
2024-07-01 16:52:48,434 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,434 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,434 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,434 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,435 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,435 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,435 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,435 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,435 - DEBUG - ==== SSA block analysis pass on 270
2024-07-01 16:52:48,435 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,435 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,435 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,435 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,435 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,435 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,435 - DEBUG - ==== SSA block analysis pass on 282
2024-07-01 16:52:48,435 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,436 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,436 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,436 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,436 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,436 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,436 - DEBUG - ==== SSA block analysis pass on 292
2024-07-01 16:52:48,436 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,436 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,436 - DEBUG - on stmt: r = $binop_imul296.2
2024-07-01 16:52:48,436 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,436 - DEBUG - ==== SSA block analysis pass on 302
2024-07-01 16:52:48,436 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,436 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,436 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,437 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,437 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,437 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-07-01 16:52:48,437 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,437 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,437 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,437 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,437 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,437 - DEBUG - ==== SSA block analysis pass on 334
2024-07-01 16:52:48,437 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,437 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,437 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,437 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,438 - DEBUG - ==== SSA block analysis pass on 338
2024-07-01 16:52:48,438 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,438 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,438 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-01 16:52:48,438 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,438 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,438 - DEBUG - ==== SSA block analysis pass on 348
2024-07-01 16:52:48,438 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,438 - DEBUG - on stmt: $phi350.0 = r
2024-07-01 16:52:48,438 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,438 - DEBUG - ==== SSA block analysis pass on 350
2024-07-01 16:52:48,438 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c6672ed90>
2024-07-01 16:52:48,438 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,438 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,440 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x7f1c6632dd10>,
                           98)],
             '$194compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c66271f50>,
                                   190)],
             '$200pred': [(<numba.core.ir.Assign object at 0x7f1c66272250>,
                           190)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x7f1c66272550>,
                                    202)],
             '$214load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c66272810>,
                                  202)],
             '$226load_global.4': [(<numba.core.ir.Assign object at 0x7f1c66272e50>,
                                    202)],
             '$244call.7': [(<numba.core.ir.Assign object at 0x7f1c662711d0>,
                             202)],
             '$258call.8': [(<numba.core.ir.Assign object at 0x7f1c66270a10>,
                             202)],
             '$268return_value.9': [(<numba.core.ir.Assign object at 0x7f1c66270910>,
                                     202)],
             '$274compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c66270390>,
                                   270)],
             '$280pred': [(<numba.core.ir.Assign object at 0x7f1c662780d0>,
                           270)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7f1c66278b10>,
                           282)],
             '$30load_deref.5': [(<numba.core.ir.Assign object at 0x7f1c662a5990>,
                                  0)],
             '$326compare_op.8': [(<numba.core.ir.Assign object at 0x7f1c6627a510>,
                                   302)],
             '$332pred': [(<numba.core.ir.Assign object at 0x7f1c6627a910>,
                           302)],
             '$336pred': [(<numba.core.ir.Assign object at 0x7f1c6627ae50>,
                           334)],
             '$350return_value.1': [(<numba.core.ir.Assign object at 0x7f1c6627bb90>,
                                     350)],
             '$54compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c6632c190>,
                                   0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x7f1c6632c490>, 0)],
             '$76compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c6632d150>,
                                  62)],
             '$82pred': [(<numba.core.ir.Assign object at 0x7f1c6632d490>, 62)],
             '$84load_global.0': [(<numba.core.ir.Assign object at 0x7f1c6632d690>,
                                   84)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x7f1c66641b50>,
                                 0)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x7f1c6632da10>,
                                  98)],
             '$binop_and_286.2': [(<numba.core.ir.Assign object at 0x7f1c66278750>,
                                   282)],
             '$binop_imul296.2': [(<numba.core.ir.Assign object at 0x7f1c66279110>,
                                   292)],
             '$binop_imul316.5': [(<numba.core.ir.Assign object at 0x7f1c66279ed0>,
                                   302)],
             '$binop_irshift306.2': [(<numba.core.ir.Assign object at 0x7f1c662797d0>,
                                      302)],
             '$binop_truediv342.2': [(<numba.core.ir.Assign object at 0x7f1c6627b450>,
                                      338)],
             '$const10.2': [(<numba.core.ir.Assign object at 0x7f1c666433d0>,
                             0)],
             '$const192.1': [(<numba.core.ir.Assign object at 0x7f1c66271cd0>,
                              190)],
             '$const272.1': [(<numba.core.ir.Assign object at 0x7f1c66270110>,
                              270)],
             '$const284.1': [(<numba.core.ir.Assign object at 0x7f1c66278550>,
                              282)],
             '$const304.1': [(<numba.core.ir.Assign object at 0x7f1c662795d0>,
                              302)],
             '$const324.7': [(<numba.core.ir.Assign object at 0x7f1c6627a310>,
                              302)],
             '$const338.0': [(<numba.core.ir.Assign object at 0x7f1c6627b090>,
                              338)],
             '$const52.9': [(<numba.core.ir.Assign object at 0x7f1c662a7fd0>,
                             0)],
             '$const74.4': [(<numba.core.ir.Assign object at 0x7f1c6632cf90>,
                             62)],
             '$phi350.0': [(<numba.core.ir.Assign object at 0x7f1c6627b250>,
                            338),
                           (<numba.core.ir.Assign object at 0x7f1c6627b850>,
                            348)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c66640090>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7f1c662a4750>, 0),
                     (<numba.core.ir.Assign object at 0x7f1c66279f50>, 302)],
             'b': [(<numba.core.ir.Assign object at 0x7f1c66642390>, 0)],
             'bool100': [(<numba.core.ir.Assign object at 0x7f1c6632dbd0>, 98)],
             'bool200': [(<numba.core.ir.Assign object at 0x7f1c662722d0>,
                          190)],
             'bool280': [(<numba.core.ir.Assign object at 0x7f1c66270610>,
                          270)],
             'bool290': [(<numba.core.ir.Assign object at 0x7f1c66278950>,
                          282)],
             'bool332': [(<numba.core.ir.Assign object at 0x7f1c6627a750>,
                          302)],
             'bool336': [(<numba.core.ir.Assign object at 0x7f1c6627ac90>,
                          334)],
             'bool60': [(<numba.core.ir.Assign object at 0x7f1c6632c350>, 0)],
             'bool82': [(<numba.core.ir.Assign object at 0x7f1c6632d390>, 62)],
             'exp': [(<numba.core.ir.Assign object at 0x7f1c6632ca90>, 62),
                     (<numba.core.ir.Assign object at 0x7f1c66271a50>, 182),
                     (<numba.core.ir.Assign object at 0x7f1c66279850>, 302)],
             'invert': [(<numba.core.ir.Assign object at 0x7f1c6632c650>, 62),
                        (<numba.core.ir.Assign object at 0x7f1c66273610>, 182)],
             'r': [(<numba.core.ir.Assign object at 0x7f1c6665fe50>, 0),
                   (<numba.core.ir.Assign object at 0x7f1c66279190>, 292)]})
2024-07-01 16:52:48,440 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c6632dd90>
2024-07-01 16:52:48,440 - DEBUG - Fix SSA violator on var r
2024-07-01 16:52:48,440 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,440 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,440 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,440 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,440 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,440 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,440 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,441 - DEBUG - first assign: r
2024-07-01 16:52:48,441 - DEBUG - replaced with: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,441 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,441 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,441 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,441 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,441 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,441 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,441 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,441 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,441 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,441 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,441 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,441 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,442 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,442 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,442 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,442 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,442 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,442 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,442 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,442 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,442 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,442 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,442 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,442 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,443 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,443 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,443 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,443 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,443 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,443 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,443 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,443 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,443 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,443 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,443 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,443 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,443 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,443 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,443 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,444 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,444 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,444 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,444 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,444 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,444 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,444 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,444 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,444 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,444 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,444 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,444 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,444 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,444 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,445 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,445 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,445 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,445 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,445 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,445 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,445 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,445 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,445 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,445 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,446 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,446 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,446 - DEBUG - on stmt: r = $binop_imul296.2
2024-07-01 16:52:48,446 - DEBUG - replaced with: r.1 = $binop_imul296.2
2024-07-01 16:52:48,446 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,446 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,446 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,446 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,446 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,446 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,446 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,446 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-07-01 16:52:48,446 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,447 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,447 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,447 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,447 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,447 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,447 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,447 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,447 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,447 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,447 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,447 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,447 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,447 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-01 16:52:48,447 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,448 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,448 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,448 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,448 - DEBUG - on stmt: $phi350.0 = r
2024-07-01 16:52:48,448 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,448 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,448 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6672ecd0>
2024-07-01 16:52:48,448 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,448 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,448 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c6632d250>],
             292: [<numba.core.ir.Assign object at 0x7f1c66278290>]})
2024-07-01 16:52:48,448 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,448 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,448 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,448 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,449 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,449 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,449 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,449 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,449 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,449 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,449 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,449 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,449 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,449 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,449 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,449 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,449 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,450 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,450 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,450 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,450 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,450 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,450 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,450 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,450 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,450 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,450 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,450 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,450 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,450 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,450 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,451 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,451 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,451 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,451 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,451 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,451 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,451 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,451 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,451 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,451 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,451 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,451 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,451 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,451 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,452 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,452 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,452 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,452 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,452 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,452 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,452 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,452 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,452 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,452 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,452 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,452 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,452 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,453 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,453 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,453 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,453 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,453 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,453 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,453 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,453 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,453 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,453 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,453 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,453 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,453 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,454 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,454 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,454 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,454 - DEBUG - find_def var='r' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,454 - DEBUG - find_def_from_top label 292
2024-07-01 16:52:48,454 - DEBUG - idom 282 from label 292
2024-07-01 16:52:48,454 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,454 - DEBUG - find_def_from_top label 282
2024-07-01 16:52:48,454 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-01 16:52:48,454 - DEBUG - find_def_from_bottom label 302
2024-07-01 16:52:48,454 - DEBUG - find_def_from_top label 302
2024-07-01 16:52:48,454 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 302
2024-07-01 16:52:48,454 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,454 - DEBUG - incoming_def r.2 = phi(incoming_values=[], incoming_blocks=[])
2024-07-01 16:52:48,455 - DEBUG - find_def_from_bottom label 292
2024-07-01 16:52:48,455 - DEBUG - incoming_def r.1 = $binop_imul296.2
2024-07-01 16:52:48,455 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,455 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,455 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,455 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,455 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,455 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,455 - DEBUG - idom 0 from label 190
2024-07-01 16:52:48,455 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:48,455 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,455 - DEBUG - replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,455 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,456 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,456 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,456 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,456 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,456 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,456 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,456 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,456 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-07-01 16:52:48,456 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,456 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,456 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,456 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,457 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,457 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,457 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,457 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,457 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,457 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,457 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,457 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,457 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,457 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-01 16:52:48,457 - DEBUG - find_def var='r' stmt=$binop_truediv342.2 = $const338.0 / r
2024-07-01 16:52:48,457 - DEBUG - find_def_from_top label 338
2024-07-01 16:52:48,458 - DEBUG - idom 334 from label 338
2024-07-01 16:52:48,458 - DEBUG - find_def_from_bottom label 334
2024-07-01 16:52:48,458 - DEBUG - find_def_from_top label 334
2024-07-01 16:52:48,458 - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 334
2024-07-01 16:52:48,458 - DEBUG - find_def_from_bottom label 302
2024-07-01 16:52:48,458 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,458 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,458 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,458 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,458 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,458 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,458 - DEBUG - idom 0 from label 190
2024-07-01 16:52:48,458 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:48,458 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,459 - DEBUG - replaced with: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,459 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,459 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,459 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,459 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,459 - DEBUG - on stmt: $phi350.0 = r
2024-07-01 16:52:48,459 - DEBUG - find_def var='r' stmt=$phi350.0 = r
2024-07-01 16:52:48,459 - DEBUG - find_def_from_top label 348
2024-07-01 16:52:48,459 - DEBUG - idom 334 from label 348
2024-07-01 16:52:48,459 - DEBUG - find_def_from_bottom label 334
2024-07-01 16:52:48,459 - DEBUG - replaced with: $phi350.0 = r.4
2024-07-01 16:52:48,459 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,459 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,459 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c6672ed90>
2024-07-01 16:52:48,460 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,460 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,460 - DEBUG - Fix SSA violator on var a.1
2024-07-01 16:52:48,460 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,460 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,460 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,460 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,460 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,460 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,460 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,460 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,460 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,460 - DEBUG - first assign: a.1
2024-07-01 16:52:48,461 - DEBUG - replaced with: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,461 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,461 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,461 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,461 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,461 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,461 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,461 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,461 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,461 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,461 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,461 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,461 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,462 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,462 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,462 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,462 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,462 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,462 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,462 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,462 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,462 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,462 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,462 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,462 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,462 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,462 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,463 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,463 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,463 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,463 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,463 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,463 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,463 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,463 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,463 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,463 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,463 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,463 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,463 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,463 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,463 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,464 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,464 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,464 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,464 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,464 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,464 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,464 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,464 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,464 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,464 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,464 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,464 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,464 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,465 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,465 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,465 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,465 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,465 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,465 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,465 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,465 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,465 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,465 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,465 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,465 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,465 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,465 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,466 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,466 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,466 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,466 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,466 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,466 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,466 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,466 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-07-01 16:52:48,466 - DEBUG - replaced with: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,466 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,466 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,466 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,466 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,467 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,467 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,467 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,467 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,467 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,467 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,467 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,467 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,467 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,467 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,467 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,468 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,468 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,468 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,468 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,468 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,468 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279350>
2024-07-01 16:52:48,468 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,468 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,468 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c66278cd0>],
             302: [<numba.core.ir.Assign object at 0x7f1c662f1210>]})
2024-07-01 16:52:48,468 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,468 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,468 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,468 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,468 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,468 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,469 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,469 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,469 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,469 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,469 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,469 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,469 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,469 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,469 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,469 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,469 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,469 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,469 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,470 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,470 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,470 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,470 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,470 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,470 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,470 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,470 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,470 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,470 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,470 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,470 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,470 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,470 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,471 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,471 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,471 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,471 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,471 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,471 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,471 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,471 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,471 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,471 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,471 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,471 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,471 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,471 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,471 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,471 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,472 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,472 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,472 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,472 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,472 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,472 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,472 - DEBUG - find_def var='a.1' stmt=$258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,472 - DEBUG - find_def_from_top label 202
2024-07-01 16:52:48,472 - DEBUG - idom 190 from label 202
2024-07-01 16:52:48,472 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,472 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,472 - DEBUG - idom 0 from label 190
2024-07-01 16:52:48,472 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:48,472 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,473 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,473 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,473 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,473 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,473 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,473 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,473 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,473 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,473 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,473 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,473 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,473 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,473 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,474 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,474 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,474 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,474 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,474 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,474 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,474 - DEBUG - find_def var='a.1' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,474 - DEBUG - find_def_from_top label 292
2024-07-01 16:52:48,474 - DEBUG - idom 282 from label 292
2024-07-01 16:52:48,474 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,474 - DEBUG - find_def_from_top label 282
2024-07-01 16:52:48,474 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-01 16:52:48,474 - DEBUG - find_def_from_bottom label 302
2024-07-01 16:52:48,474 - DEBUG - incoming_def a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,475 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,475 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,475 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,475 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,475 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,475 - DEBUG - idom 0 from label 190
2024-07-01 16:52:48,475 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:48,475 - DEBUG - incoming_def a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,475 - DEBUG - replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,475 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,475 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,475 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,475 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,475 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,476 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,476 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,476 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,476 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,476 - DEBUG - find_def var='a.1' stmt=$binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,476 - DEBUG - find_def_from_top label 302
2024-07-01 16:52:48,476 - DEBUG - idom 282 from label 302
2024-07-01 16:52:48,476 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,476 - DEBUG - replaced with: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,476 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,476 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,476 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,476 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,476 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,477 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,477 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,477 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,477 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,477 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,477 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,477 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,477 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,477 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,477 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,477 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,477 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,477 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,478 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,478 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,478 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,478 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,478 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,478 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6150>
2024-07-01 16:52:48,478 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,478 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,478 - DEBUG - Fix SSA violator on var invert
2024-07-01 16:52:48,478 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,478 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,478 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,478 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,478 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,478 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,479 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,479 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,479 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,479 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,479 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,479 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,479 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,479 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,479 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,479 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,479 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,479 - DEBUG - first assign: invert
2024-07-01 16:52:48,479 - DEBUG - replaced with: invert = const(bool, True)
2024-07-01 16:52:48,479 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,480 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,480 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,480 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,480 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,480 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,480 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,480 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,480 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,480 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,480 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,480 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,480 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,480 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,480 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,481 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,481 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,481 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,481 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,481 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,481 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,481 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,481 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-07-01 16:52:48,481 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,481 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,481 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,481 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,481 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,481 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,481 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,482 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,482 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,482 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,482 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,482 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,482 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,482 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,482 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,482 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,482 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,482 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,482 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,482 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,483 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,483 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,483 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,483 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,483 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,483 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,483 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,483 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,483 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,483 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,483 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,483 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,483 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,483 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,484 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,484 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,484 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,484 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,484 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,484 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,484 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,484 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,484 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,484 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,484 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,484 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,484 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,484 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,484 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,485 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,485 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,485 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,485 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,485 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,485 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,485 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,485 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,485 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,485 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,485 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,485 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,485 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,485 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,486 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,486 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,486 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,486 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,486 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,486 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,486 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a4190>
2024-07-01 16:52:48,486 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,486 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,486 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x7f1c662a7cd0>],
             182: [<numba.core.ir.Assign object at 0x7f1c6632d050>]})
2024-07-01 16:52:48,486 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,486 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,486 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,486 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,487 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,487 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,487 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,487 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,487 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,487 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,487 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,487 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,487 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,487 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,487 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,487 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,487 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,487 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,488 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,488 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,488 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,488 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,488 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,488 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,488 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,488 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,488 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,488 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,488 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,488 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,488 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,488 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,488 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,489 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,489 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,489 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,489 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,489 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,489 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,489 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,489 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,489 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,489 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,489 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,489 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,489 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,489 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,489 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,490 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,490 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,490 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,490 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,490 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,490 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,490 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,490 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,490 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,490 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,490 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,490 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,490 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,490 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,491 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,491 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,491 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,491 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,491 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,491 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,491 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,491 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,491 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,491 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,491 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,491 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,491 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,491 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,492 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,492 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,492 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,492 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,492 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,492 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,492 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,492 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,492 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,492 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,492 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,492 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,492 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,492 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,493 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,493 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,493 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,493 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,493 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,493 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,493 - DEBUG - find_def var='invert' stmt=$336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,493 - DEBUG - find_def_from_top label 334
2024-07-01 16:52:48,493 - DEBUG - idom 270 from label 334
2024-07-01 16:52:48,493 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,493 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,494 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,494 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,494 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,494 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-07-01 16:52:48,494 - DEBUG - find_def_from_bottom label 180
2024-07-01 16:52:48,494 - DEBUG - find_def_from_top label 180
2024-07-01 16:52:48,494 - DEBUG - idom 98 from label 180
2024-07-01 16:52:48,494 - DEBUG - find_def_from_bottom label 98
2024-07-01 16:52:48,494 - DEBUG - find_def_from_top label 98
2024-07-01 16:52:48,494 - DEBUG - idom 62 from label 98
2024-07-01 16:52:48,494 - DEBUG - find_def_from_bottom label 62
2024-07-01 16:52:48,494 - DEBUG - incoming_def invert = const(bool, True)
2024-07-01 16:52:48,495 - DEBUG - find_def_from_bottom label 182
2024-07-01 16:52:48,495 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-07-01 16:52:48,495 - DEBUG - replaced with: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,495 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,495 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,495 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,495 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,495 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,495 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,495 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,495 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,495 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,495 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,496 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,496 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,496 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a5650>
2024-07-01 16:52:48,496 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,496 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,496 - DEBUG - Fix SSA violator on var exp
2024-07-01 16:52:48,496 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,496 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,496 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,496 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,496 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,496 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,496 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,496 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,497 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,497 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,497 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,497 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,497 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,497 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,497 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,497 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,497 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,497 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,497 - DEBUG - first assign: exp
2024-07-01 16:52:48,497 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,497 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,497 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,498 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,498 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,498 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,498 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,498 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,498 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,498 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,498 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,498 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,498 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,498 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,498 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,498 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,498 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,498 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,499 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,499 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,499 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,499 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,499 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,499 - DEBUG - replaced with: exp.1 = b
2024-07-01 16:52:48,499 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,499 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,499 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,499 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,499 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,499 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,499 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,499 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,500 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,500 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,500 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,500 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,500 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,500 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,500 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,500 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,500 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,500 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,500 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,500 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,500 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,500 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,501 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,501 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,501 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,501 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,501 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,501 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,501 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,501 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,501 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,501 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,501 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,501 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,501 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,501 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,502 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,502 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,502 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,502 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,502 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,502 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,502 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,502 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,502 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,502 - DEBUG - replaced with: exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,502 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,502 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,502 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,502 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,503 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,503 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,503 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,503 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,503 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,503 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,503 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,503 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,503 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,503 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,503 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,503 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,503 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,503 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,503 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,504 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,504 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,504 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,504 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,504 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,504 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66279f90>
2024-07-01 16:52:48,504 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,504 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,504 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x7f1c6632c250>],
             182: [<numba.core.ir.Assign object at 0x7f1c662f2890>],
             302: [<numba.core.ir.Assign object at 0x7f1c662f2ed0>]})
2024-07-01 16:52:48,504 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,504 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,505 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,505 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,505 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,505 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,505 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,505 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,505 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,505 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,505 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,505 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,505 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,505 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,505 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,505 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,506 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,506 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,506 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,506 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,506 - DEBUG - find_def var='exp' stmt=$76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,506 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,506 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,506 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,506 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,506 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,506 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,506 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,506 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,507 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,507 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,507 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,507 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,507 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,507 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,507 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,507 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,507 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,507 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,507 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,507 - DEBUG - on stmt: exp.1 = b
2024-07-01 16:52:48,508 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,508 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,508 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,508 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,508 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,510 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,510 - DEBUG - find_def var='exp' stmt=$194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,510 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,510 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-07-01 16:52:48,511 - DEBUG - find_def_from_bottom label 180
2024-07-01 16:52:48,511 - DEBUG - find_def_from_top label 180
2024-07-01 16:52:48,511 - DEBUG - idom 98 from label 180
2024-07-01 16:52:48,511 - DEBUG - find_def_from_bottom label 98
2024-07-01 16:52:48,511 - DEBUG - find_def_from_top label 98
2024-07-01 16:52:48,511 - DEBUG - idom 62 from label 98
2024-07-01 16:52:48,511 - DEBUG - find_def_from_bottom label 62
2024-07-01 16:52:48,511 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,511 - DEBUG - find_def_from_bottom label 182
2024-07-01 16:52:48,511 - DEBUG - incoming_def exp.1 = b
2024-07-01 16:52:48,511 - DEBUG - replaced with: $194compare_op.2 = exp.3 > $const192.1
2024-07-01 16:52:48,512 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,512 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,512 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,512 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,512 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,512 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,512 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,512 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,512 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,512 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,513 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,513 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,513 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,513 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,513 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,513 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,513 - DEBUG - find_def var='exp' stmt=$274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,513 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,513 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,513 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,513 - DEBUG - replaced with: $274compare_op.2 = exp.3 != $const272.1
2024-07-01 16:52:48,513 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,513 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,513 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,514 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,514 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,514 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,514 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,514 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,514 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,514 - DEBUG - find_def var='exp' stmt=$binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,514 - DEBUG - find_def_from_top label 282
2024-07-01 16:52:48,514 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-01 16:52:48,514 - DEBUG - find_def_from_bottom label 302
2024-07-01 16:52:48,515 - DEBUG - incoming_def exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,515 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,515 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,515 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,515 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,515 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,515 - DEBUG - replaced with: $binop_and_286.2 = exp.4 & $const284.1
2024-07-01 16:52:48,515 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,515 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,515 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,515 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,515 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,515 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,516 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,516 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,516 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,516 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,516 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,516 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,516 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,516 - DEBUG - find_def var='exp' stmt=$binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,516 - DEBUG - find_def_from_top label 302
2024-07-01 16:52:48,516 - DEBUG - idom 282 from label 302
2024-07-01 16:52:48,516 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,517 - DEBUG - replaced with: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,517 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,517 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,517 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,517 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,517 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,517 - DEBUG - find_def var='exp' stmt=$326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,517 - DEBUG - replaced with: $326compare_op.8 = exp.2 != $const324.7
2024-07-01 16:52:48,517 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,517 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,517 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,517 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,518 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,518 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,518 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,518 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,518 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,518 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,518 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,518 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,518 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,518 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,518 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,518 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,519 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,519 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,519 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,519 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,519 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a4190>
2024-07-01 16:52:48,519 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,519 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,519 - DEBUG - Fix SSA violator on var $phi350.0
2024-07-01 16:52:48,519 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,519 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,519 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,519 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,520 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,520 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,520 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,520 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,520 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,520 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,520 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,520 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,520 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,520 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,521 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,521 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,521 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,521 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,521 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,521 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,521 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,521 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,521 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,521 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,521 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,521 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,522 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,522 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,522 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,522 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,522 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,522 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,522 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,522 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,522 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,522 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,522 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,522 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,522 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,523 - DEBUG - on stmt: exp.1 = b
2024-07-01 16:52:48,523 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,523 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,523 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,523 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,523 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,523 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,523 - DEBUG - on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-07-01 16:52:48,523 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,523 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,523 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,524 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,524 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,524 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,524 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,524 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,524 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,524 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,524 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,524 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,524 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,524 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,524 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,524 - DEBUG - on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-07-01 16:52:48,525 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,525 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,525 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,525 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,525 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,525 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,525 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,525 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,525 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,525 - DEBUG - on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-07-01 16:52:48,525 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,525 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,526 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,526 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,526 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,526 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,526 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,526 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,526 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,526 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,526 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,526 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,526 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,526 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,526 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,527 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,527 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,527 - DEBUG - on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-07-01 16:52:48,527 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,527 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,527 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,527 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,527 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,527 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,527 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,527 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,527 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,527 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,527 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,528 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,528 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,528 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,528 - DEBUG - first assign: $phi350.0
2024-07-01 16:52:48,528 - DEBUG - replaced with: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,528 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,528 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,528 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,528 - DEBUG - replaced with: $phi350.0.1 = r.4
2024-07-01 16:52:48,528 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,528 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a7b90>
2024-07-01 16:52:48,528 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,529 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,529 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {338: [<numba.core.ir.Assign object at 0x7f1c662f3a50>],
             348: [<numba.core.ir.Assign object at 0x7f1c662f3ad0>]})
2024-07-01 16:52:48,529 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,529 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,529 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,529 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,529 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-07-01 16:52:48,529 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,529 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,529 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-07-01 16:52:48,529 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,529 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,529 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,530 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,530 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,530 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,530 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,530 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,530 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,530 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,530 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,530 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,530 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,530 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,530 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,530 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,531 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,531 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,531 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,531 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,531 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,531 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,531 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,531 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,531 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,531 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,531 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,531 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,531 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,531 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,532 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,532 - DEBUG - on stmt: exp.1 = b
2024-07-01 16:52:48,532 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,532 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,532 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,532 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,532 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,532 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,532 - DEBUG - on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-07-01 16:52:48,532 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,532 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,532 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,532 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,533 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,533 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,533 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,533 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,533 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,533 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,533 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,533 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,533 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,533 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,533 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,533 - DEBUG - on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-07-01 16:52:48,533 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,533 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,534 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,534 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,534 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,534 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,534 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,534 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,534 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,534 - DEBUG - on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-07-01 16:52:48,534 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,534 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,534 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,534 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,535 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,535 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,535 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,535 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,535 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,535 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,535 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,535 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,535 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,535 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,535 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,535 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,535 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,535 - DEBUG - on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-07-01 16:52:48,536 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,536 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,536 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,536 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,536 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,536 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,536 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,536 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,536 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,536 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,536 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,536 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,537 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,537 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,537 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,537 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,537 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,537 - DEBUG - on stmt: $phi350.0.1 = r.4
2024-07-01 16:52:48,537 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,537 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,537 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662a6210>
2024-07-01 16:52:48,537 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,537 - DEBUG - find_def var='$phi350.0' stmt=$350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,537 - DEBUG - find_def_from_top label 350
2024-07-01 16:52:48,538 - DEBUG - insert phi node $phi350.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 350
2024-07-01 16:52:48,538 - DEBUG - find_def_from_bottom label 338
2024-07-01 16:52:48,538 - DEBUG - incoming_def $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,538 - DEBUG - find_def_from_bottom label 348
2024-07-01 16:52:48,538 - DEBUG - incoming_def $phi350.0.1 = r.4
2024-07-01 16:52:48,538 - DEBUG - replaced with: $350return_value.1 = cast(value=$phi350.0.2)
2024-07-01 16:52:48,538 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,662 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	RESUME(arg=0, lineno=2452)
           4	LOAD_FAST(arg=0, lineno=2457)
           6	LOAD_ATTR(arg=0, lineno=2457)
          16	LOAD_CONST(arg=1, lineno=2457)
          18	BINARY_OP(arg=8, lineno=2457)
          22	LOAD_FAST(arg=0, lineno=2457)
          24	LOAD_ATTR(arg=1, lineno=2457)
          34	LOAD_CONST(arg=1, lineno=2457)
          36	BINARY_OP(arg=8, lineno=2457)
          40	BINARY_OP(arg=0, lineno=2457)
          44	RETURN_VALUE(arg=None, lineno=2457)
2024-07-01 16:52:48,663 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:48,663 - DEBUG - stack: []
2024-07-01 16:52:48,663 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:48,663 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2452)
2024-07-01 16:52:48,663 - DEBUG - stack []
2024-07-01 16:52:48,663 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2452)
2024-07-01 16:52:48,663 - DEBUG - stack []
2024-07-01 16:52:48,663 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2457)
2024-07-01 16:52:48,663 - DEBUG - stack []
2024-07-01 16:52:48,663 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2457)
2024-07-01 16:52:48,663 - DEBUG - stack ['$x4.0']
2024-07-01 16:52:48,663 - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=2457)
2024-07-01 16:52:48,664 - DEBUG - stack ['$6load_attr.1']
2024-07-01 16:52:48,664 - DEBUG - dispatch pc=18, inst=BINARY_OP(arg=8, lineno=2457)
2024-07-01 16:52:48,664 - DEBUG - stack ['$6load_attr.1', '$const16.2']
2024-07-01 16:52:48,664 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2457)
2024-07-01 16:52:48,664 - DEBUG - stack ['$binop_pow18.3']
2024-07-01 16:52:48,664 - DEBUG - dispatch pc=24, inst=LOAD_ATTR(arg=1, lineno=2457)
2024-07-01 16:52:48,664 - DEBUG - stack ['$binop_pow18.3', '$x22.4']
2024-07-01 16:52:48,664 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=2457)
2024-07-01 16:52:48,664 - DEBUG - stack ['$binop_pow18.3', '$24load_attr.5']
2024-07-01 16:52:48,664 - DEBUG - dispatch pc=36, inst=BINARY_OP(arg=8, lineno=2457)
2024-07-01 16:52:48,664 - DEBUG - stack ['$binop_pow18.3', '$24load_attr.5', '$const34.6']
2024-07-01 16:52:48,665 - DEBUG - dispatch pc=40, inst=BINARY_OP(arg=0, lineno=2457)
2024-07-01 16:52:48,665 - DEBUG - stack ['$binop_pow18.3', '$binop_pow36.7']
2024-07-01 16:52:48,665 - DEBUG - dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=2457)
2024-07-01 16:52:48,665 - DEBUG - stack ['$binop_add40.8']
2024-07-01 16:52:48,665 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,665 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:48,665 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:48,665 - DEBUG - defmap: {}
2024-07-01 16:52:48,665 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:48,665 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:48,665 - DEBUG - keep phismap: {}
2024-07-01 16:52:48,666 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:48,666 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:48,666 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$const16.2'}), (18, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const16.2', 'res': '$binop_pow18.3'}), (20, {}), (22, {'res': '$x22.4'}), (24, {'item': '$x22.4', 'res': '$24load_attr.5'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'res': '$const34.6'}), (36, {'op': '**', 'lhs': '$24load_attr.5', 'rhs': '$const34.6', 'res': '$binop_pow36.7'}), (38, {}), (40, {'op': '+', 'lhs': '$binop_pow18.3', 'rhs': '$binop_pow36.7', 'res': '$binop_add40.8'}), (42, {}), (44, {'retval': '$binop_add40.8', 'castval': '$44return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,666 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const16.2 = const(int, 2)               ['$const16.2']
    $binop_pow18.3 = $6load_attr.1 ** $const16.2 ['$6load_attr.1', '$binop_pow18.3', '$const16.2']
    $24load_attr.5 = getattr(value=x, attr=imag) ['$24load_attr.5', 'x']
    $const34.6 = const(int, 2)               ['$const34.6']
    $binop_pow36.7 = $24load_attr.5 ** $const34.6 ['$24load_attr.5', '$binop_pow36.7', '$const34.6']
    $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7 ['$binop_add40.8', '$binop_pow18.3', '$binop_pow36.7']
    $44return_value.9 = cast(value=$binop_add40.8) ['$44return_value.9', '$binop_add40.8']
    return $44return_value.9                 ['$44return_value.9']

2024-07-01 16:52:48,672 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:48,672 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662de790>
2024-07-01 16:52:48,672 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:48,672 - DEBUG - on stmt: $6load_attr.1 = getattr(value=x, attr=real)
2024-07-01 16:52:48,672 - DEBUG - on stmt: $const16.2 = const(int, 2)
2024-07-01 16:52:48,672 - DEBUG - on stmt: $binop_pow18.3 = $6load_attr.1 ** $const16.2
2024-07-01 16:52:48,672 - DEBUG - on stmt: $24load_attr.5 = getattr(value=x, attr=imag)
2024-07-01 16:52:48,672 - DEBUG - on stmt: $const34.6 = const(int, 2)
2024-07-01 16:52:48,672 - DEBUG - on stmt: $binop_pow36.7 = $24load_attr.5 ** $const34.6
2024-07-01 16:52:48,672 - DEBUG - on stmt: $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7
2024-07-01 16:52:48,673 - DEBUG - on stmt: $44return_value.9 = cast(value=$binop_add40.8)
2024-07-01 16:52:48,673 - DEBUG - on stmt: return $44return_value.9
2024-07-01 16:52:48,673 - DEBUG - defs defaultdict(<class 'list'>,
            {'$24load_attr.5': [(<numba.core.ir.Assign object at 0x7f1c662feb10>,
                                 0)],
             '$44return_value.9': [(<numba.core.ir.Assign object at 0x7f1c662ff490>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x7f1c662fe3d0>,
                                0)],
             '$binop_add40.8': [(<numba.core.ir.Assign object at 0x7f1c662ff210>,
                                 0)],
             '$binop_pow18.3': [(<numba.core.ir.Assign object at 0x7f1c666fbdd0>,
                                 0)],
             '$binop_pow36.7': [(<numba.core.ir.Assign object at 0x7f1c662ff050>,
                                 0)],
             '$const16.2': [(<numba.core.ir.Assign object at 0x7f1c662fd350>,
                             0)],
             '$const34.6': [(<numba.core.ir.Assign object at 0x7f1c662fecd0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c662fdf10>, 0)]})
2024-07-01 16:52:48,673 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c662de790>
2024-07-01 16:52:48,684 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	PRECALL(arg=1, lineno=216)
          16	CALL(arg=1, lineno=216)
          26	STORE_FAST(arg=2, lineno=216)
          28	PUSH_NULL(arg=None, lineno=217)
          30	LOAD_DEREF(arg=6, lineno=217)
          32	LOAD_FAST(arg=0, lineno=217)
          34	PRECALL(arg=1, lineno=217)
          38	CALL(arg=1, lineno=217)
          48	STORE_FAST(arg=0, lineno=217)
          50	LOAD_FAST(arg=1, lineno=218)
          52	LOAD_CONST(arg=2, lineno=218)
          54	COMPARE_OP(arg=0, lineno=218)
          60	POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
          62	LOAD_CONST(arg=3, lineno=219)
          64	STORE_FAST(arg=3, lineno=219)
          66	LOAD_FAST(arg=1, lineno=220)
          68	UNARY_NEGATIVE(arg=None, lineno=220)
          70	STORE_FAST(arg=4, lineno=220)
          72	LOAD_FAST(arg=4, lineno=221)
          74	LOAD_CONST(arg=2, lineno=221)
          76	COMPARE_OP(arg=0, lineno=221)
          82	POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
          84	LOAD_GLOBAL(arg=0, lineno=222)
          96	RAISE_VARARGS(arg=1, lineno=222)
>         98	LOAD_DEREF(arg=5, lineno=223)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
         102	LOAD_FAST(arg=0, lineno=224)
         104	LOAD_CONST(arg=2, lineno=224)
         106	COMPARE_OP(arg=2, lineno=224)
         112	POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
         114	LOAD_DEREF(arg=7, lineno=225)
         116	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
         118	LOAD_DEREF(arg=7, lineno=226)
         120	RETURN_VALUE(arg=None, lineno=226)
>        122	LOAD_GLOBAL(arg=3, lineno=228)
         134	LOAD_CONST(arg=4, lineno=228)
         136	PRECALL(arg=1, lineno=228)
         140	CALL(arg=1, lineno=228)
         150	RAISE_VARARGS(arg=1, lineno=228)
>        152	LOAD_FAST(arg=0, lineno=229)
         154	LOAD_CONST(arg=1, lineno=229)
         156	COMPARE_OP(arg=3, lineno=229)
         162	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
         164	LOAD_FAST(arg=0, lineno=229)
         166	LOAD_CONST(arg=5, lineno=229)
         168	COMPARE_OP(arg=3, lineno=229)
         174	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
         176	LOAD_CONST(arg=2, lineno=230)
         178	RETURN_VALUE(arg=None, lineno=230)
>        180	JUMP_FORWARD(arg=4, lineno=230)
>        182	LOAD_CONST(arg=6, lineno=232)
         184	STORE_FAST(arg=3, lineno=232)
         186	LOAD_FAST(arg=1, lineno=233)
         188	STORE_FAST(arg=4, lineno=233)
>        190	LOAD_FAST(arg=4, lineno=234)
         192	LOAD_CONST(arg=7, lineno=234)
         194	COMPARE_OP(arg=4, lineno=234)
         200	POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
         202	LOAD_GLOBAL(arg=5, lineno=236)
         214	LOAD_ATTR(arg=3, lineno=236)
         224	LOAD_FAST(arg=0, lineno=236)
         226	LOAD_GLOBAL(arg=9, lineno=236)
         238	LOAD_FAST(arg=1, lineno=236)
         240	PRECALL(arg=1, lineno=236)
         244	CALL(arg=1, lineno=236)
         254	PRECALL(arg=2, lineno=236)
         258	CALL(arg=2, lineno=236)
         268	RETURN_VALUE(arg=None, lineno=236)
>        270	LOAD_FAST(arg=4, lineno=237)
         272	LOAD_CONST(arg=2, lineno=237)
         274	COMPARE_OP(arg=3, lineno=237)
         280	POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
>        282	LOAD_FAST(arg=4, lineno=238)
         284	LOAD_CONST(arg=1, lineno=238)
         286	BINARY_OP(arg=1, lineno=238)
         290	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
         292	LOAD_FAST(arg=2, lineno=239)
         294	LOAD_FAST(arg=0, lineno=239)
         296	BINARY_OP(arg=18, lineno=239)
         300	STORE_FAST(arg=2, lineno=239)
>        302	LOAD_FAST(arg=4, lineno=240)
         304	LOAD_CONST(arg=1, lineno=240)
         306	BINARY_OP(arg=22, lineno=240)
         310	STORE_FAST(arg=4, lineno=240)
         312	LOAD_FAST(arg=0, lineno=241)
         314	LOAD_FAST(arg=0, lineno=241)
         316	BINARY_OP(arg=18, lineno=241)
         320	STORE_FAST(arg=0, lineno=241)
         322	LOAD_FAST(arg=4, lineno=237)
         324	LOAD_CONST(arg=2, lineno=237)
         326	COMPARE_OP(arg=3, lineno=237)
         332	POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
>        334	LOAD_FAST(arg=3, lineno=243)
         336	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
         338	LOAD_CONST(arg=8, lineno=243)
         340	LOAD_FAST(arg=2, lineno=243)
         342	BINARY_OP(arg=11, lineno=243)
         346	JUMP_FORWARD(arg=1, lineno=243)
>        348	LOAD_FAST(arg=2, lineno=243)
>        350	RETURN_VALUE(arg=None, lineno=243)
2024-07-01 16:52:48,684 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:48,685 - DEBUG - stack: []
2024-07-01 16:52:48,685 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:48,685 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2024-07-01 16:52:48,685 - DEBUG - stack []
2024-07-01 16:52:48,685 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
2024-07-01 16:52:48,685 - DEBUG - stack []
2024-07-01 16:52:48,685 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=214)
2024-07-01 16:52:48,685 - DEBUG - stack []
2024-07-01 16:52:48,685 - DEBUG - dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
2024-07-01 16:52:48,685 - DEBUG - stack []
2024-07-01 16:52:48,685 - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
2024-07-01 16:52:48,685 - DEBUG - stack ['$null$6.0']
2024-07-01 16:52:48,686 - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
2024-07-01 16:52:48,686 - DEBUG - stack ['$null$6.0', '$8load_deref.1']
2024-07-01 16:52:48,686 - DEBUG - dispatch pc=12, inst=PRECALL(arg=1, lineno=216)
2024-07-01 16:52:48,686 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-07-01 16:52:48,686 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=216)
2024-07-01 16:52:48,686 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-07-01 16:52:48,686 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=2, lineno=216)
2024-07-01 16:52:48,686 - DEBUG - stack ['$16call.3']
2024-07-01 16:52:48,686 - DEBUG - dispatch pc=28, inst=PUSH_NULL(arg=None, lineno=217)
2024-07-01 16:52:48,686 - DEBUG - stack []
2024-07-01 16:52:48,686 - DEBUG - dispatch pc=30, inst=LOAD_DEREF(arg=6, lineno=217)
2024-07-01 16:52:48,686 - DEBUG - stack ['$null$28.4']
2024-07-01 16:52:48,687 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=217)
2024-07-01 16:52:48,687 - DEBUG - stack ['$null$28.4', '$30load_deref.5']
2024-07-01 16:52:48,687 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=217)
2024-07-01 16:52:48,687 - DEBUG - stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-07-01 16:52:48,687 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=217)
2024-07-01 16:52:48,687 - DEBUG - stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-07-01 16:52:48,687 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=0, lineno=217)
2024-07-01 16:52:48,687 - DEBUG - stack ['$38call.7']
2024-07-01 16:52:48,687 - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=218)
2024-07-01 16:52:48,687 - DEBUG - stack []
2024-07-01 16:52:48,687 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=218)
2024-07-01 16:52:48,688 - DEBUG - stack ['$b50.8']
2024-07-01 16:52:48,688 - DEBUG - dispatch pc=54, inst=COMPARE_OP(arg=0, lineno=218)
2024-07-01 16:52:48,688 - DEBUG - stack ['$b50.8', '$const52.9']
2024-07-01 16:52:48,688 - DEBUG - dispatch pc=60, inst=POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
2024-07-01 16:52:48,688 - DEBUG - stack ['$54compare_op.10']
2024-07-01 16:52:48,688 - DEBUG - end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,688 - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
2024-07-01 16:52:48,688 - DEBUG - stack: []
2024-07-01 16:52:48,688 - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=0)
2024-07-01 16:52:48,688 - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=219)
2024-07-01 16:52:48,688 - DEBUG - stack []
2024-07-01 16:52:48,688 - DEBUG - dispatch pc=64, inst=STORE_FAST(arg=3, lineno=219)
2024-07-01 16:52:48,688 - DEBUG - stack ['$const62.0']
2024-07-01 16:52:48,689 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=220)
2024-07-01 16:52:48,689 - DEBUG - stack []
2024-07-01 16:52:48,689 - DEBUG - dispatch pc=68, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-07-01 16:52:48,689 - DEBUG - stack ['$b66.1']
2024-07-01 16:52:48,689 - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=220)
2024-07-01 16:52:48,689 - DEBUG - stack ['$68unary_negative.2']
2024-07-01 16:52:48,689 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=221)
2024-07-01 16:52:48,689 - DEBUG - stack []
2024-07-01 16:52:48,689 - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=221)
2024-07-01 16:52:48,689 - DEBUG - stack ['$exp72.3']
2024-07-01 16:52:48,689 - DEBUG - dispatch pc=76, inst=COMPARE_OP(arg=0, lineno=221)
2024-07-01 16:52:48,689 - DEBUG - stack ['$exp72.3', '$const74.4']
2024-07-01 16:52:48,689 - DEBUG - dispatch pc=82, inst=POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
2024-07-01 16:52:48,690 - DEBUG - stack ['$76compare_op.5']
2024-07-01 16:52:48,690 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,690 - DEBUG - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-07-01 16:52:48,690 - DEBUG - stack: []
2024-07-01 16:52:48,690 - DEBUG - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2024-07-01 16:52:48,690 - DEBUG - dispatch pc=182, inst=LOAD_CONST(arg=6, lineno=232)
2024-07-01 16:52:48,690 - DEBUG - stack []
2024-07-01 16:52:48,690 - DEBUG - dispatch pc=184, inst=STORE_FAST(arg=3, lineno=232)
2024-07-01 16:52:48,690 - DEBUG - stack ['$const182.0']
2024-07-01 16:52:48,690 - DEBUG - dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=233)
2024-07-01 16:52:48,690 - DEBUG - stack []
2024-07-01 16:52:48,691 - DEBUG - dispatch pc=188, inst=STORE_FAST(arg=4, lineno=233)
2024-07-01 16:52:48,691 - DEBUG - stack ['$b186.1']
2024-07-01 16:52:48,691 - DEBUG - end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,691 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-01 16:52:48,691 - DEBUG - stack: []
2024-07-01 16:52:48,691 - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2024-07-01 16:52:48,691 - DEBUG - dispatch pc=84, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-07-01 16:52:48,691 - DEBUG - stack []
2024-07-01 16:52:48,691 - DEBUG - dispatch pc=96, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-07-01 16:52:48,691 - DEBUG - stack ['$84load_global.0']
2024-07-01 16:52:48,691 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,691 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-01 16:52:48,692 - DEBUG - stack: []
2024-07-01 16:52:48,692 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2024-07-01 16:52:48,692 - DEBUG - dispatch pc=98, inst=LOAD_DEREF(arg=5, lineno=223)
2024-07-01 16:52:48,692 - DEBUG - stack []
2024-07-01 16:52:48,692 - DEBUG - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
2024-07-01 16:52:48,692 - DEBUG - stack ['$98load_deref.0']
2024-07-01 16:52:48,692 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,692 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,692 - DEBUG - stack: []
2024-07-01 16:52:48,692 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2024-07-01 16:52:48,692 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=4, lineno=234)
2024-07-01 16:52:48,692 - DEBUG - stack []
2024-07-01 16:52:48,692 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=7, lineno=234)
2024-07-01 16:52:48,692 - DEBUG - stack ['$exp190.0']
2024-07-01 16:52:48,693 - DEBUG - dispatch pc=194, inst=COMPARE_OP(arg=4, lineno=234)
2024-07-01 16:52:48,693 - DEBUG - stack ['$exp190.0', '$const192.1']
2024-07-01 16:52:48,693 - DEBUG - dispatch pc=200, inst=POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
2024-07-01 16:52:48,693 - DEBUG - stack ['$194compare_op.2']
2024-07-01 16:52:48,693 - DEBUG - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=270, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,693 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0)])
2024-07-01 16:52:48,693 - DEBUG - stack: []
2024-07-01 16:52:48,693 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-07-01 16:52:48,693 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=224)
2024-07-01 16:52:48,693 - DEBUG - stack []
2024-07-01 16:52:48,693 - DEBUG - dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=224)
2024-07-01 16:52:48,693 - DEBUG - stack ['$a102.0']
2024-07-01 16:52:48,693 - DEBUG - dispatch pc=106, inst=COMPARE_OP(arg=2, lineno=224)
2024-07-01 16:52:48,694 - DEBUG - stack ['$a102.0', '$const104.1']
2024-07-01 16:52:48,694 - DEBUG - dispatch pc=112, inst=POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
2024-07-01 16:52:48,694 - DEBUG - stack ['$106compare_op.2']
2024-07-01 16:52:48,694 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,694 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
2024-07-01 16:52:48,694 - DEBUG - stack: []
2024-07-01 16:52:48,694 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=0)
2024-07-01 16:52:48,694 - DEBUG - dispatch pc=180, inst=JUMP_FORWARD(arg=4, lineno=230)
2024-07-01 16:52:48,694 - DEBUG - stack []
2024-07-01 16:52:48,694 - DEBUG - end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,694 - DEBUG - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-01 16:52:48,694 - DEBUG - stack: []
2024-07-01 16:52:48,695 - DEBUG - state.pc_initial: State(pc_initial=202 nstack_initial=0)
2024-07-01 16:52:48,695 - DEBUG - dispatch pc=202, inst=LOAD_GLOBAL(arg=5, lineno=236)
2024-07-01 16:52:48,695 - DEBUG - stack []
2024-07-01 16:52:48,695 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=3, lineno=236)
2024-07-01 16:52:48,695 - DEBUG - stack ['$null$202.1', '$202load_global.0']
2024-07-01 16:52:48,695 - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=236)
2024-07-01 16:52:48,695 - DEBUG - stack ['$null$202.1', '$214load_attr.2']
2024-07-01 16:52:48,695 - DEBUG - dispatch pc=226, inst=LOAD_GLOBAL(arg=9, lineno=236)
2024-07-01 16:52:48,695 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3']
2024-07-01 16:52:48,695 - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=236)
2024-07-01 16:52:48,695 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4']
2024-07-01 16:52:48,695 - DEBUG - dispatch pc=240, inst=PRECALL(arg=1, lineno=236)
2024-07-01 16:52:48,696 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-07-01 16:52:48,696 - DEBUG - dispatch pc=244, inst=CALL(arg=1, lineno=236)
2024-07-01 16:52:48,696 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-07-01 16:52:48,696 - DEBUG - dispatch pc=254, inst=PRECALL(arg=2, lineno=236)
2024-07-01 16:52:48,696 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-07-01 16:52:48,696 - DEBUG - dispatch pc=258, inst=CALL(arg=2, lineno=236)
2024-07-01 16:52:48,696 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-07-01 16:52:48,696 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=236)
2024-07-01 16:52:48,696 - DEBUG - stack ['$258call.8']
2024-07-01 16:52:48,696 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,696 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-07-01 16:52:48,697 - DEBUG - stack: []
2024-07-01 16:52:48,697 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=0)
2024-07-01 16:52:48,697 - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=4, lineno=237)
2024-07-01 16:52:48,697 - DEBUG - stack []
2024-07-01 16:52:48,697 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=2, lineno=237)
2024-07-01 16:52:48,697 - DEBUG - stack ['$exp270.0']
2024-07-01 16:52:48,697 - DEBUG - dispatch pc=274, inst=COMPARE_OP(arg=3, lineno=237)
2024-07-01 16:52:48,697 - DEBUG - stack ['$exp270.0', '$const272.1']
2024-07-01 16:52:48,697 - DEBUG - dispatch pc=280, inst=POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
2024-07-01 16:52:48,697 - DEBUG - stack ['$274compare_op.2']
2024-07-01 16:52:48,697 - DEBUG - end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0), Edge(pc=334, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,698 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0)])
2024-07-01 16:52:48,698 - DEBUG - stack: []
2024-07-01 16:52:48,698 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2024-07-01 16:52:48,698 - DEBUG - dispatch pc=114, inst=LOAD_DEREF(arg=7, lineno=225)
2024-07-01 16:52:48,698 - DEBUG - stack []
2024-07-01 16:52:48,698 - DEBUG - dispatch pc=116, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
2024-07-01 16:52:48,698 - DEBUG - stack ['$114load_deref.0']
2024-07-01 16:52:48,698 - DEBUG - end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,698 - DEBUG - pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2024-07-01 16:52:48,698 - DEBUG - stack: []
2024-07-01 16:52:48,698 - DEBUG - state.pc_initial: State(pc_initial=152 nstack_initial=0)
2024-07-01 16:52:48,699 - DEBUG - dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=229)
2024-07-01 16:52:48,699 - DEBUG - stack []
2024-07-01 16:52:48,699 - DEBUG - dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=229)
2024-07-01 16:52:48,699 - DEBUG - stack ['$a152.0']
2024-07-01 16:52:48,699 - DEBUG - dispatch pc=156, inst=COMPARE_OP(arg=3, lineno=229)
2024-07-01 16:52:48,699 - DEBUG - stack ['$a152.0', '$const154.1']
2024-07-01 16:52:48,699 - DEBUG - dispatch pc=162, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
2024-07-01 16:52:48,699 - DEBUG - stack ['$156compare_op.2']
2024-07-01 16:52:48,699 - DEBUG - end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,700 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,700 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,700 - DEBUG - stack: []
2024-07-01 16:52:48,700 - DEBUG - state.pc_initial: State(pc_initial=282 nstack_initial=0)
2024-07-01 16:52:48,700 - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=238)
2024-07-01 16:52:48,700 - DEBUG - stack []
2024-07-01 16:52:48,700 - DEBUG - dispatch pc=284, inst=LOAD_CONST(arg=1, lineno=238)
2024-07-01 16:52:48,700 - DEBUG - stack ['$exp282.0']
2024-07-01 16:52:48,700 - DEBUG - dispatch pc=286, inst=BINARY_OP(arg=1, lineno=238)
2024-07-01 16:52:48,700 - DEBUG - stack ['$exp282.0', '$const284.1']
2024-07-01 16:52:48,700 - DEBUG - dispatch pc=290, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
2024-07-01 16:52:48,701 - DEBUG - stack ['$binop_and_286.2']
2024-07-01 16:52:48,701 - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,701 - DEBUG - pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-07-01 16:52:48,701 - DEBUG - stack: []
2024-07-01 16:52:48,701 - DEBUG - state.pc_initial: State(pc_initial=334 nstack_initial=0)
2024-07-01 16:52:48,701 - DEBUG - dispatch pc=334, inst=LOAD_FAST(arg=3, lineno=243)
2024-07-01 16:52:48,701 - DEBUG - stack []
2024-07-01 16:52:48,701 - DEBUG - dispatch pc=336, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
2024-07-01 16:52:48,701 - DEBUG - stack ['$invert334.0']
2024-07-01 16:52:48,701 - DEBUG - end state. edges=[Edge(pc=338, stack=(), blockstack=(), npush=0), Edge(pc=348, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,701 - DEBUG - pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-01 16:52:48,702 - DEBUG - stack: []
2024-07-01 16:52:48,702 - DEBUG - state.pc_initial: State(pc_initial=118 nstack_initial=0)
2024-07-01 16:52:48,702 - DEBUG - dispatch pc=118, inst=LOAD_DEREF(arg=7, lineno=226)
2024-07-01 16:52:48,702 - DEBUG - stack []
2024-07-01 16:52:48,702 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=226)
2024-07-01 16:52:48,702 - DEBUG - stack ['$118load_deref.0']
2024-07-01 16:52:48,702 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,702 - DEBUG - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-01 16:52:48,702 - DEBUG - stack: []
2024-07-01 16:52:48,702 - DEBUG - state.pc_initial: State(pc_initial=122 nstack_initial=0)
2024-07-01 16:52:48,703 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=3, lineno=228)
2024-07-01 16:52:48,703 - DEBUG - stack []
2024-07-01 16:52:48,703 - DEBUG - dispatch pc=134, inst=LOAD_CONST(arg=4, lineno=228)
2024-07-01 16:52:48,703 - DEBUG - stack ['$null$122.1', '$122load_global.0']
2024-07-01 16:52:48,703 - DEBUG - dispatch pc=136, inst=PRECALL(arg=1, lineno=228)
2024-07-01 16:52:48,703 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-07-01 16:52:48,703 - DEBUG - dispatch pc=140, inst=CALL(arg=1, lineno=228)
2024-07-01 16:52:48,703 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-07-01 16:52:48,703 - DEBUG - dispatch pc=150, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-07-01 16:52:48,703 - DEBUG - stack ['$140call.3']
2024-07-01 16:52:48,703 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,703 - DEBUG - pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-07-01 16:52:48,704 - DEBUG - stack: []
2024-07-01 16:52:48,704 - DEBUG - state.pc_initial: State(pc_initial=164 nstack_initial=0)
2024-07-01 16:52:48,704 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=229)
2024-07-01 16:52:48,704 - DEBUG - stack []
2024-07-01 16:52:48,704 - DEBUG - dispatch pc=166, inst=LOAD_CONST(arg=5, lineno=229)
2024-07-01 16:52:48,704 - DEBUG - stack ['$a164.0']
2024-07-01 16:52:48,704 - DEBUG - dispatch pc=168, inst=COMPARE_OP(arg=3, lineno=229)
2024-07-01 16:52:48,704 - DEBUG - stack ['$a164.0', '$const166.1']
2024-07-01 16:52:48,704 - DEBUG - dispatch pc=174, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
2024-07-01 16:52:48,704 - DEBUG - stack ['$168compare_op.2']
2024-07-01 16:52:48,704 - DEBUG - end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,705 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,705 - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-07-01 16:52:48,705 - DEBUG - stack: []
2024-07-01 16:52:48,705 - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2024-07-01 16:52:48,705 - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=239)
2024-07-01 16:52:48,705 - DEBUG - stack []
2024-07-01 16:52:48,705 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=0, lineno=239)
2024-07-01 16:52:48,705 - DEBUG - stack ['$r292.0']
2024-07-01 16:52:48,705 - DEBUG - dispatch pc=296, inst=BINARY_OP(arg=18, lineno=239)
2024-07-01 16:52:48,705 - DEBUG - stack ['$r292.0', '$a294.1']
2024-07-01 16:52:48,705 - DEBUG - dispatch pc=300, inst=STORE_FAST(arg=2, lineno=239)
2024-07-01 16:52:48,706 - DEBUG - stack ['$binop_imul296.2']
2024-07-01 16:52:48,706 - DEBUG - end state. edges=[Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,706 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-07-01 16:52:48,706 - DEBUG - stack: []
2024-07-01 16:52:48,706 - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2024-07-01 16:52:48,706 - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=4, lineno=240)
2024-07-01 16:52:48,706 - DEBUG - stack []
2024-07-01 16:52:48,706 - DEBUG - dispatch pc=304, inst=LOAD_CONST(arg=1, lineno=240)
2024-07-01 16:52:48,706 - DEBUG - stack ['$exp302.0']
2024-07-01 16:52:48,706 - DEBUG - dispatch pc=306, inst=BINARY_OP(arg=22, lineno=240)
2024-07-01 16:52:48,706 - DEBUG - stack ['$exp302.0', '$const304.1']
2024-07-01 16:52:48,707 - DEBUG - dispatch pc=310, inst=STORE_FAST(arg=4, lineno=240)
2024-07-01 16:52:48,707 - DEBUG - stack ['$binop_irshift306.2']
2024-07-01 16:52:48,707 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=0, lineno=241)
2024-07-01 16:52:48,707 - DEBUG - stack []
2024-07-01 16:52:48,707 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=0, lineno=241)
2024-07-01 16:52:48,707 - DEBUG - stack ['$a312.3']
2024-07-01 16:52:48,707 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=18, lineno=241)
2024-07-01 16:52:48,707 - DEBUG - stack ['$a312.3', '$a314.4']
2024-07-01 16:52:48,707 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=0, lineno=241)
2024-07-01 16:52:48,707 - DEBUG - stack ['$binop_imul316.5']
2024-07-01 16:52:48,707 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=4, lineno=237)
2024-07-01 16:52:48,707 - DEBUG - stack []
2024-07-01 16:52:48,708 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=2, lineno=237)
2024-07-01 16:52:48,708 - DEBUG - stack ['$exp322.6']
2024-07-01 16:52:48,708 - DEBUG - dispatch pc=326, inst=COMPARE_OP(arg=3, lineno=237)
2024-07-01 16:52:48,708 - DEBUG - stack ['$exp322.6', '$const324.7']
2024-07-01 16:52:48,708 - DEBUG - dispatch pc=332, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
2024-07-01 16:52:48,708 - DEBUG - stack ['$326compare_op.8']
2024-07-01 16:52:48,708 - DEBUG - end state. edges=[Edge(pc=334, stack=(), blockstack=(), npush=0), Edge(pc=282, stack=(), blockstack=(), npush=0)]
2024-07-01 16:52:48,708 - DEBUG - pending: deque([State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0)])
2024-07-01 16:52:48,708 - DEBUG - stack: []
2024-07-01 16:52:48,709 - DEBUG - state.pc_initial: State(pc_initial=338 nstack_initial=0)
2024-07-01 16:52:48,709 - DEBUG - dispatch pc=338, inst=LOAD_CONST(arg=8, lineno=243)
2024-07-01 16:52:48,709 - DEBUG - stack []
2024-07-01 16:52:48,709 - DEBUG - dispatch pc=340, inst=LOAD_FAST(arg=2, lineno=243)
2024-07-01 16:52:48,709 - DEBUG - stack ['$const338.0']
2024-07-01 16:52:48,709 - DEBUG - dispatch pc=342, inst=BINARY_OP(arg=11, lineno=243)
2024-07-01 16:52:48,709 - DEBUG - stack ['$const338.0', '$r340.1']
2024-07-01 16:52:48,709 - DEBUG - dispatch pc=346, inst=JUMP_FORWARD(arg=1, lineno=243)
2024-07-01 16:52:48,709 - DEBUG - stack ['$binop_truediv342.2']
2024-07-01 16:52:48,709 - DEBUG - end state. edges=[Edge(pc=350, stack=('$binop_truediv342.2',), blockstack=(), npush=0)]
2024-07-01 16:52:48,709 - DEBUG - pending: deque([State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,710 - DEBUG - stack: []
2024-07-01 16:52:48,710 - DEBUG - state.pc_initial: State(pc_initial=348 nstack_initial=0)
2024-07-01 16:52:48,710 - DEBUG - dispatch pc=348, inst=LOAD_FAST(arg=2, lineno=243)
2024-07-01 16:52:48,710 - DEBUG - stack []
2024-07-01 16:52:48,710 - DEBUG - end state. edges=[Edge(pc=350, stack=('$r348.0',), blockstack=(), npush=0)]
2024-07-01 16:52:48,710 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,710 - DEBUG - stack: []
2024-07-01 16:52:48,710 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=0)
2024-07-01 16:52:48,710 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=230)
2024-07-01 16:52:48,710 - DEBUG - stack []
2024-07-01 16:52:48,710 - DEBUG - dispatch pc=178, inst=RETURN_VALUE(arg=None, lineno=230)
2024-07-01 16:52:48,710 - DEBUG - stack ['$const176.0']
2024-07-01 16:52:48,710 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,711 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,711 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,711 - DEBUG - pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,711 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,711 - DEBUG - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,711 - DEBUG - stack: ['$phi350.0']
2024-07-01 16:52:48,711 - DEBUG - state.pc_initial: State(pc_initial=350 nstack_initial=1)
2024-07-01 16:52:48,711 - DEBUG - dispatch pc=350, inst=RETURN_VALUE(arg=None, lineno=243)
2024-07-01 16:52:48,711 - DEBUG - stack ['$phi350.0']
2024-07-01 16:52:48,711 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,711 - DEBUG - pending: deque([State(pc_initial=350 nstack_initial=1)])
2024-07-01 16:52:48,711 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:48,712 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=270 nstack_initial=0): set(),
             State(pc_initial=282 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=334 nstack_initial=0): set(),
             State(pc_initial=338 nstack_initial=0): set(),
             State(pc_initial=348 nstack_initial=0): set(),
             State(pc_initial=350 nstack_initial=1): {'$phi350.0'}})
2024-07-01 16:52:48,712 - DEBUG - defmap: {'$phi350.0': State(pc_initial=348 nstack_initial=0)}
2024-07-01 16:52:48,712 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-07-01 16:52:48,713 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-07-01 16:52:48,713 - DEBUG - keep phismap: {'$phi350.0': {('$binop_truediv342.2', State(pc_initial=338 nstack_initial=0)),
               ('$r348.0', State(pc_initial=348 nstack_initial=0))}}
2024-07-01 16:52:48,713 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=338 nstack_initial=0): {'$phi350.0': '$binop_truediv342.2'},
             State(pc_initial=348 nstack_initial=0): {'$phi350.0': '$r348.0'}})
2024-07-01 16:52:48,714 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:48,714 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2'}), (12, {}), (14, {}), (16, {'func': '$8load_deref.1', 'args': ['$const10.2'], 'kw_names': None, 'res': '$16call.3'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'value': '$16call.3'}), (28, {}), (30, {'res': '$30load_deref.5'}), (32, {'res': '$a32.6'}), (34, {}), (36, {}), (38, {'func': '$30load_deref.5', 'args': ['$a32.6'], 'kw_names': None, 'res': '$38call.7'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.7'}), (50, {'res': '$b50.8'}), (52, {'res': '$const52.9'}), (54, {'lhs': '$b50.8', 'rhs': '$const52.9', 'res': '$54compare_op.10'}), (56, {}), (58, {}), (60, {'pred': '$54compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 182: ()})
2024-07-01 16:52:48,714 - DEBUG - block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0'}), (64, {'value': '$const62.0'}), (66, {'res': '$b66.1'}), (68, {'value': '$b66.1', 'res': '$68unary_negative.2'}), (70, {'value': '$68unary_negative.2'}), (72, {'res': '$exp72.3'}), (74, {'res': '$const74.4'}), (76, {'lhs': '$exp72.3', 'rhs': '$const74.4', 'res': '$76compare_op.5'}), (78, {}), (80, {}), (82, {'pred': '$76compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 98: ()})
2024-07-01 16:52:48,714 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'idx': 0, 'res': '$84load_global.0'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'exc': '$84load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,714 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'pred': '$98load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 180: ()})
2024-07-01 16:52:48,714 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$a102.0'}), (104, {'res': '$const104.1'}), (106, {'lhs': '$a102.0', 'rhs': '$const104.1', 'res': '$106compare_op.2'}), (108, {}), (110, {}), (112, {'pred': '$106compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 152: ()})
2024-07-01 16:52:48,714 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_deref.0'}), (116, {'pred': '$114load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: (), 122: ()})
2024-07-01 16:52:48,715 - DEBUG - block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$118load_deref.0'}), (120, {'retval': '$118load_deref.0', 'castval': '$120return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,715 - DEBUG - block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'idx': 1, 'res': '$122load_global.0'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'res': '$const134.2'}), (136, {}), (138, {}), (140, {'func': '$122load_global.0', 'args': ['$const134.2'], 'kw_names': None, 'res': '$140call.3'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'exc': '$140call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,715 - DEBUG - block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$a152.0'}), (154, {'res': '$const154.1'}), (156, {'lhs': '$a152.0', 'rhs': '$const154.1', 'res': '$156compare_op.2'}), (158, {}), (160, {}), (162, {'pred': '$156compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 180: ()})
2024-07-01 16:52:48,715 - DEBUG - block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'res': '$const166.1'}), (168, {'lhs': '$a164.0', 'rhs': '$const166.1', 'res': '$168compare_op.2'}), (170, {}), (172, {}), (174, {'pred': '$168compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 180: ()})
2024-07-01 16:52:48,715 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'retval': '$const176.0', 'castval': '$178return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,715 - DEBUG - block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-07-01 16:52:48,715 - DEBUG - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'value': '$const182.0'}), (186, {'res': '$b186.1'}), (188, {'value': '$b186.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-07-01 16:52:48,715 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$exp190.0'}), (192, {'res': '$const192.1'}), (194, {'lhs': '$exp190.0', 'rhs': '$const192.1', 'res': '$194compare_op.2'}), (196, {}), (198, {}), (200, {'pred': '$194compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 270: ()})
2024-07-01 16:52:48,716 - DEBUG - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'idx': 2, 'res': '$202load_global.0'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {'item': '$202load_global.0', 'res': '$214load_attr.2'}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {'res': '$a224.3'}), (226, {'idx': 4, 'res': '$226load_global.4'}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'res': '$b238.6'}), (240, {}), (242, {}), (244, {'func': '$226load_global.4', 'args': ['$b238.6'], 'kw_names': None, 'res': '$244call.7'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {'func': '$214load_attr.2', 'args': ['$a224.3', '$244call.7'], 'kw_names': None, 'res': '$258call.8'}), (260, {}), (262, {}), (264, {}), (266, {}), (268, {'retval': '$258call.8', 'castval': '$268return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,716 - DEBUG - block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=((270, {'res': '$exp270.0'}), (272, {'res': '$const272.1'}), (274, {'lhs': '$exp270.0', 'rhs': '$const272.1', 'res': '$274compare_op.2'}), (276, {}), (278, {}), (280, {'pred': '$274compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: (), 334: ()})
2024-07-01 16:52:48,716 - DEBUG - block_infos State(pc_initial=282 nstack_initial=0):
AdaptBlockInfo(insts=((282, {'res': '$exp282.0'}), (284, {'res': '$const284.1'}), (286, {'op': '&', 'lhs': '$exp282.0', 'rhs': '$const284.1', 'res': '$binop_and_286.2'}), (288, {}), (290, {'pred': '$binop_and_286.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2024-07-01 16:52:48,716 - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$r292.0'}), (294, {'res': '$a294.1'}), (296, {'op': '*=', 'lhs': '$r292.0', 'rhs': '$a294.1', 'res': '$binop_imul296.2'}), (298, {}), (300, {'value': '$binop_imul296.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ()})
2024-07-01 16:52:48,716 - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$exp302.0'}), (304, {'res': '$const304.1'}), (306, {'op': '>>=', 'lhs': '$exp302.0', 'rhs': '$const304.1', 'res': '$binop_irshift306.2'}), (308, {}), (310, {'value': '$binop_irshift306.2'}), (312, {'res': '$a312.3'}), (314, {'res': '$a314.4'}), (316, {'op': '*=', 'lhs': '$a312.3', 'rhs': '$a314.4', 'res': '$binop_imul316.5'}), (318, {}), (320, {'value': '$binop_imul316.5'}), (322, {'res': '$exp322.6'}), (324, {'res': '$const324.7'}), (326, {'lhs': '$exp322.6', 'rhs': '$const324.7', 'res': '$326compare_op.8'}), (328, {}), (330, {}), (332, {'pred': '$326compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: (), 282: ()})
2024-07-01 16:52:48,716 - DEBUG - block_infos State(pc_initial=334 nstack_initial=0):
AdaptBlockInfo(insts=((334, {'res': '$invert334.0'}), (336, {'pred': '$invert334.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={338: (), 348: ()})
2024-07-01 16:52:48,716 - DEBUG - block_infos State(pc_initial=338 nstack_initial=0):
AdaptBlockInfo(insts=((338, {'res': '$const338.0'}), (340, {'res': '$r340.1'}), (342, {'op': '/', 'lhs': '$const338.0', 'rhs': '$r340.1', 'res': '$binop_truediv342.2'}), (344, {}), (346, {})), outgoing_phis={'$phi350.0': '$binop_truediv342.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$binop_truediv342.2',)})
2024-07-01 16:52:48,716 - DEBUG - block_infos State(pc_initial=348 nstack_initial=0):
AdaptBlockInfo(insts=((348, {'res': '$r348.0'}),), outgoing_phis={'$phi350.0': '$r348.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$r348.0',)})
2024-07-01 16:52:48,717 - DEBUG - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'retval': '$phi350.0', 'castval': '$350return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,720 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float64)    ['$8load_deref.1']
    $const10.2 = const(int, 1)               ['$const10.2']
    r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2', 'r']
    $30load_deref.5 = freevar(tp: float64)   ['$30load_deref.5']
    a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_deref.5', 'a', 'a.1']
    $const52.9 = const(int, 0)               ['$const52.9']
    $54compare_op.10 = b < $const52.9        ['$54compare_op.10', '$const52.9', 'b']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.10', '$60pred', 'bool60']
    branch $60pred, 62, 182                  ['$60pred']
label 62:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const74.4 = const(int, 0)               ['$const74.4']
    $76compare_op.5 = exp < $const74.4       ['$76compare_op.5', '$const74.4', 'exp']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$76compare_op.5', '$82pred', 'bool82']
    branch $82pred, 84, 98                   ['$82pred']
label 84:
    $84load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$84load_global.0']
    raise $84load_global.0                   ['$84load_global.0']
label 98:
    $98load_deref.0 = freevar(is_integer: False) ['$98load_deref.0']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98load_deref.0', 'bool100']
    branch $100pred, 102, 180                ['$100pred']
label 102:
    $const104.1 = const(int, 0)              ['$const104.1']
    $106compare_op.2 = a.1 == $const104.1    ['$106compare_op.2', '$const104.1', 'a.1']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106compare_op.2, func=bool112, args=(Var($106compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$106compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 152                ['$112pred']
label 114:
    $114load_deref.0 = freevar(zerodiv_return: False) ['$114load_deref.0']
    bool116 = global(bool: <class 'bool'>)   ['bool116']
    $116pred = call bool116($114load_deref.0, func=bool116, args=(Var($114load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$114load_deref.0', '$116pred', 'bool116']
    branch $116pred, 118, 122                ['$116pred']
label 118:
    $118load_deref.0 = freevar(zerodiv_return: False) ['$118load_deref.0']
    $120return_value.1 = cast(value=$118load_deref.0) ['$118load_deref.0', '$120return_value.1']
    return $120return_value.1                ['$120return_value.1']
label 122:
    $122load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$122load_global.0']
    $const134.2 = const(str, 0 cannot be raised to a negative power) ['$const134.2']
    $140call.3 = call $122load_global.0($const134.2, func=$122load_global.0, args=[Var($const134.2, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.0', '$140call.3', '$const134.2']
    raise $140call.3                         ['$140call.3']
label 152:
    $const154.1 = const(int, 1)              ['$const154.1']
    $156compare_op.2 = a.1 != $const154.1    ['$156compare_op.2', '$const154.1', 'a.1']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($156compare_op.2, func=bool162, args=(Var($156compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$156compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 180                ['$162pred']
label 164:
    $const166.1 = const(int, -1)             ['$const166.1']
    $168compare_op.2 = a.1 != $const166.1    ['$168compare_op.2', '$const166.1', 'a.1']
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174($168compare_op.2, func=bool174, args=(Var($168compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.2', '$174pred', 'bool174']
    branch $174pred, 176, 180                ['$174pred']
label 176:
    $const176.0 = const(int, 0)              ['$const176.0']
    $178return_value.1 = cast(value=$const176.0) ['$178return_value.1', '$const176.0']
    return $178return_value.1                ['$178return_value.1']
label 180:
    jump 190                                 []
label 182:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 190                                 []
label 190:
    $const192.1 = const(int, 65536)          ['$const192.1']
    $194compare_op.2 = exp > $const192.1     ['$194compare_op.2', '$const192.1', 'exp']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$194compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 270                ['$200pred']
label 202:
    $202load_global.0 = global(math: <module 'math' (built-in)>) ['$202load_global.0']
    $214load_attr.2 = getattr(value=$202load_global.0, attr=pow) ['$202load_global.0', '$214load_attr.2']
    $226load_global.4 = global(float: <class 'float'>) ['$226load_global.4']
    $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_global.4', '$244call.7', 'b']
    $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.2', '$244call.7', '$258call.8', 'a.1']
    $268return_value.9 = cast(value=$258call.8) ['$258call.8', '$268return_value.9']
    return $268return_value.9                ['$268return_value.9']
label 270:
    $const272.1 = const(int, 0)              ['$const272.1']
    $274compare_op.2 = exp != $const272.1    ['$274compare_op.2', '$const272.1', 'exp']
    bool280 = global(bool: <class 'bool'>)   ['bool280']
    $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$274compare_op.2', '$280pred', 'bool280']
    branch $280pred, 282, 334                ['$280pred']
label 282:
    $const284.1 = const(int, 1)              ['$const284.1']
    $binop_and_286.2 = exp & $const284.1     ['$binop_and_286.2', '$const284.1', 'exp']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', '$binop_and_286.2', 'bool290']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul296.2', 'a.1', 'r']
    r = $binop_imul296.2                     ['$binop_imul296.2', 'r']
    jump 302                                 []
label 302:
    $const304.1 = const(int, 1)              ['$const304.1']
    $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift306.2', '$const304.1', 'exp']
    exp = $binop_irshift306.2                ['$binop_irshift306.2', 'exp']
    $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul316.5', 'a.1', 'a.1']
    a.1 = $binop_imul316.5                   ['$binop_imul316.5', 'a.1']
    $const324.7 = const(int, 0)              ['$const324.7']
    $326compare_op.8 = exp != $const324.7    ['$326compare_op.8', '$const324.7', 'exp']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$326compare_op.8', '$332pred', 'bool332']
    branch $332pred, 282, 334                ['$332pred']
label 334:
    bool336 = global(bool: <class 'bool'>)   ['bool336']
    $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$336pred', 'bool336', 'invert']
    branch $336pred, 338, 348                ['$336pred']
label 338:
    $const338.0 = const(float, 1.0)          ['$const338.0']
    $binop_truediv342.2 = $const338.0 / r    ['$binop_truediv342.2', '$const338.0', 'r']
    $phi350.0 = $binop_truediv342.2          ['$binop_truediv342.2', '$phi350.0']
    jump 350                                 []
label 348:
    $phi350.0 = r                            ['$phi350.0', 'r']
    jump 350                                 []
label 350:
    $350return_value.1 = cast(value=$phi350.0) ['$350return_value.1', '$phi350.0']
    return $350return_value.1                ['$350return_value.1']

2024-07-01 16:52:48,735 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:48,735 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,735 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,735 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,735 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,735 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,735 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,735 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,735 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,735 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,736 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,736 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,736 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,736 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,736 - DEBUG - ==== SSA block analysis pass on 62
2024-07-01 16:52:48,736 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,736 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,736 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,736 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,736 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,736 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,737 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,737 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,737 - DEBUG - ==== SSA block analysis pass on 84
2024-07-01 16:52:48,737 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,737 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,737 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,737 - DEBUG - ==== SSA block analysis pass on 98
2024-07-01 16:52:48,737 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,737 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,737 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,737 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,738 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,738 - DEBUG - ==== SSA block analysis pass on 180
2024-07-01 16:52:48,738 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,738 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,738 - DEBUG - ==== SSA block analysis pass on 182
2024-07-01 16:52:48,738 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,738 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,738 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,738 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,738 - DEBUG - ==== SSA block analysis pass on 190
2024-07-01 16:52:48,738 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,738 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,739 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,739 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,739 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,739 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,739 - DEBUG - ==== SSA block analysis pass on 202
2024-07-01 16:52:48,739 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,739 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,739 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,739 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,739 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,740 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,740 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,740 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,740 - DEBUG - ==== SSA block analysis pass on 270
2024-07-01 16:52:48,740 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,740 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,740 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,740 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,740 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,741 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,741 - DEBUG - ==== SSA block analysis pass on 282
2024-07-01 16:52:48,741 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,741 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,741 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,741 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,741 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,741 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,741 - DEBUG - ==== SSA block analysis pass on 292
2024-07-01 16:52:48,741 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,742 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,742 - DEBUG - on stmt: r = $binop_imul296.2
2024-07-01 16:52:48,742 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,742 - DEBUG - ==== SSA block analysis pass on 302
2024-07-01 16:52:48,742 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,742 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,742 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,742 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,742 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,743 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-07-01 16:52:48,743 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,743 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,743 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,743 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,743 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,743 - DEBUG - ==== SSA block analysis pass on 334
2024-07-01 16:52:48,743 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,743 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,743 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,744 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,744 - DEBUG - ==== SSA block analysis pass on 338
2024-07-01 16:52:48,744 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,744 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,744 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-01 16:52:48,744 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,744 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,745 - DEBUG - ==== SSA block analysis pass on 348
2024-07-01 16:52:48,745 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,745 - DEBUG - on stmt: $phi350.0 = r
2024-07-01 16:52:48,745 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,745 - DEBUG - ==== SSA block analysis pass on 350
2024-07-01 16:52:48,745 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c662ff8d0>
2024-07-01 16:52:48,745 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,745 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,746 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x7f1c66295f50>,
                           98)],
             '$194compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c662d6190>,
                                   190)],
             '$200pred': [(<numba.core.ir.Assign object at 0x7f1c662d4d90>,
                           190)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x7f1c662d40d0>,
                                    202)],
             '$214load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c662d4390>,
                                  202)],
             '$226load_global.4': [(<numba.core.ir.Assign object at 0x7f1c662d4ad0>,
                                    202)],
             '$244call.7': [(<numba.core.ir.Assign object at 0x7f1c662d5010>,
                             202)],
             '$258call.8': [(<numba.core.ir.Assign object at 0x7f1c662d5190>,
                             202)],
             '$268return_value.9': [(<numba.core.ir.Assign object at 0x7f1c662d5650>,
                                     202)],
             '$274compare_op.2': [(<numba.core.ir.Assign object at 0x7f1c662d6b50>,
                                   270)],
             '$280pred': [(<numba.core.ir.Assign object at 0x7f1c662d7210>,
                           270)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7f1c662d7ad0>,
                           282)],
             '$30load_deref.5': [(<numba.core.ir.Assign object at 0x7f1c66276410>,
                                  0)],
             '$326compare_op.8': [(<numba.core.ir.Assign object at 0x7f1c662c7b10>,
                                   302)],
             '$332pred': [(<numba.core.ir.Assign object at 0x7f1c662c7c90>,
                           302)],
             '$336pred': [(<numba.core.ir.Assign object at 0x7f1c662c6b10>,
                           334)],
             '$350return_value.1': [(<numba.core.ir.Assign object at 0x7f1c662c5bd0>,
                                     350)],
             '$54compare_op.10': [(<numba.core.ir.Assign object at 0x7f1c66275110>,
                                   0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x7f1c66275750>, 0)],
             '$76compare_op.5': [(<numba.core.ir.Assign object at 0x7f1c66274ad0>,
                                  62)],
             '$82pred': [(<numba.core.ir.Assign object at 0x7f1c66297810>, 62)],
             '$84load_global.0': [(<numba.core.ir.Assign object at 0x7f1c66295710>,
                                   84)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x7f1c6627ee90>,
                                 0)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x7f1c66295c90>,
                                  98)],
             '$binop_and_286.2': [(<numba.core.ir.Assign object at 0x7f1c662d7710>,
                                   282)],
             '$binop_imul296.2': [(<numba.core.ir.Assign object at 0x7f1c662d5a50>,
                                   292)],
             '$binop_imul316.5': [(<numba.core.ir.Assign object at 0x7f1c662c74d0>,
                                   302)],
             '$binop_irshift306.2': [(<numba.core.ir.Assign object at 0x7f1c662c5990>,
                                      302)],
             '$binop_truediv342.2': [(<numba.core.ir.Assign object at 0x7f1c662c5e90>,
                                      338)],
             '$const10.2': [(<numba.core.ir.Assign object at 0x7f1c6627dd50>,
                             0)],
             '$const192.1': [(<numba.core.ir.Assign object at 0x7f1c662d61d0>,
                              190)],
             '$const272.1': [(<numba.core.ir.Assign object at 0x7f1c662d5b90>,
                              270)],
             '$const284.1': [(<numba.core.ir.Assign object at 0x7f1c662d73d0>,
                              282)],
             '$const304.1': [(<numba.core.ir.Assign object at 0x7f1c662c7f50>,
                              302)],
             '$const324.7': [(<numba.core.ir.Assign object at 0x7f1c662c7550>,
                              302)],
             '$const338.0': [(<numba.core.ir.Assign object at 0x7f1c662c5d10>,
                              338)],
             '$const52.9': [(<numba.core.ir.Assign object at 0x7f1c66275010>,
                             0)],
             '$const74.4': [(<numba.core.ir.Assign object at 0x7f1c66275c90>,
                             62)],
             '$phi350.0': [(<numba.core.ir.Assign object at 0x7f1c662c6150>,
                            338),
                           (<numba.core.ir.Assign object at 0x7f1c662d6350>,
                            348)],
             'a': [(<numba.core.ir.Assign object at 0x7f1c6627d890>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7f1c66274a10>, 0),
                     (<numba.core.ir.Assign object at 0x7f1c662c7490>, 302)],
             'b': [(<numba.core.ir.Assign object at 0x7f1c6627d510>, 0)],
             'bool100': [(<numba.core.ir.Assign object at 0x7f1c66295d10>, 98)],
             'bool200': [(<numba.core.ir.Assign object at 0x7f1c662d48d0>,
                          190)],
             'bool280': [(<numba.core.ir.Assign object at 0x7f1c662d70d0>,
                          270)],
             'bool290': [(<numba.core.ir.Assign object at 0x7f1c662d79d0>,
                          282)],
             'bool332': [(<numba.core.ir.Assign object at 0x7f1c662c7dd0>,
                          302)],
             'bool336': [(<numba.core.ir.Assign object at 0x7f1c662c6950>,
                          334)],
             'bool60': [(<numba.core.ir.Assign object at 0x7f1c662754d0>, 0)],
             'bool82': [(<numba.core.ir.Assign object at 0x7f1c66297710>, 62)],
             'exp': [(<numba.core.ir.Assign object at 0x7f1c66274210>, 62),
                     (<numba.core.ir.Assign object at 0x7f1c662d6590>, 182),
                     (<numba.core.ir.Assign object at 0x7f1c662c6f50>, 302)],
             'invert': [(<numba.core.ir.Assign object at 0x7f1c66275810>, 62),
                        (<numba.core.ir.Assign object at 0x7f1c662d7a50>, 182)],
             'r': [(<numba.core.ir.Assign object at 0x7f1c6627ded0>, 0),
                   (<numba.core.ir.Assign object at 0x7f1c662d4810>, 292)]})
2024-07-01 16:52:48,747 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c662fe350>
2024-07-01 16:52:48,747 - DEBUG - Fix SSA violator on var r
2024-07-01 16:52:48,747 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,747 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,747 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,747 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,747 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,747 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,747 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,748 - DEBUG - first assign: r
2024-07-01 16:52:48,748 - DEBUG - replaced with: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,748 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,748 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,748 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,748 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,748 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,748 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,748 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,748 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,748 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,749 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,749 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,749 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,749 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,749 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,749 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,749 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,749 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,749 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,749 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,749 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,749 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,750 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,750 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,750 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,750 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,750 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,750 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,750 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,750 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,750 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,750 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,750 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,750 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,751 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,751 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,751 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,751 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,751 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,751 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,751 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,751 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,751 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,751 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,751 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,752 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,752 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,752 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,752 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,752 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,752 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,752 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,752 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,752 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,752 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,752 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,753 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,753 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,753 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,753 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,753 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,753 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,753 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,753 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,753 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,753 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,753 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,754 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,754 - DEBUG - on stmt: r = $binop_imul296.2
2024-07-01 16:52:48,754 - DEBUG - replaced with: r.1 = $binop_imul296.2
2024-07-01 16:52:48,754 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,754 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,754 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,754 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,754 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,754 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,754 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,754 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-07-01 16:52:48,755 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,755 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,755 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,755 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,755 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,755 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,755 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,755 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,755 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,755 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,756 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,756 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,756 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,756 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-01 16:52:48,756 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,756 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,756 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,756 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,756 - DEBUG - on stmt: $phi350.0 = r
2024-07-01 16:52:48,756 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,756 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,757 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276550>
2024-07-01 16:52:48,757 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,757 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,757 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c66275690>],
             292: [<numba.core.ir.Assign object at 0x7f1c662771d0>]})
2024-07-01 16:52:48,757 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,757 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,757 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,757 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,757 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,757 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,757 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,758 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,758 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,758 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,758 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,758 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,758 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,758 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,758 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,758 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,758 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,758 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,759 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,759 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,759 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,759 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,759 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,759 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,759 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,759 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,759 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,759 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,759 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,759 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,760 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,760 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,760 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,760 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,760 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,760 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,760 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,760 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,760 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,760 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,760 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,760 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,761 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,761 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,761 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,761 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,761 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,761 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,761 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,761 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,761 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,761 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,761 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,762 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,762 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,762 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,762 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,762 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,762 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,762 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,762 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,762 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,763 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,763 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,763 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,763 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,764 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,764 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,764 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,764 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,764 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,764 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,764 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,764 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,764 - DEBUG - find_def var='r' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,764 - DEBUG - find_def_from_top label 292
2024-07-01 16:52:48,765 - DEBUG - idom 282 from label 292
2024-07-01 16:52:48,765 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,765 - DEBUG - find_def_from_top label 282
2024-07-01 16:52:48,765 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-01 16:52:48,765 - DEBUG - find_def_from_bottom label 302
2024-07-01 16:52:48,765 - DEBUG - find_def_from_top label 302
2024-07-01 16:52:48,765 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 302
2024-07-01 16:52:48,765 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,765 - DEBUG - incoming_def r.2 = phi(incoming_values=[], incoming_blocks=[])
2024-07-01 16:52:48,765 - DEBUG - find_def_from_bottom label 292
2024-07-01 16:52:48,765 - DEBUG - incoming_def r.1 = $binop_imul296.2
2024-07-01 16:52:48,766 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,766 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,766 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,766 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,766 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,766 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,766 - DEBUG - idom 0 from label 190
2024-07-01 16:52:48,766 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:48,766 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,766 - DEBUG - replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,767 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,767 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,767 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,767 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,767 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,767 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,767 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,767 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,767 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-07-01 16:52:48,767 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,767 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,768 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,768 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,768 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,768 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,768 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,768 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,768 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,768 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,768 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,768 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,768 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,768 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-07-01 16:52:48,769 - DEBUG - find_def var='r' stmt=$binop_truediv342.2 = $const338.0 / r
2024-07-01 16:52:48,769 - DEBUG - find_def_from_top label 338
2024-07-01 16:52:48,769 - DEBUG - idom 334 from label 338
2024-07-01 16:52:48,769 - DEBUG - find_def_from_bottom label 334
2024-07-01 16:52:48,769 - DEBUG - find_def_from_top label 334
2024-07-01 16:52:48,769 - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 334
2024-07-01 16:52:48,769 - DEBUG - find_def_from_bottom label 302
2024-07-01 16:52:48,769 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,769 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,769 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,769 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,770 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,770 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,770 - DEBUG - idom 0 from label 190
2024-07-01 16:52:48,770 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:48,770 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,770 - DEBUG - replaced with: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,770 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,770 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,770 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,770 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,770 - DEBUG - on stmt: $phi350.0 = r
2024-07-01 16:52:48,770 - DEBUG - find_def var='r' stmt=$phi350.0 = r
2024-07-01 16:52:48,771 - DEBUG - find_def_from_top label 348
2024-07-01 16:52:48,771 - DEBUG - idom 334 from label 348
2024-07-01 16:52:48,771 - DEBUG - find_def_from_bottom label 334
2024-07-01 16:52:48,771 - DEBUG - replaced with: $phi350.0 = r.4
2024-07-01 16:52:48,771 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,771 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,771 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66276a90>
2024-07-01 16:52:48,771 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,771 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,771 - DEBUG - Fix SSA violator on var a.1
2024-07-01 16:52:48,771 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,771 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,771 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,772 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,772 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,772 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,772 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,772 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,772 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,772 - DEBUG - first assign: a.1
2024-07-01 16:52:48,772 - DEBUG - replaced with: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,772 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,772 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,773 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,773 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,773 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,773 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,773 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,773 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,773 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,773 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,773 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,773 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,773 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,774 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,774 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,774 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,774 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,774 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,774 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,774 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,774 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,774 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,774 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,774 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,774 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,774 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,775 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,775 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,775 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,775 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,775 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,775 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,775 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,775 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,775 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,775 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,775 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,775 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,776 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,776 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,776 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,776 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,776 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,776 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,776 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,776 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,776 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,776 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,776 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,777 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,777 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,777 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,777 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,777 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,777 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,777 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,777 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,777 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,777 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,778 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,778 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,778 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,778 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,778 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,778 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,778 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,778 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,778 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,778 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,779 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,779 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,779 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,779 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,779 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,779 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,779 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-07-01 16:52:48,779 - DEBUG - replaced with: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,779 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,779 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,780 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,780 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,780 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,780 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,780 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,780 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,781 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,781 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,781 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,781 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,781 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,781 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,781 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,782 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,782 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,782 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,782 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,782 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,782 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,782 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,782 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c66276d10>
2024-07-01 16:52:48,783 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,783 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,783 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1c66276ed0>],
             302: [<numba.core.ir.Assign object at 0x7f1c6627e710>]})
2024-07-01 16:52:48,783 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,783 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,783 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,783 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,783 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,783 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,784 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,784 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,784 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,784 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,784 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,784 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,784 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,784 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,784 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,784 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,785 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,785 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,785 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,785 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,785 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,785 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,785 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,785 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,785 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,785 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,785 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,785 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,786 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,786 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,786 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,786 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,786 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,786 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,786 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,786 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,786 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,786 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,786 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,786 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,786 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,787 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,787 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,787 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,787 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,787 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,787 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,787 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,787 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,787 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,787 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,788 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,788 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,788 - DEBUG - find_def var='a.1' stmt=$258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,788 - DEBUG - find_def_from_top label 202
2024-07-01 16:52:48,788 - DEBUG - idom 190 from label 202
2024-07-01 16:52:48,788 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,788 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,788 - DEBUG - idom 0 from label 190
2024-07-01 16:52:48,788 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:48,788 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,788 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,788 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,788 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,789 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,789 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,789 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,789 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,789 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,789 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,789 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,789 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,789 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,789 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,789 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,789 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,790 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,790 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,790 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,790 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,790 - DEBUG - find_def var='a.1' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,790 - DEBUG - find_def_from_top label 292
2024-07-01 16:52:48,790 - DEBUG - idom 282 from label 292
2024-07-01 16:52:48,790 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,790 - DEBUG - find_def_from_top label 282
2024-07-01 16:52:48,790 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-01 16:52:48,790 - DEBUG - find_def_from_bottom label 302
2024-07-01 16:52:48,790 - DEBUG - incoming_def a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,790 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,791 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,791 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,791 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,791 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,791 - DEBUG - idom 0 from label 190
2024-07-01 16:52:48,791 - DEBUG - find_def_from_bottom label 0
2024-07-01 16:52:48,791 - DEBUG - incoming_def a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,791 - DEBUG - replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,791 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,791 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,791 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,791 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,791 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,792 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,792 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,792 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,792 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,792 - DEBUG - find_def var='a.1' stmt=$binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,792 - DEBUG - find_def_from_top label 302
2024-07-01 16:52:48,792 - DEBUG - idom 282 from label 302
2024-07-01 16:52:48,792 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,792 - DEBUG - replaced with: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,792 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,792 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,792 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,792 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,793 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,793 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,793 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,793 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,793 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,793 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,793 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,793 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,793 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,793 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,794 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,794 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,794 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,794 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,794 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,794 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,794 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,794 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,794 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,794 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,794 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,794 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,794 - DEBUG - Fix SSA violator on var invert
2024-07-01 16:52:48,795 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,795 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,795 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,795 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,795 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,795 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,795 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,795 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,795 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,795 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,795 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,795 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,795 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,796 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,796 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,796 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,796 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,796 - DEBUG - first assign: invert
2024-07-01 16:52:48,796 - DEBUG - replaced with: invert = const(bool, True)
2024-07-01 16:52:48,796 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,796 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,796 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,796 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,796 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,797 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,797 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,797 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,797 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,797 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,797 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,797 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,797 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,797 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,797 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,797 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,797 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,797 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,797 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,798 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,798 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,798 - DEBUG - on stmt: invert = const(bool, False)
2024-07-01 16:52:48,798 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-07-01 16:52:48,798 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,798 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,798 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,798 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,798 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,798 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,798 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,798 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,798 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,799 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,799 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,799 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,799 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,799 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,799 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,799 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,799 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,799 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,799 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,799 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,799 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,800 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,800 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,800 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,800 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,800 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,800 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,800 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,800 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,800 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,800 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,800 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,800 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,800 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,801 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,801 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,801 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,801 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,801 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,801 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,801 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,801 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,801 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,801 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,801 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,801 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,801 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,802 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,802 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,802 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,802 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,802 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,802 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,802 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,802 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,802 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,802 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,802 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,802 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,803 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,803 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,803 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,803 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,803 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,803 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,803 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,803 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,803 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,803 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,803 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662778d0>
2024-07-01 16:52:48,803 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,803 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,803 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x7f1c66276650>],
             182: [<numba.core.ir.Assign object at 0x7f1c662764d0>]})
2024-07-01 16:52:48,804 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,804 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,804 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,804 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,804 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,804 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,804 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,804 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,804 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,804 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,804 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,804 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,804 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,805 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,805 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,805 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,805 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,805 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,805 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,805 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,805 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,805 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,805 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,805 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,805 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,805 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,806 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,806 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,806 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,806 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,806 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,806 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,806 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,806 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,806 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,806 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,807 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,807 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,807 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,807 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,807 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,807 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,807 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,807 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,807 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,807 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,807 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,807 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,807 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,808 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,808 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,808 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,808 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,808 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,808 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,808 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,808 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,808 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,808 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,808 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,809 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,809 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,809 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,809 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,809 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,809 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,809 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,809 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,809 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,809 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,809 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,809 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,810 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,810 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,810 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,810 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,810 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,810 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,810 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,810 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,810 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,810 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,810 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,810 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,810 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,811 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,811 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,811 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,811 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,811 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,811 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,811 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,811 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,811 - DEBUG - find_def var='invert' stmt=$336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,811 - DEBUG - find_def_from_top label 334
2024-07-01 16:52:48,811 - DEBUG - idom 270 from label 334
2024-07-01 16:52:48,811 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,812 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,812 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,812 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,812 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,812 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-07-01 16:52:48,812 - DEBUG - find_def_from_bottom label 180
2024-07-01 16:52:48,812 - DEBUG - find_def_from_top label 180
2024-07-01 16:52:48,812 - DEBUG - idom 98 from label 180
2024-07-01 16:52:48,812 - DEBUG - find_def_from_bottom label 98
2024-07-01 16:52:48,812 - DEBUG - find_def_from_top label 98
2024-07-01 16:52:48,812 - DEBUG - idom 62 from label 98
2024-07-01 16:52:48,812 - DEBUG - find_def_from_bottom label 62
2024-07-01 16:52:48,813 - DEBUG - incoming_def invert = const(bool, True)
2024-07-01 16:52:48,813 - DEBUG - find_def_from_bottom label 182
2024-07-01 16:52:48,813 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-07-01 16:52:48,813 - DEBUG - replaced with: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,813 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,813 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,813 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,813 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,813 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,813 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,813 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,813 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,813 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,814 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,814 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,814 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,814 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66275e50>
2024-07-01 16:52:48,814 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,814 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,814 - DEBUG - Fix SSA violator on var exp
2024-07-01 16:52:48,814 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,814 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,814 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,814 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,814 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,814 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,815 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,815 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,815 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,815 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,815 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,815 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,815 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,815 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,815 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,815 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,815 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,815 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,815 - DEBUG - first assign: exp
2024-07-01 16:52:48,816 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,816 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,816 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,816 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,816 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,816 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,816 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,816 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,816 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,816 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,816 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,816 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,816 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,817 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,817 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,817 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,817 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,817 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,817 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,817 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,817 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,817 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,817 - DEBUG - on stmt: exp = b
2024-07-01 16:52:48,817 - DEBUG - replaced with: exp.1 = b
2024-07-01 16:52:48,817 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,817 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,818 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,818 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,818 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,818 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,818 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,818 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,818 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,818 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,818 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,818 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,818 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,818 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,818 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,819 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,819 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,819 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,819 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,819 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,819 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,819 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,819 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,819 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,819 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,819 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,819 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,820 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,820 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,820 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,820 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,820 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,820 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,820 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,820 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,820 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,820 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,820 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,820 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,820 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,821 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,821 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,821 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,821 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,821 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-07-01 16:52:48,821 - DEBUG - replaced with: exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,821 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,821 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,821 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,821 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,821 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,821 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,821 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,822 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,822 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,822 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,822 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,822 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,822 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,822 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,822 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,822 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,822 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,822 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,822 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,822 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,823 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,823 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,823 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,823 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,823 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c6627c8d0>
2024-07-01 16:52:48,823 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,823 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,823 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x7f1c6627e250>],
             182: [<numba.core.ir.Assign object at 0x7f1c66275f50>],
             302: [<numba.core.ir.Assign object at 0x7f1c662a45d0>]})
2024-07-01 16:52:48,823 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,823 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,823 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,823 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,823 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,824 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,824 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,824 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,824 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,824 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,824 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,824 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,824 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,824 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,824 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,824 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,825 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,825 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,825 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,825 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,825 - DEBUG - find_def var='exp' stmt=$76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,825 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,825 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,825 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,825 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,825 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,825 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,825 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,826 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,826 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,826 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,826 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,826 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,826 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,826 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,826 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,826 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,826 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,826 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,826 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,826 - DEBUG - on stmt: exp.1 = b
2024-07-01 16:52:48,826 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,827 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,827 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,827 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,827 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,827 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,827 - DEBUG - find_def var='exp' stmt=$194compare_op.2 = exp > $const192.1
2024-07-01 16:52:48,827 - DEBUG - find_def_from_top label 190
2024-07-01 16:52:48,827 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-07-01 16:52:48,827 - DEBUG - find_def_from_bottom label 180
2024-07-01 16:52:48,827 - DEBUG - find_def_from_top label 180
2024-07-01 16:52:48,827 - DEBUG - idom 98 from label 180
2024-07-01 16:52:48,827 - DEBUG - find_def_from_bottom label 98
2024-07-01 16:52:48,827 - DEBUG - find_def_from_top label 98
2024-07-01 16:52:48,827 - DEBUG - idom 62 from label 98
2024-07-01 16:52:48,828 - DEBUG - find_def_from_bottom label 62
2024-07-01 16:52:48,828 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,828 - DEBUG - find_def_from_bottom label 182
2024-07-01 16:52:48,828 - DEBUG - incoming_def exp.1 = b
2024-07-01 16:52:48,828 - DEBUG - replaced with: $194compare_op.2 = exp.3 > $const192.1
2024-07-01 16:52:48,828 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,828 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,828 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,828 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,828 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,828 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,828 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,829 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,829 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,829 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,829 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,829 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,829 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,829 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,829 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,829 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,829 - DEBUG - find_def var='exp' stmt=$274compare_op.2 = exp != $const272.1
2024-07-01 16:52:48,829 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,829 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,829 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,830 - DEBUG - replaced with: $274compare_op.2 = exp.3 != $const272.1
2024-07-01 16:52:48,830 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,830 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,830 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,830 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,830 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,830 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,830 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,830 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,830 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,830 - DEBUG - find_def var='exp' stmt=$binop_and_286.2 = exp & $const284.1
2024-07-01 16:52:48,830 - DEBUG - find_def_from_top label 282
2024-07-01 16:52:48,830 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-07-01 16:52:48,831 - DEBUG - find_def_from_bottom label 302
2024-07-01 16:52:48,831 - DEBUG - incoming_def exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,831 - DEBUG - find_def_from_bottom label 270
2024-07-01 16:52:48,831 - DEBUG - find_def_from_top label 270
2024-07-01 16:52:48,831 - DEBUG - idom 190 from label 270
2024-07-01 16:52:48,831 - DEBUG - find_def_from_bottom label 190
2024-07-01 16:52:48,831 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,831 - DEBUG - replaced with: $binop_and_286.2 = exp.4 & $const284.1
2024-07-01 16:52:48,831 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,831 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,831 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,831 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,831 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,832 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,832 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,832 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,832 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,832 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,832 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,832 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,832 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,832 - DEBUG - find_def var='exp' stmt=$binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,832 - DEBUG - find_def_from_top label 302
2024-07-01 16:52:48,833 - DEBUG - idom 282 from label 302
2024-07-01 16:52:48,833 - DEBUG - find_def_from_bottom label 282
2024-07-01 16:52:48,833 - DEBUG - replaced with: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,833 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,833 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,833 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,833 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,833 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,833 - DEBUG - find_def var='exp' stmt=$326compare_op.8 = exp != $const324.7
2024-07-01 16:52:48,833 - DEBUG - replaced with: $326compare_op.8 = exp.2 != $const324.7
2024-07-01 16:52:48,833 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,833 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,834 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,834 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,834 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,834 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,834 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,834 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,834 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,834 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,834 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,834 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,834 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,834 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,834 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,835 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,835 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,835 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,835 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,835 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,835 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c66297250>
2024-07-01 16:52:48,835 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,835 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,835 - DEBUG - Fix SSA violator on var $phi350.0
2024-07-01 16:52:48,835 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,835 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,835 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,835 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,836 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,836 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,836 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,836 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,836 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,836 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,836 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,836 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,836 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,836 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,836 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,836 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,836 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,837 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,837 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,837 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,837 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,837 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,837 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,837 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,837 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,837 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,837 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,837 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,837 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,837 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,838 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,838 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,838 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,838 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,838 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,838 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,838 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,838 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,838 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,838 - DEBUG - on stmt: exp.1 = b
2024-07-01 16:52:48,838 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,838 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,838 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,838 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,839 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,839 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,839 - DEBUG - on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-07-01 16:52:48,839 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,839 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,839 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,839 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,839 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,839 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,839 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,839 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,839 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,840 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,840 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,840 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,841 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,841 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,841 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,841 - DEBUG - on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-07-01 16:52:48,841 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,841 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,842 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,842 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,842 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,842 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,842 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,842 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,842 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,842 - DEBUG - on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-07-01 16:52:48,842 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,842 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,842 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,842 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,842 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,843 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,843 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,843 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,843 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,843 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,843 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,843 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,843 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,843 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,843 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,843 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,843 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,843 - DEBUG - on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-07-01 16:52:48,844 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,844 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,844 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,844 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,844 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,844 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,844 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,844 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,844 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,844 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,844 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,844 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,844 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,845 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,845 - DEBUG - first assign: $phi350.0
2024-07-01 16:52:48,845 - DEBUG - replaced with: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,845 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,845 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,845 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,845 - DEBUG - on stmt: $phi350.0 = r.4
2024-07-01 16:52:48,845 - DEBUG - replaced with: $phi350.0.1 = r.4
2024-07-01 16:52:48,845 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,845 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,845 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f1c662a5390>
2024-07-01 16:52:48,845 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,845 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,846 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {338: [<numba.core.ir.Assign object at 0x7f1c66288fd0>],
             348: [<numba.core.ir.Assign object at 0x7f1c66289050>]})
2024-07-01 16:52:48,846 - DEBUG - ==== SSA block rewrite pass on 0
2024-07-01 16:52:48,846 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,846 - DEBUG - on stmt: a = arg(0, name=a)
2024-07-01 16:52:48,846 - DEBUG - on stmt: b = arg(1, name=b)
2024-07-01 16:52:48,846 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-07-01 16:52:48,846 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-07-01 16:52:48,846 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,846 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-07-01 16:52:48,846 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,846 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-07-01 16:52:48,846 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-07-01 16:52:48,846 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,847 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,847 - DEBUG - on stmt: branch $60pred, 62, 182
2024-07-01 16:52:48,847 - DEBUG - ==== SSA block rewrite pass on 62
2024-07-01 16:52:48,847 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,847 - DEBUG - on stmt: invert = const(bool, True)
2024-07-01 16:52:48,847 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-07-01 16:52:48,847 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-07-01 16:52:48,847 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-07-01 16:52:48,847 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,847 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,847 - DEBUG - on stmt: branch $82pred, 84, 98
2024-07-01 16:52:48,847 - DEBUG - ==== SSA block rewrite pass on 84
2024-07-01 16:52:48,847 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,848 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-07-01 16:52:48,848 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-07-01 16:52:48,848 - DEBUG - ==== SSA block rewrite pass on 98
2024-07-01 16:52:48,848 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,848 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-07-01 16:52:48,848 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,848 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,848 - DEBUG - on stmt: jump 180
2024-07-01 16:52:48,848 - DEBUG - ==== SSA block rewrite pass on 180
2024-07-01 16:52:48,848 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,848 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,848 - DEBUG - ==== SSA block rewrite pass on 182
2024-07-01 16:52:48,848 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,848 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-07-01 16:52:48,849 - DEBUG - on stmt: exp.1 = b
2024-07-01 16:52:48,849 - DEBUG - on stmt: jump 190
2024-07-01 16:52:48,849 - DEBUG - ==== SSA block rewrite pass on 190
2024-07-01 16:52:48,849 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,849 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,849 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-07-01 16:52:48,849 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-07-01 16:52:48,849 - DEBUG - on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-07-01 16:52:48,849 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,849 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,849 - DEBUG - on stmt: branch $200pred, 202, 270
2024-07-01 16:52:48,849 - DEBUG - ==== SSA block rewrite pass on 202
2024-07-01 16:52:48,849 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,850 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-07-01 16:52:48,850 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-07-01 16:52:48,850 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-07-01 16:52:48,850 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,850 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,850 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-07-01 16:52:48,850 - DEBUG - on stmt: return $268return_value.9
2024-07-01 16:52:48,850 - DEBUG - ==== SSA block rewrite pass on 270
2024-07-01 16:52:48,850 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,850 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-07-01 16:52:48,850 - DEBUG - on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-07-01 16:52:48,850 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,851 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,851 - DEBUG - on stmt: branch $280pred, 282, 334
2024-07-01 16:52:48,851 - DEBUG - ==== SSA block rewrite pass on 282
2024-07-01 16:52:48,851 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,851 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,851 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,851 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,851 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-07-01 16:52:48,851 - DEBUG - on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-07-01 16:52:48,851 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,851 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,851 - DEBUG - on stmt: branch $290pred, 292, 302
2024-07-01 16:52:48,851 - DEBUG - ==== SSA block rewrite pass on 292
2024-07-01 16:52:48,852 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,852 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,852 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-07-01 16:52:48,852 - DEBUG - on stmt: jump 302
2024-07-01 16:52:48,852 - DEBUG - ==== SSA block rewrite pass on 302
2024-07-01 16:52:48,852 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,852 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-07-01 16:52:48,852 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-07-01 16:52:48,852 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,852 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-07-01 16:52:48,852 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-07-01 16:52:48,852 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-07-01 16:52:48,852 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-07-01 16:52:48,853 - DEBUG - on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-07-01 16:52:48,853 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,853 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,853 - DEBUG - on stmt: branch $332pred, 282, 334
2024-07-01 16:52:48,853 - DEBUG - ==== SSA block rewrite pass on 334
2024-07-01 16:52:48,853 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,853 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-07-01 16:52:48,853 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-07-01 16:52:48,853 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,853 - DEBUG - on stmt: branch $336pred, 338, 348
2024-07-01 16:52:48,853 - DEBUG - ==== SSA block rewrite pass on 338
2024-07-01 16:52:48,853 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,853 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-07-01 16:52:48,854 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-07-01 16:52:48,854 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,854 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,854 - DEBUG - ==== SSA block rewrite pass on 348
2024-07-01 16:52:48,854 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,854 - DEBUG - on stmt: $phi350.0.1 = r.4
2024-07-01 16:52:48,854 - DEBUG - on stmt: jump 350
2024-07-01 16:52:48,854 - DEBUG - ==== SSA block rewrite pass on 350
2024-07-01 16:52:48,854 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f1c662c4fd0>
2024-07-01 16:52:48,854 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,854 - DEBUG - find_def var='$phi350.0' stmt=$350return_value.1 = cast(value=$phi350.0)
2024-07-01 16:52:48,854 - DEBUG - find_def_from_top label 350
2024-07-01 16:52:48,854 - DEBUG - insert phi node $phi350.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 350
2024-07-01 16:52:48,855 - DEBUG - find_def_from_bottom label 338
2024-07-01 16:52:48,855 - DEBUG - incoming_def $phi350.0 = $binop_truediv342.2
2024-07-01 16:52:48,855 - DEBUG - find_def_from_bottom label 348
2024-07-01 16:52:48,855 - DEBUG - incoming_def $phi350.0.1 = r.4
2024-07-01 16:52:48,855 - DEBUG - replaced with: $350return_value.1 = cast(value=$phi350.0.2)
2024-07-01 16:52:48,855 - DEBUG - on stmt: return $350return_value.1
2024-07-01 16:52:48,977 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	RESUME(arg=0, lineno=2504)
           4	LOAD_GLOBAL(arg=1, lineno=2508)
          16	LOAD_ATTR(arg=1, lineno=2508)
          26	LOAD_FAST(arg=0, lineno=2508)
          28	PRECALL(arg=1, lineno=2508)
          32	CALL(arg=1, lineno=2508)
          42	LOAD_CONST(arg=1, lineno=2508)
          44	LOAD_GLOBAL(arg=1, lineno=2508)
          56	LOAD_ATTR(arg=2, lineno=2508)
          66	LOAD_FAST(arg=0, lineno=2508)
          68	PRECALL(arg=1, lineno=2508)
          72	CALL(arg=1, lineno=2508)
          82	BINARY_OP(arg=5, lineno=2508)
          86	BINARY_OP(arg=0, lineno=2508)
          90	RETURN_VALUE(arg=None, lineno=2508)
2024-07-01 16:52:48,978 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:48,978 - DEBUG - stack: []
2024-07-01 16:52:48,978 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:48,978 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2504)
2024-07-01 16:52:48,978 - DEBUG - stack []
2024-07-01 16:52:48,978 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2504)
2024-07-01 16:52:48,978 - DEBUG - stack []
2024-07-01 16:52:48,978 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-07-01 16:52:48,978 - DEBUG - stack []
2024-07-01 16:52:48,978 - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=1, lineno=2508)
2024-07-01 16:52:48,978 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:48,978 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2508)
2024-07-01 16:52:48,978 - DEBUG - stack ['$null$4.1', '$16load_attr.2']
2024-07-01 16:52:48,978 - DEBUG - dispatch pc=28, inst=PRECALL(arg=1, lineno=2508)
2024-07-01 16:52:48,978 - DEBUG - stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-07-01 16:52:48,978 - DEBUG - dispatch pc=32, inst=CALL(arg=1, lineno=2508)
2024-07-01 16:52:48,979 - DEBUG - stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-07-01 16:52:48,979 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=1, lineno=2508)
2024-07-01 16:52:48,979 - DEBUG - stack ['$32call.4']
2024-07-01 16:52:48,979 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-07-01 16:52:48,979 - DEBUG - stack ['$32call.4', '$const42.5']
2024-07-01 16:52:48,979 - DEBUG - dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=2508)
2024-07-01 16:52:48,979 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$44load_global.6']
2024-07-01 16:52:48,979 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2508)
2024-07-01 16:52:48,979 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8']
2024-07-01 16:52:48,979 - DEBUG - dispatch pc=68, inst=PRECALL(arg=1, lineno=2508)
2024-07-01 16:52:48,979 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-07-01 16:52:48,979 - DEBUG - dispatch pc=72, inst=CALL(arg=1, lineno=2508)
2024-07-01 16:52:48,979 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-07-01 16:52:48,980 - DEBUG - dispatch pc=82, inst=BINARY_OP(arg=5, lineno=2508)
2024-07-01 16:52:48,980 - DEBUG - stack ['$32call.4', '$const42.5', '$72call.10']
2024-07-01 16:52:48,980 - DEBUG - dispatch pc=86, inst=BINARY_OP(arg=0, lineno=2508)
2024-07-01 16:52:48,980 - DEBUG - stack ['$32call.4', '$binop_mul82.11']
2024-07-01 16:52:48,980 - DEBUG - dispatch pc=90, inst=RETURN_VALUE(arg=None, lineno=2508)
2024-07-01 16:52:48,980 - DEBUG - stack ['$binop_add86.12']
2024-07-01 16:52:48,980 - DEBUG - end state. edges=[]
2024-07-01 16:52:48,980 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:48,980 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:48,980 - DEBUG - defmap: {}
2024-07-01 16:52:48,980 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:48,980 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:48,980 - DEBUG - keep phismap: {}
2024-07-01 16:52:48,981 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:48,981 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:48,981 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'item': '$4load_global.0', 'res': '$16load_attr.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'res': '$x26.3'}), (28, {}), (30, {}), (32, {'func': '$16load_attr.2', 'args': ['$x26.3'], 'kw_names': None, 'res': '$32call.4'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {'res': '$const42.5'}), (44, {'idx': 0, 'res': '$44load_global.6'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'item': '$44load_global.6', 'res': '$56load_attr.8'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'res': '$x66.9'}), (68, {}), (70, {}), (72, {'func': '$56load_attr.8', 'args': ['$x66.9'], 'kw_names': None, 'res': '$72call.10'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'op': '*', 'lhs': '$const42.5', 'rhs': '$72call.10', 'res': '$binop_mul82.11'}), (84, {}), (86, {'op': '+', 'lhs': '$32call.4', 'rhs': '$binop_mul82.11', 'res': '$binop_add86.12'}), (88, {}), (90, {'retval': '$binop_add86.12', 'castval': '$90return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:48,981 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$4load_global.0']
    $16load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$16load_attr.2', '$4load_global.0']
    $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_attr.2', '$32call.4', 'x']
    $const42.5 = const(complex, 1j)          ['$const42.5']
    $44load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$44load_global.6']
    $56load_attr.8 = getattr(value=$44load_global.6, attr=sin) ['$44load_global.6', '$56load_attr.8']
    $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$72call.10', 'x']
    $binop_mul82.11 = $const42.5 * $72call.10 ['$72call.10', '$binop_mul82.11', '$const42.5']
    $binop_add86.12 = $32call.4 + $binop_mul82.11 ['$32call.4', '$binop_add86.12', '$binop_mul82.11']
    $90return_value.13 = cast(value=$binop_add86.12) ['$90return_value.13', '$binop_add86.12']
    return $90return_value.13                ['$90return_value.13']

2024-07-01 16:52:48,986 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:48,986 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c66665350>
2024-07-01 16:52:48,986 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:48,986 - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:48,986 - DEBUG - on stmt: $16load_attr.2 = getattr(value=$4load_global.0, attr=cos)
2024-07-01 16:52:48,986 - DEBUG - on stmt: $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,986 - DEBUG - on stmt: $const42.5 = const(complex, 1j)
2024-07-01 16:52:48,986 - DEBUG - on stmt: $44load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:48,986 - DEBUG - on stmt: $56load_attr.8 = getattr(value=$44load_global.6, attr=sin)
2024-07-01 16:52:48,986 - DEBUG - on stmt: $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:48,987 - DEBUG - on stmt: $binop_mul82.11 = $const42.5 * $72call.10
2024-07-01 16:52:48,987 - DEBUG - on stmt: $binop_add86.12 = $32call.4 + $binop_mul82.11
2024-07-01 16:52:48,987 - DEBUG - on stmt: $90return_value.13 = cast(value=$binop_add86.12)
2024-07-01 16:52:48,987 - DEBUG - on stmt: return $90return_value.13
2024-07-01 16:52:48,987 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c666f26d0>,
                                 0)],
             '$32call.4': [(<numba.core.ir.Assign object at 0x7f1c66665a10>,
                            0)],
             '$44load_global.6': [(<numba.core.ir.Assign object at 0x7f1c66664d10>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c666f3f50>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x7f1c66664c90>,
                                 0)],
             '$72call.10': [(<numba.core.ir.Assign object at 0x7f1c66665550>,
                             0)],
             '$90return_value.13': [(<numba.core.ir.Assign object at 0x7f1c666648d0>,
                                     0)],
             '$binop_add86.12': [(<numba.core.ir.Assign object at 0x7f1c66666b90>,
                                  0)],
             '$binop_mul82.11': [(<numba.core.ir.Assign object at 0x7f1c66664410>,
                                  0)],
             '$const42.5': [(<numba.core.ir.Assign object at 0x7f1c666678d0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c666f38d0>, 0)]})
2024-07-01 16:52:48,987 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c666f1cd0>
2024-07-01 16:52:49,053 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	RESUME(arg=0, lineno=2504)
           4	LOAD_GLOBAL(arg=1, lineno=2508)
          16	LOAD_ATTR(arg=1, lineno=2508)
          26	LOAD_FAST(arg=0, lineno=2508)
          28	PRECALL(arg=1, lineno=2508)
          32	CALL(arg=1, lineno=2508)
          42	LOAD_CONST(arg=1, lineno=2508)
          44	LOAD_GLOBAL(arg=1, lineno=2508)
          56	LOAD_ATTR(arg=2, lineno=2508)
          66	LOAD_FAST(arg=0, lineno=2508)
          68	PRECALL(arg=1, lineno=2508)
          72	CALL(arg=1, lineno=2508)
          82	BINARY_OP(arg=5, lineno=2508)
          86	BINARY_OP(arg=0, lineno=2508)
          90	RETURN_VALUE(arg=None, lineno=2508)
2024-07-01 16:52:49,053 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-07-01 16:52:49,053 - DEBUG - stack: []
2024-07-01 16:52:49,054 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-07-01 16:52:49,054 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2504)
2024-07-01 16:52:49,054 - DEBUG - stack []
2024-07-01 16:52:49,054 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2504)
2024-07-01 16:52:49,054 - DEBUG - stack []
2024-07-01 16:52:49,054 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-07-01 16:52:49,054 - DEBUG - stack []
2024-07-01 16:52:49,054 - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=1, lineno=2508)
2024-07-01 16:52:49,054 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-07-01 16:52:49,054 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2508)
2024-07-01 16:52:49,054 - DEBUG - stack ['$null$4.1', '$16load_attr.2']
2024-07-01 16:52:49,054 - DEBUG - dispatch pc=28, inst=PRECALL(arg=1, lineno=2508)
2024-07-01 16:52:49,054 - DEBUG - stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-07-01 16:52:49,054 - DEBUG - dispatch pc=32, inst=CALL(arg=1, lineno=2508)
2024-07-01 16:52:49,055 - DEBUG - stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-07-01 16:52:49,055 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=1, lineno=2508)
2024-07-01 16:52:49,055 - DEBUG - stack ['$32call.4']
2024-07-01 16:52:49,055 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-07-01 16:52:49,055 - DEBUG - stack ['$32call.4', '$const42.5']
2024-07-01 16:52:49,055 - DEBUG - dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=2508)
2024-07-01 16:52:49,055 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$44load_global.6']
2024-07-01 16:52:49,055 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2508)
2024-07-01 16:52:49,055 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8']
2024-07-01 16:52:49,055 - DEBUG - dispatch pc=68, inst=PRECALL(arg=1, lineno=2508)
2024-07-01 16:52:49,055 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-07-01 16:52:49,055 - DEBUG - dispatch pc=72, inst=CALL(arg=1, lineno=2508)
2024-07-01 16:52:49,055 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-07-01 16:52:49,056 - DEBUG - dispatch pc=82, inst=BINARY_OP(arg=5, lineno=2508)
2024-07-01 16:52:49,056 - DEBUG - stack ['$32call.4', '$const42.5', '$72call.10']
2024-07-01 16:52:49,056 - DEBUG - dispatch pc=86, inst=BINARY_OP(arg=0, lineno=2508)
2024-07-01 16:52:49,056 - DEBUG - stack ['$32call.4', '$binop_mul82.11']
2024-07-01 16:52:49,056 - DEBUG - dispatch pc=90, inst=RETURN_VALUE(arg=None, lineno=2508)
2024-07-01 16:52:49,056 - DEBUG - stack ['$binop_add86.12']
2024-07-01 16:52:49,056 - DEBUG - end state. edges=[]
2024-07-01 16:52:49,056 - DEBUG - -------------------------Prune PHIs-------------------------
2024-07-01 16:52:49,056 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-07-01 16:52:49,056 - DEBUG - defmap: {}
2024-07-01 16:52:49,056 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:49,056 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-07-01 16:52:49,057 - DEBUG - keep phismap: {}
2024-07-01 16:52:49,057 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-07-01 16:52:49,057 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-07-01 16:52:49,057 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'item': '$4load_global.0', 'res': '$16load_attr.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'res': '$x26.3'}), (28, {}), (30, {}), (32, {'func': '$16load_attr.2', 'args': ['$x26.3'], 'kw_names': None, 'res': '$32call.4'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {'res': '$const42.5'}), (44, {'idx': 0, 'res': '$44load_global.6'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'item': '$44load_global.6', 'res': '$56load_attr.8'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'res': '$x66.9'}), (68, {}), (70, {}), (72, {'func': '$56load_attr.8', 'args': ['$x66.9'], 'kw_names': None, 'res': '$72call.10'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'op': '*', 'lhs': '$const42.5', 'rhs': '$72call.10', 'res': '$binop_mul82.11'}), (84, {}), (86, {'op': '+', 'lhs': '$32call.4', 'rhs': '$binop_mul82.11', 'res': '$binop_add86.12'}), (88, {}), (90, {'retval': '$binop_add86.12', 'castval': '$90return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-07-01 16:52:49,058 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$4load_global.0']
    $16load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$16load_attr.2', '$4load_global.0']
    $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_attr.2', '$32call.4', 'x']
    $const42.5 = const(complex, 1j)          ['$const42.5']
    $44load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$44load_global.6']
    $56load_attr.8 = getattr(value=$44load_global.6, attr=sin) ['$44load_global.6', '$56load_attr.8']
    $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$72call.10', 'x']
    $binop_mul82.11 = $const42.5 * $72call.10 ['$72call.10', '$binop_mul82.11', '$const42.5']
    $binop_add86.12 = $32call.4 + $binop_mul82.11 ['$32call.4', '$binop_add86.12', '$binop_mul82.11']
    $90return_value.13 = cast(value=$binop_add86.12) ['$90return_value.13', '$binop_add86.12']
    return $90return_value.13                ['$90return_value.13']

2024-07-01 16:52:49,063 - DEBUG - ==== SSA block analysis pass on 0
2024-07-01 16:52:49,063 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f1c65f2c050>
2024-07-01 16:52:49,063 - DEBUG - on stmt: x = arg(0, name=x)
2024-07-01 16:52:49,064 - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:49,064 - DEBUG - on stmt: $16load_attr.2 = getattr(value=$4load_global.0, attr=cos)
2024-07-01 16:52:49,064 - DEBUG - on stmt: $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:49,064 - DEBUG - on stmt: $const42.5 = const(complex, 1j)
2024-07-01 16:52:49,064 - DEBUG - on stmt: $44load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-07-01 16:52:49,064 - DEBUG - on stmt: $56load_attr.8 = getattr(value=$44load_global.6, attr=sin)
2024-07-01 16:52:49,064 - DEBUG - on stmt: $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-07-01 16:52:49,064 - DEBUG - on stmt: $binop_mul82.11 = $const42.5 * $72call.10
2024-07-01 16:52:49,065 - DEBUG - on stmt: $binop_add86.12 = $32call.4 + $binop_mul82.11
2024-07-01 16:52:49,065 - DEBUG - on stmt: $90return_value.13 = cast(value=$binop_add86.12)
2024-07-01 16:52:49,065 - DEBUG - on stmt: return $90return_value.13
2024-07-01 16:52:49,065 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16load_attr.2': [(<numba.core.ir.Assign object at 0x7f1c65f29990>,
                                 0)],
             '$32call.4': [(<numba.core.ir.Assign object at 0x7f1c65f29dd0>,
                            0)],
             '$44load_global.6': [(<numba.core.ir.Assign object at 0x7f1c65f2a290>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f1c65f29690>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x7f1c65f2a590>,
                                 0)],
             '$72call.10': [(<numba.core.ir.Assign object at 0x7f1c65f2a950>,
                             0)],
             '$90return_value.13': [(<numba.core.ir.Assign object at 0x7f1c65f2af50>,
                                     0)],
             '$binop_add86.12': [(<numba.core.ir.Assign object at 0x7f1c65f2ad50>,
                                  0)],
             '$binop_mul82.11': [(<numba.core.ir.Assign object at 0x7f1c65f2ab50>,
                                  0)],
             '$const42.5': [(<numba.core.ir.Assign object at 0x7f1c65f2a0d0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f1c65f29310>, 0)]})
2024-07-01 16:52:49,065 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f1c65f2c050>
2024-07-01 16:52:49,143 - INFO - Resampled audio file to 16000 Hz
2024-07-01 16:52:49,143 - INFO - Loading VAD model...
2024-07-01 16:52:49,144 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-07-01 16:52:49,234 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-07-01 16:52:49,238 - DEBUG - Attempting to acquire lock 139759950352592 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-07-01 16:52:49,238 - DEBUG - Lock 139759950352592 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-07-01 16:52:49,290 - DEBUG - https://huggingface.co:443 "GET /speechbrain/vad-crdnn-libriparty/resolve/main/hyperparams.yaml HTTP/11" 200 2286
2024-07-01 16:52:49,292 - DEBUG - Attempting to release lock 139759950352592 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-07-01 16:52:49,292 - DEBUG - Lock 139759950352592 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-07-01 16:52:49,292 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/hyperparams.yaml
2024-07-01 16:52:49,293 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-07-01 16:52:49,352 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/custom.py HTTP/11" 404 0
2024-07-01 16:52:49,416 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/vad-crdnn-libriparty.
2024-07-01 16:52:49,416 - INFO - Fetch model.ckpt: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-07-01 16:52:49,488 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/model.ckpt HTTP/11" 200 0
2024-07-01 16:52:49,489 - DEBUG - Attempting to acquire lock 139759949871504 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-07-01 16:52:49,489 - DEBUG - Lock 139759949871504 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-07-01 16:52:49,576 - DEBUG - https://huggingface.co:443 "GET /speechbrain/vad-crdnn-libriparty/resolve/main/model.ckpt HTTP/11" 200 452671
2024-07-01 16:52:49,699 - DEBUG - Attempting to release lock 139759949871504 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-07-01 16:52:49,700 - DEBUG - Lock 139759949871504 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-07-01 16:52:49,700 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/model.ckpt
2024-07-01 16:52:49,701 - INFO - Fetch mean_var_norm.ckpt: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-07-01 16:52:49,751 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/mean_var_norm.ckpt HTTP/11" 200 0
2024-07-01 16:52:49,752 - DEBUG - Attempting to acquire lock 139760293392784 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-07-01 16:52:49,752 - DEBUG - Lock 139760293392784 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-07-01 16:52:49,808 - DEBUG - https://huggingface.co:443 "GET /speechbrain/vad-crdnn-libriparty/resolve/main/mean_var_norm.ckpt HTTP/11" 200 1063
2024-07-01 16:52:49,809 - DEBUG - Attempting to release lock 139760293392784 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-07-01 16:52:49,809 - DEBUG - Lock 139760293392784 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-07-01 16:52:49,809 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/mean_var_norm.ckpt
2024-07-01 16:52:49,810 - INFO - Loading pretrained files for: model, mean_var_norm
2024-07-01 16:52:49,815 - INFO - VAD model loaded successfully.
2024-07-01 16:52:49,815 - INFO - Starting voice activity detection...
2024-07-01 16:52:49,816 - INFO - Destination tmpl8x1pyoc.wav: local file in /tmp/tmpl8x1pyoc.wav.
2024-07-01 16:52:50,034 - INFO - Voice activity detection completed.
2024-07-01 16:52:50,035 - INFO - 172.17.0.1 - - [01/Jul/2024 16:52:50] "POST /detect_voice_activity HTTP/1.1" 200 -
