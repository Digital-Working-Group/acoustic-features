#0 building with "desktop-linux" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 618B 0.0s done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/ubuntu:24.04
#2 DONE 0.8s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 1.4s

#4 [1/6] FROM docker.io/library/ubuntu:24.04@sha256:2e863c44b718727c860746568e1d54afd13b2fa71b160f5cd9058fc436217b30
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 688.83kB 0.0s done
#5 DONE 0.0s

#6 [2/6] RUN apt-get update &&     apt-get install -y software-properties-common &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     apt-get install -y python3.11 python3.11-distutils python3.11-dev python3.11-venv &&     apt-get install -y ffmpeg &&     python3.11 -m ensurepip &&     python3.11 -m pip install --upgrade pip
#6 CACHED

#7 [3/6] WORKDIR /app
#7 CACHED

#8 [4/6] COPY requirements.txt .
#8 DONE 0.1s

#9 [5/6] RUN python3.11 -m pip install --no-cache-dir -r requirements.txt
#9 1.024 Collecting speechbrain==1.0.0 (from -r requirements.txt (line 1))
#9 1.133   Downloading speechbrain-1.0.0-py3-none-any.whl.metadata (23 kB)
#9 1.194 Collecting flask==3.0.3 (from -r requirements.txt (line 2))
#9 1.212   Downloading flask-3.0.3-py3-none-any.whl.metadata (3.2 kB)
#9 1.294 Collecting torchaudio==2.3.1 (from -r requirements.txt (line 3))
#9 1.323   Downloading torchaudio-2.3.1-cp311-cp311-manylinux1_x86_64.whl.metadata (6.4 kB)
#9 1.405 Collecting torch==2.3.1 (from -r requirements.txt (line 4))
#9 1.426   Downloading torch-2.3.1-cp311-cp311-manylinux1_x86_64.whl.metadata (26 kB)
#9 1.507 Collecting torchvision==0.18.1 (from -r requirements.txt (line 5))
#9 1.533   Downloading torchvision-0.18.1-cp311-cp311-manylinux1_x86_64.whl.metadata (6.6 kB)
#9 1.576 Collecting nltk==3.8.1 (from -r requirements.txt (line 6))
#9 1.596   Downloading nltk-3.8.1-py3-none-any.whl.metadata (2.8 kB)
#9 1.670 Collecting transformers==4.41.2 (from -r requirements.txt (line 7))
#9 1.686   Downloading transformers-4.41.2-py3-none-any.whl.metadata (43 kB)
#9 1.698      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 43.8/43.8 kB 57.2 MB/s eta 0:00:00
#9 1.843 Collecting librosa==0.10.2.post1 (from -r requirements.txt (line 8))
#9 1.868   Downloading librosa-0.10.2.post1-py3-none-any.whl.metadata (8.6 kB)
#9 1.904 Collecting soundfile==0.12.1 (from -r requirements.txt (line 9))
#9 1.928   Downloading soundfile-0.12.1-py2.py3-none-manylinux_2_31_x86_64.whl.metadata (14 kB)
#9 2.191 Collecting numpy==1.26.4 (from -r requirements.txt (line 10))
#9 2.224   Downloading numpy-1.26.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (61 kB)
#9 2.228      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 61.0/61.0 kB 50.8 MB/s eta 0:00:00
#9 2.284 Collecting hyperpyyaml (from speechbrain==1.0.0->-r requirements.txt (line 1))
#9 2.301   Downloading HyperPyYAML-1.2.2-py3-none-any.whl.metadata (7.6 kB)
#9 2.352 Collecting joblib (from speechbrain==1.0.0->-r requirements.txt (line 1))
#9 2.369   Downloading joblib-1.4.2-py3-none-any.whl.metadata (5.4 kB)
#9 2.416 Collecting packaging (from speechbrain==1.0.0->-r requirements.txt (line 1))
#9 2.443   Downloading packaging-24.1-py3-none-any.whl.metadata (3.2 kB)
#9 2.612 Collecting scipy (from speechbrain==1.0.0->-r requirements.txt (line 1))
#9 2.628   Downloading scipy-1.14.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)
#9 2.635      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 60.8/60.8 kB 18.7 MB/s eta 0:00:00
#9 2.747 Collecting sentencepiece (from speechbrain==1.0.0->-r requirements.txt (line 1))
#9 2.793   Downloading sentencepiece-0.2.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (7.7 kB)
#9 2.881 Collecting tqdm (from speechbrain==1.0.0->-r requirements.txt (line 1))
#9 2.899   Downloading tqdm-4.66.4-py3-none-any.whl.metadata (57 kB)
#9 2.910      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 57.6/57.6 kB 11.2 MB/s eta 0:00:00
#9 2.983 Collecting huggingface-hub (from speechbrain==1.0.0->-r requirements.txt (line 1))
#9 3.005   Downloading huggingface_hub-0.23.4-py3-none-any.whl.metadata (12 kB)
#9 3.074 Collecting Werkzeug>=3.0.0 (from flask==3.0.3->-r requirements.txt (line 2))
#9 3.101   Downloading werkzeug-3.0.3-py3-none-any.whl.metadata (3.7 kB)
#9 3.145 Collecting Jinja2>=3.1.2 (from flask==3.0.3->-r requirements.txt (line 2))
#9 3.171   Downloading jinja2-3.1.4-py3-none-any.whl.metadata (2.6 kB)
#9 3.209 Collecting itsdangerous>=2.1.2 (from flask==3.0.3->-r requirements.txt (line 2))
#9 3.234   Downloading itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
#9 3.297 Collecting click>=8.1.3 (from flask==3.0.3->-r requirements.txt (line 2))
#9 3.319   Downloading click-8.1.7-py3-none-any.whl.metadata (3.0 kB)
#9 3.321 Requirement already satisfied: blinker>=1.6.2 in /usr/lib/python3/dist-packages (from flask==3.0.3->-r requirements.txt (line 2)) (1.7.0)
#9 3.393 Collecting filelock (from torch==2.3.1->-r requirements.txt (line 4))
#9 3.415   Downloading filelock-3.15.4-py3-none-any.whl.metadata (2.9 kB)
#9 3.463 Collecting typing-extensions>=4.8.0 (from torch==2.3.1->-r requirements.txt (line 4))
#9 3.489   Downloading typing_extensions-4.12.2-py3-none-any.whl.metadata (3.0 kB)
#9 3.534 Collecting sympy (from torch==2.3.1->-r requirements.txt (line 4))
#9 3.556   Downloading sympy-1.12.1-py3-none-any.whl.metadata (12 kB)
#9 3.613 Collecting networkx (from torch==2.3.1->-r requirements.txt (line 4))
#9 3.640   Downloading networkx-3.3-py3-none-any.whl.metadata (5.1 kB)
#9 3.694 Collecting fsspec (from torch==2.3.1->-r requirements.txt (line 4))
#9 3.710   Downloading fsspec-2024.6.1-py3-none-any.whl.metadata (11 kB)
#9 3.769 Collecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch==2.3.1->-r requirements.txt (line 4))
#9 3.787   Downloading nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#9 3.819 Collecting nvidia-cuda-runtime-cu12==12.1.105 (from torch==2.3.1->-r requirements.txt (line 4))
#9 3.842   Downloading nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#9 3.885 Collecting nvidia-cuda-cupti-cu12==12.1.105 (from torch==2.3.1->-r requirements.txt (line 4))
#9 3.902   Downloading nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)
#9 3.938 Collecting nvidia-cudnn-cu12==8.9.2.26 (from torch==2.3.1->-r requirements.txt (line 4))
#9 3.956   Downloading nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)
#9 3.994 Collecting nvidia-cublas-cu12==12.1.3.1 (from torch==2.3.1->-r requirements.txt (line 4))
#9 4.013   Downloading nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#9 4.052 Collecting nvidia-cufft-cu12==11.0.2.54 (from torch==2.3.1->-r requirements.txt (line 4))
#9 4.069   Downloading nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#9 4.103 Collecting nvidia-curand-cu12==10.3.2.106 (from torch==2.3.1->-r requirements.txt (line 4))
#9 4.124   Downloading nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#9 4.162 Collecting nvidia-cusolver-cu12==11.4.5.107 (from torch==2.3.1->-r requirements.txt (line 4))
#9 4.189   Downloading nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)
#9 4.218 Collecting nvidia-cusparse-cu12==12.1.0.106 (from torch==2.3.1->-r requirements.txt (line 4))
#9 4.249   Downloading nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)
#9 4.281 Collecting nvidia-nccl-cu12==2.20.5 (from torch==2.3.1->-r requirements.txt (line 4))
#9 4.300   Downloading nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl.metadata (1.8 kB)
#9 4.340 Collecting nvidia-nvtx-cu12==12.1.105 (from torch==2.3.1->-r requirements.txt (line 4))
#9 4.357   Downloading nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.7 kB)
#9 4.409 Collecting triton==2.3.1 (from torch==2.3.1->-r requirements.txt (line 4))
#9 4.427   Downloading triton-2.3.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.4 kB)
#9 4.668 Collecting pillow!=8.3.*,>=5.3.0 (from torchvision==0.18.1->-r requirements.txt (line 5))
#9 4.702   Downloading pillow-10.3.0-cp311-cp311-manylinux_2_28_x86_64.whl.metadata (9.2 kB)
#9 5.210 Collecting regex>=2021.8.3 (from nltk==3.8.1->-r requirements.txt (line 6))
#9 5.231   Downloading regex-2024.5.15-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (40 kB)
#9 5.238      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 40.9/40.9 kB 6.7 MB/s eta 0:00:00
#9 5.357 Collecting pyyaml>=5.1 (from transformers==4.41.2->-r requirements.txt (line 7))
#9 5.380   Downloading PyYAML-6.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)
#9 5.467 Collecting requests (from transformers==4.41.2->-r requirements.txt (line 7))
#9 5.492   Downloading requests-2.32.3-py3-none-any.whl.metadata (4.6 kB)
#9 5.779 Collecting tokenizers<0.20,>=0.19 (from transformers==4.41.2->-r requirements.txt (line 7))
#9 5.808   Downloading tokenizers-0.19.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.7 kB)
#9 5.971 Collecting safetensors>=0.4.1 (from transformers==4.41.2->-r requirements.txt (line 7))
#9 5.995   Downloading safetensors-0.4.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.8 kB)
#9 6.075 Collecting audioread>=2.1.9 (from librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 6.101   Downloading audioread-3.0.1-py3-none-any.whl.metadata (8.4 kB)
#9 6.235 Collecting scikit-learn>=0.20.0 (from librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 6.256   Downloading scikit_learn-1.5.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)
#9 6.383 Collecting decorator>=4.3.0 (from librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 6.405   Downloading decorator-5.1.1-py3-none-any.whl.metadata (4.0 kB)
#9 6.552 Collecting numba>=0.51.0 (from librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 6.580   Downloading numba-0.60.0-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (2.7 kB)
#9 6.638 Collecting pooch>=1.1 (from librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 6.655   Downloading pooch-1.8.2-py3-none-any.whl.metadata (10 kB)
#9 6.801 Collecting soxr>=0.3.2 (from librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 6.824   Downloading soxr-0.3.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.5 kB)
#9 6.861 Collecting lazy-loader>=0.1 (from librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 6.880   Downloading lazy_loader-0.4-py3-none-any.whl.metadata (7.6 kB)
#9 6.975 Collecting msgpack>=1.0 (from librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 7.007   Downloading msgpack-1.0.8-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.1 kB)
#9 7.215 Collecting cffi>=1.0 (from soundfile==0.12.1->-r requirements.txt (line 9))
#9 7.256   Downloading cffi-1.16.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.5 kB)
#9 7.298 Collecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch==2.3.1->-r requirements.txt (line 4))
#9 7.326   Downloading nvidia_nvjitlink_cu12-12.5.40-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)
#9 7.380 Collecting pycparser (from cffi>=1.0->soundfile==0.12.1->-r requirements.txt (line 9))
#9 7.404   Downloading pycparser-2.22-py3-none-any.whl.metadata (943 bytes)
#9 7.520 Collecting MarkupSafe>=2.0 (from Jinja2>=3.1.2->flask==3.0.3->-r requirements.txt (line 2))
#9 7.545   Downloading MarkupSafe-2.1.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.0 kB)
#9 7.725 Collecting llvmlite<0.44,>=0.43.0dev0 (from numba>=0.51.0->librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 7.747   Downloading llvmlite-0.43.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.8 kB)
#9 7.801 Collecting platformdirs>=2.5.0 (from pooch>=1.1->librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 7.818   Downloading platformdirs-4.2.2-py3-none-any.whl.metadata (11 kB)
#9 7.953 Collecting charset-normalizer<4,>=2 (from requests->transformers==4.41.2->-r requirements.txt (line 7))
#9 7.977   Downloading charset_normalizer-3.3.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (33 kB)
#9 8.117 Collecting idna<4,>=2.5 (from requests->transformers==4.41.2->-r requirements.txt (line 7))
#9 8.167   Downloading idna-3.7-py3-none-any.whl.metadata (9.9 kB)
#9 8.246 Collecting urllib3<3,>=1.21.1 (from requests->transformers==4.41.2->-r requirements.txt (line 7))
#9 8.264   Downloading urllib3-2.2.2-py3-none-any.whl.metadata (6.4 kB)
#9 8.318 Collecting certifi>=2017.4.17 (from requests->transformers==4.41.2->-r requirements.txt (line 7))
#9 8.337   Downloading certifi-2024.6.2-py3-none-any.whl.metadata (2.2 kB)
#9 8.422 Collecting threadpoolctl>=3.1.0 (from scikit-learn>=0.20.0->librosa==0.10.2.post1->-r requirements.txt (line 8))
#9 8.443   Downloading threadpoolctl-3.5.0-py3-none-any.whl.metadata (13 kB)
#9 8.737 Collecting ruamel.yaml>=0.17.28 (from hyperpyyaml->speechbrain==1.0.0->-r requirements.txt (line 1))
#9 8.766   Downloading ruamel.yaml-0.18.6-py3-none-any.whl.metadata (23 kB)
#9 8.815 Collecting mpmath<1.4.0,>=1.1.0 (from sympy->torch==2.3.1->-r requirements.txt (line 4))
#9 8.863   Downloading mpmath-1.3.0-py3-none-any.whl.metadata (8.6 kB)
#9 8.940 Collecting ruamel.yaml.clib>=0.2.7 (from ruamel.yaml>=0.17.28->hyperpyyaml->speechbrain==1.0.0->-r requirements.txt (line 1))
#9 8.966   Downloading ruamel.yaml.clib-0.2.8-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl.metadata (2.2 kB)
#9 9.002 Downloading speechbrain-1.0.0-py3-none-any.whl (760 kB)
#9 9.127    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 760.1/760.1 kB 6.6 MB/s eta 0:00:00
#9 9.145 Downloading flask-3.0.3-py3-none-any.whl (101 kB)
#9 9.161    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 101.7/101.7 kB 18.4 MB/s eta 0:00:00
#9 9.178 Downloading torchaudio-2.3.1-cp311-cp311-manylinux1_x86_64.whl (3.4 MB)
#9 9.521    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.4/3.4 MB 9.9 MB/s eta 0:00:00
#9 9.550 Downloading torch-2.3.1-cp311-cp311-manylinux1_x86_64.whl (779.2 MB)
#9 100.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 779.2/779.2 MB 11.3 MB/s eta 0:00:00
#9 100.2 Downloading torchvision-0.18.1-cp311-cp311-manylinux1_x86_64.whl (7.0 MB)
#9 100.8    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 7.0/7.0 MB 10.9 MB/s eta 0:00:00
#9 100.9 Downloading nltk-3.8.1-py3-none-any.whl (1.5 MB)
#9 101.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.5/1.5 MB 10.0 MB/s eta 0:00:00
#9 101.1 Downloading transformers-4.41.2-py3-none-any.whl (9.1 MB)
#9 101.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 9.1/9.1 MB 14.5 MB/s eta 0:00:00
#9 101.7 Downloading librosa-0.10.2.post1-py3-none-any.whl (260 kB)
#9 101.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 260.1/260.1 kB 15.7 MB/s eta 0:00:00
#9 101.8 Downloading soundfile-0.12.1-py2.py3-none-manylinux_2_31_x86_64.whl (1.2 MB)
#9 101.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 13.4 MB/s eta 0:00:00
#9 101.9 Downloading numpy-1.26.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.3 MB)
#9 103.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 18.3/18.3 MB 9.7 MB/s eta 0:00:00
#9 103.7 Downloading nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)
#9 145.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 410.6/410.6 MB 10.4 MB/s eta 0:00:00
#9 145.2 Downloading nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)
#9 146.6    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 14.1/14.1 MB 10.1 MB/s eta 0:00:00
#9 146.6 Downloading nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)
#9 148.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 23.7/23.7 MB 8.6 MB/s eta 0:00:00
#9 148.9 Downloading nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)
#9 149.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 823.6/823.6 kB 12.8 MB/s eta 0:00:00
#9 149.0 Downloading nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)
#9 228.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 731.7/731.7 MB 7.6 MB/s eta 0:00:00
#9 229.0 Downloading nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)
#9 245.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 121.6/121.6 MB 9.5 MB/s eta 0:00:00
#9 245.6 Downloading nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)
#9 251.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 56.5/56.5 MB 9.9 MB/s eta 0:00:00
#9 251.9 Downloading nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)
#9 267.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 124.2/124.2 MB 7.5 MB/s eta 0:00:00
#9 267.3 Downloading nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)
#9 289.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 196.0/196.0 MB 9.2 MB/s eta 0:00:00
#9 289.4 Downloading nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl (176.2 MB)
#9 309.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 176.2/176.2 MB 8.1 MB/s eta 0:00:00
#9 309.3 Downloading nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)
#9 309.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 99.1/99.1 kB 7.7 MB/s eta 0:00:00
#9 309.4 Downloading triton-2.3.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (168.1 MB)
#9 327.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 168.1/168.1 MB 8.2 MB/s eta 0:00:00
#9 327.9 Downloading audioread-3.0.1-py3-none-any.whl (23 kB)
#9 327.9 Downloading cffi-1.16.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (464 kB)
#9 328.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 464.8/464.8 kB 7.3 MB/s eta 0:00:00
#9 328.1 Downloading click-8.1.7-py3-none-any.whl (97 kB)
#9 328.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 97.9/97.9 kB 2.1 MB/s eta 0:00:00
#9 328.2 Downloading decorator-5.1.1-py3-none-any.whl (9.1 kB)
#9 328.2 Downloading huggingface_hub-0.23.4-py3-none-any.whl (402 kB)
#9 328.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 402.6/402.6 kB 3.7 MB/s eta 0:00:00
#9 328.3 Downloading fsspec-2024.6.1-py3-none-any.whl (177 kB)
#9 328.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 177.6/177.6 kB 29.8 MB/s eta 0:00:00
#9 328.4 Downloading itsdangerous-2.2.0-py3-none-any.whl (16 kB)
#9 328.4 Downloading jinja2-3.1.4-py3-none-any.whl (133 kB)
#9 328.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 133.3/133.3 kB 19.0 MB/s eta 0:00:00
#9 328.5 Downloading joblib-1.4.2-py3-none-any.whl (301 kB)
#9 328.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 301.8/301.8 kB 7.5 MB/s eta 0:00:00
#9 328.6 Downloading lazy_loader-0.4-py3-none-any.whl (12 kB)
#9 328.6 Downloading msgpack-1.0.8-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (409 kB)
#9 328.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 409.3/409.3 kB 12.6 MB/s eta 0:00:00
#9 328.7 Downloading numba-0.60.0-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (3.7 MB)
#9 329.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.7/3.7 MB 5.4 MB/s eta 0:00:00
#9 329.5 Downloading packaging-24.1-py3-none-any.whl (53 kB)
#9 329.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 54.0/54.0 kB 515.9 kB/s eta 0:00:00
#9 329.7 Downloading pillow-10.3.0-cp311-cp311-manylinux_2_28_x86_64.whl (4.5 MB)
#9 330.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.5/4.5 MB 5.4 MB/s eta 0:00:00
#9 330.5 Downloading pooch-1.8.2-py3-none-any.whl (64 kB)
#9 330.6    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 64.6/64.6 kB 16.7 MB/s eta 0:00:00
#9 330.6 Downloading PyYAML-6.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (757 kB)
#9 330.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 757.7/757.7 kB 5.5 MB/s eta 0:00:00
#9 330.8 Downloading regex-2024.5.15-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (785 kB)
#9 330.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 785.0/785.0 kB 4.7 MB/s eta 0:00:00
#9 331.1 Downloading requests-2.32.3-py3-none-any.whl (64 kB)
#9 331.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 64.9/64.9 kB 2.8 MB/s eta 0:00:00
#9 331.3 Downloading safetensors-0.4.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.2 MB)
#9 331.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 5.6 MB/s eta 0:00:00
#9 331.6 Downloading scikit_learn-1.5.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.3 MB)
#9 333.6    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.3/13.3 MB 7.1 MB/s eta 0:00:00
#9 333.7 Downloading scipy-1.14.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.1 MB)
#9 339.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 41.1/41.1 MB 5.7 MB/s eta 0:00:00
#9 339.8 Downloading soxr-0.3.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)
#9 340.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 7.2 MB/s eta 0:00:00
#9 340.1 Downloading tokenizers-0.19.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB)
#9 340.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.6/3.6 MB 9.3 MB/s eta 0:00:00
#9 340.6 Downloading tqdm-4.66.4-py3-none-any.whl (78 kB)
#9 340.6    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 78.3/78.3 kB 177.0 MB/s eta 0:00:00
#9 340.7 Downloading typing_extensions-4.12.2-py3-none-any.whl (37 kB)
#9 340.7 Downloading werkzeug-3.0.3-py3-none-any.whl (227 kB)
#9 340.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 227.3/227.3 kB 15.0 MB/s eta 0:00:00
#9 340.8 Downloading filelock-3.15.4-py3-none-any.whl (16 kB)
#9 340.8 Downloading HyperPyYAML-1.2.2-py3-none-any.whl (16 kB)
#9 340.9 Downloading networkx-3.3-py3-none-any.whl (1.7 MB)
#9 341.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.7/1.7 MB 9.7 MB/s eta 0:00:00
#9 341.1 Downloading sentencepiece-0.2.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)
#9 341.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 10.6 MB/s eta 0:00:00
#9 341.3 Downloading sympy-1.12.1-py3-none-any.whl (5.7 MB)
#9 342.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.7/5.7 MB 8.2 MB/s eta 0:00:00
#9 342.0 Downloading certifi-2024.6.2-py3-none-any.whl (164 kB)
#9 342.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 164.4/164.4 kB 32.4 MB/s eta 0:00:00
#9 342.1 Downloading charset_normalizer-3.3.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (140 kB)
#9 342.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 140.3/140.3 kB 11.9 MB/s eta 0:00:00
#9 342.2 Downloading idna-3.7-py3-none-any.whl (66 kB)
#9 342.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 66.8/66.8 kB 71.6 MB/s eta 0:00:00
#9 342.4 Downloading llvmlite-0.43.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (43.9 MB)
#9 348.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 43.9/43.9 MB 5.7 MB/s eta 0:00:00
#9 348.6 Downloading MarkupSafe-2.1.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (28 kB)
#9 348.6 Downloading mpmath-1.3.0-py3-none-any.whl (536 kB)
#9 348.6    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 536.2/536.2 kB 14.1 MB/s eta 0:00:00
#9 348.7 Downloading platformdirs-4.2.2-py3-none-any.whl (18 kB)
#9 348.8 Downloading ruamel.yaml-0.18.6-py3-none-any.whl (117 kB)
#9 348.8    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 117.8/117.8 kB 7.9 MB/s eta 0:00:00
#9 348.9 Downloading threadpoolctl-3.5.0-py3-none-any.whl (18 kB)
#9 348.9 Downloading urllib3-2.2.2-py3-none-any.whl (121 kB)
#9 348.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 121.4/121.4 kB 15.6 MB/s eta 0:00:00
#9 348.9 Downloading nvidia_nvjitlink_cu12-12.5.40-py3-none-manylinux2014_x86_64.whl (21.3 MB)
#9 351.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 21.3/21.3 MB 10.5 MB/s eta 0:00:00
#9 351.3 Downloading pycparser-2.22-py3-none-any.whl (117 kB)
#9 351.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 117.6/117.6 kB 105.1 MB/s eta 0:00:00
#9 351.4 Downloading ruamel.yaml.clib-0.2.8-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (544 kB)
#9 351.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 544.0/544.0 kB 12.9 MB/s eta 0:00:00
#9 358.5 Installing collected packages: sentencepiece, mpmath, urllib3, typing-extensions, tqdm, threadpoolctl, sympy, safetensors, ruamel.yaml.clib, regex, pyyaml, pycparser, platformdirs, pillow, packaging, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, numpy, networkx, msgpack, MarkupSafe, llvmlite, joblib, itsdangerous, idna, fsspec, filelock, decorator, click, charset-normalizer, certifi, audioread, Werkzeug, triton, soxr, scipy, ruamel.yaml, requests, nvidia-cusparse-cu12, nvidia-cudnn-cu12, numba, nltk, lazy-loader, Jinja2, cffi, soundfile, scikit-learn, pooch, nvidia-cusolver-cu12, hyperpyyaml, huggingface-hub, flask, torch, tokenizers, librosa, transformers, torchvision, torchaudio, speechbrain
#9 456.1 Successfully installed Jinja2-3.1.4 MarkupSafe-2.1.5 Werkzeug-3.0.3 audioread-3.0.1 certifi-2024.6.2 cffi-1.16.0 charset-normalizer-3.3.2 click-8.1.7 decorator-5.1.1 filelock-3.15.4 flask-3.0.3 fsspec-2024.6.1 huggingface-hub-0.23.4 hyperpyyaml-1.2.2 idna-3.7 itsdangerous-2.2.0 joblib-1.4.2 lazy-loader-0.4 librosa-0.10.2.post1 llvmlite-0.43.0 mpmath-1.3.0 msgpack-1.0.8 networkx-3.3 nltk-3.8.1 numba-0.60.0 numpy-1.26.4 nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.20.5 nvidia-nvjitlink-cu12-12.5.40 nvidia-nvtx-cu12-12.1.105 packaging-24.1 pillow-10.3.0 platformdirs-4.2.2 pooch-1.8.2 pycparser-2.22 pyyaml-6.0.1 regex-2024.5.15 requests-2.32.3 ruamel.yaml-0.18.6 ruamel.yaml.clib-0.2.8 safetensors-0.4.3 scikit-learn-1.5.0 scipy-1.14.0 sentencepiece-0.2.0 soundfile-0.12.1 soxr-0.3.7 speechbrain-1.0.0 sympy-1.12.1 threadpoolctl-3.5.0 tokenizers-0.19.1 torch-2.3.1 torchaudio-2.3.1 torchvision-0.18.1 tqdm-4.66.4 transformers-4.41.2 triton-2.3.1 typing-extensions-4.12.2 urllib3-2.2.2
#9 456.1 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
#9 DONE 457.5s

#10 [6/6] COPY . .
#10 DONE 0.2s

#11 exporting to image
#11 exporting layers
#11 exporting layers 25.7s done
#11 writing image sha256:7ef70c98a7f0a3a5bd84e19a262feb915b53e21b9aa53c42a5bb12dbfdaebe11 done
#11 naming to docker.io/library/speechbrain-demo 0.0s done
#11 DONE 25.7s
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   789k  0:00:01  0:00:01 --:--:--  789k100  952k    0     0  100  952k      0   428k  0:00:02  0:00:02 --:--:--  428k100  952k    0     0  100  952k      0   294k  0:00:03  0:00:03 --:--:--  294k100  952k    0     0  100  952k      0   224k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   181k  0:00:05  0:00:05 --:--:--  181k100  952k    0     0  100  952k      0   152k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94603  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86147  0:00:11  0:00:11 --:--:--     0100  952k    0     0  100  952k      0  79066  0:00:12  0:00:12 --:--:--     0100  952k    0     0  100  952k      0  73131  0:00:13  0:00:13 --:--:--     0100  952k    0     0  100  952k      0  67957  0:00:14  0:00:14 --:--:--     0100  952k    0     0  100  952k      0  63487  0:00:15  0:00:15 --:--:--     0100  952k    0     0  100  952k      0  59603  0:00:16  0:00:16 --:--:--     0100  952k    0     0  100  952k      0  56123  0:00:17  0:00:17 --:--:--     0100  952k    0     0  100  952k      0  53021  0:00:18  0:00:18 --:--:--     0100  952k    0     0  100  952k      0  50279  0:00:19  0:00:19 --:--:--     0100  952k    0     0  100  952k      0  47783  0:00:20  0:00:20 --:--:--     0100  952k    0     0  100  952k      0  45520  0:00:21  0:00:21 --:--:--     0100  952k    0     0  100  952k      0  43461  0:00:22  0:00:22 --:--:--     0100  952k    0     0  100  952k      0  41580  0:00:23  0:00:23 --:--:--     0100  952k    0     0  100  952k      0  39856  0:00:24  0:00:24 --:--:--     0100  952k    0     0  100  952k      0  38269  0:00:25  0:00:25 --:--:--     0100  952k    0     0  100  952k      0  36804  0:00:26  0:00:26 --:--:--     0100  952k    0     0  100  952k      0  35446  0:00:27  0:00:27 --:--:--     0100  952k    0     0  100  952k      0  34185  0:00:28  0:00:28 --:--:--     0100  952k    0     0  100  952k      0  33013  0:00:29  0:00:29 --:--:--     0100  952k    0     0  100  952k      0  31918  0:00:30  0:00:30 --:--:--     0100  952k    0     0  100  952k      0  30904  0:00:31  0:00:31 --:--:--     0100  952k    0     0  100  952k      0  29951  0:00:32  0:00:32 --:--:--     0100  952k    0     0  100  952k      0  29045  0:00:33  0:00:33 --:--:--     0100  952k    0     0  100  952k      0  28202  0:00:34  0:00:34 --:--:--     0100  952k    0     0  100  952k      0  27400  0:00:35  0:00:35 --:--:--     0100  952k    0     0  100  952k      0  26647  0:00:36  0:00:36 --:--:--     0100  952k    0     0  100  952k      0  25937  0:00:37  0:00:37 --:--:--     0100  952k    0     0  100  952k      0  25255  0:00:38  0:00:38 --:--:--     0100  952k    0     0  100  952k      0  24609  0:00:39  0:00:39 --:--:--     0100  952k    0     0  100  952k      0  23996  0:00:40  0:00:40 --:--:--     0100  952k    0     0  100  952k      0  23419  0:00:41  0:00:41 --:--:--     0100  952k    0     0  100  952k      0  22862  0:00:42  0:00:42 --:--:--     0100  952k    0     0  100  952k      0  22335  0:00:43  0:00:43 --:--:--     0100  952k    0     0  100  952k      0  21834  0:00:44  0:00:44 --:--:--     0100  952k    0     0  100  952k      0  21350  0:00:45  0:00:45 --:--:--     0100  952k    0     0  100  952k      0  20887  0:00:46  0:00:46 --:--:--     0100  952k    0     0  100  952k      0  20442  0:00:47  0:00:47 --:--:--     0100  952k    0     0  100  952k      0  20017  0:00:48  0:00:48 --:--:--     0100  952k    0     0  100  952k      0  19614  0:00:49  0:00:49 --:--:--     0100  952k    0     0  100  952k      0  19222  0:00:50  0:00:50 --:--:--     0100  952k    0     0  100  952k      0  18846  0:00:51  0:00:51 --:--:--     0100  952k    0     0  100  952k      0  18487  0:00:52  0:00:52 --:--:--     0100  952k    0     0  100  952k      0  18138  0:00:53  0:00:53 --:--:--     0100  952k    0     0  100  952k      0  17803  0:00:54  0:00:54 --:--:--     0100  952k    0     0  100  952k      0  17483  0:00:55  0:00:55 --:--:--     0100  952k    0     0  100  952k      0  17171  0:00:56  0:00:56 --:--:--     0100  952k    0     0  100  952k      0  16871  0:00:57  0:00:57 --:--:--     0100  952k    0     0  100  952k      0  16583  0:00:58  0:00:58 --:--:--     0100  952k    0     0  100  952k      0  16303  0:00:59  0:00:59 --:--:--     0100  952k    0     0  100  952k      0  16031  0:01:00  0:01:00 --:--:--     0100  952k    0     0  100  952k      0  15769  0:01:01  0:01:01 --:--:--     0100  952k    0     0  100  952k      0  15517  0:01:02  0:01:02 --:--:--     0100  952k    0     0  100  952k      0  15271  0:01:03  0:01:03 --:--:--     0100  952k    0     0  100  952k      0  15033  0:01:04  0:01:04 --:--:--     0100  952k    0     0  100  952k      0  14802  0:01:05  0:01:05 --:--:--     0100  952k    0     0  100  952k      0  14578  0:01:06  0:01:06 --:--:--     0100  952k    0     0  100  952k      0  14363  0:01:07  0:01:07 --:--:--     0100  952k    0     0  100  952k      0  14152  0:01:08  0:01:08 --:--:--     0100  952k    0     0  100  952k      0  13946  0:01:09  0:01:09 --:--:--     0100  952k    0     0  100  952k      0  13747  0:01:10  0:01:10 --:--:--     0100  952k    0     0  100  952k      0  13553  0:01:11  0:01:11 --:--:--     0100  952k    0     0  100  952k      0  13365  0:01:12  0:01:12 --:--:--     0100  952k    0     0  100  952k      0  13185  0:01:13  0:01:13 --:--:--     0100  952k    0     0  100  952k      0  13008  0:01:14  0:01:14 --:--:--     0100  952k    0     0  100  952k      0  12834  0:01:15  0:01:15 --:--:--     0100  952k    0     0  100  952k      0  12665  0:01:16  0:01:16 --:--:--     0100  952k    0     0  100  952k      0  12501  0:01:18  0:01:17  0:00:01     0100  952k    0     0  100  952k      0  12343  0:01:18  0:01:18 --:--:--     0100  952k    0     0  100  952k      0  12186  0:01:20  0:01:20 --:--:--     0100  952k    0     0  100  952k      0  12035  0:01:21  0:01:21 --:--:--     0100  952k    0     0  100  952k      0  11887  0:01:22  0:01:22 --:--:--     0100  952k    0     0  100  952k      0  11742  0:01:23  0:01:23 --:--:--     0100  952k    0     0  100  952k      0  11602  0:01:24  0:01:24 --:--:--     0100  952k    0     0  100  952k      0  11464  0:01:25  0:01:25 --:--:--     0100  952k    0     0  100  952k      0  11329  0:01:26  0:01:26 --:--:--     0100  952k    0     0  100  952k      0  11197  0:01:27  0:01:27 --:--:--     0100  952k    0     0  100  952k      0  11069  0:01:28  0:01:28 --:--:--     0100  952k    0     0  100  952k      0  10943  0:01:29  0:01:29 --:--:--     0100  952k    0     0  100  952k      0  10821  0:01:30  0:01:30 --:--:--     0100  952k    0     0  100  952k      0  10701  0:01:31  0:01:31 --:--:--     0100  952k    0    18  100  952k      0  10643  0:01:31  0:01:31 --:--:--     3
Server response: {"emotion":"ang"}
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   787k  0:00:01  0:00:01 --:--:--  787k100  952k    0     0  100  952k      0   428k  0:00:02  0:00:02 --:--:--  428k100  952k    0     0  100  952k      0   293k  0:00:03  0:00:03 --:--:--  293k100  952k    0     0  100  952k      0   223k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   180k  0:00:05  0:00:05 --:--:--  180k100  952k    0     0  100  952k      0   151k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94707  0:00:10  0:00:10 --:--:--     0100  952k  100    59  100  952k      5  88592  0:00:11  0:00:11 --:--:--    12100  952k  100    59  100  952k      5  88590  0:00:11  0:00:11 --:--:--    15
Server response: {"language":"en: English","likelihood":0.7311094999313354}
Language identification completed successfully.
Predicted language: en: English
Likelihood: 0.7311094999313354
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 1904k    0     0  100 1904k      0  9453k --:--:-- --:--:-- --:--:-- 9428k100 1904k    0     0  100 1904k      0  1581k  0:00:01  0:00:01 --:--:-- 1581k100 1904k    0     0  100 1904k      0   859k  0:00:02  0:00:02 --:--:--  859k100 1904k    0     0  100 1904k      0   589k  0:00:03  0:00:03 --:--:--  589k100 1904k    0     0  100 1904k      0   450k  0:00:04  0:00:04 --:--:--  450k100 1904k    0     0  100 1904k      0   364k  0:00:05  0:00:05 --:--:--     0100 1904k    0     0  100 1904k      0   304k  0:00:06  0:00:06 --:--:--     0100 1904k    0     0  100 1904k      0   262k  0:00:07  0:00:07 --:--:--     0100 1904k    0     0  100 1904k      0   230k  0:00:08  0:00:08 --:--:--     0100 1904k    0     0  100 1904k      0   205k  0:00:09  0:00:09 --:--:--     0100 1904k    0     0  100 1904k      0   185k  0:00:10  0:00:10 --:--:--     0100 1904k    0     0  100 1904k      0   168k  0:00:11  0:00:11 --:--:--     0100 1904k    0     0  100 1904k      0   154k  0:00:12  0:00:12 --:--:--     0100 1904k  100    47  100 1904k      3   145k  0:00:15  0:00:13  0:00:02     9
Server response: {"prediction":true,"score":0.2612878680229187}
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  164k    0     0  100  164k      0   136k  0:00:01  0:00:01 --:--:--  136k100  164k    0     0  100  164k      0  76462  0:00:02  0:00:02 --:--:-- 76495100  164k    0     0  100  164k      0  52460  0:00:03  0:00:03 --:--:-- 52470100  164k    0     0  100  164k      0  39898  0:00:04  0:00:04 --:--:-- 39910100  164k    0     0  100  164k      0  32203  0:00:05  0:00:05 --:--:-- 32208100  164k    0     0  100  164k      0  26979  0:00:06  0:00:06 --:--:--     0100  164k    0     0  100  164k      0  23220  0:00:07  0:00:07 --:--:--     0100  164k    0     0  100  164k      0  20383  0:00:08  0:00:08 --:--:--     0100  164k    0     0  100  164k      0  18161  0:00:09  0:00:09 --:--:--     0100  164k    0     0  100  164k      0  16376  0:00:10  0:00:10 --:--:--     0100  164k    0     0  100  164k      0  14925  0:00:11  0:00:11 --:--:--     0100  164k    0     0  100  164k      0  13697  0:00:12  0:00:12 --:--:--     0100  164k    0     0  100  164k      0  12668  0:00:13  0:00:13 --:--:--     0100  164k    0     0  100  164k      0  11782  0:00:14  0:00:14 --:--:--     0100  164k    0     0  100  164k      0  11011  0:00:15  0:00:15 --:--:--     0100  164k    0     0  100  164k      0  10337  0:00:16  0:00:16 --:--:--     0100  164k    0     0  100  164k      0   9736  0:00:17  0:00:17 --:--:--     0100  164k    0     0  100  164k      0   9205  0:00:18  0:00:18 --:--:--     0100  164k    0     0  100  164k      0   8724  0:00:19  0:00:19 --:--:--     0100  164k    0     0  100  164k      0   8292  0:00:20  0:00:20 --:--:--     0 47  494k   21 73728  100  164k   3519   8063  0:01:35  0:00:20  0:01:15 16003100  494k  100  329k  100  164k  16119   8063  0:00:20  0:00:20 --:--:-- 93816
Archive:  ./subroutines/../results/separated_sources.zip
 extracting: ./subroutines/../results/source1.wav  
 extracting: ./subroutines/../results/source2.wav  
Speech separation completed successfully. Separated sources saved in ./subroutines/../results/.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   284    0     0  100   284      0    232  0:00:01  0:00:01 --:--:--   233100   284    0     0  100   284      0    127  0:00:02  0:00:02 --:--:--   127100   284    0     0  100   284      0     87  0:00:03  0:00:03 --:--:--    87100   284    0     0  100   284      0     66  0:00:04  0:00:04 --:--:--    66100   284    0     0  100   284      0     54  0:00:05  0:00:05 --:--:--    54100   284    0     0  100   284      0     45  0:00:06  0:00:06 --:--:--     0100   284    0     0  100   284      0     38  0:00:07  0:00:07 --:--:--     0100   284    0     0  100   284      0     34  0:00:08  0:00:08 --:--:--     0100   284    0     0  100   284      0     30  0:00:09  0:00:09 --:--:--     0100   284    0     0  100   284      0     27  0:00:10  0:00:10 --:--:--     0100   284    0     0  100   284      0     25  0:00:11  0:00:11 --:--:--     0100   284    0     0  100   284      0     23  0:00:12  0:00:12 --:--:--     0100   284    0     0  100   284      0     21  0:00:13  0:00:13 --:--:--     0100   284    0     0  100   284      0     19  0:00:14  0:00:14 --:--:--     0100   284    0     0  100   284      0     18  0:00:15  0:00:15 --:--:--     0100   284    0     0  100   284      0     17  0:00:16  0:00:16 --:--:--     0100   284    0     0  100   284      0     16  0:00:17  0:00:17 --:--:--     0100   284    0     0  100   284      0     15  0:00:18  0:00:18 --:--:--     0100   284    0     0  100   284      0     14  0:00:20  0:00:19  0:00:01     0100   284    0     0  100   284      0     13  0:00:21  0:00:20  0:00:01     0100   284    0     0  100   284      0     13  0:00:21  0:00:21 --:--:--     0100   284    0     0  100   284      0     12  0:00:23  0:00:22  0:00:01     0100   284    0     0  100   284      0     12  0:00:23  0:00:23 --:--:--     0100   284    0     0  100   284      0     11  0:00:25  0:00:24  0:00:01     0100   284    0     0  100   284      0     11  0:00:25  0:00:25 --:--:--     0100   284    0     0  100   284      0     10  0:00:28  0:00:26  0:00:02     0100   284    0     0  100   284      0     10  0:00:28  0:00:27  0:00:01     0100   284    0     0  100   284      0      9  0:00:31  0:00:28  0:00:03     0  1  372k    1  7240  100   284    249      9  0:25:30  0:00:29  0:25:01  1567100  372k  100  372k  100   284  13107      9  0:00:31  0:00:29  0:00:02  102k
Text-to-speech completed successfully. Generated audio saved in ./subroutines/../results/tts_result.wav.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   779k  0:00:01  0:00:01 --:--:--  779k100  952k    0     0  100  952k      0   425k  0:00:02  0:00:02 --:--:--  426k100  952k    0     0  100  952k      0   294k  0:00:03  0:00:03 --:--:--  294k100  952k    0     0  100  952k      0   224k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   181k  0:00:05  0:00:05 --:--:--  181k100  952k    0     0  100  952k      0   151k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94539  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86076  0:00:11  0:00:11 --:--:--     0100  952k    0     0  100  952k      0  79003  0:00:12  0:00:12 --:--:--     0100  952k    0     0  100  952k      0  73023  0:00:13  0:00:13 --:--:--     0100  952k    0     0  100  952k      0  67883  0:00:14  0:00:14 --:--:--     0100  952k    0     0  100  952k      0  63407  0:00:15  0:00:15 --:--:--     0100  952k    0     0  100  952k      0  59492  0:00:16  0:00:16 --:--:--     0100  952k    0     0  100  952k      0  56030  0:00:17  0:00:17 --:--:--     0100  952k    0     0  100  952k      0  52948  0:00:18  0:00:18 --:--:--     0100  952k    0     0  100  952k      0  50196  0:00:19  0:00:19 --:--:--     0100  952k    0     0  100  952k      0  47704  0:00:20  0:00:20 --:--:--     0100  952k    0     0  100  952k      0  45449  0:00:21  0:00:21 --:--:--     0100  952k    0     0  100  952k      0  43421  0:00:22  0:00:22 --:--:--     0100  952k    0     0  100  952k      0  41549  0:00:23  0:00:23 --:--:--     0100  952k    0     0  100  952k      0  39829  0:00:24  0:00:24 --:--:--     0100  952k    0     0  100  952k      0  38248  0:00:25  0:00:25 --:--:--     0100  952k    0     0  100  952k      0  36802  0:00:26  0:00:26 --:--:--     0100  952k    0     0  100  952k      0  35460  0:00:27  0:00:27 --:--:--     0100  952k    0     0  100  952k      0  34201  0:00:28  0:00:28 --:--:--     0100  952k    0     0  100  952k      0  33029  0:00:29  0:00:29 --:--:--     0100  952k    0     0  100  952k      0  31935  0:00:30  0:00:30 --:--:--     0100  952k    0     0  100  952k      0  30909  0:00:31  0:00:31 --:--:--     0100  952k    0     0  100  952k      0  29958  0:00:32  0:00:32 --:--:--     0100  952k    0     0  100  952k      0  29055  0:00:33  0:00:33 --:--:--     0100  952k    0     0  100  952k      0  28203  0:00:34  0:00:34 --:--:--     0100  952k    0     0  100  952k      0  27400  0:00:35  0:00:35 --:--:--     0100  952k    0     0  100  952k      0  26640  0:00:36  0:00:36 --:--:--     0100  952k    0     0  100  952k      0  25930  0:00:37  0:00:37 --:--:--     0100  952k    0     0  100  952k      0  25257  0:00:38  0:00:38 --:--:--     0100  952k    0     0  100  952k      0  24613  0:00:39  0:00:39 --:--:--     0100  952k    0     0  100  952k      0  23998  0:00:40  0:00:40 --:--:--     0100  952k    0     0  100  952k      0  23413  0:00:41  0:00:41 --:--:--     0100  952k    0     0  100  952k      0  22857  0:00:42  0:00:42 --:--:--     0100  952k    0     0  100  952k      0  22327  0:00:43  0:00:43 --:--:--     0100  952k    0     0  100  952k      0  21820  0:00:44  0:00:44 --:--:--     0100  952k    0     0  100  952k      0  21336  0:00:45  0:00:45 --:--:--     0100  952k    0     0  100  952k      0  20872  0:00:46  0:00:46 --:--:--     0100  952k    0     0  100  952k      0  20434  0:00:47  0:00:47 --:--:--     0100  952k    0     0  100  952k      0  20009  0:00:48  0:00:48 --:--:--     0100  952k    0     0  100  952k      0  19603  0:00:49  0:00:49 --:--:--     0100  952k    0     0  100  952k      0  19215  0:00:50  0:00:50 --:--:--     0100  952k    0     0  100  952k      0  18838  0:00:51  0:00:51 --:--:--     0100  952k    0     0  100  952k      0  18481  0:00:52  0:00:52 --:--:--     0100  952k    0     0  100  952k      0  18132  0:00:53  0:00:53 --:--:--     0100  952k    0     0  100  952k      0  17799  0:00:54  0:00:54 --:--:--     0100  952k    0     0  100  952k      0  17476  0:00:55  0:00:55 --:--:--     0100  952k    0     0  100  952k      0  17164  0:00:56  0:00:56 --:--:--     0100  952k    0     0  100  952k      0  16864  0:00:57  0:00:57 --:--:--     0100  952k    0     0  100  952k      0  16575  0:00:58  0:00:58 --:--:--     0100  952k    0     0  100  952k      0  16295  0:00:59  0:00:59 --:--:--     0100  952k    0     0  100  952k      0  16023  0:01:00  0:01:00 --:--:--     0100  952k    0     0  100  952k      0  15763  0:01:01  0:01:01 --:--:--     0100  952k    0     0  100  952k      0  15508  0:01:02  0:01:02 --:--:--     0100  952k    0     0  100  952k      0  15263  0:01:03  0:01:03 --:--:--     0100  952k    0     0  100  952k      0  15024  0:01:04  0:01:04 --:--:--     0100  952k    0     0  100  952k      0  14796  0:01:05  0:01:05 --:--:--     0100  952k    0     0  100  952k      0  14572  0:01:06  0:01:06 --:--:--     0100  952k    0     0  100  952k      0  14354  0:01:07  0:01:07 --:--:--     0100  952k    0     0  100  952k      0  14146  0:01:08  0:01:08 --:--:--     0100  952k    0     0  100  952k      0  13943  0:01:09  0:01:09 --:--:--     0100  952k    0     0  100  952k      0  13745  0:01:10  0:01:10 --:--:--     0100  952k    0     0  100  952k      0  13553  0:01:11  0:01:11 --:--:--     0100  952k    0     0  100  952k      0  13365  0:01:12  0:01:12 --:--:--     0100  952k    0    23  100  952k      0  13228  0:01:13  0:01:13 --:--:--     4100  952k    0    23  100  952k      0  13228  0:01:13  0:01:13 --:--:--     6
Server response: HULLO MY NAME IS MATTIE
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   777k  0:00:01  0:00:01 --:--:--  777k100  952k    0     0  100  952k      0   426k  0:00:02  0:00:02 --:--:--  426k100  952k    0     0  100  952k      0   293k  0:00:03  0:00:03 --:--:--  293k100  952k    0     0  100  952k      0   224k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   180k  0:00:05  0:00:05 --:--:--  181k100  952k    0     0  100  952k      0   151k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94639  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86237  0:00:11  0:00:11 --:--:--     0100  952k    0     0  100  952k      0  79139  0:00:12  0:00:12 --:--:--     0100  952k  100    55  100  952k      4  75251  0:00:13  0:00:12  0:00:01    11100  952k  100    55  100  952k      4  75251  0:00:13  0:00:12  0:00:01    15
Server response: {"boundaries":[{"end":5.049999713897705,"start":0.0}]}
Voice activity detection completed successfully.
The cache for model files in Transformers v4.22.0 has been updated. Migrating your old cache. This is a one-time only operation. You can interrupt this and resume the migration later on by calling `transformers.utils.move_cache()`.
0it [00:00, ?it/s]0it [00:00, ?it/s]
/usr/local/lib/python3.11/dist-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/usr/local/lib/python3.11/dist-packages/transformers/configuration_utils.py:364: UserWarning: Passing `gradient_checkpointing` to a config initialization is deprecated and will be removed in v5 Transformers. Using `model.gradient_checkpointing_enable()` instead, or if you are using the `Trainer` API, pass `gradient_checkpointing=True` in your `TrainingArguments`.
  warnings.warn(
Some weights of Wav2Vec2Model were not initialized from the model checkpoint at facebook/wav2vec2-base and are newly initialized: ['wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original0', 'wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original1']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
/usr/local/lib/python3.11/dist-packages/torch/nn/utils/weight_norm.py:28: UserWarning: torch.nn.utils.weight_norm is deprecated in favor of torch.nn.utils.parametrizations.weight_norm.
  warnings.warn("torch.nn.utils.weight_norm is deprecated in favor of torch.nn.utils.parametrizations.weight_norm.")
7fb1dafcb79f99e92e215b294262a6deaaa2023df04aa5b64243e8b80bdb353b
7fb1dafcb79f99e92e215b294262a6deaaa2023df04aa5b64243e8b80bdb353b
Untagged: speechbrain-demo:latest
Deleted: sha256:7ef70c98a7f0a3a5bd84e19a262feb915b53e21b9aa53c42a5bb12dbfdaebe11
ingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/2ad855c6656d45159ca0f36a805fe4c07da84c0b.lock
2024-06-28 20:34:11,801 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/hyperparams.yaml
2024-06-28 20:34:11,801 - INFO - Fetch custom_interface.py: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-06-28 20:34:11,896 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/custom_interface.py HTTP/11" 200 0
2024-06-28 20:34:11,897 - DEBUG - Attempting to acquire lock 140164204350928 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-06-28 20:34:11,898 - DEBUG - Lock 140164204350928 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-06-28 20:34:11,957 - DEBUG - https://huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/custom_interface.py HTTP/11" 200 6016
2024-06-28 20:34:11,959 - DEBUG - Attempting to release lock 140164204350928 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-06-28 20:34:11,960 - DEBUG - Lock 140164204350928 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-06-28 20:34:11,960 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/custom_interface.py
2024-06-28 20:34:12,349 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/config.json HTTP/11" 200 0
2024-06-28 20:34:12,351 - DEBUG - Attempting to acquire lock 140164204453392 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-06-28 20:34:12,351 - DEBUG - Lock 140164204453392 acquired on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-06-28 20:34:12,404 - DEBUG - https://huggingface.co:443 "GET /facebook/wav2vec2-base/resolve/main/config.json HTTP/11" 200 1842
2024-06-28 20:34:12,405 - DEBUG - Attempting to release lock 140164204453392 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-06-28 20:34:12,406 - DEBUG - Lock 140164204453392 released on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-06-28 20:34:12,452 - DEBUG - https://huggingface.co:443 "GET /api/models/facebook/wav2vec2-base HTTP/11" 200 1614
2024-06-28 20:34:12,583 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/model.safetensors HTTP/11" 404 0
2024-06-28 20:34:12,644 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/model.safetensors.index.json HTTP/11" 404 0
2024-06-28 20:34:12,700 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/pytorch_model.bin HTTP/11" 302 0
2024-06-28 20:34:12,701 - DEBUG - Attempting to acquire lock 140163967771216 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-06-28 20:34:12,701 - DEBUG - Lock 140163967771216 acquired on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-06-28 20:34:12,703 - DEBUG - Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2024-06-28 20:34:12,936 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /facebook/wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27pytorch_model.bin%3B+filename%3D%22pytorch_model.bin%22%3B&response-content-type=application%2Foctet-stream&Expires=1719864497&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NDQ5N319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9mYWNlYm9vay93YXYydmVjMi1iYXNlLzMyNDlmZTk4YmZjNjJmY2JjMjYwNjdmNzI0NzE2YTZlYzQ5ZDEyYzQ3MjhhMmFmMWRmNjU5MDEzOTA1ZGZmMjE~cmVzcG9uc2UtY29udGVudC1kaXNwb3NpdGlvbj0qJnJlc3BvbnNlLWNvbnRlbnQtdHlwZT0qIn1dfQ__&Signature=V3UiVllVS3Bo05oXMrsbXC8snJFihuPBBIEbPyOA9tBhJG5~gFtm9gozBDb0twb6DAcLQdeK1XcW~eyN~9eqrbG3KItbskcvSh7tGgVVsHkgot6fKAmA3fnCeb1Fh3M3f-i1mq0ZI3bi40vGWi1nF3LulPKN2A6tHGM-ycP3OXhg4xdkXmI2jPZbsWKUJV3jVkVo5b3K24TeftbvXsofAtcKaIY7NTZIZOH-d~9laspmLSLJeQ0LUxI5JB-V8zgApkdv-0tnzjUTUUia22UOAJH1NkW2UxFajqfXt8PGcVAz3JNLR2gK5YTIB3rvwSUpFEywAu7Uj6l5Ai9jV~CCrg__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 380267417
2024-06-28 20:34:54,851 - DEBUG - Attempting to release lock 140163967771216 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-06-28 20:34:54,852 - DEBUG - Lock 140163967771216 released on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-06-28 20:34:54,852 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-06-28 20:34:54,964 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/model.safetensors HTTP/11" 404 0
2024-06-28 20:34:55,267 - WARNING - speechbrain.lobes.models.huggingface_transformers.huggingface - Wav2Vec2Model is frozen.
2024-06-28 20:34:55,315 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/preprocessor_config.json HTTP/11" 200 0
2024-06-28 20:34:55,316 - DEBUG - Attempting to acquire lock 140164181226448 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-06-28 20:34:55,316 - DEBUG - Lock 140164181226448 acquired on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-06-28 20:34:55,358 - DEBUG - https://huggingface.co:443 "GET /facebook/wav2vec2-base/resolve/main/preprocessor_config.json HTTP/11" 200 159
2024-06-28 20:34:55,359 - DEBUG - Attempting to release lock 140164181226448 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-06-28 20:34:55,359 - DEBUG - Lock 140164181226448 released on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-06-28 20:34:55,402 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/config.json HTTP/11" 200 0
2024-06-28 20:34:55,406 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/CustomEncoderWav2vec2Classifier-6d849d67d0260d5a3ea6b156bb50a54b.
2024-06-28 20:34:55,406 - INFO - Fetch wav2vec2.ckpt: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-06-28 20:34:55,508 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/wav2vec2.ckpt HTTP/11" 302 0
2024-06-28 20:34:55,509 - DEBUG - Attempting to acquire lock 140163914341520 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-06-28 20:34:55,510 - DEBUG - Lock 140163914341520 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-06-28 20:34:55,536 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27wav2vec2.ckpt%3B+filename%3D%22wav2vec2.ckpt%22%3B&Expires=1719866095&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjA5NX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9lbW90aW9uLXJlY29nbml0aW9uLXdhdjJ2ZWMyLUlFTU9DQVAvYjZkYjE3MGE0ODdiMjkxMmNmZTEwMzU5ZmFkNDBkYmI3NTYzMTIwNjU2ZjI2ZjQ3YzUyMWIxYzdlNTc4YmRkMD9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=brb909SMq3CKGDkjjrtOTPERT9z1QomMS3y6SJUEWoFys6tJuEIgEvaho2j1fNrCxkEk4tLyqll7FACk00spb0h6yy5JCF8bPvqoGBR6llcG6nS~2l7WpMxOCwdyGc7VoLi1e2xWe08Zthbnhduf33ENKGSnn8kEbJuwOpaIgVNOD4bia3dK~sEyO2xF~cwKrQPtimeGWStzz422~uuv62dFVpkKJohQwFtguanYvWjgPmaq1hkO4k8JDUqVvOGWZQpfq5ByV~Rr~PzM4h894Mi4A5MaBtRT-387McFdYL3-eaOa-za-iBgYW5EALO29-WvxXwiIKli43vu9HJ3wpg__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 377575130
2024-06-28 20:35:42,393 - DEBUG - Attempting to release lock 140163914341520 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-06-28 20:35:42,393 - DEBUG - Lock 140163914341520 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-06-28 20:35:42,394 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/wav2vec2.ckpt
2024-06-28 20:35:42,394 - INFO - Fetch model.ckpt: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-06-28 20:35:42,451 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/model.ckpt HTTP/11" 302 0
2024-06-28 20:35:42,452 - DEBUG - Attempting to acquire lock 140163967777680 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-06-28 20:35:42,453 - DEBUG - Lock 140163967777680 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-06-28 20:35:42,482 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model.ckpt%3B+filename%3D%22model.ckpt%22%3B&Expires=1719866142&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjE0Mn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9lbW90aW9uLXJlY29nbml0aW9uLXdhdjJ2ZWMyLUlFTU9DQVAvZTM1MWJhZmM4YzBhMjY5OWYxNzRlMmY0M2YxM2U3MzI4MzY3MzE2MjFhOGU1OTViNTNkZGFmNTMzNGFiY2VmYj9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=LlS8MenV5U3fpk5DSJXGUEhBeva0Z1qEGRGv4axA-Y6-F3syu4UiIbOxFFu9~kpffT7PtxCdfYivvd5NqZcAgbYVtzzpmsJbXw57Trix1BL5EBWVe3me9iUWuFKakqDTxbregrofKbaF5xeSowceC-1gVDvOiVkG7KJtIfw~eng~2VerT6IkA5W4oefxhoo5OHH6dUIYjsMgRRaPdp2o80NA5SK9aOdFXhDUgVc1XnPVcckaocdUxHOdFBKXGObIB-P3vohhj4nF3ysjb8N8Gmy7t~VlBxCeMQPNz-HsD6B0dt~0lTd-Guywlzl-rMZ4Bao92yche-6CJHCQm47G1g__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 13176
2024-06-28 20:35:42,483 - DEBUG - Attempting to release lock 140163967777680 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-06-28 20:35:42,483 - DEBUG - Lock 140163967777680 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-06-28 20:35:42,483 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/model.ckpt
2024-06-28 20:35:42,484 - INFO - Fetch label_encoder.txt: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-06-28 20:35:42,540 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/label_encoder.txt HTTP/11" 200 0
2024-06-28 20:35:42,540 - DEBUG - Attempting to acquire lock 140163967772816 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-06-28 20:35:42,540 - DEBUG - Lock 140163967772816 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-06-28 20:35:42,592 - DEBUG - https://huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/label_encoder.txt HTTP/11" 200 83
2024-06-28 20:35:42,593 - DEBUG - Attempting to release lock 140163967772816 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-06-28 20:35:42,593 - DEBUG - Lock 140163967772816 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-06-28 20:35:42,593 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/label_encoder.txt
2024-06-28 20:35:42,594 - INFO - Loading pretrained files for: wav2vec2, model, label_encoder
2024-06-28 20:35:42,752 - DEBUG - Loaded categorical encoding from pretrained_models/CustomEncoderWav2vec2Classifier-6d849d67d0260d5a3ea6b156bb50a54b/label_encoder.ckpt
2024-06-28 20:35:42,758 - INFO - Emotion classification model loaded successfully.
2024-06-28 20:35:42,758 - INFO - Starting emotion classification...
2024-06-28 20:35:42,758 - INFO - Destination tmpmm0j3ugi: local file in /tmp/tmpmm0j3ugi.
2024-06-28 20:35:43,152 - DEBUG - CategoricalEncoder.expect_len was never called: assuming category count of 4 to be correct! Sanity check your encoder using `.expect_len`. Ensure that downstream code also uses the correct size. If you are sure this does not apply to you, use `.ignore_len`.
2024-06-28 20:35:43,152 - INFO - Emotion classification completed. Predicted emotion: ang
2024-06-28 20:35:43,153 - INFO - 172.17.0.1 - - [28/Jun/2024 20:35:43] "POST /classify_emotion HTTP/1.1" 200 -
2024-06-28 20:35:43,362 - INFO - Received request at /identify_language endpoint
2024-06-28 20:35:43,374 - INFO - Saved audio file to temporary location: /tmp/tmpfvi1wrwl
2024-06-28 20:35:43,374 - INFO - Loading language identification model...
2024-06-28 20:35:43,374 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-28 20:35:43,375 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-06-28 20:35:43,543 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-06-28 20:35:43,549 - DEBUG - Attempting to acquire lock 140164230169360 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-06-28 20:35:43,549 - DEBUG - Lock 140164230169360 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-06-28 20:35:43,590 - DEBUG - https://huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/hyperparams.yaml HTTP/11" 200 1519
2024-06-28 20:35:43,591 - DEBUG - Attempting to release lock 140164230169360 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-06-28 20:35:43,591 - DEBUG - Lock 140164230169360 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-06-28 20:35:43,591 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/hyperparams.yaml
2024-06-28 20:35:43,592 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-28 20:35:43,632 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/custom.py HTTP/11" 404 0
2024-06-28 20:35:43,848 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/lang-id-voxlingua107-ecapa.
2024-06-28 20:35:43,849 - INFO - Fetch embedding_model.ckpt: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-28 20:35:43,900 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/embedding_model.ckpt HTTP/11" 302 0
2024-06-28 20:35:43,902 - DEBUG - Attempting to acquire lock 140163967878096 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-06-28 20:35:43,902 - DEBUG - Lock 140163967878096 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-06-28 20:35:43,904 - DEBUG - Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2024-06-28 20:35:44,109 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27embedding_model.ckpt%3B+filename%3D%22embedding_model.ckpt%22%3B&Expires=1719866143&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjE0M319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9sYW5nLWlkLXZveGxpbmd1YTEwNy1lY2FwYS9hYjc1MGQ1YzA2ZDcxMzQ3NzA0NWZhNzk4ZmFiNWQzM2U5NTlkYmMwZGZlNGRlNTEwYTlhNDc4NDRjNzlhMTlhP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=g31C5XmRNgCL2YEDKcet8TmRSoUQcVFSLPZxmy1gC30M8O8TOfziXs21Vv40KTlwlI4wc600EEg1vrJjBFktMjfOFEfW6I59bYQelRKDHenXfZvy3H1lmzc1KSw79vVipilBQw5Tsgs5-uv32sJJYfBzLRAHyVsNDykZr4PeAq7aLrc2t-uEmA737eMoNMb9drpXOp3D0M22HE3sTEr7JnBStthO~7VZfNGB3JXhsPbG7ffbL8q-0IgN98Q~JnanDmPAIEua~vvT4Q3TsqVvXC3em4Y7fFyxrofsbLwUtHDZ5cqw4HgokPYL26xi0BCrDmUpRTPZ5smEMQ0MFnwbAQ__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 84474355
2024-06-28 20:35:53,468 - DEBUG - Attempting to release lock 140163967878096 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-06-28 20:35:53,468 - DEBUG - Lock 140163967878096 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-06-28 20:35:53,468 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/embedding_model.ckpt
2024-06-28 20:35:53,469 - INFO - Fetch classifier.ckpt: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-28 20:35:53,597 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/classifier.ckpt HTTP/11" 302 0
2024-06-28 20:35:53,598 - DEBUG - Attempting to acquire lock 140163967767120 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-06-28 20:35:53,598 - DEBUG - Lock 140163967767120 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-06-28 20:35:53,652 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27classifier.ckpt%3B+filename%3D%22classifier.ckpt%22%3B&Expires=1719866153&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjE1M319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9sYW5nLWlkLXZveGxpbmd1YTEwNy1lY2FwYS9hNTBkOTAyNGZmNThkMzE3MDMxYzk3ODdkNGM2YzYxNGQ0NTRhODdhOGVmMzJmOWQzNjMzOGNkM2ZmNTdhZGJjP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=Z-II87Ymylkn26W~jSuVrJlm2c7tY4syqdoc1agGKLX376mQgWbz4LFW6FpcRHx1TXAIQEpjBJucsZD11oziNZmpOrZqhl89VH-7dzVTd5PuTU6pjE3duqSaRPH2tL9-rMCK4~c-XMWawNaWQxb2QK0-V2MFi1Z2GHBdegnGTfTkltv0jNUE-oZuf8QWlVUrMrreZt8zhNZVe5Oo2bQbx8NjfVFYnqDQLjjNE3AFG5MfVnPYokrI7SxXFTmxNBWITJBGpYz-Omz0gqDIWYByHUlguPpEZA6j98dyMifrncXLW2AU2JPqTkNDFVfM8g7qGNNNcCFrfuuePUgCARKveQ__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 762555
2024-06-28 20:35:53,777 - DEBUG - Attempting to release lock 140163967767120 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-06-28 20:35:53,777 - DEBUG - Lock 140163967767120 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-06-28 20:35:53,778 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/classifier.ckpt
2024-06-28 20:35:53,779 - INFO - Fetch label_encoder.txt: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-28 20:35:53,835 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/label_encoder.txt HTTP/11" 200 0
2024-06-28 20:35:53,837 - DEBUG - Attempting to acquire lock 140164204460048 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-06-28 20:35:53,837 - DEBUG - Lock 140164204460048 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-06-28 20:35:53,880 - DEBUG - https://huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/label_encoder.txt HTTP/11" 200 2204
2024-06-28 20:35:53,881 - DEBUG - Attempting to release lock 140164204460048 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-06-28 20:35:53,881 - DEBUG - Lock 140164204460048 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-06-28 20:35:53,881 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/label_encoder.txt
2024-06-28 20:35:53,882 - INFO - Loading pretrained files for: embedding_model, classifier, label_encoder
2024-06-28 20:35:54,071 - DEBUG - Loaded categorical encoding from pretrained_models/lang-id-voxlingua107-ecapa/label_encoder.ckpt
2024-06-28 20:35:54,076 - INFO - Language identification model loaded successfully.
2024-06-28 20:35:54,076 - INFO - Starting language identification...
2024-06-28 20:35:54,076 - INFO - Destination tmpfvi1wrwl: local file in /tmp/tmpfvi1wrwl.
2024-06-28 20:35:54,363 - DEBUG - CategoricalEncoder.expect_len was never called: assuming category count of 107 to be correct! Sanity check your encoder using `.expect_len`. Ensure that downstream code also uses the correct size. If you are sure this does not apply to you, use `.ignore_len`.
2024-06-28 20:35:54,364 - INFO - Language identification completed. Predicted language: en: English, Likelihood: 0.7311094999313354
2024-06-28 20:35:54,365 - INFO - 172.17.0.1 - - [28/Jun/2024 20:35:54] "POST /identify_language HTTP/1.1" 200 -
2024-06-28 20:35:55,016 - INFO - Received request at /verify_speaker endpoint
2024-06-28 20:35:55,033 - INFO - Saved enrollment audio to: /tmp/tmpead58_hj
2024-06-28 20:35:55,033 - INFO - Saved verification audio to: /tmp/tmph5e5gads
2024-06-28 20:35:55,033 - INFO - Loading speaker verification model...
2024-06-28 20:35:55,033 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-28 20:35:55,069 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-06-28 20:35:55,070 - DEBUG - Attempting to acquire lock 140163914116112 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-06-28 20:35:55,070 - DEBUG - Lock 140163914116112 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-06-28 20:35:55,126 - DEBUG - https://huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/resolve/main/hyperparams.yaml HTTP/11" 200 1920
2024-06-28 20:35:55,127 - DEBUG - Attempting to release lock 140163914116112 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-06-28 20:35:55,127 - DEBUG - Lock 140163914116112 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-06-28 20:35:55,127 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/hyperparams.yaml
2024-06-28 20:35:55,128 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-28 20:35:55,190 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/custom.py HTTP/11" 404 0
2024-06-28 20:35:55,354 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/spkrec-ecapa-voxceleb.
2024-06-28 20:35:55,354 - INFO - Fetch embedding_model.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-28 20:35:55,422 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/embedding_model.ckpt HTTP/11" 302 0
2024-06-28 20:35:55,424 - DEBUG - Attempting to acquire lock 140164180618832 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-06-28 20:35:55,424 - DEBUG - Lock 140164180618832 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-06-28 20:35:55,447 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27embedding_model.ckpt%3B+filename%3D%22embedding_model.ckpt%22%3B&Expires=1719865664&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NTY2NH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zcGtyZWMtZWNhcGEtdm94Y2VsZWIvMDU3NWNiNjQ4NDVlNmI5YTEwZGI5YmNiNzRkNWFjMzJiMzI2YjhkYzkwMzUyNjcxZDM0NWUyZWUzZDAxMjZhMj9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=WHe~74NYXY1sfF4NvuqLLcldzqoogSd0PUBSZdpNBv68n6oH0zqhdUSTPvE~OfrKaTvY4p2pCY0RiPOQ57Rz98rN-spl6A9Z-4gjnwxjHIC1z4xiPRaFALlODefi3Jei62wU7tHkvdvTPnbRAOig1ntuw1J2nApaTzbpv4YNRApnzvFgGcedA87r08NlDcOnPyWgtQMfG4Ez0wFtmqWmEwGTIl3jVmQ4etwn7dO0JEvuqX1CCCfb2e6p4hwzVyZW0tphPWKfhejjsTdCRzXsVGHyXKsdlFGgKYTKR9by~IFjWG3OWyfxyFjlIlOr9ooFvQqoLn~5jkqj4hP7MqHvzw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 83316686
2024-06-28 20:36:06,010 - DEBUG - Attempting to release lock 140164180618832 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-06-28 20:36:06,010 - DEBUG - Lock 140164180618832 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-06-28 20:36:06,010 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/embedding_model.ckpt
2024-06-28 20:36:06,012 - INFO - Fetch mean_var_norm_emb.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-28 20:36:06,071 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/mean_var_norm_emb.ckpt HTTP/11" 200 0
2024-06-28 20:36:06,072 - DEBUG - Attempting to acquire lock 140163914111632 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-06-28 20:36:06,072 - DEBUG - Lock 140163914111632 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-06-28 20:36:06,120 - DEBUG - https://huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/resolve/main/mean_var_norm_emb.ckpt HTTP/11" 200 1921
2024-06-28 20:36:06,121 - DEBUG - Attempting to release lock 140163914111632 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-06-28 20:36:06,122 - DEBUG - Lock 140163914111632 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-06-28 20:36:06,122 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/mean_var_norm_emb.ckpt
2024-06-28 20:36:06,124 - INFO - Fetch classifier.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-28 20:36:06,175 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/classifier.ckpt HTTP/11" 302 0
2024-06-28 20:36:06,177 - DEBUG - Attempting to acquire lock 140163967742864 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-06-28 20:36:06,178 - DEBUG - Lock 140163967742864 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-06-28 20:36:06,221 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27classifier.ckpt%3B+filename%3D%22classifier.ckpt%22%3B&Expires=1719866166&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjE2Nn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zcGtyZWMtZWNhcGEtdm94Y2VsZWIvZmQ5ZTM2MzRmZTY4YmQwYTQyN2M5NWUzNTRjMGM2NzczNzRmNjJiM2Y0MzRlNDViNzg1OTk5NTBkODYwZDUzNT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=IUP6OEC~9nbGyqEBgYhGQ2cc5E8sUFfNRyBzT6BFu4aYM5xooj6ElE6h353mETQGEWFsWKJyJMrZK-TCyPaUJo-s~44Zop2M4Ge4rWbM4Z9zwnRtmL2cxN9GXlyzTg~28ZCt6VlpuZCiOP5RQbGLduCtXyxdo-1hRxbmCrcvUjqb84xOqwSi2pZrbBDEusebH8~Z1B8r-MUbAdlu0sdF8Bc6MlPJhS4nXHBxIJnOCNS0c2MdF4KdQSp7jPBAA~C5Ae~b6smeH2ci2tQwjuN3h3n8npzfd3cdwjBAYnIxkvlJnaQhuO7Nh8h2syIIka8HroPPe84VUZWguGV66YfFkQ__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 5534328
2024-06-28 20:36:07,064 - DEBUG - Attempting to release lock 140163967742864 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-06-28 20:36:07,064 - DEBUG - Lock 140163967742864 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-06-28 20:36:07,064 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/classifier.ckpt
2024-06-28 20:36:07,065 - INFO - Fetch label_encoder.txt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-28 20:36:07,103 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/label_encoder.txt HTTP/11" 200 0
2024-06-28 20:36:07,103 - DEBUG - Attempting to acquire lock 140164204422992 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-06-28 20:36:07,103 - DEBUG - Lock 140164204422992 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-06-28 20:36:07,155 - DEBUG - https://huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/resolve/main/label_encoder.txt HTTP/11" 200 128619
2024-06-28 20:36:07,189 - DEBUG - Attempting to release lock 140164204422992 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-06-28 20:36:07,189 - DEBUG - Lock 140164204422992 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-06-28 20:36:07,189 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/label_encoder.txt
2024-06-28 20:36:07,190 - INFO - Loading pretrained files for: embedding_model, mean_var_norm_emb, classifier, label_encoder
2024-06-28 20:36:07,308 - DEBUG - Loaded categorical encoding from pretrained_models/spkrec-ecapa-voxceleb/label_encoder.ckpt
2024-06-28 20:36:07,312 - INFO - Speaker verification model loaded successfully.
2024-06-28 20:36:07,312 - INFO - Starting speaker verification...
2024-06-28 20:36:07,312 - INFO - Destination tmpead58_hj: local file in /tmp/tmpead58_hj.
2024-06-28 20:36:07,330 - INFO - Destination tmph5e5gads: local file in /tmp/tmph5e5gads.
2024-06-28 20:36:08,055 - INFO - Speaker verification completed. Score: 0.2612878680229187, Prediction: True
2024-06-28 20:36:08,057 - INFO - 172.17.0.1 - - [28/Jun/2024 20:36:08] "POST /verify_speaker HTTP/1.1" 200 -
2024-06-28 20:36:08,302 - INFO - Received request at /separate_speech endpoint
Loading SpeechBrain model...
2024-06-28 20:36:08,303 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-28 20:36:08,391 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-06-28 20:36:08,393 - DEBUG - Attempting to acquire lock 140164204447824 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-06-28 20:36:08,393 - DEBUG - Lock 140164204447824 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-06-28 20:36:08,441 - DEBUG - https://huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/resolve/main/hyperparams.yaml HTTP/11" 200 1515
2024-06-28 20:36:08,443 - DEBUG - Attempting to release lock 140164204447824 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-06-28 20:36:08,443 - DEBUG - Lock 140164204447824 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-06-28 20:36:08,443 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/hyperparams.yaml
2024-06-28 20:36:08,443 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-28 20:36:08,482 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/custom.py HTTP/11" 404 0
2024-06-28 20:36:08,669 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/SepformerSeparation-2c9839ff08323bf97969e56e78b11972.
2024-06-28 20:36:08,670 - INFO - Fetch masknet.ckpt: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-28 20:36:08,724 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/masknet.ckpt HTTP/11" 302 0
2024-06-28 20:36:08,725 - DEBUG - Attempting to acquire lock 140164204446032 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-06-28 20:36:08,725 - DEBUG - Lock 140164204446032 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-06-28 20:36:08,761 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27masknet.ckpt%3B+filename%3D%22masknet.ckpt%22%3B&Expires=1719866168&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjE2OH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zZXBmb3JtZXItd3NqMDJtaXgvNTdkZDVmNDliZjIxYzVhMjEwMWJiNGU0NjY0OGQwNWQzNGQ1MTdhNTllMjZmMGIwNjY0NmQwYmViZTgyMTRjNz9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=Khl14J~UXcPXXND5tKV3EuMGn5IduHjnLD~LHQASsKEur~QAkMMwWHN~XLwJkctD~DMHevz72~ByqJwvcBJp-Kt9k~RK32WD3iGf~JSd-iZxCcHdtR0pq7RCVNseyzhqRoklizJZGM97n4R9iJtkLbq1L9c2iNwcmesDXFjCMcvObBdYoVXi9AbXTIGE3wk7WWdp3yzHk1XCXPw52ebLPr8iqbeG6RJy~QoJs6zYF2dGlFUycqxThlYrf4QJjX2fpSSAKL1z5fwjjEF1oXDRC~DfLIUVgbwN5j0UObVzY4GpVQB8e6xKzwDoIvL73AhUduyXndM3ZtES~7r1ULofiQ__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 113108458
2024-06-28 20:36:20,670 - DEBUG - Attempting to release lock 140164204446032 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-06-28 20:36:20,670 - DEBUG - Lock 140164204446032 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-06-28 20:36:20,670 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/masknet.ckpt
2024-06-28 20:36:20,670 - INFO - Fetch encoder.ckpt: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-28 20:36:20,740 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/encoder.ckpt HTTP/11" 302 0
2024-06-28 20:36:20,741 - DEBUG - Attempting to acquire lock 140163967766224 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-06-28 20:36:20,741 - DEBUG - Lock 140163967766224 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-06-28 20:36:20,764 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27encoder.ckpt%3B+filename%3D%22encoder.ckpt%22%3B&Expires=1719866180&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjE4MH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zZXBmb3JtZXItd3NqMDJtaXgvMzEzOWJiODgwYjI5ZWE3N2FlOGExNjhiOGYyYWQ2ZThlYjVjMmMwOTA0Mjg5Njc2YzIyM2QwZTkzY2QyYTM1ZD9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=WKzN~elL-ckNFxQwsOMBg5EnRcnDyLOW5nI-vgseVX2inka~b767xYHNArZQQB5opwCrBL5gPvHAxKxbb5M0leY9nQo5WEJaOrbPbR402I0K9kzQBhk~4ueDZ2WNL6-Ow6UWhvPrMxDd0OpvVwtJSubPwOgkgyekrDZdiO1c8HnNuvbXo3HqB6AK1S385~-RBSvlk08fc6wgqynEX09p26NAZO~DEw2rT6~aA6kbkWtbqoPhvoN3bPdbG5u5sEkXcuRN4vQrzcL9aGHhBsNA9Nrluo4k~eTFTkDcINoZEUNHU-FSivlYeYXCmxHk9QBe9TaWenER973NlYiOLAH9nw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 17267
2024-06-28 20:36:20,768 - DEBUG - Attempting to release lock 140163967766224 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-06-28 20:36:20,768 - DEBUG - Lock 140163967766224 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-06-28 20:36:20,768 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/encoder.ckpt
2024-06-28 20:36:20,768 - INFO - Fetch decoder.ckpt: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-28 20:36:20,815 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/decoder.ckpt HTTP/11" 302 0
2024-06-28 20:36:20,817 - DEBUG - Attempting to acquire lock 140163830352592 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-06-28 20:36:20,817 - DEBUG - Lock 140163830352592 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-06-28 20:36:20,840 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27decoder.ckpt%3B+filename%3D%22decoder.ckpt%22%3B&Expires=1719866180&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjE4MH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zZXBmb3JtZXItd3NqMDJtaXgvYWJlYTFhMmQ0MTE1MTMzMWI0YzM2MDcxZDFiMzIwNWFlZDk0MGExODk3MjFmMDA4YjEyYTcwM2U5YzYzZTdlND9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=Ye2DSzXN5CYsnmJRnXf2ueOQnK9UQuM~dK9KAtZZVvJ3tH~JBQ3bSYcZU8M3Yuvi7mAvw3F~Sm5i-w5RSri0J7XLq4CHVCU6QvbLi7Vg6N6t5Ic3wnoxRmGXC5g2E~3ImHYbpxeJsNAapDB8QjUduffhX2pOJ~VP5AWFZk~k4KNciX5mjkmpdiE8OnfRkS42p7Wj0D-121h0fvk-3Kx2i61lqylJ5u9rcdNjC4tBkkCW4jsyfXqRv2M04ZxLw2O7mwGy25TFFCPo5tlH28JQZzteFPOE7e36OUbwuog-qwDNPv4NtMbpCz7ojph3FkaGBZht-6Wo7gZ2dd-VrRV-xA__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 17202
2024-06-28 20:36:20,844 - DEBUG - Attempting to release lock 140163830352592 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-06-28 20:36:20,844 - DEBUG - Lock 140163830352592 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-06-28 20:36:20,844 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/decoder.ckpt
2024-06-28 20:36:20,844 - INFO - Loading pretrained files for: masknet, encoder, decoder
2024-06-28 20:36:20,935 - INFO - SpeechBrain model loaded successfully.
2024-06-28 20:36:20,937 - INFO - Saved audio file to temporary location: /tmp/tmptukjfs9u
2024-06-28 20:36:20,937 - INFO - Starting speech separation...
2024-06-28 20:36:20,938 - INFO - Destination tmptukjfs9u: local file in /tmp/tmptukjfs9u.
2024-06-28 20:36:29,235 - INFO - Speech separation completed.
2024-06-28 20:36:29,244 - INFO - 172.17.0.1 - - [28/Jun/2024 20:36:29] "POST /separate_speech HTTP/1.1" 200 -
2024-06-28 20:36:29,469 - INFO - Received request at /text-to-speech endpoint
Loading NLTK punkt model...
2024-06-28 20:36:31,382 - INFO - NLTK punkt model loaded successfully.
2024-06-28 20:36:31,386 - INFO - Loading Tacotron2 TTS model...
2024-06-28 20:36:31,386 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/tts-tacotron2-ljspeech.
2024-06-28 20:36:31,432 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-tacotron2-ljspeech/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-06-28 20:36:31,434 - DEBUG - Attempting to acquire lock 140164204443792 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-06-28 20:36:31,434 - DEBUG - Lock 140164204443792 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-06-28 20:36:31,476 - DEBUG - https://huggingface.co:443 "GET /speechbrain/tts-tacotron2-ljspeech/resolve/main/hyperparams.yaml HTTP/11" 200 2199
2024-06-28 20:36:31,477 - DEBUG - Attempting to release lock 140164204443792 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-06-28 20:36:31,477 - DEBUG - Lock 140164204443792 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-06-28 20:36:31,477 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-tacotron2-ljspeech/snapshots/d01e530d6d8e1b388c04b882305867addbed4389/hyperparams.yaml
2024-06-28 20:36:31,478 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/tts-tacotron2-ljspeech.
2024-06-28 20:36:31,519 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-tacotron2-ljspeech/resolve/main/custom.py HTTP/11" 404 0
2024-06-28 20:36:31,782 - DEBUG - Collecting files (or symlinks) for pretraining in /app/tmpdir_tts.
2024-06-28 20:36:31,782 - INFO - Fetch model.ckpt: Delegating to Huggingface hub, source speechbrain/tts-tacotron2-ljspeech.
2024-06-28 20:36:31,826 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-tacotron2-ljspeech/resolve/main/model.ckpt HTTP/11" 302 0
2024-06-28 20:36:31,827 - DEBUG - Attempting to acquire lock 140163831011792 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-06-28 20:36:31,827 - DEBUG - Lock 140163831011792 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-06-28 20:36:31,849 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /repos/53/aa/53aa9731ffa60d07c730d5cf43b26f43ed3e81d8af2fcd171871b27ef602797f/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model.ckpt%3B+filename%3D%22model.ckpt%22%3B&Expires=1719866191&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjE5MX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9yZXBvcy81My9hYS81M2FhOTczMWZmYTYwZDA3YzczMGQ1Y2Y0M2IyNmY0M2VkM2U4MWQ4YWYyZmNkMTcxODcxYjI3ZWY2MDI3OTdmLzAyZDFhYTNmYzFjYzhmYjA5ODE4OTVjNzY1ZTlkMDAxNzQxNmJiNzg4NjFiNTQ1MGU0NThkZGE5MmU1Njc4NTY~cmVzcG9uc2UtY29udGVudC1kaXNwb3NpdGlvbj0qIn1dfQ__&Signature=XZXG54zZ5BRK5RWbj5VGxkKvpxnPYM2fk7IHTSY4yST3PeyjVLIfhbNdtTN5bJUtc8Y-l06nNzJaxKV9ZmKNS1HFg8db12eJibYm2FMc-xwYF0OnPI83rT7ZRNyzyplo9Ta2~CfrVUIHY2Cuxu7cA3hTupCC7-FYx-B8Z-OYiOYe74Fym1o-GOydEC5DAQHPq5Dl6nKyyLWs9selIL8TBYjP0p27FG4cFLaV~ukoYBTlCHnC8bEYHpa2LzyzSdn3-aQl8cIcN~uMQSe1RvG7y2pHQmRKSameJgeSMdQo6ZCVEa6Z~pRrCIqJsjnL8XeUCSGpjk-zMHr8S6KQU7NBYg__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 112830206
2024-06-28 20:36:43,208 - DEBUG - Attempting to release lock 140163831011792 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-06-28 20:36:43,208 - DEBUG - Lock 140163831011792 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-06-28 20:36:43,208 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-tacotron2-ljspeech/snapshots/d01e530d6d8e1b388c04b882305867addbed4389/model.ckpt
2024-06-28 20:36:43,209 - INFO - Loading pretrained files for: model
2024-06-28 20:36:43,259 - INFO - Tacotron2 TTS model loaded successfully.
2024-06-28 20:36:43,260 - INFO - Loading HIFIGAN vocoder...
2024-06-28 20:36:43,260 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/tts-hifigan-ljspeech.
2024-06-28 20:36:43,312 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-hifigan-ljspeech/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-06-28 20:36:43,314 - DEBUG - Attempting to acquire lock 140164221232720 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-06-28 20:36:43,314 - DEBUG - Lock 140164221232720 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-06-28 20:36:43,367 - DEBUG - https://huggingface.co:443 "GET /speechbrain/tts-hifigan-ljspeech/resolve/main/hyperparams.yaml HTTP/11" 200 1156
2024-06-28 20:36:43,368 - DEBUG - Attempting to release lock 140164221232720 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-06-28 20:36:43,368 - DEBUG - Lock 140164221232720 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-06-28 20:36:43,368 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-hifigan-ljspeech/snapshots/17fbdc3aae35b81e1554111fa54eab5f2b70cedb/hyperparams.yaml
2024-06-28 20:36:43,369 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/tts-hifigan-ljspeech.
2024-06-28 20:36:43,404 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-hifigan-ljspeech/resolve/main/custom.py HTTP/11" 404 0
2024-06-28 20:36:43,538 - DEBUG - Collecting files (or symlinks) for pretraining in /app/tmpdir_vocoder.
2024-06-28 20:36:43,539 - INFO - Fetch generator.ckpt: Delegating to Huggingface hub, source speechbrain/tts-hifigan-ljspeech.
2024-06-28 20:36:43,585 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-hifigan-ljspeech/resolve/main/generator.ckpt HTTP/11" 302 0
2024-06-28 20:36:43,586 - DEBUG - Attempting to acquire lock 140163831017040 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-06-28 20:36:43,586 - DEBUG - Lock 140163831017040 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-06-28 20:36:43,604 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /repos/dd/64/dd64237d5b4ebb00291b992d7ef15692db3e45614c097e940bf876bed74fc754/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27generator.ckpt%3B+filename%3D%22generator.ckpt%22%3B&Expires=1719866203&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjIwM319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9yZXBvcy9kZC82NC9kZDY0MjM3ZDViNGViYjAwMjkxYjk5MmQ3ZWYxNTY5MmRiM2U0NTYxNGMwOTdlOTQwYmY4NzZiZWQ3NGZjNzU0LzFhMzg5ZjI0ZmZkYzM3NjllMGI5YzAzMzFmOWQ4MDNhZDBiNzgxODVlMGRhNGYyZDA5NGUyOWVlZGJjMTE2NDA~cmVzcG9uc2UtY29udGVudC1kaXNwb3NpdGlvbj0qIn1dfQ__&Signature=IEM-ZVgZMQhMm0sXS2hnwf2LqMAQw70rNassNqci8YUsPxWRAlCB8GRrdvc5xqDquLLONgX~JnszLH6z8FGZ4eXTNupdc~t-wsM~SqhC~zqvg8jhFm7U4MgUX1faWxcTF7kVKbR8qo-IYOLa57C2JOOPRfDugvqdkgbxbRxWM44ea9HXQX2tH6DIkp5HenH8wKvpkwmFOVj-3qzHgd6rfnHmsRGRwwa7He9QtiPIpzezxmp7KIdDZ-0biYIlZsPAtftoznF9i3VegDB5rikWldPgbMxZEk6bCMXDWSjS1zQsjopxH5yVl70RjlXIY7y5VqVhXyMyYQQbmhSCq6Tpdg__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 55828077
2024-06-28 20:36:48,534 - DEBUG - Attempting to release lock 140163831017040 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-06-28 20:36:48,534 - DEBUG - Lock 140163831017040 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-06-28 20:36:48,534 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-hifigan-ljspeech/snapshots/17fbdc3aae35b81e1554111fa54eab5f2b70cedb/generator.ckpt
2024-06-28 20:36:48,535 - INFO - Loading pretrained files for: generator
2024-06-28 20:36:48,571 - INFO - HIFIGAN vocoder loaded successfully.
2024-06-28 20:36:48,571 - INFO - Starting text-to-speech...
2024-06-28 20:36:50,198 - INFO - Text-to-speech completed.
2024-06-28 20:36:50,199 - INFO - Starting vocoder processing...
2024-06-28 20:36:58,512 - INFO - Vocoder processing completed.
2024-06-28 20:36:58,523 - INFO - 172.17.0.1 - - [28/Jun/2024 20:36:58] "POST /text_to_speech HTTP/1.1" 200 -
2024-06-28 20:36:58,726 - INFO - Received request at /transcribe endpoint
Loading SpeechBrain model...
2024-06-28 20:36:58,726 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-28 20:36:58,828 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-06-28 20:36:58,830 - DEBUG - Attempting to acquire lock 140163832773456 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-06-28 20:36:58,830 - DEBUG - Lock 140163832773456 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-06-28 20:36:58,896 - DEBUG - https://huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/hyperparams.yaml HTTP/11" 200 4991
2024-06-28 20:36:58,897 - DEBUG - Attempting to release lock 140163832773456 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-06-28 20:36:58,898 - DEBUG - Lock 140163832773456 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-06-28 20:36:58,898 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/hyperparams.yaml
2024-06-28 20:36:58,898 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-28 20:36:58,936 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/custom.py HTTP/11" 404 0
2024-06-28 20:37:00,904 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/EncoderDecoderASR-8720b4b0f1869a8221440e93425db7d5.
2024-06-28 20:37:00,904 - INFO - Fetch normalizer.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-28 20:37:00,960 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/normalizer.ckpt HTTP/11" 302 0
2024-06-28 20:37:00,961 - DEBUG - Attempting to acquire lock 140163832569616 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-06-28 20:37:00,961 - DEBUG - Lock 140163832569616 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-06-28 20:37:00,986 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27normalizer.ckpt%3B+filename%3D%22normalizer.ckpt%22%3B&Expires=1719866220&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjIyMH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC85NTZlOWMxNzUxYmVhYzJmNzViZmZmODI1M2Y5ODExYjc2YTFkNTdiYjUyZjI4NTg3ZDNiNmQ0NWJiY2U2MzE1P3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=aSOhrjQ6yFLYmGLIkBDpa5Wm6cOdbcBFFNadSY5pZYuKHP3yhwFkCdCAvn1S7-SH0BumUCWzxxqKj0guzp9h9zuLO~iJxw-qZOdffFTk0IgukcC81OJC~uh6BCVtsJHu3jxcYB-FpyDCo3pPpwIszox7wzNSwU217K82yucDrLvw4vFGxGYwRa~D8bzFzyFFZDhqEx0u~IX-pF4uwSbAvL98xOt9KCDVfwJOFcPSTdxu-Ek-PddTQ-ERJSMTS2UJzG~XXF3KuyPRxVk5xihitqZkpDfPxibLzE2HQ70PKsr-1l5lKorszfkYUovo6MyZcdSp4Zgsc0apV~Hv3QRd-g__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 1703
2024-06-28 20:37:00,986 - DEBUG - Attempting to release lock 140163832569616 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-06-28 20:37:00,986 - DEBUG - Lock 140163832569616 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-06-28 20:37:00,987 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/normalizer.ckpt
2024-06-28 20:37:00,987 - INFO - Fetch asr.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-28 20:37:01,089 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/asr.ckpt HTTP/11" 302 0
2024-06-28 20:37:01,090 - DEBUG - Attempting to acquire lock 140163830350736 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-06-28 20:37:01,090 - DEBUG - Lock 140163830350736 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-06-28 20:37:01,114 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27asr.ckpt%3B+filename%3D%22asr.ckpt%22%3B&Expires=1719866220&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjIyMH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC81YTA0YTFiMzY0ZmUzNzc2OWVkNDc5MDRlMDIzN2M0MTJlODc0MzIxZWZlZGE1NTk4NmYwOGEwNjgyMmZlNmVhP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=SHqp2h7lJUWd3a1xLAo7LObjElxrfFWJF1wB3O0wBMq9Hujy9t9C5qXxiOr987Fax8xlCY4FAa0iW3Ikf9LpY6idYHxO6MUaZjDx7BfFs4WL2-wRE~i0drug5ZDYEgo1imqeZRCLNz46O7XVlIiX4N1ieuhnoD2tKZRUkCb-eafptpO2HuGQwMX1NPsXosEIrMAZnrZw~iNSusFT3I14p490zKNmw4PuMee2sVssoiVdpD5WHFUiNxlI5j7r~Q7DuIDSIUMk3-7wqqVsWsElTalGoqHe~8HsKMQOGPK~Gp7XQuzn6~yjIycwcaXgZVHHr15UjAZKtgl1WFenkLrfIg__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 291335121
2024-06-28 20:37:31,181 - DEBUG - Attempting to release lock 140163830350736 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-06-28 20:37:31,181 - DEBUG - Lock 140163830350736 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-06-28 20:37:31,181 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/asr.ckpt
2024-06-28 20:37:31,182 - INFO - Fetch lm.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-28 20:37:31,230 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/lm.ckpt HTTP/11" 302 0
2024-06-28 20:37:31,230 - DEBUG - Attempting to acquire lock 140164204444816 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-06-28 20:37:31,231 - DEBUG - Lock 140164204444816 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-06-28 20:37:31,256 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27lm.ckpt%3B+filename%3D%22lm.ckpt%22%3B&Expires=1719866251&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjI1MX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC84N2YxMzk4YzBlZDgzMzYzMWU0ODdhZWRmYmRhMzJiZTRjOTYxODU2NTQ4MmY2ZmFkNzhjYTRlOGRkYTAzZTViP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=lGdpzwo10jg7f-4wpDEQhxII8PvENh8kuioSs4xY6wxJN10BenkTHAwwP9BhCT8zSPRyk7ltJJipntxbtOUlCsw~Iy0pPBvZZs33JsWN9QNbKJbR5M9xqq6a5A0HRCUheUBzT6Sebu-nExiYzQtG39S4E6la8MgoKka1u2glVrOGsybflLDe96RDmiPLt0y6BkGdV9QcACheEx5HIkeqGQTr7Ya6AVPAZv6FxNxPyEDsSjEIJiVx0PGhLu5LFy24WtICgdrXn4jkMU2rxkCNBBQhOsantC6xP~6NQKl8FEkN~AXpx5ZfyszhqOh8hx5Iwaqgb4S2~IKhiYQpJd5cEw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 381074869
2024-06-28 20:38:08,234 - DEBUG - Attempting to release lock 140164204444816 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-06-28 20:38:08,234 - DEBUG - Lock 140164204444816 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-06-28 20:38:08,234 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/lm.ckpt
2024-06-28 20:38:08,235 - INFO - Fetch tokenizer.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-28 20:38:08,288 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/tokenizer.ckpt HTTP/11" 302 0
2024-06-28 20:38:08,289 - DEBUG - Attempting to acquire lock 140163832490512 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-06-28 20:38:08,289 - DEBUG - Lock 140163832490512 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-06-28 20:38:08,311 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27tokenizer.ckpt%3B+filename%3D%22tokenizer.ckpt%22%3B&Expires=1719866288&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxOTg2NjI4OH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC8zY2RjMDYzNDkyNzI1YWEyODA5YTVmYmIxYWE3OTBlZGEwZTU4MzcwYzgxMGViYjU0YThmNGM4YjJjNDZlYTY4P3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=j3jtPnzl~q90kC9VOivloUs8gl0C-7htJXfAy8iN0N8l7unCdszP5oO7973166O8Vqgq7LYfxn0DAnnwAObwbnt4Hz3rZgSLJVEt4YdtnVVD-DK7XsKg3mLAke7yvYRI-eyOx3buaDBpumQJx-NRP~GztD812bCg7N~xjNAYf80p3~NRHwV8Nvb-J3mLO~Ywic1wgNbrIhNCeOYafVID~gLn57g7FrOnH-k7YeoCq~DZVbIx-B693ZQY1H8nfKgtbbFfwBH5~Kb8srbOhsMgIYapj-UqlAAl99YXltiPMUPsWQ1d6Cvl2yA2qFdwSzXRKwpD2oSN9sqdQbKHc8bzEw__&Key-Pair-Id=K3ESJI6DHPFC7 HTTP/11" 200 324347
2024-06-28 20:38:08,360 - DEBUG - Attempting to release lock 140163832490512 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-06-28 20:38:08,360 - DEBUG - Lock 140163832490512 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-06-28 20:38:08,360 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/tokenizer.ckpt
2024-06-28 20:38:08,360 - INFO - Loading pretrained files for: normalizer, asr, lm, tokenizer
2024-06-28 20:38:08,782 - INFO - SpeechBrain model loaded successfully.
2024-06-28 20:38:08,787 - INFO - Saved audio file to temporary location: /tmp/tmp4ild2wm9
2024-06-28 20:38:08,787 - INFO - Starting transcription...
2024-06-28 20:38:08,788 - INFO - Destination tmp4ild2wm9: local file in /tmp/tmp4ild2wm9.
2024-06-28 20:38:12,429 - INFO - Transcription completed. Result: HULLO MY NAME IS MATTIE
2024-06-28 20:38:12,431 - INFO - 172.17.0.1 - - [28/Jun/2024 20:38:12] "POST /transcribe HTTP/1.1" 200 -
2024-06-28 20:38:12,651 - INFO - Received request at /detect_voice_activity endpoint
2024-06-28 20:38:12,656 - INFO - Saved audio file to temporary location: /tmp/tmposa0ey76.wav
2024-06-28 20:38:13,248 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          18	STORE_FAST(arg=3, lineno=1144)
          20	LOAD_FAST(arg=1, lineno=1145)
          22	UNARY_NEGATIVE(arg=None, lineno=1145)
          24	LOAD_FAST(arg=3, lineno=1145)
          26	SWAP(arg=2, lineno=1145)
          28	COPY(arg=2, lineno=1145)
          30	COMPARE_OP(arg=1, lineno=1145)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          38	LOAD_FAST(arg=1, lineno=1145)
          40	COMPARE_OP(arg=1, lineno=1145)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
          48	JUMP_FORWARD(arg=2, lineno=1145)
>         50	POP_TOP(arg=None, lineno=1145)
          52	JUMP_FORWARD(arg=2, lineno=1145)
>         54	LOAD_CONST(arg=1, lineno=1146)
          56	STORE_FAST(arg=3, lineno=1146)
>         58	LOAD_FAST(arg=0, lineno=1148)
          60	LOAD_CONST(arg=2, lineno=1148)
          62	BINARY_SUBSCR(arg=None, lineno=1148)
          72	STORE_FAST(arg=4, lineno=1148)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	UNARY_NEGATIVE(arg=None, lineno=1149)
          78	LOAD_FAST(arg=4, lineno=1149)
          80	SWAP(arg=2, lineno=1149)
          82	COPY(arg=2, lineno=1149)
          84	COMPARE_OP(arg=1, lineno=1149)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
          92	LOAD_FAST(arg=1, lineno=1149)
          94	COMPARE_OP(arg=1, lineno=1149)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
         102	JUMP_FORWARD(arg=2, lineno=1149)
>        104	POP_TOP(arg=None, lineno=1149)
         106	JUMP_FORWARD(arg=2, lineno=1149)
>        108	LOAD_CONST(arg=1, lineno=1150)
         110	STORE_FAST(arg=4, lineno=1150)
>        112	LOAD_FAST(arg=2, lineno=1152)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
         116	LOAD_GLOBAL(arg=1, lineno=1153)
         128	LOAD_ATTR(arg=1, lineno=1153)
         138	LOAD_FAST(arg=3, lineno=1153)
         140	PRECALL(arg=1, lineno=1153)
         144	CALL(arg=1, lineno=1153)
         154	LOAD_GLOBAL(arg=1, lineno=1153)
         166	LOAD_ATTR(arg=1, lineno=1153)
         176	LOAD_FAST(arg=4, lineno=1153)
         178	PRECALL(arg=1, lineno=1153)
         182	CALL(arg=1, lineno=1153)
         192	COMPARE_OP(arg=3, lineno=1153)
         198	RETURN_VALUE(arg=None, lineno=1153)
>        200	LOAD_GLOBAL(arg=1, lineno=1155)
         212	LOAD_ATTR(arg=2, lineno=1155)
         222	LOAD_FAST(arg=3, lineno=1155)
         224	PRECALL(arg=1, lineno=1155)
         228	CALL(arg=1, lineno=1155)
         238	LOAD_GLOBAL(arg=1, lineno=1155)
         250	LOAD_ATTR(arg=2, lineno=1155)
         260	LOAD_FAST(arg=4, lineno=1155)
         262	PRECALL(arg=1, lineno=1155)
         266	CALL(arg=1, lineno=1155)
         276	COMPARE_OP(arg=3, lineno=1155)
         282	RETURN_VALUE(arg=None, lineno=1155)
2024-06-28 20:38:13,248 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:13,249 - DEBUG - stack: []
2024-06-28 20:38:13,249 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:13,249 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
2024-06-28 20:38:13,249 - DEBUG - stack []
2024-06-28 20:38:13,249 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
2024-06-28 20:38:13,249 - DEBUG - stack []
2024-06-28 20:38:13,249 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
2024-06-28 20:38:13,249 - DEBUG - stack []
2024-06-28 20:38:13,249 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
2024-06-28 20:38:13,249 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:13,249 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2024-06-28 20:38:13,249 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-28 20:38:13,250 - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1144)
2024-06-28 20:38:13,250 - DEBUG - stack ['$8binary_subscr.2']
2024-06-28 20:38:13,250 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1145)
2024-06-28 20:38:13,250 - DEBUG - stack []
2024-06-28 20:38:13,250 - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2024-06-28 20:38:13,250 - DEBUG - stack ['$threshold20.3']
2024-06-28 20:38:13,250 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1145)
2024-06-28 20:38:13,250 - DEBUG - stack ['$22unary_negative.4']
2024-06-28 20:38:13,250 - DEBUG - dispatch pc=26, inst=SWAP(arg=2, lineno=1145)
2024-06-28 20:38:13,250 - DEBUG - stack ['$22unary_negative.4', '$x024.5']
2024-06-28 20:38:13,250 - DEBUG - dispatch pc=28, inst=COPY(arg=2, lineno=1145)
2024-06-28 20:38:13,250 - DEBUG - stack ['$x024.5', '$22unary_negative.4']
2024-06-28 20:38:13,250 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1145)
2024-06-28 20:38:13,250 - DEBUG - stack ['$x024.5', '$22unary_negative.4', '$x024.5']
2024-06-28 20:38:13,251 - DEBUG - dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
2024-06-28 20:38:13,251 - DEBUG - stack ['$x024.5', '$30compare_op.6']
2024-06-28 20:38:13,251 - DEBUG - end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
2024-06-28 20:38:13,251 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
2024-06-28 20:38:13,251 - DEBUG - stack: ['$phi38.0']
2024-06-28 20:38:13,251 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=1)
2024-06-28 20:38:13,251 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1145)
2024-06-28 20:38:13,251 - DEBUG - stack ['$phi38.0']
2024-06-28 20:38:13,251 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1145)
2024-06-28 20:38:13,252 - DEBUG - stack ['$phi38.0', '$threshold38.1']
2024-06-28 20:38:13,252 - DEBUG - dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
2024-06-28 20:38:13,252 - DEBUG - stack ['$40compare_op.2']
2024-06-28 20:38:13,252 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:13,252 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:13,252 - DEBUG - stack: ['$phi50.0']
2024-06-28 20:38:13,252 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-06-28 20:38:13,252 - DEBUG - dispatch pc=50, inst=POP_TOP(arg=None, lineno=1145)
2024-06-28 20:38:13,252 - DEBUG - stack ['$phi50.0']
2024-06-28 20:38:13,252 - DEBUG - dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-06-28 20:38:13,252 - DEBUG - stack []
2024-06-28 20:38:13,252 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:13,253 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:13,253 - DEBUG - stack: []
2024-06-28 20:38:13,253 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2024-06-28 20:38:13,253 - DEBUG - dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-06-28 20:38:13,253 - DEBUG - stack []
2024-06-28 20:38:13,253 - DEBUG - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:13,253 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
2024-06-28 20:38:13,253 - DEBUG - stack: []
2024-06-28 20:38:13,253 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-06-28 20:38:13,253 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1148)
2024-06-28 20:38:13,253 - DEBUG - stack []
2024-06-28 20:38:13,253 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1148)
2024-06-28 20:38:13,253 - DEBUG - stack ['$x58.0']
2024-06-28 20:38:13,254 - DEBUG - dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1148)
2024-06-28 20:38:13,254 - DEBUG - stack ['$x58.0', '$const60.1']
2024-06-28 20:38:13,254 - DEBUG - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1148)
2024-06-28 20:38:13,254 - DEBUG - stack ['$62binary_subscr.2']
2024-06-28 20:38:13,254 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
2024-06-28 20:38:13,254 - DEBUG - stack []
2024-06-28 20:38:13,254 - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
2024-06-28 20:38:13,254 - DEBUG - stack ['$threshold74.3']
2024-06-28 20:38:13,254 - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1149)
2024-06-28 20:38:13,254 - DEBUG - stack ['$76unary_negative.4']
2024-06-28 20:38:13,254 - DEBUG - dispatch pc=80, inst=SWAP(arg=2, lineno=1149)
2024-06-28 20:38:13,254 - DEBUG - stack ['$76unary_negative.4', '$x178.5']
2024-06-28 20:38:13,254 - DEBUG - dispatch pc=82, inst=COPY(arg=2, lineno=1149)
2024-06-28 20:38:13,254 - DEBUG - stack ['$x178.5', '$76unary_negative.4']
2024-06-28 20:38:13,254 - DEBUG - dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1149)
2024-06-28 20:38:13,255 - DEBUG - stack ['$x178.5', '$76unary_negative.4', '$x178.5']
2024-06-28 20:38:13,255 - DEBUG - dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1149)
2024-06-28 20:38:13,255 - DEBUG - stack ['$x178.5', '$84compare_op.6']
2024-06-28 20:38:13,255 - DEBUG - end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
2024-06-28 20:38:13,255 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-06-28 20:38:13,255 - DEBUG - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
2024-06-28 20:38:13,255 - DEBUG - stack: []
2024-06-28 20:38:13,255 - DEBUG - state.pc_initial: State(pc_initial=54 nstack_initial=0)
2024-06-28 20:38:13,255 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1146)
2024-06-28 20:38:13,255 - DEBUG - stack []
2024-06-28 20:38:13,255 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1146)
2024-06-28 20:38:13,255 - DEBUG - stack ['$const54.0']
2024-06-28 20:38:13,256 - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:13,256 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:13,256 - DEBUG - stack: ['$phi92.0']
2024-06-28 20:38:13,256 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=1)
2024-06-28 20:38:13,256 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1149)
2024-06-28 20:38:13,256 - DEBUG - stack ['$phi92.0']
2024-06-28 20:38:13,256 - DEBUG - dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1149)
2024-06-28 20:38:13,256 - DEBUG - stack ['$phi92.0', '$threshold92.1']
2024-06-28 20:38:13,256 - DEBUG - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1149)
2024-06-28 20:38:13,256 - DEBUG - stack ['$94compare_op.2']
2024-06-28 20:38:13,256 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:13,256 - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-06-28 20:38:13,256 - DEBUG - stack: ['$phi104.0']
2024-06-28 20:38:13,256 - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=1)
2024-06-28 20:38:13,257 - DEBUG - dispatch pc=104, inst=POP_TOP(arg=None, lineno=1149)
2024-06-28 20:38:13,257 - DEBUG - stack ['$phi104.0']
2024-06-28 20:38:13,257 - DEBUG - dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-06-28 20:38:13,257 - DEBUG - stack []
2024-06-28 20:38:13,257 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:13,257 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-06-28 20:38:13,257 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-06-28 20:38:13,257 - DEBUG - stack: []
2024-06-28 20:38:13,257 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-06-28 20:38:13,257 - DEBUG - dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-06-28 20:38:13,257 - DEBUG - stack []
2024-06-28 20:38:13,257 - DEBUG - end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:13,257 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
2024-06-28 20:38:13,257 - DEBUG - stack: []
2024-06-28 20:38:13,257 - DEBUG - state.pc_initial: State(pc_initial=112 nstack_initial=0)
2024-06-28 20:38:13,258 - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1152)
2024-06-28 20:38:13,258 - DEBUG - stack []
2024-06-28 20:38:13,258 - DEBUG - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1152)
2024-06-28 20:38:13,258 - DEBUG - stack ['$zero_pos112.0']
2024-06-28 20:38:13,258 - DEBUG - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:13,258 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-06-28 20:38:13,258 - DEBUG - pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
2024-06-28 20:38:13,258 - DEBUG - stack: []
2024-06-28 20:38:13,258 - DEBUG - state.pc_initial: State(pc_initial=108 nstack_initial=0)
2024-06-28 20:38:13,258 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1150)
2024-06-28 20:38:13,258 - DEBUG - stack []
2024-06-28 20:38:13,258 - DEBUG - dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1150)
2024-06-28 20:38:13,258 - DEBUG - stack ['$const108.0']
2024-06-28 20:38:13,258 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:13,259 - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-06-28 20:38:13,259 - DEBUG - stack: []
2024-06-28 20:38:13,259 - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2024-06-28 20:38:13,259 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-06-28 20:38:13,259 - DEBUG - stack []
2024-06-28 20:38:13,259 - DEBUG - dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-06-28 20:38:13,259 - DEBUG - stack ['$null$116.1', '$116load_global.0']
2024-06-28 20:38:13,259 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1153)
2024-06-28 20:38:13,259 - DEBUG - stack ['$null$116.1', '$128load_attr.2']
2024-06-28 20:38:13,260 - DEBUG - dispatch pc=140, inst=PRECALL(arg=1, lineno=1153)
2024-06-28 20:38:13,260 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-06-28 20:38:13,260 - DEBUG - dispatch pc=144, inst=CALL(arg=1, lineno=1153)
2024-06-28 20:38:13,260 - DEBUG - stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
2024-06-28 20:38:13,260 - DEBUG - dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-06-28 20:38:13,260 - DEBUG - stack ['$144call.4']
2024-06-28 20:38:13,260 - DEBUG - dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1153)
2024-06-28 20:38:13,260 - DEBUG - stack ['$144call.4', '$null$154.6', '$154load_global.5']
2024-06-28 20:38:13,260 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1153)
2024-06-28 20:38:13,261 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7']
2024-06-28 20:38:13,261 - DEBUG - dispatch pc=178, inst=PRECALL(arg=1, lineno=1153)
2024-06-28 20:38:13,261 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-06-28 20:38:13,261 - DEBUG - dispatch pc=182, inst=CALL(arg=1, lineno=1153)
2024-06-28 20:38:13,261 - DEBUG - stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
2024-06-28 20:38:13,262 - DEBUG - dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1153)
2024-06-28 20:38:13,262 - DEBUG - stack ['$144call.4', '$182call.9']
2024-06-28 20:38:13,262 - DEBUG - dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1153)
2024-06-28 20:38:13,262 - DEBUG - stack ['$192compare_op.10']
2024-06-28 20:38:13,262 - DEBUG - end state. edges=[]
2024-06-28 20:38:13,262 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
2024-06-28 20:38:13,262 - DEBUG - stack: []
2024-06-28 20:38:13,262 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=0)
2024-06-28 20:38:13,262 - DEBUG - dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-06-28 20:38:13,262 - DEBUG - stack []
2024-06-28 20:38:13,263 - DEBUG - dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-06-28 20:38:13,263 - DEBUG - stack ['$null$200.1', '$200load_global.0']
2024-06-28 20:38:13,263 - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1155)
2024-06-28 20:38:13,263 - DEBUG - stack ['$null$200.1', '$212load_attr.2']
2024-06-28 20:38:13,263 - DEBUG - dispatch pc=224, inst=PRECALL(arg=1, lineno=1155)
2024-06-28 20:38:13,263 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-06-28 20:38:13,263 - DEBUG - dispatch pc=228, inst=CALL(arg=1, lineno=1155)
2024-06-28 20:38:13,263 - DEBUG - stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
2024-06-28 20:38:13,263 - DEBUG - dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-06-28 20:38:13,263 - DEBUG - stack ['$228call.4']
2024-06-28 20:38:13,263 - DEBUG - dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1155)
2024-06-28 20:38:13,264 - DEBUG - stack ['$228call.4', '$null$238.6', '$238load_global.5']
2024-06-28 20:38:13,264 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1155)
2024-06-28 20:38:13,264 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7']
2024-06-28 20:38:13,264 - DEBUG - dispatch pc=262, inst=PRECALL(arg=1, lineno=1155)
2024-06-28 20:38:13,264 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-06-28 20:38:13,264 - DEBUG - dispatch pc=266, inst=CALL(arg=1, lineno=1155)
2024-06-28 20:38:13,264 - DEBUG - stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
2024-06-28 20:38:13,264 - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1155)
2024-06-28 20:38:13,264 - DEBUG - stack ['$228call.4', '$266call.9']
2024-06-28 20:38:13,264 - DEBUG - dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1155)
2024-06-28 20:38:13,264 - DEBUG - stack ['$276compare_op.10']
2024-06-28 20:38:13,264 - DEBUG - end state. edges=[]
2024-06-28 20:38:13,264 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0)])
2024-06-28 20:38:13,265 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:13,265 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
2024-06-28 20:38:13,265 - DEBUG - defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
2024-06-28 20:38:13,265 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-06-28 20:38:13,266 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
2024-06-28 20:38:13,266 - DEBUG - keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
2024-06-28 20:38:13,266 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
2024-06-28 20:38:13,266 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:13,266 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
2024-06-28 20:38:13,266 - DEBUG - block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'value': '$const54.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1'}), (62, {'index': '$const60.1', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0'}), (110, {'value': '$const108.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:13,267 - DEBUG - block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:13,270 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1 = const(int, -1)              ['$const60.1']
    x1 = getitem(value=x, index=$const60.1, fn=<built-in function getitem>) ['$const60.1', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

2024-06-28 20:38:13,625 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1158)
           2	RESUME(arg=0, lineno=1158)
           4	LOAD_GLOBAL(arg=1, lineno=1174)
          16	LOAD_FAST(arg=0, lineno=1174)
          18	LOAD_FAST(arg=1, lineno=1174)
          20	LOAD_FAST(arg=2, lineno=1174)
          22	PRECALL(arg=3, lineno=1174)
          26	CALL(arg=3, lineno=1174)
          36	LOAD_FAST(arg=3, lineno=1174)
          38	LOAD_CONST(arg=1, lineno=1174)
          40	LOAD_CONST(arg=1, lineno=1174)
          42	BUILD_SLICE(arg=2, lineno=1174)
          44	STORE_SUBSCR(arg=None, lineno=1174)
          48	LOAD_CONST(arg=1, lineno=1174)
          50	RETURN_VALUE(arg=None, lineno=1174)
2024-06-28 20:38:13,626 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:13,626 - DEBUG - stack: []
2024-06-28 20:38:13,626 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:13,626 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1158)
2024-06-28 20:38:13,626 - DEBUG - stack []
2024-06-28 20:38:13,626 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1158)
2024-06-28 20:38:13,626 - DEBUG - stack []
2024-06-28 20:38:13,626 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1174)
2024-06-28 20:38:13,626 - DEBUG - stack []
2024-06-28 20:38:13,626 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1174)
2024-06-28 20:38:13,626 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:13,627 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=1174)
2024-06-28 20:38:13,627 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:13,627 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=1174)
2024-06-28 20:38:13,627 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3']
2024-06-28 20:38:13,627 - DEBUG - dispatch pc=22, inst=PRECALL(arg=3, lineno=1174)
2024-06-28 20:38:13,627 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-06-28 20:38:13,627 - DEBUG - dispatch pc=26, inst=CALL(arg=3, lineno=1174)
2024-06-28 20:38:13,627 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-06-28 20:38:13,627 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=1174)
2024-06-28 20:38:13,627 - DEBUG - stack ['$26call.5']
2024-06-28 20:38:13,627 - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-28 20:38:13,627 - DEBUG - stack ['$26call.5', '$y36.6']
2024-06-28 20:38:13,628 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-28 20:38:13,628 - DEBUG - stack ['$26call.5', '$y36.6', '$const38.7']
2024-06-28 20:38:13,628 - DEBUG - dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=1174)
2024-06-28 20:38:13,628 - DEBUG - stack ['$26call.5', '$y36.6', '$const38.7', '$const40.8']
2024-06-28 20:38:13,628 - DEBUG - dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=1174)
2024-06-28 20:38:13,628 - DEBUG - stack ['$26call.5', '$y36.6', '$42build_slice.10']
2024-06-28 20:38:13,628 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-28 20:38:13,628 - DEBUG - stack []
2024-06-28 20:38:13,628 - DEBUG - dispatch pc=50, inst=RETURN_VALUE(arg=None, lineno=1174)
2024-06-28 20:38:13,628 - DEBUG - stack ['$const48.11']
2024-06-28 20:38:13,628 - DEBUG - end state. edges=[]
2024-06-28 20:38:13,628 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:13,628 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:13,629 - DEBUG - defmap: {}
2024-06-28 20:38:13,629 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:13,629 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:13,629 - DEBUG - keep phismap: {}
2024-06-28 20:38:13,629 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:13,629 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:13,629 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$threshold18.3'}), (20, {'res': '$zero_pos20.4'}), (22, {}), (24, {}), (26, {'func': '$4load_global.0', 'args': ['$x16.2', '$threshold18.3', '$zero_pos20.4'], 'kw_names': None, 'res': '$26call.5'}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'res': '$y36.6'}), (38, {'res': '$const38.7'}), (40, {'res': '$const40.8'}), (42, {'start': '$const38.7', 'stop': '$const40.8', 'step': None, 'res': '$42build_slice.10', 'slicevar': '$42build_slice.9'}), (44, {'target': '$y36.6', 'index': '$42build_slice.10', 'value': '$26call.5'}), (46, {}), (48, {'res': '$const48.11'}), (50, {'retval': '$const48.11', 'castval': '$50return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:13,630 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f7a6f722510>) ['$4load_global.0']
    $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None) ['$26call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const38.7 = const(NoneType, None)       ['$const38.7']
    $const40.8 = const(NoneType, None)       ['$const40.8']
    $42build_slice.9 = global(slice: <class 'slice'>) ['$42build_slice.9']
    $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None) ['$42build_slice.10', '$42build_slice.9', '$const38.7', '$const40.8']
    y[$42build_slice.10] = $26call.5         ['$26call.5', '$42build_slice.10', 'y']
    $const48.11 = const(NoneType, None)      ['$const48.11']
    $50return_value.12 = cast(value=$const48.11) ['$50return_value.12', '$const48.11']
    return $50return_value.12                ['$50return_value.12']

2024-06-28 20:38:13,636 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:13,636 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76a3f350>
2024-06-28 20:38:13,636 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:13,636 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:13,636 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:13,636 - DEBUG - on stmt: y = arg(3, name=y)
2024-06-28 20:38:13,636 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f7a6f722510>)
2024-06-28 20:38:13,636 - DEBUG - on stmt: $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,637 - DEBUG - on stmt: $const38.7 = const(NoneType, None)
2024-06-28 20:38:13,637 - DEBUG - on stmt: $const40.8 = const(NoneType, None)
2024-06-28 20:38:13,637 - DEBUG - on stmt: $42build_slice.9 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,637 - DEBUG - on stmt: $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,637 - DEBUG - on stmt: y[slice(None, None, None)] = $26call.5
2024-06-28 20:38:13,637 - DEBUG - on stmt: $const48.11 = const(NoneType, None)
2024-06-28 20:38:13,637 - DEBUG - on stmt: $50return_value.12 = cast(value=$const48.11)
2024-06-28 20:38:13,637 - DEBUG - on stmt: return $50return_value.12
2024-06-28 20:38:13,638 - DEBUG - defs defaultdict(<class 'list'>,
            {'$26call.5': [(<numba.core.ir.Assign object at 0x7f7a76a31190>,
                            0)],
             '$42build_slice.10': [(<numba.core.ir.Assign object at 0x7f7a76a31ad0>,
                                    0)],
             '$42build_slice.9': [(<numba.core.ir.Assign object at 0x7f7a76a31950>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a76a30890>,
                                  0)],
             '$50return_value.12': [(<numba.core.ir.Assign object at 0x7f7a76a31fd0>,
                                     0)],
             '$const38.7': [(<numba.core.ir.Assign object at 0x7f7a76a31590>,
                             0)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a76a31750>,
                             0)],
             '$const48.11': [(<numba.core.ir.Assign object at 0x7f7a76a31d90>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x7f7a76a30450>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a76a30350>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a76a30650>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7f7a76a30550>,
                           0)]})
2024-06-28 20:38:13,638 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76a3f350>
2024-06-28 20:38:13,680 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=3, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=3, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=4, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=4, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=4, lineno=5)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=3, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=2, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=5, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=6, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=4, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:13,680 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:13,680 - DEBUG - stack: []
2024-06-28 20:38:13,681 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:13,681 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:13,681 - DEBUG - stack []
2024-06-28 20:38:13,681 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:13,681 - DEBUG - stack []
2024-06-28 20:38:13,681 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:13,681 - DEBUG - stack []
2024-06-28 20:38:13,681 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:13,681 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:13,681 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=3, lineno=2)
2024-06-28 20:38:13,681 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:13,681 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:13,681 - DEBUG - stack []
2024-06-28 20:38:13,681 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:13,682 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:13,682 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=3)
2024-06-28 20:38:13,682 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:13,682 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:13,682 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:13,682 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:13,682 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:13,682 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:13,682 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:13,683 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:13,683 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:13,683 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:13,683 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:13,683 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=4, lineno=3)
2024-06-28 20:38:13,683 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:13,683 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:13,683 - DEBUG - stack []
2024-06-28 20:38:13,683 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=4)
2024-06-28 20:38:13,683 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:13,683 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:13,683 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:13,683 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:13,683 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:13,684 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:13,684 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:13,684 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:13,684 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:13,684 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:13,684 - DEBUG - stack []
2024-06-28 20:38:13,684 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=5)
2024-06-28 20:38:13,684 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:13,684 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:13,684 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:13,684 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:13,684 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:13,684 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:13,684 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:13,685 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:13,685 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:13,685 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:13,685 - DEBUG - stack []
2024-06-28 20:38:13,685 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:13,685 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:13,685 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:13,685 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:13,685 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:13,685 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:13,685 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:13,685 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:13,685 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:13,685 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:13,686 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:13,686 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:13,686 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=3, lineno=6)
2024-06-28 20:38:13,686 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:13,686 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:13,686 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:13,686 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:13,686 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:13,686 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:13,686 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:13,687 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:13,687 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:13,687 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:13,687 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:13,687 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:13,687 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:13,687 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:13,687 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:13,687 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:13,687 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:13,687 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:13,687 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:13,687 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:13,688 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:13,688 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:13,688 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:13,688 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:13,688 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:13,688 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:13,688 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:13,688 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:13,688 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:13,688 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:13,689 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:13,689 - DEBUG - stack: []
2024-06-28 20:38:13,689 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:13,689 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=4, lineno=8)
2024-06-28 20:38:13,689 - DEBUG - stack []
2024-06-28 20:38:13,689 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:13,689 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:13,689 - DEBUG - end state. edges=[]
2024-06-28 20:38:13,689 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:13,689 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:13,689 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:13,689 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=5, lineno=6)
2024-06-28 20:38:13,690 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:13,690 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:13,690 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:13,690 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=6, lineno=7)
2024-06-28 20:38:13,690 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:13,690 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:13,690 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:13,690 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:13,690 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:13,690 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:13,691 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:13,691 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:13,691 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:13,691 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:13,692 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:13,692 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:13,692 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:13,692 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:13,693 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:13,693 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:13,693 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:13,693 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:13,693 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:13,695 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, 0)             ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 0)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:13,714 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:13,714 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,714 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:13,714 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:13,714 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:13,714 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:13,714 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,714 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:13,715 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,715 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:13,715 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,715 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:13,715 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:13,715 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:13,715 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,715 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,715 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:13,716 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:13,716 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:13,716 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:13,716 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,716 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,716 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:13,716 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:13,716 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:13,716 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:13,716 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:13,716 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,716 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:13,717 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:13,717 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,717 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:13,717 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:13,717 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:13,717 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,717 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:13,718 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,718 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:13,718 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:13,718 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,718 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:13,718 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,718 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:13,718 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:13,718 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:13,718 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:13,719 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:13,719 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:13,719 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,720 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:13,720 - DEBUG - on stmt: jump 240
2024-06-28 20:38:13,720 - DEBUG - ==== SSA block analysis pass on 442
2024-06-28 20:38:13,720 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,720 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:13,720 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:13,720 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:13,720 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,720 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:13,721 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:13,721 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,721 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,721 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:13,721 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,721 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,721 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:13,721 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:13,721 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:13,721 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,722 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:13,722 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,722 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,722 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:13,722 - DEBUG - ==== SSA block analysis pass on 279
2024-06-28 20:38:13,722 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,722 - DEBUG - on stmt: jump 289
2024-06-28 20:38:13,722 - DEBUG - ==== SSA block analysis pass on 291
2024-06-28 20:38:13,722 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,722 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,722 - DEBUG - ==== SSA block analysis pass on 289
2024-06-28 20:38:13,722 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,722 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-28 20:38:13,723 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,723 - DEBUG - ==== SSA block analysis pass on 295
2024-06-28 20:38:13,723 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,723 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:13,723 - DEBUG - on stmt: stencil_index = $const60.1 + index00
2024-06-28 20:38:13,723 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,723 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,723 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:13,723 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,723 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,723 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:13,723 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:13,724 - DEBUG - ==== SSA block analysis pass on 299
2024-06-28 20:38:13,724 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,724 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:13,724 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,724 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,724 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:13,724 - DEBUG - ==== SSA block analysis pass on 333
2024-06-28 20:38:13,724 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,724 - DEBUG - on stmt: jump 343
2024-06-28 20:38:13,724 - DEBUG - ==== SSA block analysis pass on 345
2024-06-28 20:38:13,724 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,724 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,725 - DEBUG - ==== SSA block analysis pass on 343
2024-06-28 20:38:13,725 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,725 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:13,725 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,725 - DEBUG - ==== SSA block analysis pass on 349
2024-06-28 20:38:13,725 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,725 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,725 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,725 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:13,725 - DEBUG - ==== SSA block analysis pass on 353
2024-06-28 20:38:13,725 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,725 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,725 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:13,725 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,726 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,726 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:13,726 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,726 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:13,726 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:13,726 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:13,726 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,726 - DEBUG - ==== SSA block analysis pass on 357
2024-06-28 20:38:13,726 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,726 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,726 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:13,727 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,727 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,727 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:13,727 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,727 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:13,727 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:13,727 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:13,727 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,727 - DEBUG - ==== SSA block analysis pass on 441
2024-06-28 20:38:13,727 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7687cd50>
2024-06-28 20:38:13,728 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,729 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x7f7a76905010>,
                           299)],
             '$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a76781a10>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a76781b90>,
                                       0)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f7a76932010>,
                           349)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a76782510>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a76782690>,
                                       0)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x7f7a7693a6d0>,
                                    353)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a76782950>,
                                       0)],
             '$128load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a7693af10>,
                                  353)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a76782c10>,
                                       0)],
             '$144call.4': [(<numba.core.ir.Assign object at 0x7f7a76940a10>,
                             353)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a76783290>,
                                0)],
             '$154load_global.5': [(<numba.core.ir.Assign object at 0x7f7a76941ad0>,
                                    353)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a76783510>,
                                          0)],
             '$166load_attr.7': [(<numba.core.ir.Assign object at 0x7f7a76942d10>,
                                  353)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a76783a90>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a76783cd0>,
                                       0)],
             '$182call.9': [(<numba.core.ir.Assign object at 0x7f7a76943cd0>,
                             353)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a76780050>,
                                     0)],
             '$192compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a76946090>,
                                    353)],
             '$198return_value.11': [(<numba.core.ir.Assign object at 0x7f7a76947410>,
                                      353)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a767843d0>,
                                0)],
             '$200load_global.0': [(<numba.core.ir.Assign object at 0x7f7a76952b50>,
                                    357)],
             '$212load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76953150>,
                                  357)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a76784990>,
                                0)],
             '$228call.4': [(<numba.core.ir.Assign object at 0x7f7a76958e90>,
                             357)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a76784cd0>,
                                    0)],
             '$22unary_negative.4': [(<numba.core.ir.Assign object at 0x7f7a768e4090>,
                                      240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a76784ed0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a76785050>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a767851d0>,
                                   230)],
             '$238load_global.5': [(<numba.core.ir.Assign object at 0x7f7a76959f50>,
                                    357)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a76785c50>,
                                       442)],
             '$250load_attr.7': [(<numba.core.ir.Assign object at 0x7f7a7695b190>,
                                  357)],
             '$266call.9': [(<numba.core.ir.Assign object at 0x7f7a76764190>,
                             357)],
             '$276compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a76766510>,
                                    357)],
             '$282return_value.11': [(<numba.core.ir.Assign object at 0x7f7a76767890>,
                                      357)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a768e5410>,
                                  240)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a76780350>,
                                     0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x7f7a768e7a50>,
                          240)],
             '$40compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a768f4590>,
                                  241)],
             '$46pred': [(<numba.core.ir.Assign object at 0x7f7a768f6e50>,
                          241)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a76780850>,
                                     0)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a76780b10>,
                                   0)],
             '$76unary_negative.4': [(<numba.core.ir.Assign object at 0x7f7a7690d590>,
                                      295)],
             '$84compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a7690e650>,
                                  295)],
             '$90pred': [(<numba.core.ir.Assign object at 0x7f7a76911bd0>,
                          295)],
             '$94compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a7691a710>,
                                  299)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a767846d0>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a76781810>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a76781e10>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a76782150>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a76782310>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a76782e50>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a76783010>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a76783890>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a76783f90>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a76784190>,
                                 0)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a768d8ed0>,
                            240)],
             '$const60.1': [(<numba.core.ir.Assign object at 0x7f7a769037d0>,
                             295)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a767812d0>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a76781650>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a7677fe50>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a7677ff10>,
                              230)],
             '$phi38.0': [(<numba.core.ir.Assign object at 0x7f7a768db050>,
                           240)],
             '$phi92.0': [(<numba.core.ir.Assign object at 0x7f7a76912f90>,
                           295)],
             'bool100': [(<numba.core.ir.Assign object at 0x7f7a7691a9d0>,
                          299)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f7a76931990>,
                          349)],
             'bool36': [(<numba.core.ir.Assign object at 0x7f7a768e5510>, 240)],
             'bool46': [(<numba.core.ir.Assign object at 0x7f7a768f4850>, 241)],
             'bool90': [(<numba.core.ir.Assign object at 0x7f7a76910850>, 295)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a7677fb90>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a76785490>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a76780f10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a74ef9150>,
                                240),
                               (<numba.core.ir.Assign object at 0x7f7a768dafd0>,
                                295)],
             'threshold': [(<numba.core.ir.Assign object at 0x7f7a7677f5d0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a7677ed50>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x7f7a76a31810>, 240),
                    (<numba.core.ir.Assign object at 0x7f7a76901010>, 289)],
             'x1': [(<numba.core.ir.Assign object at 0x7f7a7676e2d0>, 295),
                    (<numba.core.ir.Assign object at 0x7f7a7692f190>, 343)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7f7a7677f7d0>,
                           0)]})
2024-06-28 20:38:13,729 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a7687cd50>
2024-06-28 20:38:13,730 - DEBUG - Fix SSA violator on var stencil_index
2024-06-28 20:38:13,730 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:13,730 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,730 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:13,730 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:13,730 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:13,730 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:13,730 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,730 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:13,730 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,731 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:13,731 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,731 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:13,731 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:13,731 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:13,731 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,731 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,731 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:13,731 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:13,731 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:13,731 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,732 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:13,732 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:13,732 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:13,733 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:13,733 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,733 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:13,733 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,733 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:13,733 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:13,733 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,733 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:13,733 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,733 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:13,733 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:13,734 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:13,734 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:13,734 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:13,734 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:13,734 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,734 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:13,734 - DEBUG - on stmt: jump 240
2024-06-28 20:38:13,734 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:13,734 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,734 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:13,734 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:13,734 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:13,734 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,734 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:13,735 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:13,735 - DEBUG - first assign: stencil_index
2024-06-28 20:38:13,735 - DEBUG - replaced with: stencil_index = $const6.1 + index00
2024-06-28 20:38:13,735 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,736 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,736 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:13,736 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,736 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,736 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:13,736 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:13,736 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:13,736 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,736 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:13,737 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,737 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,737 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:13,737 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:13,737 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,737 - DEBUG - on stmt: jump 289
2024-06-28 20:38:13,737 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:13,737 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,737 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,737 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:13,738 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,738 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-28 20:38:13,738 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,738 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:13,738 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,738 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:13,738 - DEBUG - on stmt: stencil_index = $const60.1 + index00
2024-06-28 20:38:13,738 - DEBUG - replaced with: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:13,738 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,738 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,739 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:13,739 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,739 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,739 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:13,739 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:13,739 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:13,739 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,739 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:13,739 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,739 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,740 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:13,740 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:13,740 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,740 - DEBUG - on stmt: jump 343
2024-06-28 20:38:13,740 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:13,740 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,740 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,740 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:13,740 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,740 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:13,741 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,741 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:13,741 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,741 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,741 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,741 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:13,741 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:13,741 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,741 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,742 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:13,742 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,742 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,742 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:13,742 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,742 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:13,742 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:13,742 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:13,742 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,742 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:13,743 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,743 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,743 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:13,743 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,743 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,743 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:13,743 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,743 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:13,743 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:13,744 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:13,744 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,744 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:13,744 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76a55d50>
2024-06-28 20:38:13,744 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,744 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x7f7a7687c490>],
             295: [<numba.core.ir.Assign object at 0x7f7a767ac790>]})
2024-06-28 20:38:13,744 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:13,744 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,745 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:13,745 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:13,745 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:13,745 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:13,745 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,745 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:13,745 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,746 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:13,746 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,746 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:13,746 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:13,746 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:13,746 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,746 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,746 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:13,747 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:13,747 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:13,747 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:13,747 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,747 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,747 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:13,747 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:13,747 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:13,748 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,749 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:13,749 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,749 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:13,749 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:13,749 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,749 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:13,749 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,749 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:13,749 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:13,749 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:13,749 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:13,750 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:13,750 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:13,750 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,750 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:13,750 - DEBUG - on stmt: jump 240
2024-06-28 20:38:13,750 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:13,750 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,750 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:13,750 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:13,750 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:13,750 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,750 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:13,751 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:13,751 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,751 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,751 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,751 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:13,751 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,751 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,751 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:13,751 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:13,751 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:13,752 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,752 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:13,752 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,752 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,752 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:13,752 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:13,752 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,752 - DEBUG - on stmt: jump 289
2024-06-28 20:38:13,752 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:13,753 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,753 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,753 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:13,753 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,753 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-28 20:38:13,753 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,753 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:13,753 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,753 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:13,753 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:13,753 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,754 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,754 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,754 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,754 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:13,754 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,754 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,755 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:13,755 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:13,755 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:13,755 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,755 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:13,755 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,756 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,756 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:13,757 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:13,757 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,758 - DEBUG - on stmt: jump 343
2024-06-28 20:38:13,758 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:13,758 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,758 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,758 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:13,758 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,759 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:13,759 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,759 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:13,759 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,759 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,760 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,760 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:13,760 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:13,760 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,760 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,760 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:13,760 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,760 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,761 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:13,761 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,761 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:13,761 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:13,761 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:13,761 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,761 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:13,761 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,762 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,762 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:13,762 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,762 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,762 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:13,762 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,762 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:13,762 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:13,763 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:13,763 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,763 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:13,763 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767af2d0>
2024-06-28 20:38:13,763 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,763 - DEBUG - Fix SSA violator on var x0
2024-06-28 20:38:13,763 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:13,763 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,764 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:13,764 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:13,764 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:13,764 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:13,764 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,764 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:13,764 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,764 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:13,765 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,765 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:13,765 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:13,765 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:13,765 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,765 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,765 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:13,765 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:13,765 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:13,765 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:13,765 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,766 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,766 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:13,766 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:13,766 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:13,766 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:13,766 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:13,766 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,767 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:13,767 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:13,767 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,767 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:13,767 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:13,767 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:13,767 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,767 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:13,768 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,768 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:13,768 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:13,768 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,768 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:13,768 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,768 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:13,769 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:13,769 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:13,769 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:13,769 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:13,769 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:13,769 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,769 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:13,769 - DEBUG - on stmt: jump 240
2024-06-28 20:38:13,769 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:13,769 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,769 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:13,770 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:13,770 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:13,770 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,770 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:13,770 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:13,770 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,770 - DEBUG - first assign: x0
2024-06-28 20:38:13,770 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,770 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,771 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:13,771 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,771 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,771 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:13,771 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:13,771 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:13,771 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,771 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:13,771 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,771 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,771 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:13,772 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:13,772 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,772 - DEBUG - on stmt: jump 289
2024-06-28 20:38:13,772 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:13,772 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,772 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,772 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:13,772 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,772 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-28 20:38:13,772 - DEBUG - replaced with: x0.1 = const(int, 0)
2024-06-28 20:38:13,772 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,773 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:13,773 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,773 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:13,773 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:13,773 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,773 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,773 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:13,773 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,774 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,774 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:13,774 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:13,774 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:13,774 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,774 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:13,774 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,775 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,775 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:13,775 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:13,775 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,775 - DEBUG - on stmt: jump 343
2024-06-28 20:38:13,775 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:13,776 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,776 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,776 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:13,776 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,776 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:13,776 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,777 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:13,777 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,777 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,777 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,777 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:13,777 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:13,778 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,778 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,778 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:13,778 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,779 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,779 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:13,779 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,779 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:13,779 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:13,779 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:13,779 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,779 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:13,780 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,780 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,780 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:13,780 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,780 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,780 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:13,780 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,781 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:13,781 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:13,781 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:13,781 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,781 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:13,781 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a76780510>
2024-06-28 20:38:13,781 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,781 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x7f7a767acf10>],
             289: [<numba.core.ir.Assign object at 0x7f7a767aca10>]})
2024-06-28 20:38:13,782 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:13,782 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,782 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:13,782 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:13,782 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:13,782 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:13,783 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,783 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:13,783 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,783 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:13,783 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,783 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:13,783 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:13,783 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:13,783 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,784 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,784 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:13,784 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:13,784 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:13,784 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:13,784 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,784 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,784 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:13,784 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:13,784 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:13,784 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:13,784 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:13,784 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,785 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:13,785 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:13,785 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,785 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:13,785 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:13,785 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:13,785 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,785 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:13,785 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,786 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:13,786 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:13,786 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,786 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:13,786 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,786 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:13,786 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:13,786 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:13,786 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:13,786 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:13,786 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:13,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,787 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:13,787 - DEBUG - on stmt: jump 240
2024-06-28 20:38:13,787 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:13,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,787 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:13,787 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:13,787 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:13,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,787 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:13,787 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:13,787 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,788 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,788 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:13,788 - DEBUG - find_def var='x0' stmt=$30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:13,788 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,788 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,788 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:13,788 - DEBUG - find_def var='x0' stmt=$phi38.0 = x0
2024-06-28 20:38:13,788 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:13,788 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:13,788 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,788 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:13,789 - DEBUG - find_def var='x0' stmt=$40compare_op.2 = x0 <= threshold
2024-06-28 20:38:13,789 - DEBUG - find_def_from_top label 241
2024-06-28 20:38:13,789 - DEBUG - idom 240 from label 241
2024-06-28 20:38:13,789 - DEBUG - find_def_from_bottom label 240
2024-06-28 20:38:13,789 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,789 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,789 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:13,789 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:13,789 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,789 - DEBUG - on stmt: jump 289
2024-06-28 20:38:13,789 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:13,789 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,789 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,790 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:13,790 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,790 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-28 20:38:13,790 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,790 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:13,790 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,790 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:13,790 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:13,790 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,790 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,790 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:13,790 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,791 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,791 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:13,791 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:13,791 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:13,791 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,791 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:13,791 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,791 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,791 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:13,791 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:13,791 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,791 - DEBUG - on stmt: jump 343
2024-06-28 20:38:13,791 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:13,792 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,792 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,792 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:13,792 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,792 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:13,792 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,792 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:13,792 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,792 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,792 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,792 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:13,792 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:13,792 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,793 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,793 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:13,793 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,793 - DEBUG - find_def var='x0' stmt=$144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,793 - DEBUG - find_def_from_top label 353
2024-06-28 20:38:13,793 - DEBUG - idom 349 from label 353
2024-06-28 20:38:13,793 - DEBUG - find_def_from_bottom label 349
2024-06-28 20:38:13,793 - DEBUG - find_def_from_top label 349
2024-06-28 20:38:13,793 - DEBUG - idom 295 from label 349
2024-06-28 20:38:13,793 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:13,793 - DEBUG - find_def_from_top label 295
2024-06-28 20:38:13,793 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 295
2024-06-28 20:38:13,794 - DEBUG - find_def_from_bottom label 241
2024-06-28 20:38:13,794 - DEBUG - find_def_from_top label 241
2024-06-28 20:38:13,794 - DEBUG - idom 240 from label 241
2024-06-28 20:38:13,794 - DEBUG - find_def_from_bottom label 240
2024-06-28 20:38:13,794 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,794 - DEBUG - find_def_from_bottom label 291
2024-06-28 20:38:13,794 - DEBUG - find_def_from_top label 291
2024-06-28 20:38:13,794 - DEBUG - idom 240 from label 291
2024-06-28 20:38:13,794 - DEBUG - find_def_from_bottom label 240
2024-06-28 20:38:13,795 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,795 - DEBUG - find_def_from_bottom label 289
2024-06-28 20:38:13,795 - DEBUG - incoming_def x0.1 = const(int, 0)
2024-06-28 20:38:13,795 - DEBUG - replaced with: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,795 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,796 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:13,796 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,796 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:13,796 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:13,796 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:13,796 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,797 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:13,797 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,797 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,797 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:13,797 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,798 - DEBUG - find_def var='x0' stmt=$228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,798 - DEBUG - find_def_from_top label 357
2024-06-28 20:38:13,798 - DEBUG - idom 349 from label 357
2024-06-28 20:38:13,798 - DEBUG - find_def_from_bottom label 349
2024-06-28 20:38:13,798 - DEBUG - find_def_from_top label 349
2024-06-28 20:38:13,798 - DEBUG - idom 295 from label 349
2024-06-28 20:38:13,798 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:13,799 - DEBUG - replaced with: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,799 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,799 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:13,799 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,799 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:13,799 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:13,799 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:13,799 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,800 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:13,800 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76780510>
2024-06-28 20:38:13,800 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,800 - DEBUG - Fix SSA violator on var x1
2024-06-28 20:38:13,800 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:13,800 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,800 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:13,800 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:13,801 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:13,801 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:13,801 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,801 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:13,801 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,801 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:13,801 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,802 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:13,802 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:13,802 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:13,802 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,802 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,802 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:13,802 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:13,802 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:13,802 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:13,802 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,803 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,803 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:13,803 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:13,803 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:13,803 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:13,803 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:13,803 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,803 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:13,803 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:13,804 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,804 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:13,804 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:13,804 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:13,804 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,804 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:13,804 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,804 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:13,804 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:13,805 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,805 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:13,805 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,805 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:13,805 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:13,805 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:13,805 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:13,805 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:13,805 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:13,805 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,805 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:13,805 - DEBUG - on stmt: jump 240
2024-06-28 20:38:13,806 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:13,806 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,806 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:13,806 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:13,806 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:13,806 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,806 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:13,806 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:13,806 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,806 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,807 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:13,807 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,807 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,807 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:13,807 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:13,807 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:13,807 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,807 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:13,808 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,808 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,808 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:13,808 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:13,808 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,808 - DEBUG - on stmt: jump 289
2024-06-28 20:38:13,808 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:13,808 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,808 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,808 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:13,808 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,809 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-28 20:38:13,809 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,809 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:13,809 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,809 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-06-28 20:38:13,809 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:13,809 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:13,809 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,809 - DEBUG - first assign: x1
2024-06-28 20:38:13,809 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,809 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,809 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:13,810 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,810 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,810 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:13,810 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:13,810 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:13,810 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,810 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:13,810 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,810 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,810 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:13,810 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:13,810 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,811 - DEBUG - on stmt: jump 343
2024-06-28 20:38:13,811 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:13,811 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,811 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,811 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:13,811 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,811 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:13,811 - DEBUG - replaced with: x1.1 = const(int, 0)
2024-06-28 20:38:13,811 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,811 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:13,811 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,811 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,811 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,811 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:13,811 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:13,812 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,812 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,812 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:13,812 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,812 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,812 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:13,812 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,812 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:13,812 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:13,812 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:13,813 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,813 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:13,813 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,813 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,813 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:13,813 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,813 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,813 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:13,813 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,813 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:13,813 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:13,813 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:13,814 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,814 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:13,814 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a767ad450>
2024-06-28 20:38:13,814 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,814 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {295: [<numba.core.ir.Assign object at 0x7f7a767bb1d0>],
             343: [<numba.core.ir.Assign object at 0x7f7a767bbbd0>]})
2024-06-28 20:38:13,814 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:13,814 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,814 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:13,814 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:13,814 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:13,814 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:13,814 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,815 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:13,815 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,815 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:13,815 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,815 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:13,815 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:13,815 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:13,816 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,816 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,816 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:13,816 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:13,816 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:13,817 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:13,817 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:13,817 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,817 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:13,817 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:13,817 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:13,817 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:13,817 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:13,817 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,817 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:13,818 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:13,818 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,818 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:13,818 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:13,818 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:13,818 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,818 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:13,819 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,819 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:13,819 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:13,819 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,819 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:13,819 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,819 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:13,819 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:13,820 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:13,820 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:13,820 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:13,820 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:13,820 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,820 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:13,820 - DEBUG - on stmt: jump 240
2024-06-28 20:38:13,820 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:13,820 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,821 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:13,821 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:13,821 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:13,821 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,821 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:13,821 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:13,821 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:13,821 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,822 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:13,822 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,822 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,822 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:13,822 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:13,822 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:13,822 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,822 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:13,822 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,822 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,823 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:13,823 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:13,823 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,823 - DEBUG - on stmt: jump 289
2024-06-28 20:38:13,823 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:13,823 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,823 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,823 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:13,823 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,823 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-28 20:38:13,824 - DEBUG - on stmt: jump 295
2024-06-28 20:38:13,824 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:13,824 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,824 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-06-28 20:38:13,824 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:13,824 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:13,825 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,825 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:13,825 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:13,825 - DEBUG - find_def var='x1' stmt=$84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:13,825 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,825 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,825 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:13,825 - DEBUG - find_def var='x1' stmt=$phi92.0 = x1
2024-06-28 20:38:13,826 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:13,826 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:13,826 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,826 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:13,826 - DEBUG - find_def var='x1' stmt=$94compare_op.2 = x1 <= threshold
2024-06-28 20:38:13,826 - DEBUG - find_def_from_top label 299
2024-06-28 20:38:13,826 - DEBUG - idom 295 from label 299
2024-06-28 20:38:13,826 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:13,826 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,826 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,827 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:13,827 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:13,827 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,827 - DEBUG - on stmt: jump 343
2024-06-28 20:38:13,827 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:13,827 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,827 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,827 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:13,827 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,827 - DEBUG - on stmt: x1.1 = const(int, 0)
2024-06-28 20:38:13,828 - DEBUG - on stmt: jump 349
2024-06-28 20:38:13,828 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:13,828 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,828 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:13,828 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,828 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:13,828 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:13,828 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,828 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,829 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:13,829 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,829 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,829 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:13,829 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,829 - DEBUG - find_def var='x1' stmt=$182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,830 - DEBUG - find_def_from_top label 353
2024-06-28 20:38:13,830 - DEBUG - idom 349 from label 353
2024-06-28 20:38:13,830 - DEBUG - find_def_from_bottom label 349
2024-06-28 20:38:13,830 - DEBUG - find_def_from_top label 349
2024-06-28 20:38:13,830 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 349
2024-06-28 20:38:13,830 - DEBUG - find_def_from_bottom label 345
2024-06-28 20:38:13,830 - DEBUG - find_def_from_top label 345
2024-06-28 20:38:13,830 - DEBUG - idom 295 from label 345
2024-06-28 20:38:13,830 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:13,830 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,830 - DEBUG - find_def_from_bottom label 299
2024-06-28 20:38:13,830 - DEBUG - find_def_from_top label 299
2024-06-28 20:38:13,831 - DEBUG - idom 295 from label 299
2024-06-28 20:38:13,831 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:13,831 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:13,831 - DEBUG - find_def_from_bottom label 343
2024-06-28 20:38:13,831 - DEBUG - incoming_def x1.1 = const(int, 0)
2024-06-28 20:38:13,831 - DEBUG - replaced with: $182call.9 = call $166load_attr.7(x1.2, func=$166load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,831 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:13,831 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:13,831 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:13,831 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,832 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:13,832 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,832 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,832 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:13,832 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,832 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:13,832 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:13,832 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,832 - DEBUG - find_def var='x1' stmt=$266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,832 - DEBUG - find_def_from_top label 357
2024-06-28 20:38:13,832 - DEBUG - idom 349 from label 357
2024-06-28 20:38:13,833 - DEBUG - find_def_from_bottom label 349
2024-06-28 20:38:13,833 - DEBUG - replaced with: $266call.9 = call $250load_attr.7(x1.2, func=$250load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,833 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:13,833 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:13,833 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:13,833 - DEBUG - on stmt: jump 441
2024-06-28 20:38:13,833 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:13,833 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a767ad450>
2024-06-28 20:38:13,833 - DEBUG - on stmt: jump 230
2024-06-28 20:38:13,844 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	COPY_FREE_VARS(arg=1, lineno=4388)
           4	RESUME(arg=0, lineno=4388)
           6	LOAD_GLOBAL(arg=1, lineno=4389)
          18	LOAD_FAST(arg=0, lineno=4389)
          20	LOAD_FAST(arg=1, lineno=4389)
          22	LOAD_DEREF(arg=2, lineno=4389)
          24	PRECALL(arg=3, lineno=4389)
          28	CALL(arg=3, lineno=4389)
          38	RETURN_VALUE(arg=None, lineno=4389)
2024-06-28 20:38:13,845 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:13,845 - DEBUG - stack: []
2024-06-28 20:38:13,845 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:13,845 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4388)
2024-06-28 20:38:13,845 - DEBUG - stack []
2024-06-28 20:38:13,845 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=4388)
2024-06-28 20:38:13,845 - DEBUG - stack []
2024-06-28 20:38:13,845 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=4388)
2024-06-28 20:38:13,845 - DEBUG - stack []
2024-06-28 20:38:13,845 - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=1, lineno=4389)
2024-06-28 20:38:13,845 - DEBUG - stack []
2024-06-28 20:38:13,846 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4389)
2024-06-28 20:38:13,846 - DEBUG - stack ['$null$6.1', '$6load_global.0']
2024-06-28 20:38:13,846 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=4389)
2024-06-28 20:38:13,846 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape18.2']
2024-06-28 20:38:13,846 - DEBUG - dispatch pc=22, inst=LOAD_DEREF(arg=2, lineno=4389)
2024-06-28 20:38:13,846 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3']
2024-06-28 20:38:13,846 - DEBUG - dispatch pc=24, inst=PRECALL(arg=3, lineno=4389)
2024-06-28 20:38:13,846 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3', '$22load_deref.4']
2024-06-28 20:38:13,847 - DEBUG - dispatch pc=28, inst=CALL(arg=3, lineno=4389)
2024-06-28 20:38:13,847 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3', '$22load_deref.4']
2024-06-28 20:38:13,847 - DEBUG - dispatch pc=38, inst=RETURN_VALUE(arg=None, lineno=4389)
2024-06-28 20:38:13,847 - DEBUG - stack ['$28call.5']
2024-06-28 20:38:13,847 - DEBUG - end state. edges=[]
2024-06-28 20:38:13,847 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:13,847 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:13,847 - DEBUG - defmap: {}
2024-06-28 20:38:13,847 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:13,847 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:13,848 - DEBUG - keep phismap: {}
2024-06-28 20:38:13,848 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:13,848 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:13,848 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'idx': 0, 'res': '$6load_global.0'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$shape18.2'}), (20, {'res': '$dtype20.3'}), (22, {'res': '$22load_deref.4'}), (24, {}), (26, {}), (28, {'func': '$6load_global.0', 'args': ['$shape18.2', '$dtype20.3', '$22load_deref.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'retval': '$28call.5', 'castval': '$38return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:13,849 - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$6load_global.0']
    $22load_deref.4 = freevar(retty: array(bool, 1d, C)) ['$22load_deref.4']
    $28call.5 = call $6load_global.0(shape, dtype, $22load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($22load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_deref.4', '$28call.5', '$6load_global.0', 'dtype', 'shape']
    $38return_value.6 = cast(value=$28call.5) ['$28call.5', '$38return_value.6']
    return $38return_value.6                 ['$38return_value.6']

2024-06-28 20:38:13,854 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:13,854 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a767dc390>
2024-06-28 20:38:13,854 - DEBUG - on stmt: shape = arg(0, name=shape)
2024-06-28 20:38:13,854 - DEBUG - on stmt: dtype = arg(1, name=dtype)
2024-06-28 20:38:13,854 - DEBUG - on stmt: $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2024-06-28 20:38:13,854 - DEBUG - on stmt: $22load_deref.4 = freevar(retty: array(bool, 1d, C))
2024-06-28 20:38:13,855 - DEBUG - on stmt: $28call.5 = call $6load_global.0(shape, dtype, $22load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($22load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,855 - DEBUG - on stmt: $38return_value.6 = cast(value=$28call.5)
2024-06-28 20:38:13,855 - DEBUG - on stmt: return $38return_value.6
2024-06-28 20:38:13,855 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22load_deref.4': [(<numba.core.ir.Assign object at 0x7f7a768b1dd0>,
                                  0)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x7f7a767c7ad0>,
                            0)],
             '$38return_value.6': [(<numba.core.ir.Assign object at 0x7f7a767c7d90>,
                                    0)],
             '$6load_global.0': [(<numba.core.ir.Assign object at 0x7f7a767c72d0>,
                                  0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7f7a767c7090>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7f7a767c6fd0>, 0)]})
2024-06-28 20:38:13,855 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a74ef9710>
2024-06-28 20:38:13,871 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4264)
           2	RESUME(arg=0, lineno=4264)
           4	LOAD_FAST(arg=0, lineno=4267)
           6	LOAD_METHOD(arg=0, lineno=4267)
          28	LOAD_FAST(arg=1, lineno=4267)
          30	LOAD_FAST(arg=2, lineno=4267)
          32	PRECALL(arg=2, lineno=4267)
          36	CALL(arg=2, lineno=4267)
          46	RETURN_VALUE(arg=None, lineno=4267)
2024-06-28 20:38:13,871 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:13,871 - DEBUG - stack: []
2024-06-28 20:38:13,871 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:13,872 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4264)
2024-06-28 20:38:13,872 - DEBUG - stack []
2024-06-28 20:38:13,872 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4264)
2024-06-28 20:38:13,872 - DEBUG - stack []
2024-06-28 20:38:13,872 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4267)
2024-06-28 20:38:13,872 - DEBUG - stack []
2024-06-28 20:38:13,872 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=4267)
2024-06-28 20:38:13,872 - DEBUG - stack ['$arrtype4.0']
2024-06-28 20:38:13,872 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=4267)
2024-06-28 20:38:13,872 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-06-28 20:38:13,872 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=2, lineno=4267)
2024-06-28 20:38:13,872 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$size28.3']
2024-06-28 20:38:13,873 - DEBUG - dispatch pc=32, inst=PRECALL(arg=2, lineno=4267)
2024-06-28 20:38:13,873 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$size28.3', '$align30.4']
2024-06-28 20:38:13,873 - DEBUG - dispatch pc=36, inst=CALL(arg=2, lineno=4267)
2024-06-28 20:38:13,873 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$size28.3', '$align30.4']
2024-06-28 20:38:13,873 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4267)
2024-06-28 20:38:13,873 - DEBUG - stack ['$36call.5']
2024-06-28 20:38:13,873 - DEBUG - end state. edges=[]
2024-06-28 20:38:13,873 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:13,873 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:13,873 - DEBUG - defmap: {}
2024-06-28 20:38:13,873 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:13,873 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:13,874 - DEBUG - keep phismap: {}
2024-06-28 20:38:13,874 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:13,874 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:13,874 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$arrtype4.0'}), (6, {'item': '$arrtype4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$size28.3'}), (30, {'res': '$align30.4'}), (32, {}), (34, {}), (36, {'func': '$6load_method.2', 'args': ['$size28.3', '$align30.4'], 'kw_names': None, 'res': '$36call.5'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'retval': '$36call.5', 'castval': '$46return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:13,874 - DEBUG - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $6load_method.2 = getattr(value=arrtype, attr=_allocate) ['$6load_method.2', 'arrtype']
    $36call.5 = call $6load_method.2(size, align, func=$6load_method.2, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None) ['$36call.5', '$6load_method.2', 'align', 'size']
    $46return_value.6 = cast(value=$36call.5) ['$36call.5', '$46return_value.6']
    return $46return_value.6                 ['$46return_value.6']

2024-06-28 20:38:13,881 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:13,881 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7682bb50>
2024-06-28 20:38:13,881 - DEBUG - on stmt: arrtype = arg(0, name=arrtype)
2024-06-28 20:38:13,882 - DEBUG - on stmt: size = arg(1, name=size)
2024-06-28 20:38:13,882 - DEBUG - on stmt: align = arg(2, name=align)
2024-06-28 20:38:13,882 - DEBUG - on stmt: $6load_method.2 = getattr(value=arrtype, attr=_allocate)
2024-06-28 20:38:13,882 - DEBUG - on stmt: $36call.5 = call $6load_method.2(size, align, func=$6load_method.2, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,882 - DEBUG - on stmt: $46return_value.6 = cast(value=$36call.5)
2024-06-28 20:38:13,882 - DEBUG - on stmt: return $46return_value.6
2024-06-28 20:38:13,882 - DEBUG - defs defaultdict(<class 'list'>,
            {'$36call.5': [(<numba.core.ir.Assign object at 0x7f7a767f4c50>,
                            0)],
             '$46return_value.6': [(<numba.core.ir.Assign object at 0x7f7a767f4f50>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f7a767f44d0>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7f7a767f4090>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7f7a767c7310>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7f7a767f3f50>, 0)]})
2024-06-28 20:38:13,883 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a7682bb50>
2024-06-28 20:38:13,887 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4259)
           2	RESUME(arg=0, lineno=4259)
           4	LOAD_GLOBAL(arg=1, lineno=4260)
          16	LOAD_FAST(arg=1, lineno=4260)
          18	LOAD_FAST(arg=2, lineno=4260)
          20	PRECALL(arg=2, lineno=4260)
          24	CALL(arg=2, lineno=4260)
          34	RETURN_VALUE(arg=None, lineno=4260)
2024-06-28 20:38:13,887 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:13,887 - DEBUG - stack: []
2024-06-28 20:38:13,887 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:13,887 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4259)
2024-06-28 20:38:13,887 - DEBUG - stack []
2024-06-28 20:38:13,887 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4259)
2024-06-28 20:38:13,887 - DEBUG - stack []
2024-06-28 20:38:13,887 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4260)
2024-06-28 20:38:13,888 - DEBUG - stack []
2024-06-28 20:38:13,888 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4260)
2024-06-28 20:38:13,888 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:13,888 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=4260)
2024-06-28 20:38:13,888 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize16.2']
2024-06-28 20:38:13,888 - DEBUG - dispatch pc=20, inst=PRECALL(arg=2, lineno=4260)
2024-06-28 20:38:13,888 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize16.2', '$align18.3']
2024-06-28 20:38:13,888 - DEBUG - dispatch pc=24, inst=CALL(arg=2, lineno=4260)
2024-06-28 20:38:13,888 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize16.2', '$align18.3']
2024-06-28 20:38:13,888 - DEBUG - dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=4260)
2024-06-28 20:38:13,888 - DEBUG - stack ['$24call.4']
2024-06-28 20:38:13,889 - DEBUG - end state. edges=[]
2024-06-28 20:38:13,889 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:13,889 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:13,889 - DEBUG - defmap: {}
2024-06-28 20:38:13,889 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:13,889 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:13,889 - DEBUG - keep phismap: {}
2024-06-28 20:38:13,889 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:13,890 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:13,890 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$allocsize16.2'}), (18, {'res': '$align18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$allocsize16.2', '$align18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:13,890 - DEBUG - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'align', 'allocsize']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

2024-06-28 20:38:13,897 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:13,897 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76694d90>
2024-06-28 20:38:13,897 - DEBUG - on stmt: cls = arg(0, name=cls)
2024-06-28 20:38:13,897 - DEBUG - on stmt: allocsize = arg(1, name=allocsize)
2024-06-28 20:38:13,897 - DEBUG - on stmt: align = arg(2, name=align)
2024-06-28 20:38:13,897 - DEBUG - on stmt: $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
2024-06-28 20:38:13,897 - DEBUG - on stmt: $24call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:13,897 - DEBUG - on stmt: $34return_value.5 = cast(value=$24call.4)
2024-06-28 20:38:13,898 - DEBUG - on stmt: return $34return_value.5
2024-06-28 20:38:13,899 - DEBUG - defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x7f7a76683e10>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x7f7a76694050>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a76683850>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7f7a76683650>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7f7a76683510>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7f7a76683410>, 0)]})
2024-06-28 20:38:13,899 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76694d90>
2024-06-28 20:38:14,027 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	COPY_FREE_VARS(arg=1, lineno=200)
           4	RESUME(arg=0, lineno=200)
           6	LOAD_FAST(arg=0, lineno=201)
           8	LOAD_DEREF(arg=2, lineno=201)
          10	BINARY_SUBSCR(arg=None, lineno=201)
          20	RETURN_VALUE(arg=None, lineno=201)
2024-06-28 20:38:14,027 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:14,028 - DEBUG - stack: []
2024-06-28 20:38:14,028 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:14,028 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=200)
2024-06-28 20:38:14,028 - DEBUG - stack []
2024-06-28 20:38:14,028 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=200)
2024-06-28 20:38:14,028 - DEBUG - stack []
2024-06-28 20:38:14,028 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=200)
2024-06-28 20:38:14,028 - DEBUG - stack []
2024-06-28 20:38:14,028 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=201)
2024-06-28 20:38:14,028 - DEBUG - stack []
2024-06-28 20:38:14,028 - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=2, lineno=201)
2024-06-28 20:38:14,029 - DEBUG - stack ['$tup6.0']
2024-06-28 20:38:14,029 - DEBUG - dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=201)
2024-06-28 20:38:14,029 - DEBUG - stack ['$tup6.0', '$8load_deref.1']
2024-06-28 20:38:14,029 - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=201)
2024-06-28 20:38:14,029 - DEBUG - stack ['$10binary_subscr.2']
2024-06-28 20:38:14,029 - DEBUG - end state. edges=[]
2024-06-28 20:38:14,029 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:14,029 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:14,029 - DEBUG - defmap: {}
2024-06-28 20:38:14,030 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:14,030 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:14,030 - DEBUG - keep phismap: {}
2024-06-28 20:38:14,030 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:14,030 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:14,030 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$tup6.0'}), (8, {'res': '$8load_deref.1'}), (10, {'index': '$8load_deref.1', 'target': '$tup6.0', 'res': '$10binary_subscr.2'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {'retval': '$10binary_subscr.2', 'castval': '$20return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:14,031 - DEBUG - label 0:
    tup = arg(0, name=tup)                   ['tup']
    idx = arg(1, name=idx)                   ['idx']
    $8load_deref.1 = freevar(idx_val: 0)     ['$8load_deref.1']
    $10binary_subscr.2 = getitem(value=tup, index=$8load_deref.1, fn=<built-in function getitem>) ['$10binary_subscr.2', '$8load_deref.1', 'tup']
    $20return_value.3 = cast(value=$10binary_subscr.2) ['$10binary_subscr.2', '$20return_value.3']
    return $20return_value.3                 ['$20return_value.3']

2024-06-28 20:38:14,036 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:14,036 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a768a3d90>
2024-06-28 20:38:14,037 - DEBUG - on stmt: tup = arg(0, name=tup)
2024-06-28 20:38:14,037 - DEBUG - on stmt: idx = arg(1, name=idx)
2024-06-28 20:38:14,037 - DEBUG - on stmt: $8load_deref.1 = freevar(idx_val: 0)
2024-06-28 20:38:14,037 - DEBUG - on stmt: $10binary_subscr.2 = static_getitem(value=tup, index=0, index_var=$8load_deref.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,037 - DEBUG - on stmt: $20return_value.3 = cast(value=$10binary_subscr.2)
2024-06-28 20:38:14,037 - DEBUG - on stmt: return $20return_value.3
2024-06-28 20:38:14,037 - DEBUG - defs defaultdict(<class 'list'>,
            {'$10binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a766c9b90>,
                                     0)],
             '$20return_value.3': [(<numba.core.ir.Assign object at 0x7f7a76869b10>,
                                    0)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x7f7a7687ce10>,
                                 0)],
             'idx': [(<numba.core.ir.Assign object at 0x7f7a767af110>, 0)],
             'tup': [(<numba.core.ir.Assign object at 0x7f7a767aca50>, 0)]})
2024-06-28 20:38:14,037 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a768a3d90>
2024-06-28 20:38:14,408 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1158)
           2	RESUME(arg=0, lineno=1158)
           4	LOAD_GLOBAL(arg=1, lineno=1174)
          16	LOAD_FAST(arg=0, lineno=1174)
          18	LOAD_FAST(arg=1, lineno=1174)
          20	LOAD_FAST(arg=2, lineno=1174)
          22	PRECALL(arg=3, lineno=1174)
          26	CALL(arg=3, lineno=1174)
          36	LOAD_FAST(arg=3, lineno=1174)
          38	LOAD_CONST(arg=1, lineno=1174)
          40	LOAD_CONST(arg=1, lineno=1174)
          42	BUILD_SLICE(arg=2, lineno=1174)
          44	STORE_SUBSCR(arg=None, lineno=1174)
          48	LOAD_CONST(arg=1, lineno=1174)
          50	RETURN_VALUE(arg=None, lineno=1174)
2024-06-28 20:38:14,409 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:14,409 - DEBUG - stack: []
2024-06-28 20:38:14,409 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:14,409 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1158)
2024-06-28 20:38:14,409 - DEBUG - stack []
2024-06-28 20:38:14,409 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1158)
2024-06-28 20:38:14,409 - DEBUG - stack []
2024-06-28 20:38:14,409 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1174)
2024-06-28 20:38:14,409 - DEBUG - stack []
2024-06-28 20:38:14,409 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1174)
2024-06-28 20:38:14,410 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:14,410 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=1174)
2024-06-28 20:38:14,410 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:14,410 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=1174)
2024-06-28 20:38:14,410 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3']
2024-06-28 20:38:14,410 - DEBUG - dispatch pc=22, inst=PRECALL(arg=3, lineno=1174)
2024-06-28 20:38:14,410 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-06-28 20:38:14,410 - DEBUG - dispatch pc=26, inst=CALL(arg=3, lineno=1174)
2024-06-28 20:38:14,410 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
2024-06-28 20:38:14,410 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=1174)
2024-06-28 20:38:14,410 - DEBUG - stack ['$26call.5']
2024-06-28 20:38:14,410 - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-28 20:38:14,410 - DEBUG - stack ['$26call.5', '$y36.6']
2024-06-28 20:38:14,411 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-28 20:38:14,411 - DEBUG - stack ['$26call.5', '$y36.6', '$const38.7']
2024-06-28 20:38:14,411 - DEBUG - dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=1174)
2024-06-28 20:38:14,411 - DEBUG - stack ['$26call.5', '$y36.6', '$const38.7', '$const40.8']
2024-06-28 20:38:14,411 - DEBUG - dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=1174)
2024-06-28 20:38:14,411 - DEBUG - stack ['$26call.5', '$y36.6', '$42build_slice.10']
2024-06-28 20:38:14,411 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-28 20:38:14,411 - DEBUG - stack []
2024-06-28 20:38:14,411 - DEBUG - dispatch pc=50, inst=RETURN_VALUE(arg=None, lineno=1174)
2024-06-28 20:38:14,411 - DEBUG - stack ['$const48.11']
2024-06-28 20:38:14,411 - DEBUG - end state. edges=[]
2024-06-28 20:38:14,411 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:14,412 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:14,412 - DEBUG - defmap: {}
2024-06-28 20:38:14,412 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:14,412 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:14,412 - DEBUG - keep phismap: {}
2024-06-28 20:38:14,412 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:14,412 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:14,412 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$threshold18.3'}), (20, {'res': '$zero_pos20.4'}), (22, {}), (24, {}), (26, {'func': '$4load_global.0', 'args': ['$x16.2', '$threshold18.3', '$zero_pos20.4'], 'kw_names': None, 'res': '$26call.5'}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'res': '$y36.6'}), (38, {'res': '$const38.7'}), (40, {'res': '$const40.8'}), (42, {'start': '$const38.7', 'stop': '$const40.8', 'step': None, 'res': '$42build_slice.10', 'slicevar': '$42build_slice.9'}), (44, {'target': '$y36.6', 'index': '$42build_slice.10', 'value': '$26call.5'}), (46, {}), (48, {'res': '$const48.11'}), (50, {'retval': '$const48.11', 'castval': '$50return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:14,413 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f7a6f722510>) ['$4load_global.0']
    $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None) ['$26call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const38.7 = const(NoneType, None)       ['$const38.7']
    $const40.8 = const(NoneType, None)       ['$const40.8']
    $42build_slice.9 = global(slice: <class 'slice'>) ['$42build_slice.9']
    $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None) ['$42build_slice.10', '$42build_slice.9', '$const38.7', '$const40.8']
    y[$42build_slice.10] = $26call.5         ['$26call.5', '$42build_slice.10', 'y']
    $const48.11 = const(NoneType, None)      ['$const48.11']
    $50return_value.12 = cast(value=$const48.11) ['$50return_value.12', '$const48.11']
    return $50return_value.12                ['$50return_value.12']

2024-06-28 20:38:14,418 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:14,418 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7648c9d0>
2024-06-28 20:38:14,419 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:14,419 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:14,419 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:14,419 - DEBUG - on stmt: y = arg(3, name=y)
2024-06-28 20:38:14,419 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7f7a6f722510>)
2024-06-28 20:38:14,419 - DEBUG - on stmt: $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,419 - DEBUG - on stmt: $const38.7 = const(NoneType, None)
2024-06-28 20:38:14,419 - DEBUG - on stmt: $const40.8 = const(NoneType, None)
2024-06-28 20:38:14,419 - DEBUG - on stmt: $42build_slice.9 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,419 - DEBUG - on stmt: $42build_slice.10 = call $42build_slice.9($const38.7, $const40.8, func=$42build_slice.9, args=(Var($const38.7, audio.py:1174), Var($const40.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,420 - DEBUG - on stmt: y[slice(None, None, None)] = $26call.5
2024-06-28 20:38:14,420 - DEBUG - on stmt: $const48.11 = const(NoneType, None)
2024-06-28 20:38:14,420 - DEBUG - on stmt: $50return_value.12 = cast(value=$const48.11)
2024-06-28 20:38:14,420 - DEBUG - on stmt: return $50return_value.12
2024-06-28 20:38:14,421 - DEBUG - defs defaultdict(<class 'list'>,
            {'$26call.5': [(<numba.core.ir.Assign object at 0x7f7a764a5990>,
                            0)],
             '$42build_slice.10': [(<numba.core.ir.Assign object at 0x7f7a7648fd50>,
                                    0)],
             '$42build_slice.9': [(<numba.core.ir.Assign object at 0x7f7a7648fcd0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a764a7c10>,
                                  0)],
             '$50return_value.12': [(<numba.core.ir.Assign object at 0x7f7a7648f7d0>,
                                     0)],
             '$const38.7': [(<numba.core.ir.Assign object at 0x7f7a7648de90>,
                             0)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a7648f550>,
                             0)],
             '$const48.11': [(<numba.core.ir.Assign object at 0x7f7a7648fa10>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x7f7a764a73d0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a764a6e90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a764a7f90>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7f7a764a7350>,
                           0)]})
2024-06-28 20:38:14,421 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a764a4610>
2024-06-28 20:38:14,463 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=3, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=3, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=4, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=4, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=4, lineno=5)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=3, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=2, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=5, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=6, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=4, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:14,463 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:14,463 - DEBUG - stack: []
2024-06-28 20:38:14,463 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:14,463 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:14,463 - DEBUG - stack []
2024-06-28 20:38:14,464 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:14,464 - DEBUG - stack []
2024-06-28 20:38:14,464 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:14,464 - DEBUG - stack []
2024-06-28 20:38:14,464 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:14,464 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:14,464 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=3, lineno=2)
2024-06-28 20:38:14,464 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:14,464 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:14,464 - DEBUG - stack []
2024-06-28 20:38:14,464 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:14,464 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:14,464 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=3)
2024-06-28 20:38:14,464 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:14,464 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:14,465 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:14,465 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:14,465 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:14,465 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:14,465 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:14,465 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:14,465 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:14,465 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:14,465 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:14,465 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=4, lineno=3)
2024-06-28 20:38:14,465 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:14,465 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:14,465 - DEBUG - stack []
2024-06-28 20:38:14,466 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=4)
2024-06-28 20:38:14,466 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:14,466 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:14,466 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:14,466 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:14,466 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:14,466 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:14,466 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:14,466 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:14,466 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:14,466 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:14,466 - DEBUG - stack []
2024-06-28 20:38:14,466 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=5)
2024-06-28 20:38:14,466 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:14,467 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:14,467 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:14,467 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:14,467 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:14,467 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:14,467 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:14,467 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:14,467 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:14,467 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:14,467 - DEBUG - stack []
2024-06-28 20:38:14,468 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:14,468 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:14,468 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:14,468 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:14,468 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:14,469 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:14,469 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:14,469 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:14,469 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:14,469 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:14,469 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:14,469 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:14,469 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=3, lineno=6)
2024-06-28 20:38:14,470 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:14,470 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:14,470 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:14,470 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:14,470 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:14,470 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:14,471 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:14,471 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:14,471 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:14,471 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:14,471 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:14,471 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:14,471 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:14,471 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:14,471 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:14,472 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:14,472 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:14,472 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:14,472 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:14,472 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:14,472 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:14,472 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:14,473 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:14,473 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:14,473 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:14,473 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:14,473 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:14,473 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:14,473 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:14,474 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:14,474 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:14,474 - DEBUG - stack: []
2024-06-28 20:38:14,474 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:14,474 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=4, lineno=8)
2024-06-28 20:38:14,474 - DEBUG - stack []
2024-06-28 20:38:14,474 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:14,474 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:14,475 - DEBUG - end state. edges=[]
2024-06-28 20:38:14,475 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:14,475 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:14,475 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:14,475 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=5, lineno=6)
2024-06-28 20:38:14,475 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:14,475 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:14,475 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:14,476 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=6, lineno=7)
2024-06-28 20:38:14,476 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:14,476 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:14,476 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:14,476 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:14,476 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:14,476 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:14,476 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:14,477 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:14,477 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:14,477 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:14,478 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:14,478 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:14,479 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:14,479 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:14,479 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:14,479 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:14,479 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:14,480 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:14,480 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:14,481 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, 0)             ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 0)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:14,502 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:14,503 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,503 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:14,503 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:14,503 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:14,503 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:14,503 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,503 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:14,503 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,503 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:14,503 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,503 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:14,504 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:14,504 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:14,504 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,504 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,504 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:14,504 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:14,504 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:14,504 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:14,504 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,505 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,505 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:14,505 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:14,505 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:14,505 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:14,505 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:14,505 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,505 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:14,505 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:14,505 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,506 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:14,506 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:14,506 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:14,506 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,506 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:14,506 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,506 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:14,506 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:14,506 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,506 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:14,506 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,507 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:14,507 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:14,507 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:14,507 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:14,507 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:14,507 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:14,507 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,507 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:14,507 - DEBUG - on stmt: jump 240
2024-06-28 20:38:14,507 - DEBUG - ==== SSA block analysis pass on 442
2024-06-28 20:38:14,507 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,508 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:14,508 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:14,508 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:14,508 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,508 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:14,508 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:14,508 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,508 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,508 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:14,508 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,509 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,509 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:14,509 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:14,509 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:14,509 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,509 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:14,509 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,509 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,509 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:14,509 - DEBUG - ==== SSA block analysis pass on 279
2024-06-28 20:38:14,510 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,510 - DEBUG - on stmt: jump 289
2024-06-28 20:38:14,510 - DEBUG - ==== SSA block analysis pass on 291
2024-06-28 20:38:14,510 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,510 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,510 - DEBUG - ==== SSA block analysis pass on 289
2024-06-28 20:38:14,510 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,510 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-28 20:38:14,511 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,511 - DEBUG - ==== SSA block analysis pass on 295
2024-06-28 20:38:14,511 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,511 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:14,511 - DEBUG - on stmt: stencil_index = $const60.1 + index00
2024-06-28 20:38:14,511 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,512 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,512 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:14,512 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,512 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,512 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:14,512 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:14,513 - DEBUG - ==== SSA block analysis pass on 299
2024-06-28 20:38:14,513 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,513 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:14,513 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,513 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,513 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:14,514 - DEBUG - ==== SSA block analysis pass on 333
2024-06-28 20:38:14,514 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,514 - DEBUG - on stmt: jump 343
2024-06-28 20:38:14,514 - DEBUG - ==== SSA block analysis pass on 345
2024-06-28 20:38:14,514 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,514 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,514 - DEBUG - ==== SSA block analysis pass on 343
2024-06-28 20:38:14,515 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,515 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:14,515 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,515 - DEBUG - ==== SSA block analysis pass on 349
2024-06-28 20:38:14,515 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,515 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,515 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,515 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:14,516 - DEBUG - ==== SSA block analysis pass on 353
2024-06-28 20:38:14,516 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,516 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,516 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:14,516 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,516 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,516 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:14,516 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,517 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:14,517 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:14,517 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:14,517 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,517 - DEBUG - ==== SSA block analysis pass on 357
2024-06-28 20:38:14,517 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,517 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,517 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:14,517 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,518 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,518 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:14,518 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,518 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:14,518 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:14,519 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:14,519 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,519 - DEBUG - ==== SSA block analysis pass on 441
2024-06-28 20:38:14,519 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76396c90>
2024-06-28 20:38:14,519 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,523 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x7f7a76536490>,
                           299)],
             '$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a7638dd90>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a7638df10>,
                                       0)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f7a7654b110>,
                           349)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a7638e810>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a7638e990>,
                                       0)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x7f7a7654f790>,
                                    353)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a7638ec10>,
                                       0)],
             '$128load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a7654fd10>,
                                  353)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a7638ef10>,
                                       0)],
             '$144call.4': [(<numba.core.ir.Assign object at 0x7f7a76555850>,
                             353)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a7638f5d0>,
                                0)],
             '$154load_global.5': [(<numba.core.ir.Assign object at 0x7f7a76556910>,
                                    353)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a7638f850>,
                                          0)],
             '$166load_attr.7': [(<numba.core.ir.Assign object at 0x7f7a76557b50>,
                                  353)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a7638fd50>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a7638ff90>,
                                       0)],
             '$182call.9': [(<numba.core.ir.Assign object at 0x7f7a76360b50>,
                             353)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a7638c490>,
                                     0)],
             '$192compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a76362ed0>,
                                    353)],
             '$198return_value.11': [(<numba.core.ir.Assign object at 0x7f7a7636c290>,
                                      353)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a76394610>,
                                0)],
             '$200load_global.0': [(<numba.core.ir.Assign object at 0x7f7a7636fa10>,
                                    357)],
             '$212load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a7636ff90>,
                                  357)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a76394a10>,
                                0)],
             '$228call.4': [(<numba.core.ir.Assign object at 0x7f7a76371b10>,
                             357)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a76394cd0>,
                                    0)],
             '$22unary_negative.4': [(<numba.core.ir.Assign object at 0x7f7a7647ef10>,
                                      240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a76394e50>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a76394fd0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a76395150>,
                                   230)],
             '$238load_global.5': [(<numba.core.ir.Assign object at 0x7f7a76372bd0>,
                                    357)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a76395b90>,
                                       442)],
             '$250load_attr.7': [(<numba.core.ir.Assign object at 0x7f7a76373e10>,
                                  357)],
             '$266call.9': [(<numba.core.ir.Assign object at 0x7f7a76378e10>,
                             357)],
             '$276compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a7637b190>,
                                    357)],
             '$282return_value.11': [(<numba.core.ir.Assign object at 0x7f7a76380550>,
                                      357)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a7647d190>,
                                  240)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a7638c750>,
                                     0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x7f7a7646ad90>,
                          240)],
             '$40compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a76644110>,
                                  241)],
             '$46pred': [(<numba.core.ir.Assign object at 0x7f7a7664c6d0>,
                          241)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a7638ccd0>,
                                     0)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a7638cf50>,
                                   0)],
             '$76unary_negative.4': [(<numba.core.ir.Assign object at 0x7f7a76472710>,
                                      295)],
             '$84compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a76471b50>,
                                  295)],
             '$90pred': [(<numba.core.ir.Assign object at 0x7f7a7663cf50>,
                          295)],
             '$94compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a76532b50>,
                                  299)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a76394810>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a7638db90>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a7638e110>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a7638e450>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a7638e610>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a7638f150>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a7638f310>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a7638fb90>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a763941d0>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a76394390>,
                                 0)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a76460150>,
                            240)],
             '$const60.1': [(<numba.core.ir.Assign object at 0x7f7a76474850>,
                             295)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a7638d650>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a7638d9d0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a7638c2d0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a7638cd50>,
                              230)],
             '$phi38.0': [(<numba.core.ir.Assign object at 0x7f7a7647ef50>,
                           240)],
             '$phi92.0': [(<numba.core.ir.Assign object at 0x7f7a76530590>,
                           295)],
             'bool100': [(<numba.core.ir.Assign object at 0x7f7a76533f50>,
                          299)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f7a7654aad0>,
                          349)],
             'bool36': [(<numba.core.ir.Assign object at 0x7f7a765f43d0>, 240)],
             'bool46': [(<numba.core.ir.Assign object at 0x7f7a7664f090>, 241)],
             'bool90': [(<numba.core.ir.Assign object at 0x7f7a7663f050>, 295)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a7638c050>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a76395490>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a7638d210>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a76383090>,
                                240),
                               (<numba.core.ir.Assign object at 0x7f7a7647ef90>,
                                295)],
             'threshold': [(<numba.core.ir.Assign object at 0x7f7a7638bad0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a7638b9d0>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x7f7a76383110>, 240),
                    (<numba.core.ir.Assign object at 0x7f7a76477910>, 289)],
             'x1': [(<numba.core.ir.Assign object at 0x7f7a76383190>, 295),
                    (<numba.core.ir.Assign object at 0x7f7a76548410>, 343)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7f7a7638bbd0>,
                           0)]})
2024-06-28 20:38:14,523 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76396c90>
2024-06-28 20:38:14,524 - DEBUG - Fix SSA violator on var stencil_index
2024-06-28 20:38:14,524 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:14,524 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,524 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:14,524 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:14,524 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:14,524 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:14,524 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,524 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:14,524 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,524 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:14,525 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,525 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:14,525 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:14,525 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:14,525 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,525 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,525 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:14,525 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:14,525 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:14,525 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:14,526 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,526 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,526 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:14,526 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:14,526 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:14,526 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:14,526 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:14,526 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,526 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:14,526 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:14,526 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,527 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:14,527 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:14,527 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:14,527 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,527 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:14,527 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,527 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:14,527 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:14,527 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,527 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:14,527 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,527 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:14,527 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:14,528 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:14,528 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:14,528 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:14,528 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:14,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,528 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:14,528 - DEBUG - on stmt: jump 240
2024-06-28 20:38:14,528 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:14,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,528 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:14,528 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:14,528 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:14,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,529 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:14,529 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:14,529 - DEBUG - first assign: stencil_index
2024-06-28 20:38:14,529 - DEBUG - replaced with: stencil_index = $const6.1 + index00
2024-06-28 20:38:14,529 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,529 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,529 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:14,529 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,529 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,529 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:14,529 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:14,529 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:14,530 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,530 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:14,530 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,530 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,530 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:14,530 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:14,530 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,530 - DEBUG - on stmt: jump 289
2024-06-28 20:38:14,530 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:14,531 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,531 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,531 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:14,531 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,531 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-28 20:38:14,531 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,531 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:14,531 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,531 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:14,531 - DEBUG - on stmt: stencil_index = $const60.1 + index00
2024-06-28 20:38:14,531 - DEBUG - replaced with: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:14,531 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,532 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,532 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:14,532 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,532 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,532 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:14,532 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:14,532 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:14,532 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,532 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:14,532 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,532 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,532 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:14,533 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:14,533 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,533 - DEBUG - on stmt: jump 343
2024-06-28 20:38:14,533 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:14,533 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,533 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,533 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:14,533 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,533 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:14,533 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,533 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:14,533 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,533 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,533 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,534 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:14,534 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:14,534 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,534 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,534 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:14,534 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,534 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,534 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:14,534 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,534 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:14,534 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:14,534 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:14,534 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,535 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:14,535 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,535 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,535 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:14,535 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,535 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,535 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:14,535 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,535 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:14,535 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:14,535 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:14,535 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,535 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:14,536 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a5850>
2024-06-28 20:38:14,536 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,536 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x7f7a76460810>],
             295: [<numba.core.ir.Assign object at 0x7f7a76462250>]})
2024-06-28 20:38:14,536 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:14,536 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,536 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:14,536 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:14,536 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:14,536 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:14,537 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,537 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:14,537 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,537 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:14,537 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,538 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:14,538 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:14,538 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:14,538 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,538 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,538 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:14,538 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:14,539 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:14,539 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:14,539 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,539 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,539 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:14,539 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:14,539 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:14,539 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:14,540 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:14,540 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,540 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:14,540 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:14,540 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,540 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:14,541 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:14,541 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:14,541 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,541 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:14,541 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,541 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:14,541 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:14,541 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,542 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:14,542 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,542 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:14,542 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:14,542 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:14,543 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:14,543 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:14,543 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:14,543 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,543 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:14,543 - DEBUG - on stmt: jump 240
2024-06-28 20:38:14,543 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:14,543 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,543 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:14,543 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:14,544 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:14,544 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,544 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:14,544 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:14,544 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,544 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,544 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,544 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:14,545 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,545 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,545 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:14,545 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:14,545 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:14,545 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,545 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:14,545 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,545 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,545 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:14,545 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:14,546 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,546 - DEBUG - on stmt: jump 289
2024-06-28 20:38:14,546 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:14,546 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,546 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,546 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:14,546 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,546 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-28 20:38:14,546 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,546 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:14,546 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,546 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:14,546 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:14,547 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,547 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,547 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,547 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,547 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:14,547 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,547 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,547 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:14,547 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:14,547 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:14,547 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,548 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:14,548 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,548 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,548 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:14,548 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:14,548 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,548 - DEBUG - on stmt: jump 343
2024-06-28 20:38:14,548 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:14,548 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,548 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,548 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:14,548 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,548 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:14,549 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,549 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:14,549 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,549 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,549 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,549 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:14,549 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:14,549 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,549 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,549 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:14,549 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,550 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,550 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:14,550 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,550 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:14,550 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:14,550 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:14,550 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,550 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:14,550 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,551 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,551 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:14,551 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,551 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,551 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:14,551 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,551 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:14,551 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:14,552 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:14,552 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,552 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:14,552 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76463dd0>
2024-06-28 20:38:14,552 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,552 - DEBUG - Fix SSA violator on var x0
2024-06-28 20:38:14,552 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:14,553 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,553 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:14,553 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:14,553 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:14,553 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:14,553 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,553 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:14,553 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,553 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:14,553 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,554 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:14,554 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:14,554 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:14,554 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,554 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,554 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:14,554 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:14,554 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:14,554 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:14,554 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,554 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,554 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:14,555 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,555 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:14,556 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,556 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:14,556 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:14,556 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,556 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:14,556 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,556 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:14,556 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:14,556 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:14,556 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:14,556 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:14,556 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:14,556 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,557 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:14,557 - DEBUG - on stmt: jump 240
2024-06-28 20:38:14,557 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:14,557 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,557 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:14,557 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:14,557 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:14,557 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,557 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:14,557 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:14,557 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,557 - DEBUG - first assign: x0
2024-06-28 20:38:14,558 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,558 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,558 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:14,558 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,558 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,558 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:14,558 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:14,558 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:14,558 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,559 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:14,559 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,559 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,559 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:14,559 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:14,559 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,559 - DEBUG - on stmt: jump 289
2024-06-28 20:38:14,559 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:14,559 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,559 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,559 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:14,560 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,560 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-28 20:38:14,560 - DEBUG - replaced with: x0.1 = const(int, 0)
2024-06-28 20:38:14,560 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,560 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:14,560 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,560 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:14,561 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:14,561 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,561 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,561 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:14,561 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,561 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,561 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:14,561 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:14,561 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:14,562 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,562 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:14,562 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,562 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,562 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:14,562 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:14,562 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,562 - DEBUG - on stmt: jump 343
2024-06-28 20:38:14,562 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:14,562 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,562 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,563 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:14,563 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,563 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:14,563 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,563 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:14,563 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,563 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,563 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,563 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:14,563 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:14,563 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,563 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,563 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:14,564 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,564 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,564 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:14,564 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,564 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:14,564 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:14,564 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:14,564 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,564 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:14,564 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,564 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,565 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:14,565 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,565 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,565 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:14,565 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,565 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:14,565 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:14,565 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:14,565 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,565 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:14,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a764a4d50>
2024-06-28 20:38:14,565 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,566 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x7f7a76461fd0>],
             289: [<numba.core.ir.Assign object at 0x7f7a7639f750>]})
2024-06-28 20:38:14,566 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:14,566 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,566 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:14,566 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:14,566 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:14,566 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:14,566 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,566 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:14,566 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,567 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:14,567 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,567 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:14,567 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:14,567 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:14,567 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,567 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,567 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:14,567 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:14,567 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:14,567 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:14,568 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,568 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,568 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:14,568 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:14,568 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:14,568 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:14,568 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:14,568 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,568 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:14,568 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:14,568 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,569 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:14,569 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:14,569 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:14,569 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,569 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:14,569 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,569 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:14,569 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:14,569 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,569 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:14,569 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,569 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:14,569 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:14,570 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:14,570 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:14,570 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:14,570 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:14,570 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,570 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:14,570 - DEBUG - on stmt: jump 240
2024-06-28 20:38:14,570 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:14,570 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,570 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:14,570 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:14,570 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:14,571 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,571 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:14,571 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:14,571 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,571 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,571 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:14,571 - DEBUG - find_def var='x0' stmt=$30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:14,571 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,571 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,571 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:14,572 - DEBUG - find_def var='x0' stmt=$phi38.0 = x0
2024-06-28 20:38:14,572 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:14,572 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:14,572 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,572 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:14,572 - DEBUG - find_def var='x0' stmt=$40compare_op.2 = x0 <= threshold
2024-06-28 20:38:14,572 - DEBUG - find_def_from_top label 241
2024-06-28 20:38:14,572 - DEBUG - idom 240 from label 241
2024-06-28 20:38:14,572 - DEBUG - find_def_from_bottom label 240
2024-06-28 20:38:14,572 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,572 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,573 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:14,573 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:14,573 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,573 - DEBUG - on stmt: jump 289
2024-06-28 20:38:14,573 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:14,573 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,573 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,573 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:14,573 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,573 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-28 20:38:14,573 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,573 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:14,573 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,573 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:14,573 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:14,574 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,574 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,574 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:14,574 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,574 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,574 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:14,574 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:14,574 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:14,574 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,574 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:14,574 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,575 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,575 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:14,575 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:14,575 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,575 - DEBUG - on stmt: jump 343
2024-06-28 20:38:14,575 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:14,575 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,575 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,575 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:14,575 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,575 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:14,575 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,575 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:14,575 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,576 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,576 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,576 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:14,576 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:14,576 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,576 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,576 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:14,576 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,576 - DEBUG - find_def var='x0' stmt=$144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,576 - DEBUG - find_def_from_top label 353
2024-06-28 20:38:14,576 - DEBUG - idom 349 from label 353
2024-06-28 20:38:14,577 - DEBUG - find_def_from_bottom label 349
2024-06-28 20:38:14,577 - DEBUG - find_def_from_top label 349
2024-06-28 20:38:14,577 - DEBUG - idom 295 from label 349
2024-06-28 20:38:14,577 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:14,577 - DEBUG - find_def_from_top label 295
2024-06-28 20:38:14,577 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 295
2024-06-28 20:38:14,577 - DEBUG - find_def_from_bottom label 241
2024-06-28 20:38:14,577 - DEBUG - find_def_from_top label 241
2024-06-28 20:38:14,577 - DEBUG - idom 240 from label 241
2024-06-28 20:38:14,577 - DEBUG - find_def_from_bottom label 240
2024-06-28 20:38:14,577 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,577 - DEBUG - find_def_from_bottom label 291
2024-06-28 20:38:14,577 - DEBUG - find_def_from_top label 291
2024-06-28 20:38:14,577 - DEBUG - idom 240 from label 291
2024-06-28 20:38:14,578 - DEBUG - find_def_from_bottom label 240
2024-06-28 20:38:14,578 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,578 - DEBUG - find_def_from_bottom label 289
2024-06-28 20:38:14,578 - DEBUG - incoming_def x0.1 = const(int, 0)
2024-06-28 20:38:14,578 - DEBUG - replaced with: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,578 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,578 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:14,578 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,578 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:14,579 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:14,579 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:14,580 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,580 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:14,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,580 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,580 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:14,580 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,580 - DEBUG - find_def var='x0' stmt=$228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,581 - DEBUG - find_def_from_top label 357
2024-06-28 20:38:14,581 - DEBUG - idom 349 from label 357
2024-06-28 20:38:14,581 - DEBUG - find_def_from_bottom label 349
2024-06-28 20:38:14,581 - DEBUG - find_def_from_top label 349
2024-06-28 20:38:14,581 - DEBUG - idom 295 from label 349
2024-06-28 20:38:14,581 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:14,581 - DEBUG - replaced with: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,581 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,582 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:14,582 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,582 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:14,582 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:14,582 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:14,582 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,582 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:14,582 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b10>
2024-06-28 20:38:14,583 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,583 - DEBUG - Fix SSA violator on var x1
2024-06-28 20:38:14,583 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:14,583 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,583 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:14,583 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:14,583 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:14,584 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:14,584 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,584 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:14,584 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,584 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:14,584 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,584 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:14,584 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:14,584 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:14,585 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,585 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,585 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:14,585 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:14,585 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:14,585 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:14,585 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,585 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,585 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:14,586 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:14,586 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:14,587 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,587 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:14,587 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,587 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:14,587 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:14,587 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,587 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:14,587 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,587 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:14,587 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:14,588 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:14,588 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:14,588 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:14,588 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:14,588 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,588 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:14,588 - DEBUG - on stmt: jump 240
2024-06-28 20:38:14,588 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:14,588 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,588 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:14,589 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:14,589 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:14,589 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,589 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:14,589 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:14,589 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,589 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,589 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:14,589 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,589 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,589 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:14,590 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:14,590 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:14,590 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,590 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:14,590 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,590 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,590 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:14,590 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:14,590 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,590 - DEBUG - on stmt: jump 289
2024-06-28 20:38:14,590 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:14,590 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,591 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,591 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:14,591 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,591 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-28 20:38:14,591 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,591 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:14,591 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,591 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-06-28 20:38:14,591 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:14,591 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:14,591 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,591 - DEBUG - first assign: x1
2024-06-28 20:38:14,591 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,592 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,592 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:14,592 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,592 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,592 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:14,592 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:14,592 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:14,592 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,592 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:14,592 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,592 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,593 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:14,593 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:14,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,593 - DEBUG - on stmt: jump 343
2024-06-28 20:38:14,593 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:14,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,593 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,593 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:14,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,593 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-28 20:38:14,593 - DEBUG - replaced with: x1.1 = const(int, 0)
2024-06-28 20:38:14,593 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,593 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:14,594 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,594 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,594 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,594 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:14,594 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:14,594 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,594 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,594 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:14,594 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,594 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,594 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:14,594 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,595 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:14,595 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:14,595 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:14,595 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,595 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:14,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,595 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,595 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:14,595 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,595 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,595 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:14,595 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,595 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:14,596 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:14,596 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:14,596 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,596 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:14,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7639f8d0>
2024-06-28 20:38:14,596 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,596 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {295: [<numba.core.ir.Assign object at 0x7f7a76461a10>],
             343: [<numba.core.ir.Assign object at 0x7f7a7648e410>]})
2024-06-28 20:38:14,596 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:14,596 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,596 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:14,596 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-28 20:38:14,597 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-28 20:38:14,597 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:14,597 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,597 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:14,597 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,597 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:14,597 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,597 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:14,597 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:14,597 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:14,597 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,597 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,597 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:14,598 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:14,598 - DEBUG - on stmt: $const112.17.1 = const(int, 0)
2024-06-28 20:38:14,598 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:14,598 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:14,598 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,598 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:14,598 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:14,598 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:14,598 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:14,598 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:14,598 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,598 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:14,599 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:14,599 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,599 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:14,599 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:14,599 - DEBUG - on stmt: $const194.35.1 = const(int, 0)
2024-06-28 20:38:14,599 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,599 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:14,600 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,600 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:14,600 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:14,601 - DEBUG - on stmt: jump 230
2024-06-28 20:38:14,601 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-28 20:38:14,601 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,601 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:14,601 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:14,601 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:14,601 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:14,601 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 442
2024-06-28 20:38:14,601 - DEBUG - ==== SSA block rewrite pass on 232
2024-06-28 20:38:14,602 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,602 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:14,602 - DEBUG - on stmt: jump 240
2024-06-28 20:38:14,602 - DEBUG - ==== SSA block rewrite pass on 442
2024-06-28 20:38:14,602 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,602 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:14,602 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:14,602 - DEBUG - ==== SSA block rewrite pass on 240
2024-06-28 20:38:14,602 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,603 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:14,603 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:14,603 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:14,603 - DEBUG - on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,603 - DEBUG - on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
2024-06-28 20:38:14,603 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,603 - DEBUG - on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,604 - DEBUG - on stmt: $phi38.0 = x0
2024-06-28 20:38:14,604 - DEBUG - on stmt: branch $36pred, 241, 291
2024-06-28 20:38:14,604 - DEBUG - ==== SSA block rewrite pass on 241
2024-06-28 20:38:14,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,604 - DEBUG - on stmt: $40compare_op.2 = x0 <= threshold
2024-06-28 20:38:14,604 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,604 - DEBUG - on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,605 - DEBUG - on stmt: branch $46pred, 279, 295
2024-06-28 20:38:14,605 - DEBUG - ==== SSA block rewrite pass on 279
2024-06-28 20:38:14,605 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,605 - DEBUG - on stmt: jump 289
2024-06-28 20:38:14,605 - DEBUG - ==== SSA block rewrite pass on 291
2024-06-28 20:38:14,605 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,605 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,605 - DEBUG - ==== SSA block rewrite pass on 289
2024-06-28 20:38:14,605 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,605 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-28 20:38:14,606 - DEBUG - on stmt: jump 295
2024-06-28 20:38:14,606 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-28 20:38:14,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,606 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0, audio.py:1144), Var(x0.1, audio.py:1146)], incoming_blocks=[241, 291, 289])
2024-06-28 20:38:14,606 - DEBUG - on stmt: $const60.1 = const(int, -1)
2024-06-28 20:38:14,606 - DEBUG - on stmt: stencil_index.1 = $const60.1 + index00
2024-06-28 20:38:14,606 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,606 - DEBUG - on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-28 20:38:14,607 - DEBUG - on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:14,607 - DEBUG - find_def var='x1' stmt=$84compare_op.6 = $76unary_negative.4 <= x1
2024-06-28 20:38:14,607 - DEBUG - on stmt: bool90 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,607 - DEBUG - on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,607 - DEBUG - on stmt: $phi92.0 = x1
2024-06-28 20:38:14,607 - DEBUG - find_def var='x1' stmt=$phi92.0 = x1
2024-06-28 20:38:14,607 - DEBUG - on stmt: branch $90pred, 299, 345
2024-06-28 20:38:14,607 - DEBUG - ==== SSA block rewrite pass on 299
2024-06-28 20:38:14,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,607 - DEBUG - on stmt: $94compare_op.2 = x1 <= threshold
2024-06-28 20:38:14,608 - DEBUG - find_def var='x1' stmt=$94compare_op.2 = x1 <= threshold
2024-06-28 20:38:14,608 - DEBUG - find_def_from_top label 299
2024-06-28 20:38:14,608 - DEBUG - idom 295 from label 299
2024-06-28 20:38:14,608 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:14,608 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,608 - DEBUG - on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,608 - DEBUG - on stmt: branch $100pred, 333, 349
2024-06-28 20:38:14,608 - DEBUG - ==== SSA block rewrite pass on 333
2024-06-28 20:38:14,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,608 - DEBUG - on stmt: jump 343
2024-06-28 20:38:14,608 - DEBUG - ==== SSA block rewrite pass on 345
2024-06-28 20:38:14,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,609 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,609 - DEBUG - ==== SSA block rewrite pass on 343
2024-06-28 20:38:14,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,609 - DEBUG - on stmt: x1.1 = const(int, 0)
2024-06-28 20:38:14,609 - DEBUG - on stmt: jump 349
2024-06-28 20:38:14,609 - DEBUG - ==== SSA block rewrite pass on 349
2024-06-28 20:38:14,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,609 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:14,609 - DEBUG - on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,609 - DEBUG - on stmt: branch $114pred, 353, 357
2024-06-28 20:38:14,609 - DEBUG - ==== SSA block rewrite pass on 353
2024-06-28 20:38:14,610 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,610 - DEBUG - on stmt: $116load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,610 - DEBUG - on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
2024-06-28 20:38:14,610 - DEBUG - on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,610 - DEBUG - on stmt: $154load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,610 - DEBUG - on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
2024-06-28 20:38:14,610 - DEBUG - on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,610 - DEBUG - find_def var='x1' stmt=$182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,610 - DEBUG - find_def_from_top label 353
2024-06-28 20:38:14,610 - DEBUG - idom 349 from label 353
2024-06-28 20:38:14,611 - DEBUG - find_def_from_bottom label 349
2024-06-28 20:38:14,611 - DEBUG - find_def_from_top label 349
2024-06-28 20:38:14,611 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 349
2024-06-28 20:38:14,611 - DEBUG - find_def_from_bottom label 345
2024-06-28 20:38:14,611 - DEBUG - find_def_from_top label 345
2024-06-28 20:38:14,611 - DEBUG - idom 295 from label 345
2024-06-28 20:38:14,611 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:14,611 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,611 - DEBUG - find_def_from_bottom label 299
2024-06-28 20:38:14,611 - DEBUG - find_def_from_top label 299
2024-06-28 20:38:14,611 - DEBUG - idom 295 from label 299
2024-06-28 20:38:14,612 - DEBUG - find_def_from_bottom label 295
2024-06-28 20:38:14,612 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:14,612 - DEBUG - find_def_from_bottom label 343
2024-06-28 20:38:14,612 - DEBUG - incoming_def x1.1 = const(int, 0)
2024-06-28 20:38:14,612 - DEBUG - replaced with: $182call.9 = call $166load_attr.7(x1.2, func=$166load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,612 - DEBUG - on stmt: $192compare_op.10 = $144call.4 != $182call.9
2024-06-28 20:38:14,612 - DEBUG - on stmt: $198return_value.11 = cast(value=$192compare_op.10)
2024-06-28 20:38:14,612 - DEBUG - on stmt: out0[index00] = $198return_value.11
2024-06-28 20:38:14,613 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,613 - DEBUG - ==== SSA block rewrite pass on 357
2024-06-28 20:38:14,613 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,613 - DEBUG - on stmt: $200load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,613 - DEBUG - on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
2024-06-28 20:38:14,613 - DEBUG - on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,613 - DEBUG - on stmt: $238load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:14,613 - DEBUG - on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
2024-06-28 20:38:14,613 - DEBUG - on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,614 - DEBUG - find_def var='x1' stmt=$266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,614 - DEBUG - find_def_from_top label 357
2024-06-28 20:38:14,614 - DEBUG - idom 349 from label 357
2024-06-28 20:38:14,614 - DEBUG - find_def_from_bottom label 349
2024-06-28 20:38:14,614 - DEBUG - replaced with: $266call.9 = call $250load_attr.7(x1.2, func=$250load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:14,614 - DEBUG - on stmt: $276compare_op.10 = $228call.4 != $266call.9
2024-06-28 20:38:14,614 - DEBUG - on stmt: $282return_value.11 = cast(value=$276compare_op.10)
2024-06-28 20:38:14,614 - DEBUG - on stmt: out0[index00] = $282return_value.11
2024-06-28 20:38:14,614 - DEBUG - on stmt: jump 441
2024-06-28 20:38:14,614 - DEBUG - ==== SSA block rewrite pass on 441
2024-06-28 20:38:14,614 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76461b90>
2024-06-28 20:38:14,615 - DEBUG - on stmt: jump 230
2024-06-28 20:38:15,625 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          18	LOAD_FAST(arg=0, lineno=1042)
          20	LOAD_CONST(arg=2, lineno=1042)
          22	BINARY_SUBSCR(arg=None, lineno=1042)
          32	COMPARE_OP(arg=4, lineno=1042)
          38	LOAD_FAST(arg=0, lineno=1042)
          40	LOAD_CONST(arg=1, lineno=1042)
          42	BINARY_SUBSCR(arg=None, lineno=1042)
          52	LOAD_FAST(arg=0, lineno=1042)
          54	LOAD_CONST(arg=3, lineno=1042)
          56	BINARY_SUBSCR(arg=None, lineno=1042)
          66	COMPARE_OP(arg=5, lineno=1042)
          72	BINARY_OP(arg=1, lineno=1042)
          76	RETURN_VALUE(arg=None, lineno=1042)
2024-06-28 20:38:15,625 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:15,625 - DEBUG - stack: []
2024-06-28 20:38:15,625 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:15,625 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
2024-06-28 20:38:15,626 - DEBUG - stack []
2024-06-28 20:38:15,626 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
2024-06-28 20:38:15,626 - DEBUG - stack []
2024-06-28 20:38:15,626 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
2024-06-28 20:38:15,626 - DEBUG - stack []
2024-06-28 20:38:15,626 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
2024-06-28 20:38:15,626 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:15,626 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-06-28 20:38:15,626 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-28 20:38:15,626 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1042)
2024-06-28 20:38:15,626 - DEBUG - stack ['$8binary_subscr.2']
2024-06-28 20:38:15,626 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1042)
2024-06-28 20:38:15,627 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2024-06-28 20:38:15,627 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-06-28 20:38:15,627 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-06-28 20:38:15,627 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1042)
2024-06-28 20:38:15,627 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-06-28 20:38:15,627 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1042)
2024-06-28 20:38:15,627 - DEBUG - stack ['$32compare_op.6']
2024-06-28 20:38:15,627 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1042)
2024-06-28 20:38:15,627 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2024-06-28 20:38:15,627 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-06-28 20:38:15,627 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-06-28 20:38:15,628 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1042)
2024-06-28 20:38:15,628 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2024-06-28 20:38:15,628 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1042)
2024-06-28 20:38:15,628 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-06-28 20:38:15,628 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-06-28 20:38:15,628 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-06-28 20:38:15,628 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1042)
2024-06-28 20:38:15,628 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-06-28 20:38:15,628 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1042)
2024-06-28 20:38:15,628 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2024-06-28 20:38:15,628 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1042)
2024-06-28 20:38:15,629 - DEBUG - stack ['$binop_and_72.14']
2024-06-28 20:38:15,629 - DEBUG - end state. edges=[]
2024-06-28 20:38:15,629 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:15,629 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:15,629 - DEBUG - defmap: {}
2024-06-28 20:38:15,629 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:15,629 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:15,629 - DEBUG - keep phismap: {}
2024-06-28 20:38:15,629 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:15,629 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:15,630 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:15,630 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-06-28 20:38:15,631 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          18	LOAD_FAST(arg=0, lineno=1048)
          20	LOAD_CONST(arg=2, lineno=1048)
          22	BINARY_SUBSCR(arg=None, lineno=1048)
          32	COMPARE_OP(arg=0, lineno=1048)
          38	LOAD_FAST(arg=0, lineno=1048)
          40	LOAD_CONST(arg=1, lineno=1048)
          42	BINARY_SUBSCR(arg=None, lineno=1048)
          52	LOAD_FAST(arg=0, lineno=1048)
          54	LOAD_CONST(arg=3, lineno=1048)
          56	BINARY_SUBSCR(arg=None, lineno=1048)
          66	COMPARE_OP(arg=1, lineno=1048)
          72	BINARY_OP(arg=1, lineno=1048)
          76	RETURN_VALUE(arg=None, lineno=1048)
2024-06-28 20:38:15,631 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:15,632 - DEBUG - stack: []
2024-06-28 20:38:15,632 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:15,632 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
2024-06-28 20:38:15,632 - DEBUG - stack []
2024-06-28 20:38:15,632 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
2024-06-28 20:38:15,632 - DEBUG - stack []
2024-06-28 20:38:15,632 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
2024-06-28 20:38:15,632 - DEBUG - stack []
2024-06-28 20:38:15,632 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
2024-06-28 20:38:15,632 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:15,632 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-06-28 20:38:15,633 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-28 20:38:15,633 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1048)
2024-06-28 20:38:15,633 - DEBUG - stack ['$8binary_subscr.2']
2024-06-28 20:38:15,633 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1048)
2024-06-28 20:38:15,633 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2024-06-28 20:38:15,633 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-06-28 20:38:15,633 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4']
2024-06-28 20:38:15,633 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1048)
2024-06-28 20:38:15,634 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2024-06-28 20:38:15,634 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1048)
2024-06-28 20:38:15,634 - DEBUG - stack ['$32compare_op.6']
2024-06-28 20:38:15,634 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1048)
2024-06-28 20:38:15,634 - DEBUG - stack ['$32compare_op.6', '$x38.7']
2024-06-28 20:38:15,634 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-06-28 20:38:15,635 - DEBUG - stack ['$32compare_op.6', '$x38.7', '$const40.8']
2024-06-28 20:38:15,635 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1048)
2024-06-28 20:38:15,635 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9']
2024-06-28 20:38:15,635 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1048)
2024-06-28 20:38:15,635 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
2024-06-28 20:38:15,636 - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-06-28 20:38:15,636 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11']
2024-06-28 20:38:15,636 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1048)
2024-06-28 20:38:15,636 - DEBUG - stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
2024-06-28 20:38:15,636 - DEBUG - dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1048)
2024-06-28 20:38:15,636 - DEBUG - stack ['$32compare_op.6', '$66compare_op.13']
2024-06-28 20:38:15,636 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1048)
2024-06-28 20:38:15,636 - DEBUG - stack ['$binop_and_72.14']
2024-06-28 20:38:15,636 - DEBUG - end state. edges=[]
2024-06-28 20:38:15,636 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:15,636 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:15,637 - DEBUG - defmap: {}
2024-06-28 20:38:15,637 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:15,637 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:15,637 - DEBUG - keep phismap: {}
2024-06-28 20:38:15,637 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:15,637 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:15,637 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4'}), (22, {'index': '$const20.4', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8'}), (42, {'index': '$const40.8', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11'}), (56, {'index': '$const54.11', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:15,638 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const20.4 = const(int, -1)              ['$const20.4']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8 = const(int, 0)               ['$const40.8']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8', 'x']
    $const54.11 = const(int, 1)              ['$const54.11']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

2024-06-28 20:38:15,641 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:15,641 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:15,641 - DEBUG - stack: []
2024-06-28 20:38:15,641 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:15,641 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-28 20:38:15,641 - DEBUG - stack []
2024-06-28 20:38:15,641 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-28 20:38:15,641 - DEBUG - stack []
2024-06-28 20:38:15,641 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-28 20:38:15,642 - DEBUG - stack []
2024-06-28 20:38:15,642 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-28 20:38:15,642 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:15,642 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-06-28 20:38:15,642 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:15,642 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-06-28 20:38:15,642 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:15,642 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-28 20:38:15,642 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:15,643 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:15,643 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:15,643 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:15,643 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:15,643 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-06-28 20:38:15,643 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:15,643 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-06-28 20:38:15,644 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:15,644 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:15,644 - DEBUG - stack []
2024-06-28 20:38:15,644 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:15,644 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:15,645 - DEBUG - end state. edges=[]
2024-06-28 20:38:15,645 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:15,645 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:15,645 - DEBUG - defmap: {}
2024-06-28 20:38:15,645 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:15,645 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:15,645 - DEBUG - keep phismap: {}
2024-06-28 20:38:15,646 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:15,646 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:15,646 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:15,646 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:15,658 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:15,658 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761d2910>
2024-06-28 20:38:15,659 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:15,659 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:15,659 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>)
2024-06-28 20:38:15,659 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:15,659 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:15,659 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:15,659 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:15,659 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:15,659 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:15,659 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:15,659 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:15,659 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:15,660 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a762ebf90>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a762eb9d0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a762eb910>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a762eab10>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a762eeed0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a762eb5d0>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a762eb650>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a762eafd0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a762ef5d0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a762ef7d0>, 0)]})
2024-06-28 20:38:15,660 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a761d2910>
2024-06-28 20:38:15,684 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:15,685 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:15,685 - DEBUG - stack: []
2024-06-28 20:38:15,685 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:15,685 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:15,685 - DEBUG - stack []
2024-06-28 20:38:15,685 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:15,685 - DEBUG - stack []
2024-06-28 20:38:15,686 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:15,686 - DEBUG - stack []
2024-06-28 20:38:15,686 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:15,686 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:15,686 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:15,686 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:15,686 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:15,686 - DEBUG - stack []
2024-06-28 20:38:15,686 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:15,686 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:15,687 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:15,687 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:15,687 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:15,687 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:15,687 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:15,687 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:15,687 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:15,687 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:15,687 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:15,687 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:15,688 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:15,688 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:15,688 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:15,688 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:15,688 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:15,688 - DEBUG - stack []
2024-06-28 20:38:15,688 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:15,688 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:15,688 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:15,688 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:15,688 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:15,688 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:15,689 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:15,689 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:15,689 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:15,689 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:15,689 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:15,689 - DEBUG - stack []
2024-06-28 20:38:15,689 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:15,689 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:15,689 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:15,689 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:15,690 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:15,690 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:15,690 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:15,690 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:15,690 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:15,690 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:15,690 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:15,691 - DEBUG - stack []
2024-06-28 20:38:15,691 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:15,691 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:15,691 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:15,691 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:15,691 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:15,691 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:15,691 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:15,692 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:15,692 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:15,692 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:15,692 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:15,692 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:15,692 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:15,692 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:15,692 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:15,692 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:15,693 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:15,693 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:15,693 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:15,693 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:15,693 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:15,693 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:15,693 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:15,694 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:15,694 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:15,694 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:15,694 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:15,694 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:15,694 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:15,694 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:15,694 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:15,695 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:15,695 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:15,695 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:15,695 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:15,695 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:15,695 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:15,695 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:15,695 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:15,696 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:15,696 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:15,696 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:15,696 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:15,696 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:15,696 - DEBUG - stack: []
2024-06-28 20:38:15,696 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:15,696 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:15,696 - DEBUG - stack []
2024-06-28 20:38:15,697 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:15,697 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:15,697 - DEBUG - end state. edges=[]
2024-06-28 20:38:15,697 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:15,697 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:15,697 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:15,697 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:15,697 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:15,698 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:15,698 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:15,698 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:15,698 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:15,698 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:15,698 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:15,698 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:15,698 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:15,698 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:15,698 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:15,699 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:15,699 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:15,699 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:15,700 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:15,700 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:15,700 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:15,701 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:15,701 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:15,701 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:15,701 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:15,701 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:15,701 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:15,702 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:15,714 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:15,715 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a762476d0>
2024-06-28 20:38:15,715 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:15,715 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:15,715 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:15,715 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:15,715 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:15,715 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:15,715 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:15,716 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:15,716 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:15,716 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:15,716 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:15,716 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:15,716 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:15,716 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:15,716 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:15,716 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:15,717 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:15,717 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:15,717 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:15,717 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:15,718 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:15,718 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:15,718 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:15,718 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:15,718 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:15,718 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:15,718 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:15,718 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:15,718 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:15,719 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:15,719 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:15,719 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:15,719 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:15,719 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:15,719 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:15,719 - DEBUG - on stmt: jump 230
2024-06-28 20:38:15,719 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:15,719 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a762476d0>
2024-06-28 20:38:15,719 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:15,719 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:15,720 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:15,720 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:15,720 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:15,720 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:15,720 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a762476d0>
2024-06-28 20:38:15,720 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:15,720 - DEBUG - on stmt: jump 240
2024-06-28 20:38:15,720 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:15,720 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a762476d0>
2024-06-28 20:38:15,720 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:15,721 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:15,721 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:15,721 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a762476d0>
2024-06-28 20:38:15,721 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:15,721 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:15,721 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:15,722 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:15,722 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:15,722 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:15,722 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-06-28 20:38:15,722 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:15,722 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:15,722 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:15,722 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:15,723 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:15,723 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:15,723 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-06-28 20:38:15,723 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:15,723 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:15,723 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:15,723 - DEBUG - on stmt: jump 241
2024-06-28 20:38:15,723 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:15,723 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a762476d0>
2024-06-28 20:38:15,724 - DEBUG - on stmt: jump 230
2024-06-28 20:38:15,725 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a76239250>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a762393d0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a76239bd0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a76239d50>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a76239f50>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a7623a0d0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a7623a5d0>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a7623a750>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a7623ac50>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a7623af10>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a76233c90>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a7623b610>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a7623bbd0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a7623bed0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a7622d2d0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a76244110>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a76244250>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a76244390>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a76244ed0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a76233fd0>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a761d3fd0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a7622d590>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a76238510>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a7622d850>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a76222ad0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a76238750>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a76223d50>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a7622d0d0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a76223410>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a7623b910>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a76239090>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a762395d0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a76239890>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a76239a10>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a7623a250>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a7623a3d0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a7623aa90>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a7623b190>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a7623b350>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a761d2dd0>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a762207d0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a762214d0>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a7621a0d0>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a76238c10>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a76238f10>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a76233b10>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a7623b990>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a76233990>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a762446d0>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a76238950>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a7622d050>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a7622d210>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a7622d550>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a7622d7d0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a762332d0>, 0)]})
2024-06-28 20:38:15,726 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a762476d0>
2024-06-28 20:38:16,209 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:16,210 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:16,210 - DEBUG - stack: []
2024-06-28 20:38:16,210 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:16,210 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-28 20:38:16,210 - DEBUG - stack []
2024-06-28 20:38:16,210 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-28 20:38:16,210 - DEBUG - stack []
2024-06-28 20:38:16,210 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-28 20:38:16,210 - DEBUG - stack []
2024-06-28 20:38:16,210 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-28 20:38:16,210 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:16,210 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-06-28 20:38:16,211 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:16,211 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-06-28 20:38:16,211 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:16,211 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-28 20:38:16,211 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:16,211 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:16,211 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:16,211 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:16,211 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:16,211 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-06-28 20:38:16,211 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:16,211 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-06-28 20:38:16,211 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:16,211 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:16,212 - DEBUG - stack []
2024-06-28 20:38:16,212 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:16,212 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:16,212 - DEBUG - end state. edges=[]
2024-06-28 20:38:16,212 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:16,212 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:16,212 - DEBUG - defmap: {}
2024-06-28 20:38:16,212 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:16,212 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:16,212 - DEBUG - keep phismap: {}
2024-06-28 20:38:16,212 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:16,212 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:16,212 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:16,213 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:16,217 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:16,217 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7623bd10>
2024-06-28 20:38:16,218 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:16,218 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:16,218 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>)
2024-06-28 20:38:16,218 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,218 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:16,218 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:16,218 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:16,218 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,218 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:16,218 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:16,218 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:16,218 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:16,219 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a7624c510>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a76231cd0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a76232750>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a76231a90>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a7624da50>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a7624f250>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a76233090>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a76233010>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a7624dad0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a7624d950>, 0)]})
2024-06-28 20:38:16,219 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a7623bd10>
2024-06-28 20:38:16,238 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:16,238 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:16,238 - DEBUG - stack: []
2024-06-28 20:38:16,238 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:16,238 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:16,238 - DEBUG - stack []
2024-06-28 20:38:16,238 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:16,239 - DEBUG - stack []
2024-06-28 20:38:16,239 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:16,239 - DEBUG - stack []
2024-06-28 20:38:16,239 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:16,239 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:16,239 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:16,239 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:16,239 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:16,239 - DEBUG - stack []
2024-06-28 20:38:16,239 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:16,240 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:16,240 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:16,240 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:16,240 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:16,240 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:16,240 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:16,240 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:16,240 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:16,240 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:16,240 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:16,240 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:16,240 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:16,241 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:16,241 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:16,241 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:16,241 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:16,241 - DEBUG - stack []
2024-06-28 20:38:16,241 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:16,241 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:16,241 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:16,241 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:16,241 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:16,241 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:16,241 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:16,241 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:16,241 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:16,241 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:16,242 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:16,242 - DEBUG - stack []
2024-06-28 20:38:16,242 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:16,242 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:16,242 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:16,242 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:16,242 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:16,242 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:16,242 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:16,242 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:16,242 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:16,242 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:16,242 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:16,242 - DEBUG - stack []
2024-06-28 20:38:16,243 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:16,243 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:16,243 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:16,243 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:16,243 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:16,243 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:16,243 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:16,243 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:16,243 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:16,244 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:16,244 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:16,244 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:16,244 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:16,244 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:16,244 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:16,244 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:16,244 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:16,244 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:16,244 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:16,244 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:16,245 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:16,245 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:16,245 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:16,245 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:16,245 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:16,245 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:16,245 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:16,245 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:16,245 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:16,245 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:16,245 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:16,245 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:16,245 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:16,246 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:16,246 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:16,246 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:16,246 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:16,246 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:16,246 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:16,246 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:16,246 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:16,246 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:16,246 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:16,246 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:16,246 - DEBUG - stack: []
2024-06-28 20:38:16,246 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:16,246 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:16,246 - DEBUG - stack []
2024-06-28 20:38:16,247 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:16,247 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:16,247 - DEBUG - end state. edges=[]
2024-06-28 20:38:16,247 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:16,247 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:16,247 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:16,247 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:16,247 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:16,247 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:16,247 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:16,247 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:16,247 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:16,247 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:16,247 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:16,247 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:16,248 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:16,248 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:16,248 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:16,248 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:16,248 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:16,248 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:16,249 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:16,249 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:16,249 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:16,250 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:16,250 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:16,250 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:16,250 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:16,250 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:16,250 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:16,251 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:16,260 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:16,260 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b5f10>
2024-06-28 20:38:16,260 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:16,260 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:16,261 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:16,261 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:16,261 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:16,261 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:16,261 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,261 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:16,261 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:16,261 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:16,261 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:16,261 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,261 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:16,261 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,262 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:16,262 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:16,262 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:16,263 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:16,263 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:16,263 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:16,263 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,263 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:16,263 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,263 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:16,263 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:16,263 - DEBUG - on stmt: jump 230
2024-06-28 20:38:16,263 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:16,263 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b5f10>
2024-06-28 20:38:16,263 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:16,263 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:16,263 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:16,264 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:16,264 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:16,264 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:16,264 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b5f10>
2024-06-28 20:38:16,264 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:16,264 - DEBUG - on stmt: jump 240
2024-06-28 20:38:16,264 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:16,264 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b5f10>
2024-06-28 20:38:16,264 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:16,264 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:16,264 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:16,264 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b5f10>
2024-06-28 20:38:16,264 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:16,264 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:16,265 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:16,265 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:16,265 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:16,265 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:16,265 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-06-28 20:38:16,265 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:16,265 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:16,265 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:16,265 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:16,265 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:16,265 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:16,265 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-06-28 20:38:16,266 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:16,266 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:16,266 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:16,266 - DEBUG - on stmt: jump 241
2024-06-28 20:38:16,266 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:16,266 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b5f10>
2024-06-28 20:38:16,266 - DEBUG - on stmt: jump 230
2024-06-28 20:38:16,268 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a761b17d0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a761b0ed0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a761b3ad0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a761b3b50>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a75241e50>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a761bb3d0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a761bae10>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a761bb710>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a761bbc90>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a761bbf10>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a761b3d10>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a761bad50>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a761ba6d0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a761ba590>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a762e1650>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a761ba290>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a761ba190>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a761ba010>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a761b9050>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a761b1410>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a7605c0d0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a762e35d0>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a761b0f90>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a762e0b50>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a7605ca10>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a761b0c90>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a762e98d0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a762e20d0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a7605c5d0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a761baa50>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a761b39d0>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a761b2f10>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a761b1990>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a761b37d0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a761bae90>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a761b99d0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a761bba10>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a761bbf90>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a761bac10>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a76080050>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a7605f890>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a7605f0d0>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a7608bd10>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a761b0cd0>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a761b0510>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a761b3ed0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a761b9f90>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a761b1010>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a761b9a50>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a761b2710>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a762e1190>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a762e0950>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a762e1810>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a762e3bd0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a761b2250>, 0)]})
2024-06-28 20:38:16,268 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a761b9c50>
2024-06-28 20:38:16,579 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:16,579 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:16,579 - DEBUG - stack: []
2024-06-28 20:38:16,579 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:16,580 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-28 20:38:16,580 - DEBUG - stack []
2024-06-28 20:38:16,580 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-28 20:38:16,580 - DEBUG - stack []
2024-06-28 20:38:16,580 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-28 20:38:16,580 - DEBUG - stack []
2024-06-28 20:38:16,580 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-28 20:38:16,581 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:16,581 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-06-28 20:38:16,581 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:16,581 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-06-28 20:38:16,581 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:16,581 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-28 20:38:16,581 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:16,581 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:16,581 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:16,581 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:16,582 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:16,582 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-06-28 20:38:16,582 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:16,582 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-06-28 20:38:16,582 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:16,582 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:16,582 - DEBUG - stack []
2024-06-28 20:38:16,582 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:16,582 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:16,583 - DEBUG - end state. edges=[]
2024-06-28 20:38:16,583 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:16,583 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:16,583 - DEBUG - defmap: {}
2024-06-28 20:38:16,583 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:16,583 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:16,583 - DEBUG - keep phismap: {}
2024-06-28 20:38:16,584 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:16,584 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:16,584 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:16,585 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:16,594 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:16,594 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76709590>
2024-06-28 20:38:16,594 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:16,594 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:16,594 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>)
2024-06-28 20:38:16,594 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,594 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:16,595 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:16,595 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:16,595 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,595 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:16,595 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:16,595 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:16,595 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:16,595 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a76633590>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a7670ae50>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a76709a50>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a7670a310>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a766339d0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a7670af50>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a76708750>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a76709bd0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a76631f10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a76633fd0>, 0)]})
2024-06-28 20:38:16,596 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76631c50>
2024-06-28 20:38:16,622 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:16,623 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:16,623 - DEBUG - stack: []
2024-06-28 20:38:16,623 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:16,623 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:16,623 - DEBUG - stack []
2024-06-28 20:38:16,623 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:16,623 - DEBUG - stack []
2024-06-28 20:38:16,623 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:16,623 - DEBUG - stack []
2024-06-28 20:38:16,623 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:16,624 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:16,624 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:16,624 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:16,624 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:16,624 - DEBUG - stack []
2024-06-28 20:38:16,624 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:16,624 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:16,624 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:16,624 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:16,624 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:16,624 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:16,625 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:16,625 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:16,625 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:16,625 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:16,625 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:16,625 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:16,625 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:16,625 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:16,625 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:16,625 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:16,626 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:16,626 - DEBUG - stack []
2024-06-28 20:38:16,626 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:16,626 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:16,626 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:16,626 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:16,626 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:16,626 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:16,626 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:16,626 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:16,626 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:16,627 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:16,627 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:16,627 - DEBUG - stack []
2024-06-28 20:38:16,627 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:16,627 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:16,627 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:16,627 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:16,627 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:16,627 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:16,627 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:16,628 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:16,628 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:16,628 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:16,628 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:16,628 - DEBUG - stack []
2024-06-28 20:38:16,628 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:16,628 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:16,628 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:16,628 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:16,628 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:16,628 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:16,629 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:16,629 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:16,629 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:16,629 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:16,629 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:16,629 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:16,629 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:16,629 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:16,629 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:16,629 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:16,629 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:16,629 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:16,630 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:16,630 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:16,630 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:16,630 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:16,630 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:16,630 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:16,630 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:16,630 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:16,630 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:16,630 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:16,631 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:16,631 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:16,631 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:16,631 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:16,631 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:16,631 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:16,631 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:16,631 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:16,631 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:16,631 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:16,632 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:16,632 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:16,632 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:16,632 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:16,632 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:16,632 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:16,632 - DEBUG - stack: []
2024-06-28 20:38:16,632 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:16,632 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:16,632 - DEBUG - stack []
2024-06-28 20:38:16,632 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:16,633 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:16,633 - DEBUG - end state. edges=[]
2024-06-28 20:38:16,633 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:16,633 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:16,633 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:16,633 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:16,633 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:16,633 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:16,633 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:16,633 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:16,634 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:16,634 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:16,634 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:16,634 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:16,634 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:16,634 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:16,635 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:16,635 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:16,635 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:16,636 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:16,637 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:16,638 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:16,638 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:16,638 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:16,639 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:16,639 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:16,639 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:16,639 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:16,639 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:16,641 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:16,658 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:16,659 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a767c6610>
2024-06-28 20:38:16,659 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:16,659 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:16,659 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:16,659 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:16,659 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:16,659 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:16,659 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,660 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:16,660 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:16,660 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:16,660 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:16,660 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,660 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:16,660 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:16,660 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:16,661 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:16,661 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:16,661 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,661 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:16,661 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:16,661 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:16,661 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:16,661 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:16,662 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,662 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:16,662 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:16,662 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:16,662 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:16,662 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:16,662 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:16,662 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,663 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:16,663 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:16,663 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:16,663 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:16,663 - DEBUG - on stmt: jump 230
2024-06-28 20:38:16,663 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:16,663 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a767c6610>
2024-06-28 20:38:16,663 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:16,663 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:16,663 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:16,664 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:16,664 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:16,664 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:16,664 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a767c6610>
2024-06-28 20:38:16,664 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:16,664 - DEBUG - on stmt: jump 240
2024-06-28 20:38:16,664 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:16,664 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a767c6610>
2024-06-28 20:38:16,664 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:16,664 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:16,664 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:16,664 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a767c6610>
2024-06-28 20:38:16,665 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:16,665 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:16,665 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:16,665 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:16,665 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:16,665 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:16,665 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-06-28 20:38:16,665 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:16,665 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:16,665 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:16,666 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:16,666 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:16,666 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:16,666 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-06-28 20:38:16,666 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:16,666 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:16,666 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:16,666 - DEBUG - on stmt: jump 241
2024-06-28 20:38:16,666 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:16,666 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a767c6610>
2024-06-28 20:38:16,666 - DEBUG - on stmt: jump 230
2024-06-28 20:38:16,668 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a766e3c90>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a766e3d10>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a766e5ed0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a766e4690>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a766e6210>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a766e7a10>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a766e40d0>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a766e4410>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a766e4a50>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a766e4c10>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a766e2110>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a766e53d0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a766e59d0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a766e5a50>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a766c84d0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a766e5e50>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a766e5fd0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a766e60d0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a766e6cd0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a766e2490>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a76603a90>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a766c8b90>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a766e2910>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a766c8ed0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a767850d0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a766e2b90>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a76786790>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a766c8490>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a76785bd0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a766e56d0>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a766e2e50>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a766e37d0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a766e02d0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a766e0190>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a766e7c50>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a766e7ed0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a766e43d0>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a766e4ed0>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a766e5110>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a76602310>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a766ed810>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a766ed290>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a76632a10>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a766e3290>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a766e39d0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a766e1d90>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a766e7850>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a766e1cd0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a766e7550>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a766e2fd0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a766c8110>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a766caf50>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a766c8a50>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a766c8c50>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a766e0f90>, 0)]})
2024-06-28 20:38:16,668 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a767c6610>
2024-06-28 20:38:16,991 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:16,991 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:16,992 - DEBUG - stack: []
2024-06-28 20:38:16,992 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:16,992 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-28 20:38:16,992 - DEBUG - stack []
2024-06-28 20:38:16,992 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-28 20:38:16,992 - DEBUG - stack []
2024-06-28 20:38:16,992 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-28 20:38:16,992 - DEBUG - stack []
2024-06-28 20:38:16,992 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-28 20:38:16,992 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:16,992 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-06-28 20:38:16,992 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:16,992 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-06-28 20:38:16,992 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:16,993 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-28 20:38:16,993 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:16,993 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:16,993 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:16,993 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:16,993 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:16,993 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-06-28 20:38:16,993 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:16,993 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-06-28 20:38:16,993 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:16,993 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:16,993 - DEBUG - stack []
2024-06-28 20:38:16,993 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:16,993 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:16,994 - DEBUG - end state. edges=[]
2024-06-28 20:38:16,994 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:16,994 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:16,994 - DEBUG - defmap: {}
2024-06-28 20:38:16,994 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:16,994 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:16,994 - DEBUG - keep phismap: {}
2024-06-28 20:38:16,994 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:16,994 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:16,994 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:16,995 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:16,999 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:17,000 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76169510>
2024-06-28 20:38:17,000 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:17,000 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:17,000 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>)
2024-06-28 20:38:17,000 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,000 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:17,000 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:17,000 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:17,000 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,000 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:17,000 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:17,000 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:17,001 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:17,001 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a76169690>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a7616ba90>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a7616bfd0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a7616bd10>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a76168f10>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a76169f10>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a76168f50>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a7616be10>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a76169ed0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a76169a90>, 0)]})
2024-06-28 20:38:17,001 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76169510>
2024-06-28 20:38:17,018 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:17,018 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:17,018 - DEBUG - stack: []
2024-06-28 20:38:17,018 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:17,018 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:17,018 - DEBUG - stack []
2024-06-28 20:38:17,018 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:17,018 - DEBUG - stack []
2024-06-28 20:38:17,018 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:17,019 - DEBUG - stack []
2024-06-28 20:38:17,019 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:17,019 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:17,019 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:17,019 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:17,019 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:17,019 - DEBUG - stack []
2024-06-28 20:38:17,019 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:17,019 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:17,019 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:17,019 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:17,019 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:17,019 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:17,020 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:17,020 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:17,020 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:17,020 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:17,020 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:17,020 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:17,020 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:17,020 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:17,020 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:17,020 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:17,020 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:17,020 - DEBUG - stack []
2024-06-28 20:38:17,021 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:17,021 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:17,021 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:17,021 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:17,021 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:17,021 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:17,021 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:17,021 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:17,021 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:17,021 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:17,021 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:17,021 - DEBUG - stack []
2024-06-28 20:38:17,021 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:17,021 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:17,022 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:17,022 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:17,022 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:17,022 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:17,022 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:17,022 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:17,022 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:17,022 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:17,022 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:17,022 - DEBUG - stack []
2024-06-28 20:38:17,022 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:17,022 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:17,022 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:17,023 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:17,023 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:17,023 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:17,023 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:17,023 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:17,023 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:17,023 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:17,023 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:17,023 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:17,023 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:17,023 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:17,023 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:17,023 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:17,024 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:17,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:17,024 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:17,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:17,024 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:17,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:17,024 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:17,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:17,024 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:17,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:17,024 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:17,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:17,025 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:17,025 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:17,025 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:17,025 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:17,025 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:17,025 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:17,025 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:17,025 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:17,025 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:17,025 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:17,025 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:17,025 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:17,026 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:17,026 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:17,026 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:17,026 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:17,026 - DEBUG - stack: []
2024-06-28 20:38:17,026 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:17,026 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:17,026 - DEBUG - stack []
2024-06-28 20:38:17,026 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:17,026 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:17,026 - DEBUG - end state. edges=[]
2024-06-28 20:38:17,026 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:17,026 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:17,026 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:17,026 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:17,027 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:17,027 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:17,027 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:17,027 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:17,027 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:17,027 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:17,027 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:17,027 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:17,027 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:17,027 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:17,027 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:17,028 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:17,028 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:17,028 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:17,029 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:17,029 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:17,029 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:17,029 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:17,030 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:17,030 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:17,030 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:17,030 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:17,030 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:17,031 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:17,041 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:17,041 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76336690>
2024-06-28 20:38:17,041 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:17,041 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:17,041 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:17,041 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:17,041 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:17,041 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:17,041 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,042 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:17,042 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:17,042 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:17,042 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:17,042 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,042 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:17,042 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:17,042 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:17,042 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:17,042 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:17,042 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,042 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:17,043 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:17,043 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:17,043 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:17,043 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:17,043 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,043 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:17,043 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:17,043 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:17,043 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:17,043 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:17,044 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:17,044 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,044 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:17,044 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,044 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:17,044 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:17,044 - DEBUG - on stmt: jump 230
2024-06-28 20:38:17,044 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:17,044 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76336690>
2024-06-28 20:38:17,044 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:17,044 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:17,044 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:17,045 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:17,045 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:17,045 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:17,045 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76336690>
2024-06-28 20:38:17,045 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:17,045 - DEBUG - on stmt: jump 240
2024-06-28 20:38:17,045 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:17,045 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76336690>
2024-06-28 20:38:17,045 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:17,045 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:17,045 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:17,045 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76336690>
2024-06-28 20:38:17,045 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:17,046 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:17,046 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:17,046 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:17,046 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:17,046 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:17,046 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-06-28 20:38:17,046 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:17,046 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:17,046 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:17,047 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:17,047 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:17,047 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:17,047 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-06-28 20:38:17,047 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:17,047 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:17,047 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:17,047 - DEBUG - on stmt: jump 241
2024-06-28 20:38:17,047 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:17,047 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76336690>
2024-06-28 20:38:17,047 - DEBUG - on stmt: jump 230
2024-06-28 20:38:17,049 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a761a5050>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a761a4a90>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a761a4450>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a761a4310>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a761a4dd0>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a761a4550>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a761a7f10>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a761a7a50>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a761a7b90>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a761a7690>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a761ac210>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a761a6d10>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a76754750>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a76754e50>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a7616de50>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a76757a10>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a767579d0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a76757d50>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a76756790>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a761a7850>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a761bd910>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a7616ee50>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a761a6890>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a7616f7d0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a761c72d0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a761a5950>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a761c6210>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a7616ce10>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a761c6850>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a761a6ed0>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a761a52d0>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a761a55d0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a761a48d0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a761a4510>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a761a5810>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a761a6a10>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a761a7950>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a761a7390>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a761a7510>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a761ca150>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a761c4190>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a761c4950>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a761bd6d0>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a761a4e90>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a761a5d90>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a761ac4d0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a76757e50>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a761ac3d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a76757750>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a761a5910>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a7616cfd0>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a7616cc50>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a7616ee90>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a7616f890>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a761ac050>, 0)]})
2024-06-28 20:38:17,049 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76336690>
2024-06-28 20:38:17,323 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          16	LOAD_FAST(arg=0, lineno=1065)
          18	PRECALL(arg=1, lineno=1065)
          22	CALL(arg=1, lineno=1065)
          32	LOAD_FAST(arg=1, lineno=1065)
          34	LOAD_CONST(arg=1, lineno=1065)
          36	LOAD_CONST(arg=1, lineno=1065)
          38	BUILD_SLICE(arg=2, lineno=1065)
          40	STORE_SUBSCR(arg=None, lineno=1065)
          44	LOAD_CONST(arg=1, lineno=1065)
          46	RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:17,324 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:17,324 - DEBUG - stack: []
2024-06-28 20:38:17,325 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:17,325 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-28 20:38:17,325 - DEBUG - stack []
2024-06-28 20:38:17,325 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-28 20:38:17,325 - DEBUG - stack []
2024-06-28 20:38:17,325 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-28 20:38:17,326 - DEBUG - stack []
2024-06-28 20:38:17,326 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-28 20:38:17,326 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:17,326 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1065)
2024-06-28 20:38:17,326 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:17,326 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1065)
2024-06-28 20:38:17,327 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:17,327 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-28 20:38:17,327 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:17,327 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:17,327 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:17,327 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:17,327 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:17,327 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1065)
2024-06-28 20:38:17,327 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:17,328 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1065)
2024-06-28 20:38:17,328 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:17,328 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-28 20:38:17,328 - DEBUG - stack []
2024-06-28 20:38:17,329 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1065)
2024-06-28 20:38:17,329 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:17,329 - DEBUG - end state. edges=[]
2024-06-28 20:38:17,329 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:17,329 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:17,329 - DEBUG - defmap: {}
2024-06-28 20:38:17,329 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:17,330 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:17,330 - DEBUG - keep phismap: {}
2024-06-28 20:38:17,330 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:17,330 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:17,330 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:17,332 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:17,347 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:17,347 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7600b410>
2024-06-28 20:38:17,348 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:17,348 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:17,348 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762debd0>)
2024-06-28 20:38:17,348 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,348 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:17,348 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:17,348 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:17,348 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1065), Var($const36.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,348 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:17,349 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:17,349 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:17,349 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:17,349 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a7600b610>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a7600bd50>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a7600be10>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a76010210>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a7600b250>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a7600b990>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a7600bb50>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a76010090>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a7600af50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a7600b050>, 0)]})
2024-06-28 20:38:17,349 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a7600b410>
2024-06-28 20:38:17,384 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:17,385 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:17,385 - DEBUG - stack: []
2024-06-28 20:38:17,385 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:17,385 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:17,385 - DEBUG - stack []
2024-06-28 20:38:17,385 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:17,385 - DEBUG - stack []
2024-06-28 20:38:17,385 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:17,385 - DEBUG - stack []
2024-06-28 20:38:17,385 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:17,385 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:17,385 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:17,386 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:17,386 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:17,386 - DEBUG - stack []
2024-06-28 20:38:17,386 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:17,386 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:17,386 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:17,386 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:17,386 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:17,386 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:17,386 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:17,387 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:17,387 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:17,387 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:17,387 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:17,387 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:17,387 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:17,387 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:17,387 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:17,387 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:17,387 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:17,387 - DEBUG - stack []
2024-06-28 20:38:17,387 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:17,387 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:17,388 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:17,388 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:17,388 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:17,388 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:17,388 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:17,388 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:17,388 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:17,388 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:17,388 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:17,388 - DEBUG - stack []
2024-06-28 20:38:17,388 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:17,388 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:17,388 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:17,388 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:17,389 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:17,389 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:17,389 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:17,389 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:17,389 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:17,389 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:17,389 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:17,389 - DEBUG - stack []
2024-06-28 20:38:17,390 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:17,390 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:17,390 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:17,390 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:17,390 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:17,390 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:17,390 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:17,390 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:17,390 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:17,390 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:17,391 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:17,391 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:17,391 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:17,391 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:17,391 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:17,391 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:17,391 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:17,391 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:17,392 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:17,392 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:17,392 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:17,392 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:17,392 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:17,392 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:17,392 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:17,392 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:17,393 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:17,393 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:17,393 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:17,393 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:17,393 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:17,393 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:17,393 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:17,393 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:17,393 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:17,393 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:17,394 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:17,394 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:17,394 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:17,394 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:17,394 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:17,394 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:17,394 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:17,395 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:17,395 - DEBUG - stack: []
2024-06-28 20:38:17,395 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:17,395 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:17,395 - DEBUG - stack []
2024-06-28 20:38:17,395 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:17,395 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:17,395 - DEBUG - end state. edges=[]
2024-06-28 20:38:17,395 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:17,395 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:17,395 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:17,395 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:17,396 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:17,396 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:17,396 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:17,396 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:17,396 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:17,396 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:17,396 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:17,396 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:17,396 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:17,396 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:17,396 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:17,397 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:17,397 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:17,397 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:17,398 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:17,398 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:17,399 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:17,399 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:17,399 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:17,400 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:17,400 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:17,400 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:17,400 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:17,402 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:17,413 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:17,414 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a763f91d0>
2024-06-28 20:38:17,414 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:17,414 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:17,414 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:17,415 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:17,415 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:17,415 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:17,415 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,415 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:17,415 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:17,415 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:17,415 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:17,415 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,415 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:17,416 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:17,416 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:17,416 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:17,416 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:17,416 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,416 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:17,416 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:17,416 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:17,416 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:17,416 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:17,416 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,417 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:17,417 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:17,417 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:17,417 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:17,417 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:17,417 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:17,417 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,417 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:17,417 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:17,418 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:17,418 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:17,418 - DEBUG - on stmt: jump 230
2024-06-28 20:38:17,418 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:17,418 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a763f91d0>
2024-06-28 20:38:17,418 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:17,418 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:17,418 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:17,418 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:17,418 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:17,418 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:17,419 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a763f91d0>
2024-06-28 20:38:17,419 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:17,419 - DEBUG - on stmt: jump 240
2024-06-28 20:38:17,419 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:17,419 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a763f91d0>
2024-06-28 20:38:17,419 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:17,419 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:17,419 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:17,419 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a763f91d0>
2024-06-28 20:38:17,419 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:17,419 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:17,420 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:17,420 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:17,420 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:17,420 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:17,420 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
2024-06-28 20:38:17,420 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:17,422 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:17,422 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:17,422 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:17,423 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:17,423 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:17,423 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
2024-06-28 20:38:17,423 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:17,423 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:17,423 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:17,423 - DEBUG - on stmt: jump 241
2024-06-28 20:38:17,423 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:17,423 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a763f91d0>
2024-06-28 20:38:17,423 - DEBUG - on stmt: jump 230
2024-06-28 20:38:17,425 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a76441e10>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a764410d0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a76440810>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a76440350>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a76440310>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a76441490>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a76441910>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a76441610>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a764414d0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a764428d0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a763eee10>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a76442e50>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a76443650>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a76443dd0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a763c19d0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a76443950>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a764439d0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a76443510>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a763fb750>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a763efb50>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a76006c90>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a763c1b10>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a763ef790>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a763c22d0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a75fee790>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a763ef650>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a75fed290>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a763c1bd0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a75feda50>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a76443850>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a764420d0>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a76440b50>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a76442190>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a76440990>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a764412d0>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a76440f90>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a76442e90>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a76442a10>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a764424d0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a76005f10>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a76007ad0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a75fefe10>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a75ff7a50>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a763ec150>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a76441690>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a763ef310>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a76443410>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a763ef1d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a76442750>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a763ec3d0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a763c1c50>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a763c1cd0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a763c1e50>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a763c20d0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a763ef350>, 0)]})
2024-06-28 20:38:17,426 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a763f91d0>
2024-06-28 20:38:18,334 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:18,334 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:18,334 - DEBUG - stack: []
2024-06-28 20:38:18,334 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:18,334 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-28 20:38:18,335 - DEBUG - stack []
2024-06-28 20:38:18,335 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-28 20:38:18,335 - DEBUG - stack []
2024-06-28 20:38:18,335 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-28 20:38:18,335 - DEBUG - stack []
2024-06-28 20:38:18,335 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-28 20:38:18,335 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:18,335 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-06-28 20:38:18,335 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:18,335 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-06-28 20:38:18,335 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:18,335 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-28 20:38:18,335 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:18,335 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:18,336 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:18,336 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:18,336 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:18,336 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-06-28 20:38:18,336 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:18,336 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-06-28 20:38:18,336 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:18,336 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:18,336 - DEBUG - stack []
2024-06-28 20:38:18,336 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:18,336 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:18,336 - DEBUG - end state. edges=[]
2024-06-28 20:38:18,336 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:18,336 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:18,336 - DEBUG - defmap: {}
2024-06-28 20:38:18,336 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:18,336 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:18,337 - DEBUG - keep phismap: {}
2024-06-28 20:38:18,337 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:18,337 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:18,337 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:18,337 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:18,341 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:18,341 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a74e93fd0>
2024-06-28 20:38:18,341 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:18,341 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:18,342 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>)
2024-06-28 20:38:18,342 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,342 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:18,342 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:18,342 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:18,342 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,342 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:18,342 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:18,342 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:18,342 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:18,342 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a74e92350>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a74e92a50>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a74e92b90>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a74e93050>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a74e91f10>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a74e926d0>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a74e92890>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a74e92e10>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a74e05fd0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a74e91c90>, 0)]})
2024-06-28 20:38:18,343 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a74e93fd0>
2024-06-28 20:38:18,357 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:18,358 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:18,358 - DEBUG - stack: []
2024-06-28 20:38:18,358 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:18,358 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:18,358 - DEBUG - stack []
2024-06-28 20:38:18,358 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:18,358 - DEBUG - stack []
2024-06-28 20:38:18,358 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:18,358 - DEBUG - stack []
2024-06-28 20:38:18,358 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:18,358 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:18,358 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:18,358 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:18,359 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:18,359 - DEBUG - stack []
2024-06-28 20:38:18,359 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:18,359 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:18,359 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:18,359 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:18,359 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:18,359 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:18,359 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:18,359 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:18,359 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:18,359 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:18,359 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:18,359 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:18,360 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:18,360 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:18,360 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:18,360 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:18,360 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:18,360 - DEBUG - stack []
2024-06-28 20:38:18,360 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:18,360 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:18,360 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:18,360 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:18,360 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:18,360 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:18,360 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:18,360 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:18,361 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:18,361 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:18,361 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:18,361 - DEBUG - stack []
2024-06-28 20:38:18,361 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:18,361 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:18,361 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:18,361 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:18,361 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:18,361 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:18,361 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:18,361 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:18,361 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:18,361 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:18,361 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:18,361 - DEBUG - stack []
2024-06-28 20:38:18,362 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:18,362 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:18,362 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:18,362 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:18,362 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:18,362 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:18,362 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:18,362 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:18,362 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:18,362 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:18,362 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:18,362 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:18,363 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:18,363 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:18,363 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:18,363 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:18,363 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:18,363 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:18,363 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:18,363 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:18,363 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:18,363 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:18,363 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:18,363 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:18,363 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:18,364 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:18,364 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:18,364 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:18,364 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:18,364 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:18,364 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:18,364 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:18,364 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:18,364 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:18,364 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:18,364 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:18,364 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:18,364 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:18,365 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:18,365 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:18,365 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:18,365 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:18,365 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:18,365 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:18,365 - DEBUG - stack: []
2024-06-28 20:38:18,365 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:18,365 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:18,365 - DEBUG - stack []
2024-06-28 20:38:18,365 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:18,365 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:18,365 - DEBUG - end state. edges=[]
2024-06-28 20:38:18,365 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:18,365 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:18,366 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:18,366 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:18,366 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:18,366 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:18,366 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:18,366 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:18,366 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:18,366 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:18,366 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:18,366 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:18,366 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:18,366 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:18,366 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:18,366 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:18,367 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,367 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,367 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,368 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,368 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:18,368 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:18,368 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:18,368 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:18,369 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:18,369 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:18,369 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:18,371 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:18,380 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:18,380 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a74e80250>
2024-06-28 20:38:18,380 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:18,380 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:18,380 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:18,380 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:18,380 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:18,380 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:18,380 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,380 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:18,380 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:18,380 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,381 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:18,381 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,381 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:18,381 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:18,381 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:18,382 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:18,382 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:18,382 - DEBUG - on stmt: jump 230
2024-06-28 20:38:18,383 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:18,383 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a74e80250>
2024-06-28 20:38:18,383 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:18,383 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:18,383 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:18,383 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:18,383 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:18,383 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:18,383 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a74e80250>
2024-06-28 20:38:18,383 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:18,383 - DEBUG - on stmt: jump 240
2024-06-28 20:38:18,383 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:18,384 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a74e80250>
2024-06-28 20:38:18,384 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:18,384 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:18,384 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:18,384 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a74e80250>
2024-06-28 20:38:18,384 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:18,384 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:18,384 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:18,384 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:18,384 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:18,385 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:18,385 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-06-28 20:38:18,385 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:18,385 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:18,385 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:18,385 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:18,385 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:18,385 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:18,385 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-06-28 20:38:18,385 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:18,385 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:18,385 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:18,385 - DEBUG - on stmt: jump 241
2024-06-28 20:38:18,386 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:18,386 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a74e80250>
2024-06-28 20:38:18,386 - DEBUG - on stmt: jump 230
2024-06-28 20:38:18,387 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a6760d8d0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a6760da50>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a6760e410>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a6760e590>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a6760e810>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a6760ea50>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a6760f0d0>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a6760f2d0>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a6760f7d0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a6760fa90>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a6760c190>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a67610250>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a67610810>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a67610a10>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a74eb69d0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a67610bd0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a67610d50>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a67610ed0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a74e829d0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a6760c410>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a74ead450>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a74eb6c90>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a6760c850>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a74e9d110>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a74eb4210>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a6760cb10>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a74eb5490>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a74eb67d0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a74eb4b50>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a67610590>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a6760d6d0>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a6760dd10>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a6760e050>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a6760e210>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a6760ec90>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a6760ee50>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a6760f5d0>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a6760fd90>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a6760ff50>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a74eac5d0>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a74eadad0>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a74eaf010>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a74ea37d0>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a6760d190>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a6760d510>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a6760bf90>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a67610f90>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a6760be50>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a67611210>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a6760cdd0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a74eb6750>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a74eb6910>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a74eb6c50>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a74eb6ed0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a6760bb50>, 0)]})
2024-06-28 20:38:18,387 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a74e80250>
2024-06-28 20:38:18,595 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:18,595 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:18,595 - DEBUG - stack: []
2024-06-28 20:38:18,595 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:18,595 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-28 20:38:18,595 - DEBUG - stack []
2024-06-28 20:38:18,596 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-28 20:38:18,596 - DEBUG - stack []
2024-06-28 20:38:18,596 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-28 20:38:18,596 - DEBUG - stack []
2024-06-28 20:38:18,596 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-28 20:38:18,596 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:18,596 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-06-28 20:38:18,596 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:18,596 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-06-28 20:38:18,596 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:18,596 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-28 20:38:18,596 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:18,596 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:18,596 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:18,596 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:18,596 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:18,597 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-06-28 20:38:18,597 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:18,597 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-06-28 20:38:18,597 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:18,597 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:18,597 - DEBUG - stack []
2024-06-28 20:38:18,597 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:18,597 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:18,597 - DEBUG - end state. edges=[]
2024-06-28 20:38:18,597 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:18,597 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:18,597 - DEBUG - defmap: {}
2024-06-28 20:38:18,598 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:18,598 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:18,598 - DEBUG - keep phismap: {}
2024-06-28 20:38:18,598 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:18,598 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:18,598 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:18,598 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:18,602 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:18,602 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a6754c8d0>
2024-06-28 20:38:18,603 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:18,603 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:18,603 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>)
2024-06-28 20:38:18,603 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,603 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:18,603 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:18,603 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:18,603 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,603 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:18,603 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:18,603 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:18,603 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:18,604 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a67542bd0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a67543390>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a67543450>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a67543890>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a67542810>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a67543050>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a675431d0>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a675436d0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a675424d0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a675425d0>, 0)]})
2024-06-28 20:38:18,604 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a6754c8d0>
2024-06-28 20:38:18,618 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:18,618 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:18,618 - DEBUG - stack: []
2024-06-28 20:38:18,618 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:18,619 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:18,619 - DEBUG - stack []
2024-06-28 20:38:18,619 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:18,619 - DEBUG - stack []
2024-06-28 20:38:18,619 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:18,619 - DEBUG - stack []
2024-06-28 20:38:18,619 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:18,619 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:18,619 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:18,619 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:18,619 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:18,620 - DEBUG - stack []
2024-06-28 20:38:18,620 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:18,620 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:18,620 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:18,620 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:18,620 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:18,620 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:18,620 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:18,620 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:18,620 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:18,620 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:18,620 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:18,621 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:18,621 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:18,621 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:18,621 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:18,621 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:18,621 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:18,621 - DEBUG - stack []
2024-06-28 20:38:18,621 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:18,621 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:18,621 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:18,621 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:18,621 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:18,621 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:18,621 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:18,621 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:18,621 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:18,622 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:18,622 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:18,622 - DEBUG - stack []
2024-06-28 20:38:18,622 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:18,622 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:18,622 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:18,622 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:18,622 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:18,622 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:18,622 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:18,622 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:18,622 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:18,622 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:18,622 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:18,622 - DEBUG - stack []
2024-06-28 20:38:18,623 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:18,623 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:18,623 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:18,623 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:18,623 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:18,623 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:18,623 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:18,623 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:18,623 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:18,623 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:18,623 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:18,623 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:18,623 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:18,623 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:18,623 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:18,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:18,624 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:18,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:18,624 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:18,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:18,624 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:18,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:18,624 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:18,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:18,624 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:18,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:18,624 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:18,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:18,624 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:18,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:18,625 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:18,625 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:18,625 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:18,625 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:18,625 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:18,625 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:18,625 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:18,625 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:18,625 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:18,625 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:18,625 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:18,625 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:18,625 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:18,625 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:18,626 - DEBUG - stack: []
2024-06-28 20:38:18,626 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:18,626 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:18,626 - DEBUG - stack []
2024-06-28 20:38:18,626 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:18,626 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:18,626 - DEBUG - end state. edges=[]
2024-06-28 20:38:18,626 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:18,626 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:18,626 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:18,626 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:18,626 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:18,626 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:18,626 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:18,626 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:18,626 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:18,627 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:18,627 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:18,627 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:18,627 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:18,627 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:18,627 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:18,627 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:18,627 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,628 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,628 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,628 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,629 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:18,629 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:18,629 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:18,629 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:18,629 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:18,629 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:18,629 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:18,630 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:18,639 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:18,639 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a675805d0>
2024-06-28 20:38:18,640 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:18,640 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:18,640 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:18,640 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:18,640 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:18,640 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:18,640 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,640 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:18,640 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:18,640 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:18,640 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:18,640 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,640 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:18,640 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,641 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:18,641 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:18,641 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:18,642 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:18,642 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:18,642 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:18,642 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:18,643 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,643 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:18,643 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,643 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:18,644 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:18,644 - DEBUG - on stmt: jump 230
2024-06-28 20:38:18,644 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:18,644 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a675805d0>
2024-06-28 20:38:18,644 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:18,644 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:18,644 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:18,644 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:18,644 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:18,644 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:18,644 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a675805d0>
2024-06-28 20:38:18,644 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:18,645 - DEBUG - on stmt: jump 240
2024-06-28 20:38:18,645 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:18,645 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a675805d0>
2024-06-28 20:38:18,645 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:18,645 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:18,645 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:18,645 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a675805d0>
2024-06-28 20:38:18,645 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:18,645 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:18,645 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:18,645 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:18,645 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:18,645 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:18,645 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-06-28 20:38:18,645 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:18,646 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:18,646 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:18,646 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:18,646 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:18,646 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:18,646 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-06-28 20:38:18,646 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:18,646 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:18,646 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:18,646 - DEBUG - on stmt: jump 241
2024-06-28 20:38:18,646 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:18,646 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a675805d0>
2024-06-28 20:38:18,646 - DEBUG - on stmt: jump 230
2024-06-28 20:38:18,647 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a67571e10>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a67571f90>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a675728d0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a67572a50>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a67572c90>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a67572e10>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a675733d0>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a67573610>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a67573b10>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a67573d50>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a675707d0>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a675782d0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a67578750>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a67578a10>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a67562790>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a67578bd0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a67578d50>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a67578ed0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a67579a50>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a67570a50>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a6755d210>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a67562a10>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a67570e50>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a67562cd0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a6755ff90>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a67571010>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a67561250>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a67562590>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a67560910>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a67578550>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a67571c10>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a675721d0>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a67572510>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a675726d0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a67573050>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a675731d0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a67573910>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a67573f10>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a675780d0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a6755c4d0>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a6755d890>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a6755edd0>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a67556610>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a67571710>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a67571a50>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a67570650>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a67578f90>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a675703d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a67579210>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a67571310>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a67562510>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a675626d0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a675629d0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a67562c50>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a6756ff90>, 0)]})
2024-06-28 20:38:18,647 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a67540050>
2024-06-28 20:38:18,869 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:18,869 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:18,869 - DEBUG - stack: []
2024-06-28 20:38:18,869 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:18,869 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-28 20:38:18,870 - DEBUG - stack []
2024-06-28 20:38:18,870 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-28 20:38:18,870 - DEBUG - stack []
2024-06-28 20:38:18,870 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-28 20:38:18,870 - DEBUG - stack []
2024-06-28 20:38:18,870 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-28 20:38:18,870 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:18,870 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-06-28 20:38:18,870 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:18,870 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-06-28 20:38:18,871 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:18,871 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-28 20:38:18,871 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:18,871 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:18,871 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:18,871 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:18,871 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:18,871 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-06-28 20:38:18,871 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:18,872 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-06-28 20:38:18,872 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:18,872 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:18,872 - DEBUG - stack []
2024-06-28 20:38:18,872 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:18,872 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:18,872 - DEBUG - end state. edges=[]
2024-06-28 20:38:18,872 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:18,872 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:18,872 - DEBUG - defmap: {}
2024-06-28 20:38:18,872 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:18,872 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:18,873 - DEBUG - keep phismap: {}
2024-06-28 20:38:18,873 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:18,873 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:18,873 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:18,873 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:18,877 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:18,877 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a67338850>
2024-06-28 20:38:18,878 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:18,878 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:18,878 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>)
2024-06-28 20:38:18,878 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,878 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:18,878 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:18,878 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:18,878 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,878 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:18,878 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:18,879 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:18,879 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:18,879 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a67336b10>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a67337250>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a67337310>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a67337710>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a67336810>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a67336ed0>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a67337050>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a67337550>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a67336510>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a67336610>, 0)]})
2024-06-28 20:38:18,879 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a67338850>
2024-06-28 20:38:18,899 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:18,899 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:18,899 - DEBUG - stack: []
2024-06-28 20:38:18,899 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:18,900 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:18,900 - DEBUG - stack []
2024-06-28 20:38:18,900 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:18,901 - DEBUG - stack []
2024-06-28 20:38:18,901 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:18,901 - DEBUG - stack []
2024-06-28 20:38:18,901 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:18,901 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:18,901 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:18,901 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:18,901 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:18,901 - DEBUG - stack []
2024-06-28 20:38:18,901 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:18,901 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:18,902 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:18,902 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:18,902 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:18,902 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:18,902 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:18,902 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:18,902 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:18,902 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:18,902 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:18,902 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:18,903 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:18,903 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:18,903 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:18,903 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:18,903 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:18,903 - DEBUG - stack []
2024-06-28 20:38:18,903 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:18,903 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:18,903 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:18,903 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:18,903 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:18,904 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:18,904 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:18,904 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:18,904 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:18,904 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:18,904 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:18,904 - DEBUG - stack []
2024-06-28 20:38:18,904 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:18,904 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:18,904 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:18,905 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:18,905 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:18,905 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:18,905 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:18,905 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:18,905 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:18,905 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:18,905 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:18,905 - DEBUG - stack []
2024-06-28 20:38:18,906 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:18,906 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:18,906 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:18,906 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:18,906 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:18,906 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:18,906 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:18,906 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:18,906 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:18,906 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:18,907 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:18,907 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:18,907 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:18,907 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:18,907 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:18,907 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:18,907 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:18,907 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:18,907 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:18,907 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:18,907 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:18,907 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:18,907 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:18,907 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:18,908 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:18,908 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:18,908 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:18,908 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:18,908 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:18,908 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:18,908 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:18,908 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:18,908 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:18,908 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:18,908 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:18,908 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:18,908 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:18,909 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:18,909 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:18,909 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:18,909 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:18,909 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:18,909 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:18,909 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:18,909 - DEBUG - stack: []
2024-06-28 20:38:18,909 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:18,909 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:18,909 - DEBUG - stack []
2024-06-28 20:38:18,909 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:18,909 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:18,910 - DEBUG - end state. edges=[]
2024-06-28 20:38:18,910 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:18,910 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:18,910 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:18,910 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:18,910 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:18,910 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:18,910 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:18,910 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:18,910 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:18,910 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:18,910 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:18,911 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:18,911 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:18,911 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:18,911 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:18,911 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:18,911 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,912 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,912 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,912 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:18,913 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:18,913 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:18,913 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:18,913 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:18,913 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:18,914 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:18,914 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:18,915 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:18,925 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:18,926 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a6736f6d0>
2024-06-28 20:38:18,926 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:18,926 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:18,926 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:18,926 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:18,926 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:18,926 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:18,926 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,926 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:18,926 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:18,926 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:18,926 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:18,926 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,927 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:18,927 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:18,927 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:18,927 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:18,927 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:18,927 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,927 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:18,927 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:18,927 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:18,927 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:18,927 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:18,927 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,928 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:18,928 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:18,928 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:18,928 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:18,928 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:18,928 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:18,928 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,928 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:18,928 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:18,929 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:18,929 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:18,929 - DEBUG - on stmt: jump 230
2024-06-28 20:38:18,929 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:18,929 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a6736f6d0>
2024-06-28 20:38:18,929 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:18,929 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:18,929 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:18,929 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:18,929 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:18,929 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:18,929 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a6736f6d0>
2024-06-28 20:38:18,929 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:18,929 - DEBUG - on stmt: jump 240
2024-06-28 20:38:18,929 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:18,930 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a6736f6d0>
2024-06-28 20:38:18,930 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:18,930 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:18,930 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:18,930 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a6736f6d0>
2024-06-28 20:38:18,930 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:18,930 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:18,930 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:18,930 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:18,930 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:18,930 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:18,931 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-06-28 20:38:18,931 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:18,931 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:18,931 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:18,931 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:18,931 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:18,931 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:18,931 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-06-28 20:38:18,931 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:18,931 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:18,932 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:18,932 - DEBUG - on stmt: jump 241
2024-06-28 20:38:18,932 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:18,932 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a6736f6d0>
2024-06-28 20:38:18,932 - DEBUG - on stmt: jump 230
2024-06-28 20:38:18,933 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a67369510>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a67369690>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a67369e90>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a6736a010>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a6736a210>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a6736a390>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a6736a890>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a6736aa10>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a6736af10>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a6736b0d0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a67368150>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a6736b6d0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a6736bb10>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a6736bcd0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a6735a5d0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a6736be90>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a6736c050>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a6736c1d0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a6736cd50>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a67368450>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a6734d090>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a6735a850>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a67368890>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a6735ab10>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a6734fe10>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a67368a10>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a673590d0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a6735a3d0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a67358790>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a6736b890>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a67369350>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a67369890>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a67369b50>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a67369cd0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a6736a510>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a6736a690>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a6736ad10>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a6736b290>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a6736b450>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a6734c350>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a6734d710>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a6734ec50>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a67346510>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a67368ed0>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a673691d0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a67367f50>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a6736c290>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a67367dd0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a6736c550>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a67368c10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a6735a350>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a6735a510>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a6735a810>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a6735aa90>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a67367a10>, 0)]})
2024-06-28 20:38:18,933 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a6736f6d0>
2024-06-28 20:38:19,218 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:19,218 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:19,218 - DEBUG - stack: []
2024-06-28 20:38:19,218 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:19,218 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-28 20:38:19,218 - DEBUG - stack []
2024-06-28 20:38:19,219 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-28 20:38:19,219 - DEBUG - stack []
2024-06-28 20:38:19,219 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-28 20:38:19,219 - DEBUG - stack []
2024-06-28 20:38:19,219 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-28 20:38:19,219 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:19,219 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-06-28 20:38:19,220 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:19,220 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-06-28 20:38:19,220 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:19,220 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-28 20:38:19,220 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:19,220 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:19,220 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:19,220 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:19,220 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:19,220 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-06-28 20:38:19,220 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:19,220 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-06-28 20:38:19,220 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:19,220 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:19,221 - DEBUG - stack []
2024-06-28 20:38:19,221 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:19,221 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:19,221 - DEBUG - end state. edges=[]
2024-06-28 20:38:19,221 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:19,221 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:19,221 - DEBUG - defmap: {}
2024-06-28 20:38:19,221 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:19,221 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:19,221 - DEBUG - keep phismap: {}
2024-06-28 20:38:19,221 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:19,221 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:19,222 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:19,222 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:19,226 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:19,226 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a672df290>
2024-06-28 20:38:19,226 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:19,227 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:19,227 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>)
2024-06-28 20:38:19,227 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,227 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:19,227 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:19,227 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:19,227 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,227 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:19,227 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:19,227 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:19,227 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:19,228 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a672dd7d0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a672ddf50>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a672de010>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a672de490>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a672dd310>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a672ddb90>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a672ddd50>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a672de2d0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a672dcf90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a672dd090>, 0)]})
2024-06-28 20:38:19,228 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a672df290>
2024-06-28 20:38:19,243 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:19,244 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:19,244 - DEBUG - stack: []
2024-06-28 20:38:19,244 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:19,244 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:19,244 - DEBUG - stack []
2024-06-28 20:38:19,244 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:19,244 - DEBUG - stack []
2024-06-28 20:38:19,244 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:19,244 - DEBUG - stack []
2024-06-28 20:38:19,244 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:19,244 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:19,244 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:19,244 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:19,244 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:19,245 - DEBUG - stack []
2024-06-28 20:38:19,245 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:19,245 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:19,245 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:19,245 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:19,245 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:19,245 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:19,245 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:19,245 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:19,245 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:19,245 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:19,245 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:19,246 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:19,246 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:19,246 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:19,246 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:19,246 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:19,246 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:19,246 - DEBUG - stack []
2024-06-28 20:38:19,246 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:19,246 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:19,246 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:19,246 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:19,247 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:19,247 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:19,247 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:19,247 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:19,247 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:19,247 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:19,247 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:19,247 - DEBUG - stack []
2024-06-28 20:38:19,247 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:19,247 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:19,247 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:19,247 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:19,247 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:19,247 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:19,247 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:19,247 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:19,248 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:19,248 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:19,248 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:19,248 - DEBUG - stack []
2024-06-28 20:38:19,248 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:19,248 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:19,248 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:19,248 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:19,248 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:19,248 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:19,248 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:19,248 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:19,248 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:19,248 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:19,248 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:19,249 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:19,249 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:19,249 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:19,249 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:19,249 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:19,249 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:19,249 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:19,249 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:19,249 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:19,249 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:19,249 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:19,249 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:19,249 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:19,249 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:19,249 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:19,250 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:19,250 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:19,250 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:19,250 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:19,250 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:19,250 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:19,250 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:19,250 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:19,250 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:19,250 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:19,250 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:19,251 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:19,251 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:19,251 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:19,251 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:19,251 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:19,251 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:19,251 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:19,251 - DEBUG - stack: []
2024-06-28 20:38:19,251 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:19,251 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:19,251 - DEBUG - stack []
2024-06-28 20:38:19,252 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:19,252 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:19,252 - DEBUG - end state. edges=[]
2024-06-28 20:38:19,252 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:19,252 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:19,252 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:19,253 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:19,253 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:19,253 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:19,253 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:19,253 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:19,253 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:19,253 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:19,253 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:19,253 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:19,253 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:19,253 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:19,254 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:19,254 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:19,254 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:19,254 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:19,255 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:19,255 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:19,256 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:19,256 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:19,256 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:19,257 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:19,257 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:19,257 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:19,257 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:19,259 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:19,268 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:19,268 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a67119b90>
2024-06-28 20:38:19,268 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:19,268 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:19,268 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:19,268 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:19,268 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:19,268 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:19,268 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,269 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:19,269 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:19,269 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:19,269 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:19,269 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,269 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:19,269 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:19,269 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:19,269 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:19,269 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:19,269 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,270 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:19,270 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:19,270 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,271 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:19,271 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,271 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:19,271 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:19,271 - DEBUG - on stmt: jump 230
2024-06-28 20:38:19,271 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:19,271 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a67119b90>
2024-06-28 20:38:19,271 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:19,271 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:19,271 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:19,271 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:19,272 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:19,272 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:19,272 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a67119b90>
2024-06-28 20:38:19,272 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:19,272 - DEBUG - on stmt: jump 240
2024-06-28 20:38:19,272 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:19,272 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a67119b90>
2024-06-28 20:38:19,272 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:19,272 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:19,272 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:19,272 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a67119b90>
2024-06-28 20:38:19,272 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:19,272 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:19,272 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:19,273 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:19,273 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:19,273 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:19,273 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-06-28 20:38:19,273 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:19,273 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:19,273 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:19,273 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:19,273 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:19,273 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:19,273 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-06-28 20:38:19,273 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:19,274 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:19,274 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:19,274 - DEBUG - on stmt: jump 241
2024-06-28 20:38:19,274 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:19,274 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a67119b90>
2024-06-28 20:38:19,274 - DEBUG - on stmt: jump 230
2024-06-28 20:38:19,275 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a6710f210>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a6710f390>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a6710fcd0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a6710fe50>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a67110110>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a671103d0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a67110a10>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a67110c10>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a671110d0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a67111390>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a6710dc10>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a67111a90>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a671120d0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a67112350>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a67109190>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a67112510>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a67112690>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a67112810>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a67113310>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a6710ded0>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a672fbbd0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a67109410>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a6710e210>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a671096d0>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a672fe990>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a6710e490>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a672ffc10>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a67108f90>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a672ff2d0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a67111dd0>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a6710f010>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a6710f610>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a6710f910>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a6710fad0>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a67110610>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a671107d0>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a67110ed0>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a67111610>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a671117d0>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a672fadd0>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a672fc290>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a672fd7d0>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a672e4450>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a6710eb10>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a6710ee90>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a6710da90>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a671128d0>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a6710d890>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a67112b10>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a6710e790>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a67108f10>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a671090d0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a671093d0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a67109650>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a6710d490>, 0)]})
2024-06-28 20:38:19,275 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a67111c50>
2024-06-28 20:38:19,492 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          16	LOAD_FAST(arg=0, lineno=1082)
          18	PRECALL(arg=1, lineno=1082)
          22	CALL(arg=1, lineno=1082)
          32	LOAD_FAST(arg=1, lineno=1082)
          34	LOAD_CONST(arg=1, lineno=1082)
          36	LOAD_CONST(arg=1, lineno=1082)
          38	BUILD_SLICE(arg=2, lineno=1082)
          40	STORE_SUBSCR(arg=None, lineno=1082)
          44	LOAD_CONST(arg=1, lineno=1082)
          46	RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:19,492 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:19,492 - DEBUG - stack: []
2024-06-28 20:38:19,492 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:19,492 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-28 20:38:19,492 - DEBUG - stack []
2024-06-28 20:38:19,492 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-28 20:38:19,492 - DEBUG - stack []
2024-06-28 20:38:19,492 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-28 20:38:19,492 - DEBUG - stack []
2024-06-28 20:38:19,492 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-28 20:38:19,493 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:19,493 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=1082)
2024-06-28 20:38:19,493 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:19,493 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=1082)
2024-06-28 20:38:19,493 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2024-06-28 20:38:19,493 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-28 20:38:19,493 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:19,493 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:19,493 - DEBUG - stack ['$22call.3', '$y32.4']
2024-06-28 20:38:19,493 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:19,493 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5']
2024-06-28 20:38:19,493 - DEBUG - dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1082)
2024-06-28 20:38:19,493 - DEBUG - stack ['$22call.3', '$y32.4', '$const34.5', '$const36.6']
2024-06-28 20:38:19,493 - DEBUG - dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1082)
2024-06-28 20:38:19,494 - DEBUG - stack ['$22call.3', '$y32.4', '$38build_slice.8']
2024-06-28 20:38:19,494 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-28 20:38:19,494 - DEBUG - stack []
2024-06-28 20:38:19,494 - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1082)
2024-06-28 20:38:19,494 - DEBUG - stack ['$const44.9']
2024-06-28 20:38:19,494 - DEBUG - end state. edges=[]
2024-06-28 20:38:19,494 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:19,494 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:19,494 - DEBUG - defmap: {}
2024-06-28 20:38:19,494 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:19,494 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:19,494 - DEBUG - keep phismap: {}
2024-06-28 20:38:19,494 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:19,494 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:19,495 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5'}), (36, {'res': '$const36.6'}), (38, {'start': '$const34.5', 'stop': '$const36.6', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9'}), (46, {'retval': '$const44.9', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:19,495 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5 = const(NoneType, None)       ['$const34.5']
    $const36.6 = const(NoneType, None)       ['$const36.6']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5', '$const36.6']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9 = const(NoneType, None)       ['$const44.9']
    $46return_value.10 = cast(value=$const44.9) ['$46return_value.10', '$const44.9']
    return $46return_value.10                ['$46return_value.10']

2024-06-28 20:38:19,499 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:19,499 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a67088d90>
2024-06-28 20:38:19,499 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:19,499 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-28 20:38:19,500 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7f7a762df190>)
2024-06-28 20:38:19,500 - DEBUG - on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,500 - DEBUG - on stmt: $const34.5 = const(NoneType, None)
2024-06-28 20:38:19,500 - DEBUG - on stmt: $const36.6 = const(NoneType, None)
2024-06-28 20:38:19,500 - DEBUG - on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
2024-06-28 20:38:19,500 - DEBUG - on stmt: $38build_slice.8 = call $38build_slice.7($const34.5, $const36.6, func=$38build_slice.7, args=(Var($const34.5, utils.py:1082), Var($const36.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,500 - DEBUG - on stmt: y[slice(None, None, None)] = $22call.3
2024-06-28 20:38:19,500 - DEBUG - on stmt: $const44.9 = const(NoneType, None)
2024-06-28 20:38:19,500 - DEBUG - on stmt: $46return_value.10 = cast(value=$const44.9)
2024-06-28 20:38:19,500 - DEBUG - on stmt: return $46return_value.10
2024-06-28 20:38:19,500 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x7f7a67083690>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x7f7a67083d90>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x7f7a67083e50>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x7f7a67088250>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a670832d0>,
                                  0)],
             '$const34.5': [(<numba.core.ir.Assign object at 0x7f7a67083a10>,
                             0)],
             '$const36.6': [(<numba.core.ir.Assign object at 0x7f7a67083b90>,
                             0)],
             '$const44.9': [(<numba.core.ir.Assign object at 0x7f7a670880d0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a67082f50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f7a67083050>, 0)]})
2024-06-28 20:38:19,501 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a67088d90>
2024-06-28 20:38:19,516 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:19,516 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:19,516 - DEBUG - stack: []
2024-06-28 20:38:19,516 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:19,516 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-28 20:38:19,516 - DEBUG - stack []
2024-06-28 20:38:19,516 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-28 20:38:19,516 - DEBUG - stack []
2024-06-28 20:38:19,517 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-28 20:38:19,517 - DEBUG - stack []
2024-06-28 20:38:19,517 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-28 20:38:19,517 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:19,517 - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
2024-06-28 20:38:19,517 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:19,517 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:19,517 - DEBUG - stack []
2024-06-28 20:38:19,517 - DEBUG - dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
2024-06-28 20:38:19,517 - DEBUG - stack ['$18load_global.2']
2024-06-28 20:38:19,517 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-28 20:38:19,517 - DEBUG - stack ['$null$30.3', '$30load_method.4']
2024-06-28 20:38:19,517 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-28 20:38:19,517 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
2024-06-28 20:38:19,517 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
2024-06-28 20:38:19,518 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
2024-06-28 20:38:19,518 - DEBUG - dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
2024-06-28 20:38:19,518 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:19,518 - DEBUG - dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
2024-06-28 20:38:19,518 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:19,518 - DEBUG - dispatch pc=82, inst=CALL(arg=2, lineno=3)
2024-06-28 20:38:19,518 - DEBUG - stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
2024-06-28 20:38:19,518 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
2024-06-28 20:38:19,518 - DEBUG - stack ['$82call.8']
2024-06-28 20:38:19,518 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-28 20:38:19,518 - DEBUG - stack []
2024-06-28 20:38:19,518 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-28 20:38:19,518 - DEBUG - stack ['$const94.9']
2024-06-28 20:38:19,518 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-28 20:38:19,518 - DEBUG - stack ['$const94.9', '$out096.10']
2024-06-28 20:38:19,518 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-28 20:38:19,519 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11']
2024-06-28 20:38:19,519 - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
2024-06-28 20:38:19,519 - DEBUG - stack ['$const94.9', '$out096.10', '$const98.11', '$const100.12']
2024-06-28 20:38:19,519 - DEBUG - dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
2024-06-28 20:38:19,519 - DEBUG - stack ['$const94.9', '$out096.10', '$102build_slice.14']
2024-06-28 20:38:19,519 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-28 20:38:19,519 - DEBUG - stack []
2024-06-28 20:38:19,519 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-28 20:38:19,519 - DEBUG - stack ['$const108.15']
2024-06-28 20:38:19,519 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-28 20:38:19,519 - DEBUG - stack ['$const108.15', '$out0110.16']
2024-06-28 20:38:19,519 - DEBUG - dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-28 20:38:19,519 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17']
2024-06-28 20:38:19,519 - DEBUG - dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
2024-06-28 20:38:19,519 - DEBUG - stack ['$const108.15', '$out0110.16', '$const112.17', '$const114.18']
2024-06-28 20:38:19,519 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
2024-06-28 20:38:19,520 - DEBUG - stack ['$const108.15', '$out0110.16', '$116build_slice.20']
2024-06-28 20:38:19,520 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-28 20:38:19,520 - DEBUG - stack []
2024-06-28 20:38:19,520 - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-28 20:38:19,520 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-28 20:38:19,520 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:19,520 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
2024-06-28 20:38:19,520 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-28 20:38:19,520 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25']
2024-06-28 20:38:19,520 - DEBUG - dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:19,520 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:19,520 - DEBUG - dispatch pc=154, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:19,520 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25', '$const148.26']
2024-06-28 20:38:19,520 - DEBUG - dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-28 20:38:19,520 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154call.27']
2024-06-28 20:38:19,521 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-28 20:38:19,521 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
2024-06-28 20:38:19,521 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:19,521 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
2024-06-28 20:38:19,521 - DEBUG - dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-28 20:38:19,521 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30']
2024-06-28 20:38:19,521 - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-28 20:38:19,521 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
2024-06-28 20:38:19,521 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-28 20:38:19,521 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
2024-06-28 20:38:19,521 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-28 20:38:19,521 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34']
2024-06-28 20:38:19,521 - DEBUG - dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:19,521 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:19,521 - DEBUG - dispatch pc=200, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:19,522 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34', '$const194.35']
2024-06-28 20:38:19,522 - DEBUG - dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
2024-06-28 20:38:19,522 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
2024-06-28 20:38:19,522 - DEBUG - dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
2024-06-28 20:38:19,522 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:19,522 - DEBUG - dispatch pc=218, inst=CALL(arg=2, lineno=6)
2024-06-28 20:38:19,522 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
2024-06-28 20:38:19,522 - DEBUG - dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
2024-06-28 20:38:19,522 - DEBUG - stack ['$218call.38']
2024-06-28 20:38:19,522 - DEBUG - end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
2024-06-28 20:38:19,522 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:19,522 - DEBUG - stack: ['$phi230.0']
2024-06-28 20:38:19,522 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-28 20:38:19,522 - DEBUG - dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
2024-06-28 20:38:19,522 - DEBUG - stack ['$phi230.0']
2024-06-28 20:38:19,523 - DEBUG - end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:19,523 - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:19,523 - DEBUG - stack: []
2024-06-28 20:38:19,523 - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=0)
2024-06-28 20:38:19,523 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-28 20:38:19,523 - DEBUG - stack []
2024-06-28 20:38:19,523 - DEBUG - dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-28 20:38:19,523 - DEBUG - stack ['$out0240.0']
2024-06-28 20:38:19,523 - DEBUG - end state. edges=[]
2024-06-28 20:38:19,523 - DEBUG - pending: deque([State(pc_initial=232 nstack_initial=2)])
2024-06-28 20:38:19,523 - DEBUG - stack: ['$phi232.0', '$phi232.1']
2024-06-28 20:38:19,523 - DEBUG - state.pc_initial: State(pc_initial=232 nstack_initial=2)
2024-06-28 20:38:19,523 - DEBUG - dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
2024-06-28 20:38:19,524 - DEBUG - stack ['$phi232.0', '$phi232.1']
2024-06-28 20:38:19,524 - DEBUG - dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-28 20:38:19,524 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:19,524 - DEBUG - dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
2024-06-28 20:38:19,524 - DEBUG - stack ['$phi232.0', '$const234.2']
2024-06-28 20:38:19,524 - DEBUG - dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
2024-06-28 20:38:19,524 - DEBUG - stack ['$phi232.0']
2024-06-28 20:38:19,524 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
2024-06-28 20:38:19,524 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2024-06-28 20:38:19,524 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:19,524 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
2024-06-28 20:38:19,524 - DEBUG - defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
2024-06-28 20:38:19,524 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:19,525 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:19,525 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:19,526 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
2024-06-28 20:38:19,526 - DEBUG - keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
2024-06-28 20:38:19,526 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
2024-06-28 20:38:19,526 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:19,526 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11'}), (100, {'res': '$const100.12'}), (102, {'start': '$const98.11', 'stop': '$const100.12', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9'}), (106, {}), (108, {'res': '$const108.15'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17'}), (114, {'res': '$const114.18'}), (116, {'start': '$const112.17', 'stop': '$const114.18', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25'}), (148, {'res': '$const148.26'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25', '$const148.26'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30'}), (170, {'index': '$const168.30', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34'}), (194, {'res': '$const194.35'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34', '$const194.35'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
2024-06-28 20:38:19,526 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
2024-06-28 20:38:19,527 - DEBUG - block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2'}), (236, {'value': '$const234.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
2024-06-28 20:38:19,527 - DEBUG - block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:19,528 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool_) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9 = const(int, 0)               ['$const94.9']
    $const98.11 = const(NoneType, None)      ['$const98.11']
    $const100.12 = const(int, 1)             ['$const100.12']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11, $const100.12, func=$102build_slice.13, args=(Var($const98.11, <string>:4), Var($const100.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12', '$const98.11']
    out0[$102build_slice.14] = $const94.9    ['$102build_slice.14', '$const94.9', 'out0']
    $const108.15 = const(int, 0)             ['$const108.15']
    $const112.17 = const(int, -1)            ['$const112.17']
    $const114.18 = const(NoneType, None)     ['$const114.18']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17, $const114.18, func=$116build_slice.19, args=(Var($const112.17, <string>:5), Var($const114.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17', '$const114.18']
    out0[$116build_slice.20] = $const108.15  ['$116build_slice.20', '$const108.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25 = const(int, 0)             ['$const146.25']
    $const148.26 = const(int, -1)            ['$const148.26']
    $154call.27 = call $134load_global.23($const146.25, $const148.26, func=$134load_global.23, args=[Var($const146.25, <string>:6), Var($const148.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25', '$const148.26']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30 = const(int, 0)             ['$const168.30']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34 = const(int, 0)             ['$const192.34']
    $const194.35 = const(int, 1)             ['$const194.35']
    $200call.36 = call $180load_global.32($const192.34, $const194.35, func=$180load_global.32, args=[Var($const192.34, <string>:6), Var($const194.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34', '$const194.35']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

2024-06-28 20:38:19,536 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:19,536 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a670bfad0>
2024-06-28 20:38:19,536 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:19,536 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-28 20:38:19,536 - DEBUG - on stmt: $18load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:19,536 - DEBUG - on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
2024-06-28 20:38:19,536 - DEBUG - on stmt: $54load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:19,536 - DEBUG - on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool_)
2024-06-28 20:38:19,536 - DEBUG - on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,536 - DEBUG - on stmt: $const94.9.1 = const(int, 0)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $const98.11.1 = const(NoneType, None)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $const100.12.1 = const(int, 1)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.1, $const100.12.1, func=$102build_slice.13.1, args=(Var($const98.11.1, <string>:4), Var($const100.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,537 - DEBUG - on stmt: out0[$102build_slice.14.1] = $const94.9.1
2024-06-28 20:38:19,537 - DEBUG - on stmt: $const108.15.1 = const(int, 0)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $const112.17.1 = const(int, -1)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $const114.18.1 = const(NoneType, None)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.1, $const114.18.1, func=$116build_slice.19.1, args=(Var($const112.17.1, <string>:5), Var($const114.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,537 - DEBUG - on stmt: out0[$116build_slice.20.1] = $const108.15.1
2024-06-28 20:38:19,537 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $134load_global.23.1 = global(min: <built-in function min>)
2024-06-28 20:38:19,537 - DEBUG - on stmt: $const146.25.1 = const(int, 0)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $const148.26.1 = const(int, -1)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.1, $const148.26.1, func=$134load_global.23.1, args=[Var($const146.25.1, <string>:6), Var($const148.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $const168.30.1 = const(int, 0)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.1, fn=<built-in function getitem>)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $180load_global.32.1 = global(max: <built-in function max>)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $const192.34.1 = const(int, 0)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $const194.35.1 = const(int, 1)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.1, $const194.35.1, func=$180load_global.32.1, args=[Var($const192.34.1, <string>:6), Var($const194.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
2024-06-28 20:38:19,538 - DEBUG - on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
2024-06-28 20:38:19,538 - DEBUG - on stmt: $phi230.0.1 = $228get_iter.39.1
2024-06-28 20:38:19,539 - DEBUG - on stmt: jump 230
2024-06-28 20:38:19,539 - DEBUG - ==== SSA block analysis pass on 230
2024-06-28 20:38:19,539 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a670bfad0>
2024-06-28 20:38:19,539 - DEBUG - on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
2024-06-28 20:38:19,539 - DEBUG - on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
2024-06-28 20:38:19,539 - DEBUG - on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
2024-06-28 20:38:19,539 - DEBUG - on stmt: $phi232.1.1 = $230for_iter.2.1
2024-06-28 20:38:19,539 - DEBUG - on stmt: branch $230for_iter.3.1, 232, 242
2024-06-28 20:38:19,539 - DEBUG - ==== SSA block analysis pass on 232
2024-06-28 20:38:19,539 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a670bfad0>
2024-06-28 20:38:19,539 - DEBUG - on stmt: index00 = $phi232.1.1
2024-06-28 20:38:19,539 - DEBUG - on stmt: jump 240
2024-06-28 20:38:19,539 - DEBUG - ==== SSA block analysis pass on 242
2024-06-28 20:38:19,539 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a670bfad0>
2024-06-28 20:38:19,539 - DEBUG - on stmt: $242return_value.1.1 = cast(value=out0)
2024-06-28 20:38:19,539 - DEBUG - on stmt: return $242return_value.1.1
2024-06-28 20:38:19,539 - DEBUG - ==== SSA block analysis pass on 240
2024-06-28 20:38:19,540 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a670bfad0>
2024-06-28 20:38:19,540 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:19,540 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-28 20:38:19,540 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-28 20:38:19,540 - DEBUG - on stmt: $const20.4 = const(int, -1)
2024-06-28 20:38:19,540 - DEBUG - on stmt: stencil_index.1 = $const20.4 + index00
2024-06-28 20:38:19,540 - DEBUG - on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-28 20:38:19,540 - DEBUG - on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
2024-06-28 20:38:19,540 - DEBUG - on stmt: $const40.8 = const(int, 0)
2024-06-28 20:38:19,540 - DEBUG - on stmt: stencil_index.2 = $const40.8 + index00
2024-06-28 20:38:19,540 - DEBUG - on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-28 20:38:19,540 - DEBUG - on stmt: $const54.11 = const(int, 1)
2024-06-28 20:38:19,540 - DEBUG - on stmt: stencil_index.3 = $const54.11 + index00
2024-06-28 20:38:19,541 - DEBUG - on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-28 20:38:19,541 - DEBUG - on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
2024-06-28 20:38:19,541 - DEBUG - on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
2024-06-28 20:38:19,541 - DEBUG - on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
2024-06-28 20:38:19,541 - DEBUG - on stmt: out0[index00] = $76return_value.15
2024-06-28 20:38:19,541 - DEBUG - on stmt: jump 241
2024-06-28 20:38:19,541 - DEBUG - ==== SSA block analysis pass on 241
2024-06-28 20:38:19,541 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a670bfad0>
2024-06-28 20:38:19,541 - DEBUG - on stmt: jump 230
2024-06-28 20:38:19,542 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x7f7a670b9790>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x7f7a670b9910>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x7f7a670ba250>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x7f7a670ba3d0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7f7a670ba5d0>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x7f7a670ba750>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x7f7a670bae10>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7f7a670bb090>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7f7a670bb550>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x7f7a670bb7d0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x7f7a670b8250>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x7f7a670bbe50>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x7f7a670bc2d0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x7f7a670bc550>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a670a7050>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x7f7a670bc710>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x7f7a670bc890>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x7f7a670bca10>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x7f7a670bd610>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x7f7a670b8510>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x7f7a6708a4d0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a670a72d0>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x7f7a670b8890>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f7a670a7590>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x7f7a670a4890>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x7f7a670b8ad0>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x7f7a670a5b10>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a670a6e50>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x7f7a670a51d0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x7f7a670bc050>,
                                     0)],
             '$const100.12.1': [(<numba.core.ir.Assign object at 0x7f7a670b9590>,
                                 0)],
             '$const108.15.1': [(<numba.core.ir.Assign object at 0x7f7a670b9b90>,
                                 0)],
             '$const112.17.1': [(<numba.core.ir.Assign object at 0x7f7a670b9ed0>,
                                 0)],
             '$const114.18.1': [(<numba.core.ir.Assign object at 0x7f7a670ba090>,
                                 0)],
             '$const146.25.1': [(<numba.core.ir.Assign object at 0x7f7a670ba990>,
                                 0)],
             '$const148.26.1': [(<numba.core.ir.Assign object at 0x7f7a670bab50>,
                                 0)],
             '$const168.30.1': [(<numba.core.ir.Assign object at 0x7f7a670bb350>,
                                 0)],
             '$const192.34.1': [(<numba.core.ir.Assign object at 0x7f7a670bba50>,
                                 0)],
             '$const194.35.1': [(<numba.core.ir.Assign object at 0x7f7a670bbc10>,
                                 0)],
             '$const20.4': [(<numba.core.ir.Assign object at 0x7f7a6701b450>,
                             240)],
             '$const40.8': [(<numba.core.ir.Assign object at 0x7f7a67088690>,
                             240)],
             '$const54.11': [(<numba.core.ir.Assign object at 0x7f7a6709f290>,
                              240)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a6709c190>,
                            240)],
             '$const94.9.1': [(<numba.core.ir.Assign object at 0x7f7a670b9050>,
                               0)],
             '$const98.11.1': [(<numba.core.ir.Assign object at 0x7f7a670b93d0>,
                                0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x7f7a670b8090>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x7f7a670bcad0>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7f7a670b7f10>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7f7a670bcd90>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x7f7a670b8d50>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7f7a670a6dd0>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7f7a670a6f90>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7f7a670a7290>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7f7a670a7510>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a670b7bd0>, 0)]})
2024-06-28 20:38:19,542 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a670bfad0>
2024-06-28 20:38:20,156 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:20,156 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:20,156 - DEBUG - stack: []
2024-06-28 20:38:20,156 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:20,157 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-06-28 20:38:20,157 - DEBUG - stack []
2024-06-28 20:38:20,157 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-06-28 20:38:20,157 - DEBUG - stack []
2024-06-28 20:38:20,157 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:20,157 - DEBUG - stack []
2024-06-28 20:38:20,157 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:20,157 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:20,157 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:20,157 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-28 20:38:20,157 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-06-28 20:38:20,157 - DEBUG - stack ['$8binary_subscr.2']
2024-06-28 20:38:20,158 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-06-28 20:38:20,158 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-06-28 20:38:20,158 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:20,158 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-06-28 20:38:20,158 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-06-28 20:38:20,158 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-06-28 20:38:20,158 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-06-28 20:38:20,158 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-06-28 20:38:20,158 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-06-28 20:38:20,159 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-06-28 20:38:20,159 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:20,159 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-06-28 20:38:20,159 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-06-28 20:38:20,159 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-06-28 20:38:20,159 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:20,159 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-06-28 20:38:20,159 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:20,159 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-06-28 20:38:20,159 - DEBUG - dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-06-28 20:38:20,159 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-06-28 20:38:20,159 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-06-28 20:38:20,160 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-06-28 20:38:20,160 - DEBUG - dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-06-28 20:38:20,160 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-06-28 20:38:20,160 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:20,160 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-06-28 20:38:20,160 - DEBUG - dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-06-28 20:38:20,160 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-06-28 20:38:20,160 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-06-28 20:38:20,160 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-06-28 20:38:20,160 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-06-28 20:38:20,160 - DEBUG - stack ['$8binary_subscr.2', '$112call.19']
2024-06-28 20:38:20,160 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-06-28 20:38:20,160 - DEBUG - stack ['$122compare_op.20']
2024-06-28 20:38:20,161 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:20,161 - DEBUG - stack ['$122compare_op.20', '$peaks128.21']
2024-06-28 20:38:20,161 - DEBUG - dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:20,161 - DEBUG - stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-06-28 20:38:20,161 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-06-28 20:38:20,161 - DEBUG - stack []
2024-06-28 20:38:20,161 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:20,161 - DEBUG - stack ['$peaks136.23']
2024-06-28 20:38:20,161 - DEBUG - dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-06-28 20:38:20,161 - DEBUG - stack ['$peaks136.23', '$const138.24']
2024-06-28 20:38:20,161 - DEBUG - dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-06-28 20:38:20,161 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-06-28 20:38:20,161 - DEBUG - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:20,161 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-06-28 20:38:20,161 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:20,162 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-06-28 20:38:20,162 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:20,162 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-06-28 20:38:20,162 - DEBUG - dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:20,162 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-06-28 20:38:20,162 - DEBUG - dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-06-28 20:38:20,162 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-06-28 20:38:20,162 - DEBUG - dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-06-28 20:38:20,163 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-06-28 20:38:20,163 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:20,163 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-06-28 20:38:20,163 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-06-28 20:38:20,163 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-06-28 20:38:20,163 - DEBUG - dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-06-28 20:38:20,163 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-06-28 20:38:20,163 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-06-28 20:38:20,163 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-06-28 20:38:20,163 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:20,163 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-06-28 20:38:20,164 - DEBUG - dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-06-28 20:38:20,164 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-06-28 20:38:20,164 - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:20,164 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-06-28 20:38:20,164 - DEBUG - dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:20,164 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-06-28 20:38:20,164 - DEBUG - dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-06-28 20:38:20,164 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-06-28 20:38:20,164 - DEBUG - dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-06-28 20:38:20,164 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-06-28 20:38:20,164 - DEBUG - dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-06-28 20:38:20,165 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-06-28 20:38:20,165 - DEBUG - dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:20,165 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-06-28 20:38:20,165 - DEBUG - dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-06-28 20:38:20,165 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-06-28 20:38:20,165 - DEBUG - dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-06-28 20:38:20,165 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-06-28 20:38:20,165 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-06-28 20:38:20,165 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-06-28 20:38:20,165 - DEBUG - dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-06-28 20:38:20,165 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-06-28 20:38:20,165 - DEBUG - dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-06-28 20:38:20,165 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-06-28 20:38:20,165 - DEBUG - dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-06-28 20:38:20,166 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-06-28 20:38:20,166 - DEBUG - dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-06-28 20:38:20,166 - DEBUG - stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-06-28 20:38:20,166 - DEBUG - dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-06-28 20:38:20,166 - DEBUG - stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-06-28 20:38:20,166 - DEBUG - dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:20,166 - DEBUG - stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-06-28 20:38:20,166 - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-06-28 20:38:20,166 - DEBUG - stack []
2024-06-28 20:38:20,166 - DEBUG - dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-06-28 20:38:20,166 - DEBUG - stack ['$peaks296.50']
2024-06-28 20:38:20,166 - DEBUG - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-06-28 20:38:20,166 - DEBUG - stack ['$peaks296.50', '$const298.51']
2024-06-28 20:38:20,166 - DEBUG - dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-06-28 20:38:20,166 - DEBUG - stack ['$300binary_subscr.52']
2024-06-28 20:38:20,167 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,167 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-06-28 20:38:20,167 - DEBUG - stack: []
2024-06-28 20:38:20,167 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-06-28 20:38:20,167 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-06-28 20:38:20,167 - DEBUG - stack []
2024-06-28 20:38:20,167 - DEBUG - dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-06-28 20:38:20,167 - DEBUG - stack ['$wait312.0']
2024-06-28 20:38:20,167 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-06-28 20:38:20,167 - DEBUG - stack ['$wait312.0', '$const314.1']
2024-06-28 20:38:20,167 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-06-28 20:38:20,167 - DEBUG - stack ['$binop_add316.2']
2024-06-28 20:38:20,167 - DEBUG - dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-06-28 20:38:20,167 - DEBUG - stack []
2024-06-28 20:38:20,168 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,168 - DEBUG - pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:20,168 - DEBUG - stack: []
2024-06-28 20:38:20,168 - DEBUG - state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-06-28 20:38:20,168 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-06-28 20:38:20,168 - DEBUG - stack []
2024-06-28 20:38:20,168 - DEBUG - dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-06-28 20:38:20,168 - DEBUG - stack ['$const324.0']
2024-06-28 20:38:20,168 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,168 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:20,168 - DEBUG - stack: []
2024-06-28 20:38:20,168 - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-06-28 20:38:20,168 - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-28 20:38:20,168 - DEBUG - stack []
2024-06-28 20:38:20,168 - DEBUG - dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-28 20:38:20,168 - DEBUG - stack ['$n328.0']
2024-06-28 20:38:20,169 - DEBUG - dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-06-28 20:38:20,169 - DEBUG - stack ['$n328.0', '$x330.1']
2024-06-28 20:38:20,169 - DEBUG - dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-28 20:38:20,169 - DEBUG - stack ['$n328.0', '$332load_attr.2']
2024-06-28 20:38:20,169 - DEBUG - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-28 20:38:20,169 - DEBUG - stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-06-28 20:38:20,169 - DEBUG - dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-06-28 20:38:20,169 - DEBUG - stack ['$n328.0', '$344binary_subscr.4']
2024-06-28 20:38:20,169 - DEBUG - dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-06-28 20:38:20,169 - DEBUG - stack ['$354compare_op.5']
2024-06-28 20:38:20,169 - DEBUG - end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,169 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-06-28 20:38:20,169 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-06-28 20:38:20,169 - DEBUG - stack: []
2024-06-28 20:38:20,169 - DEBUG - state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-06-28 20:38:20,170 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-06-28 20:38:20,170 - DEBUG - stack []
2024-06-28 20:38:20,170 - DEBUG - dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-06-28 20:38:20,170 - DEBUG - stack ['$null$362.1', '$362load_global.0']
2024-06-28 20:38:20,170 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-28 20:38:20,170 - DEBUG - stack ['$null$362.1', '$374load_attr.2']
2024-06-28 20:38:20,170 - DEBUG - dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-06-28 20:38:20,170 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-06-28 20:38:20,170 - DEBUG - dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-28 20:38:20,170 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-06-28 20:38:20,170 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-28 20:38:20,170 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-06-28 20:38:20,170 - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-06-28 20:38:20,170 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-06-28 20:38:20,171 - DEBUG - dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-06-28 20:38:20,171 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-06-28 20:38:20,171 - DEBUG - dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-06-28 20:38:20,171 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-06-28 20:38:20,171 - DEBUG - dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-06-28 20:38:20,171 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-06-28 20:38:20,171 - DEBUG - dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-06-28 20:38:20,171 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-06-28 20:38:20,171 - DEBUG - dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-28 20:38:20,171 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-06-28 20:38:20,171 - DEBUG - dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-06-28 20:38:20,171 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-06-28 20:38:20,171 - DEBUG - dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-06-28 20:38:20,171 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-06-28 20:38:20,171 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-28 20:38:20,172 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-06-28 20:38:20,172 - DEBUG - dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-06-28 20:38:20,172 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-06-28 20:38:20,172 - DEBUG - dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-28 20:38:20,172 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-06-28 20:38:20,172 - DEBUG - dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-28 20:38:20,172 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-06-28 20:38:20,172 - DEBUG - dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-06-28 20:38:20,172 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-06-28 20:38:20,172 - DEBUG - dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-06-28 20:38:20,172 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-06-28 20:38:20,172 - DEBUG - dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-06-28 20:38:20,172 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-06-28 20:38:20,172 - DEBUG - dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-28 20:38:20,172 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-06-28 20:38:20,173 - DEBUG - dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-06-28 20:38:20,173 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-06-28 20:38:20,173 - DEBUG - dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-06-28 20:38:20,173 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-06-28 20:38:20,173 - DEBUG - dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-06-28 20:38:20,173 - DEBUG - stack ['$496call.24']
2024-06-28 20:38:20,173 - DEBUG - dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-06-28 20:38:20,173 - DEBUG - stack []
2024-06-28 20:38:20,173 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-28 20:38:20,173 - DEBUG - stack ['$x508.25']
2024-06-28 20:38:20,173 - DEBUG - dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-06-28 20:38:20,173 - DEBUG - stack ['$x508.25', '$n510.26']
2024-06-28 20:38:20,173 - DEBUG - dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-06-28 20:38:20,173 - DEBUG - stack ['$512binary_subscr.27']
2024-06-28 20:38:20,173 - DEBUG - dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-06-28 20:38:20,174 - DEBUG - stack ['$512binary_subscr.27', '$maxn522.28']
2024-06-28 20:38:20,174 - DEBUG - dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-06-28 20:38:20,174 - DEBUG - stack ['$524compare_op.29']
2024-06-28 20:38:20,174 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-28 20:38:20,174 - DEBUG - stack ['$524compare_op.29', '$peaks530.30']
2024-06-28 20:38:20,174 - DEBUG - dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-06-28 20:38:20,174 - DEBUG - stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-06-28 20:38:20,174 - DEBUG - dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-06-28 20:38:20,174 - DEBUG - stack []
2024-06-28 20:38:20,175 - DEBUG - dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-06-28 20:38:20,175 - DEBUG - stack ['$peaks538.32']
2024-06-28 20:38:20,175 - DEBUG - dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-06-28 20:38:20,175 - DEBUG - stack ['$peaks538.32', '$n540.33']
2024-06-28 20:38:20,175 - DEBUG - dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-06-28 20:38:20,175 - DEBUG - stack ['$542binary_subscr.34']
2024-06-28 20:38:20,175 - DEBUG - end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,175 - DEBUG - pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-06-28 20:38:20,175 - DEBUG - stack: []
2024-06-28 20:38:20,175 - DEBUG - state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-06-28 20:38:20,175 - DEBUG - dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-06-28 20:38:20,176 - DEBUG - stack []
2024-06-28 20:38:20,176 - DEBUG - dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:20,176 - DEBUG - stack ['$const852.0']
2024-06-28 20:38:20,176 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,176 - DEBUG - pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-06-28 20:38:20,176 - DEBUG - stack: []
2024-06-28 20:38:20,176 - DEBUG - state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-06-28 20:38:20,176 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-06-28 20:38:20,176 - DEBUG - stack []
2024-06-28 20:38:20,176 - DEBUG - dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-06-28 20:38:20,176 - DEBUG - stack ['$n554.0']
2024-06-28 20:38:20,176 - DEBUG - dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-06-28 20:38:20,176 - DEBUG - stack ['$n554.0', '$const556.1']
2024-06-28 20:38:20,176 - DEBUG - dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-06-28 20:38:20,177 - DEBUG - stack ['$binop_iadd558.2']
2024-06-28 20:38:20,177 - DEBUG - dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-06-28 20:38:20,177 - DEBUG - stack []
2024-06-28 20:38:20,177 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,177 - DEBUG - pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:20,177 - DEBUG - stack: []
2024-06-28 20:38:20,177 - DEBUG - state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-06-28 20:38:20,177 - DEBUG - dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-06-28 20:38:20,177 - DEBUG - stack []
2024-06-28 20:38:20,177 - DEBUG - dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-06-28 20:38:20,177 - DEBUG - stack ['$null$566.1', '$566load_global.0']
2024-06-28 20:38:20,177 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-28 20:38:20,178 - DEBUG - stack ['$null$566.1', '$578load_attr.2']
2024-06-28 20:38:20,178 - DEBUG - dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-06-28 20:38:20,178 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-06-28 20:38:20,178 - DEBUG - dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-28 20:38:20,178 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-06-28 20:38:20,178 - DEBUG - dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-28 20:38:20,178 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-06-28 20:38:20,178 - DEBUG - dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-06-28 20:38:20,178 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-06-28 20:38:20,178 - DEBUG - dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-06-28 20:38:20,178 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-06-28 20:38:20,178 - DEBUG - dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-06-28 20:38:20,178 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-06-28 20:38:20,178 - DEBUG - dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-06-28 20:38:20,178 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-06-28 20:38:20,179 - DEBUG - dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-06-28 20:38:20,179 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-06-28 20:38:20,179 - DEBUG - dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-28 20:38:20,179 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-06-28 20:38:20,179 - DEBUG - dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-06-28 20:38:20,179 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-06-28 20:38:20,179 - DEBUG - dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-06-28 20:38:20,179 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-06-28 20:38:20,179 - DEBUG - dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-28 20:38:20,179 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-06-28 20:38:20,179 - DEBUG - dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-06-28 20:38:20,179 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-06-28 20:38:20,179 - DEBUG - dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-28 20:38:20,179 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-06-28 20:38:20,180 - DEBUG - dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-28 20:38:20,180 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-06-28 20:38:20,180 - DEBUG - dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-06-28 20:38:20,180 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-06-28 20:38:20,180 - DEBUG - dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-06-28 20:38:20,180 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-06-28 20:38:20,180 - DEBUG - dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-06-28 20:38:20,180 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-06-28 20:38:20,180 - DEBUG - dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-28 20:38:20,180 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-06-28 20:38:20,180 - DEBUG - dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-06-28 20:38:20,180 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-06-28 20:38:20,180 - DEBUG - dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-06-28 20:38:20,180 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-06-28 20:38:20,181 - DEBUG - dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-06-28 20:38:20,181 - DEBUG - stack ['$700call.24']
2024-06-28 20:38:20,181 - DEBUG - dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-06-28 20:38:20,181 - DEBUG - stack []
2024-06-28 20:38:20,181 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-28 20:38:20,181 - DEBUG - stack ['$peaks712.25']
2024-06-28 20:38:20,181 - DEBUG - dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-06-28 20:38:20,181 - DEBUG - stack ['$peaks712.25', '$n714.26']
2024-06-28 20:38:20,181 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-06-28 20:38:20,181 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-06-28 20:38:20,181 - DEBUG - dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:20,181 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-06-28 20:38:20,181 - DEBUG - dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-06-28 20:38:20,181 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-06-28 20:38:20,181 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-28 20:38:20,181 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-06-28 20:38:20,182 - DEBUG - dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:20,182 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-06-28 20:38:20,182 - DEBUG - dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-06-28 20:38:20,182 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-06-28 20:38:20,182 - DEBUG - dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-06-28 20:38:20,182 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-06-28 20:38:20,182 - DEBUG - dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-06-28 20:38:20,182 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-06-28 20:38:20,182 - DEBUG - dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-06-28 20:38:20,182 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-06-28 20:38:20,182 - DEBUG - dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-06-28 20:38:20,182 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-06-28 20:38:20,182 - DEBUG - dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-06-28 20:38:20,182 - DEBUG - stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-06-28 20:38:20,182 - DEBUG - dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-06-28 20:38:20,183 - DEBUG - stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-06-28 20:38:20,183 - DEBUG - dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:20,183 - DEBUG - stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-06-28 20:38:20,183 - DEBUG - dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-06-28 20:38:20,183 - DEBUG - stack []
2024-06-28 20:38:20,183 - DEBUG - dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-06-28 20:38:20,183 - DEBUG - stack ['$peaks770.36']
2024-06-28 20:38:20,183 - DEBUG - dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-06-28 20:38:20,183 - DEBUG - stack ['$peaks770.36', '$n772.37']
2024-06-28 20:38:20,183 - DEBUG - dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-06-28 20:38:20,183 - DEBUG - stack ['$774binary_subscr.38']
2024-06-28 20:38:20,183 - DEBUG - end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,183 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-06-28 20:38:20,183 - DEBUG - pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-06-28 20:38:20,184 - DEBUG - stack: []
2024-06-28 20:38:20,184 - DEBUG - state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-06-28 20:38:20,184 - DEBUG - dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-06-28 20:38:20,184 - DEBUG - stack []
2024-06-28 20:38:20,184 - DEBUG - dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-06-28 20:38:20,184 - DEBUG - stack ['$n786.0']
2024-06-28 20:38:20,184 - DEBUG - dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-06-28 20:38:20,184 - DEBUG - stack ['$n786.0', '$const788.1']
2024-06-28 20:38:20,184 - DEBUG - dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-06-28 20:38:20,184 - DEBUG - stack ['$binop_iadd790.2']
2024-06-28 20:38:20,184 - DEBUG - dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-06-28 20:38:20,184 - DEBUG - stack []
2024-06-28 20:38:20,184 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,184 - DEBUG - pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:20,184 - DEBUG - stack: []
2024-06-28 20:38:20,185 - DEBUG - state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-06-28 20:38:20,185 - DEBUG - dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-06-28 20:38:20,185 - DEBUG - stack []
2024-06-28 20:38:20,185 - DEBUG - dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-06-28 20:38:20,185 - DEBUG - stack ['$n798.0']
2024-06-28 20:38:20,185 - DEBUG - dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-06-28 20:38:20,185 - DEBUG - stack ['$n798.0', '$wait800.1']
2024-06-28 20:38:20,185 - DEBUG - dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-06-28 20:38:20,185 - DEBUG - stack ['$n798.0', '$wait800.1', '$const802.2']
2024-06-28 20:38:20,185 - DEBUG - dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-06-28 20:38:20,185 - DEBUG - stack ['$n798.0', '$binop_add804.3']
2024-06-28 20:38:20,185 - DEBUG - dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-06-28 20:38:20,185 - DEBUG - stack ['$binop_iadd808.4']
2024-06-28 20:38:20,185 - DEBUG - dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-28 20:38:20,185 - DEBUG - stack []
2024-06-28 20:38:20,185 - DEBUG - dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-28 20:38:20,186 - DEBUG - stack ['$n814.5']
2024-06-28 20:38:20,186 - DEBUG - dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-06-28 20:38:20,186 - DEBUG - stack ['$n814.5', '$x816.6']
2024-06-28 20:38:20,186 - DEBUG - dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-28 20:38:20,186 - DEBUG - stack ['$n814.5', '$818load_attr.7']
2024-06-28 20:38:20,186 - DEBUG - dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-28 20:38:20,186 - DEBUG - stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-06-28 20:38:20,186 - DEBUG - dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-06-28 20:38:20,186 - DEBUG - stack ['$n814.5', '$830binary_subscr.9']
2024-06-28 20:38:20,186 - DEBUG - dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-06-28 20:38:20,186 - DEBUG - stack ['$840compare_op.10']
2024-06-28 20:38:20,186 - DEBUG - end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,186 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:20,186 - DEBUG - pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:20,186 - DEBUG - stack: []
2024-06-28 20:38:20,186 - DEBUG - state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-06-28 20:38:20,187 - DEBUG - dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-06-28 20:38:20,187 - DEBUG - stack []
2024-06-28 20:38:20,187 - DEBUG - dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:20,187 - DEBUG - stack ['$const848.0']
2024-06-28 20:38:20,187 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,187 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:20,187 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:20,187 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-06-28 20:38:20,187 - DEBUG - defmap: {}
2024-06-28 20:38:20,187 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:20,187 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:20,188 - DEBUG - keep phismap: {}
2024-06-28 20:38:20,188 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:20,188 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:20,188 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-06-28 20:38:20,188 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:20,188 - DEBUG - block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:20,188 - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-06-28 20:38:20,188 - DEBUG - block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-06-28 20:38:20,188 - DEBUG - block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:20,188 - DEBUG - block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-06-28 20:38:20,189 - DEBUG - block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:20,189 - DEBUG - block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-06-28 20:38:20,189 - DEBUG - block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,189 - DEBUG - block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,192 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-06-28 20:38:20,205 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:20,206 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,206 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:20,206 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:20,206 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:20,206 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:20,206 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:20,206 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:20,206 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:20,206 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:20,206 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:20,206 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:20,206 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,206 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:20,206 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:20,206 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:20,206 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,207 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:20,207 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:20,207 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,207 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,207 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,207 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:20,207 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,207 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:20,207 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:20,207 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:20,207 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:20,207 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,208 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,209 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,209 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:20,209 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,209 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:20,209 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:20,209 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,209 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:20,209 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:20,209 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:20,209 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,209 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,209 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:20,210 - DEBUG - ==== SSA block analysis pass on 312
2024-06-28 20:38:20,210 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,210 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:20,210 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:20,210 - DEBUG - on stmt: jump 328
2024-06-28 20:38:20,210 - DEBUG - ==== SSA block analysis pass on 324
2024-06-28 20:38:20,210 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,210 - DEBUG - on stmt: n = const(int, 1)
2024-06-28 20:38:20,210 - DEBUG - on stmt: jump 328
2024-06-28 20:38:20,210 - DEBUG - ==== SSA block analysis pass on 328
2024-06-28 20:38:20,210 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,210 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,210 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:20,210 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:20,211 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:20,211 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,211 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,211 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:20,211 - DEBUG - ==== SSA block analysis pass on 362
2024-06-28 20:38:20,211 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,211 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,211 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:20,211 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:20,211 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:20,211 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:20,211 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,211 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:20,211 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:20,212 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,212 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:20,212 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:20,212 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,212 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,212 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,212 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:20,212 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,212 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,212 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:20,212 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:20,212 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,213 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,213 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,213 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:20,213 - DEBUG - ==== SSA block analysis pass on 554
2024-06-28 20:38:20,213 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,213 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:20,213 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,213 - DEBUG - on stmt: n = $binop_iadd558.2
2024-06-28 20:38:20,213 - DEBUG - on stmt: jump 853
2024-06-28 20:38:20,213 - DEBUG - ==== SSA block analysis pass on 566
2024-06-28 20:38:20,213 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,213 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,213 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:20,213 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:20,214 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:20,214 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:20,214 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,214 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:20,214 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:20,214 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,214 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:20,214 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:20,214 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,214 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,214 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,215 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:20,215 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,215 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,215 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,215 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:20,215 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:20,215 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,215 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:20,215 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,215 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,215 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,215 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:20,215 - DEBUG - ==== SSA block analysis pass on 786
2024-06-28 20:38:20,215 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,216 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:20,216 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,216 - DEBUG - on stmt: n = $binop_iadd790.2
2024-06-28 20:38:20,216 - DEBUG - on stmt: jump 853
2024-06-28 20:38:20,216 - DEBUG - ==== SSA block analysis pass on 798
2024-06-28 20:38:20,216 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,216 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:20,216 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:20,216 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,216 - DEBUG - on stmt: n = $binop_iadd808.4
2024-06-28 20:38:20,216 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,216 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:20,216 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:20,217 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:20,217 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,217 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,217 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:20,217 - DEBUG - ==== SSA block analysis pass on 848
2024-06-28 20:38:20,217 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,217 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:20,217 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:20,217 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:20,217 - DEBUG - ==== SSA block analysis pass on 852
2024-06-28 20:38:20,217 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,217 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:20,217 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:20,218 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:20,218 - DEBUG - ==== SSA block analysis pass on 853
2024-06-28 20:38:20,218 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e51510>
2024-06-28 20:38:20,218 - DEBUG - on stmt: jump 328
2024-06-28 20:38:20,220 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x7f7a66e8c850>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x7f7a66e8cad0>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x7f7a66eb2450>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x7f7a66eb3790>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x7f7a66e8c110>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x7f7a66e7d6d0>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x7f7a66e8f410>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x7f7a66e7fa90>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x7f7a66e7f690>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x7f7a66eb26d0>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x7f7a66e7e8d0>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x7f7a66e7c9d0>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x7f7a66e7e790>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x7f7a66e7e690>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x7f7a66e7dc90>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x7f7a66e7e890>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x7f7a66eb29d0>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x7f7a66e8c3d0>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7f7a66e7cad0>, 0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a66e7c0d0>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f7a66eb3090>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a66e7da50>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x7f7a6708cc50>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66e6ab10>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a66e6aa10>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x7f7a66e6be10>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x7f7a66e6b790>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x7f7a66e6b4d0>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x7f7a66e68c90>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x7f7a66e8ee10>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f7a66eb35d0>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x7f7a66e69610>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x7f7a66e69890>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x7f7a66e68ed0>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f7a66e69ad0>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f7a66e68790>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x7f7a66e68210>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x7f7a675429d0>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x7f7a670890d0>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66e53f50>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a66e53f10>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x7f7a66e533d0>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7f7a66e8e550>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x7f7a66e53590>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x7f7a66e528d0>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x7f7a66e51bd0>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f7a66eb3f10>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x7f7a66e515d0>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x7f7a66e51310>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x7f7a66e50f10>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f7a66e51050>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f7a66e500d0>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f7a66eb2790>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x7f7a66e50b50>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x7f7a66e518d0>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x7f7a66e43c10>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x7f7a66e42450>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x7f7a66e43cd0>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a66eb32d0>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a66e42790>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x7f7a66e41bd0>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x7f7a66e41a50>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x7f7a66e41350>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7f7a66e8e090>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a66eb24d0>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x7f7a66e8ddd0>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x7f7a66e8dcd0>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x7f7a66e8c450>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x7f7a66e7eed0>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x7f7a66e6ad90>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x7f7a66e52d90>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x7f7a66e51e50>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x7f7a66e43450>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x7f7a67089510>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x7f7a66e42c90>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x7f7a66e439d0>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x7f7a66e7d810>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x7f7a66e53cd0>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x7f7a66e6b950>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x7f7a66e52290>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x7f7a66e8cdd0>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x7f7a66e8d350>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x7f7a66e8d8d0>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x7f7a66e7fe50>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x7f7a66e7f490>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x7f7a66e7e110>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x7f7a66e7e3d0>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x7f7a66e7d350>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x7f7a66e6bd10>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x7f7a66e8e910>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x7f7a66e6a710>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x7f7a672de650>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a66e8fd50>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x7f7a66e53350>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x7f7a66e51910>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x7f7a66e8e990>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x7f7a66e41150>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x7f7a66e43250>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x7f7a66e434d0>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x7f7a66e41a90>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x7f7a66e41410>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x7f7a66e50710>, 566)],
             'bool310': [(<numba.core.ir.Assign object at 0x7f7a66e7ce50>, 0)],
             'bool360': [(<numba.core.ir.Assign object at 0x7f7a6710a9d0>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x7f7a67089750>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x7f7a66e42d10>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x7f7a66e41d90>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x7f7a66e8c8d0>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7f7a66e69e50>, 362)],
             'n': [(<numba.core.ir.Assign object at 0x7f7a66e7c710>, 312),
                   (<numba.core.ir.Assign object at 0x7f7a66e7c7d0>, 324),
                   (<numba.core.ir.Assign object at 0x7f7a670884d0>, 554),
                   (<numba.core.ir.Assign object at 0x7f7a66e42bd0>, 786),
                   (<numba.core.ir.Assign object at 0x7f7a66e43b50>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x7f7a66e8fa90>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7f7a66e8f110>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7f7a66e6ff50>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7f7a66e8f610>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7f7a66e6e350>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7f7a66e8f890>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a66ecdfd0>, 0)]})
2024-06-28 20:38:20,220 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a66e69c50>
2024-06-28 20:38:20,220 - DEBUG - Fix SSA violator on var n
2024-06-28 20:38:20,220 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,220 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,220 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:20,220 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:20,221 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:20,221 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:20,221 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:20,221 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:20,221 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:20,221 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:20,221 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:20,221 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:20,221 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,221 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:20,221 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:20,221 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:20,222 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,222 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:20,222 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:20,222 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,222 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,222 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,222 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:20,222 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,222 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:20,222 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:20,222 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:20,223 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,223 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,224 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,224 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:20,224 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,224 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:20,224 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:20,224 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,224 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:20,224 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:20,224 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:20,224 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,224 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,224 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:20,224 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-28 20:38:20,224 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,224 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:20,225 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:20,225 - DEBUG - first assign: n
2024-06-28 20:38:20,225 - DEBUG - replaced with: n = wait + $const314.1
2024-06-28 20:38:20,225 - DEBUG - on stmt: jump 328
2024-06-28 20:38:20,225 - DEBUG - ==== SSA block rewrite pass on 324
2024-06-28 20:38:20,225 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,225 - DEBUG - on stmt: n = const(int, 1)
2024-06-28 20:38:20,225 - DEBUG - replaced with: n.1 = const(int, 1)
2024-06-28 20:38:20,225 - DEBUG - on stmt: jump 328
2024-06-28 20:38:20,225 - DEBUG - ==== SSA block rewrite pass on 328
2024-06-28 20:38:20,225 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,225 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,225 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:20,225 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:20,225 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:20,226 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,226 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,226 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:20,226 - DEBUG - ==== SSA block rewrite pass on 362
2024-06-28 20:38:20,226 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,226 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,226 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:20,226 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:20,226 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:20,226 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:20,226 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,226 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:20,226 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:20,226 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,226 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:20,226 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:20,227 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,227 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,227 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,227 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:20,227 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,227 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,227 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:20,227 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:20,227 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,227 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,227 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,227 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:20,227 - DEBUG - ==== SSA block rewrite pass on 554
2024-06-28 20:38:20,227 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,228 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:20,228 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,228 - DEBUG - on stmt: n = $binop_iadd558.2
2024-06-28 20:38:20,228 - DEBUG - replaced with: n.2 = $binop_iadd558.2
2024-06-28 20:38:20,228 - DEBUG - on stmt: jump 853
2024-06-28 20:38:20,228 - DEBUG - ==== SSA block rewrite pass on 566
2024-06-28 20:38:20,228 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,228 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,228 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:20,228 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:20,228 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:20,228 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:20,228 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,228 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:20,228 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:20,228 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,229 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:20,229 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:20,229 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,229 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,229 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,229 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:20,229 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,229 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,229 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,229 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:20,229 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:20,229 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,229 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:20,229 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,230 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,230 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,230 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:20,230 - DEBUG - ==== SSA block rewrite pass on 786
2024-06-28 20:38:20,230 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,230 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:20,230 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,230 - DEBUG - on stmt: n = $binop_iadd790.2
2024-06-28 20:38:20,230 - DEBUG - replaced with: n.3 = $binop_iadd790.2
2024-06-28 20:38:20,230 - DEBUG - on stmt: jump 853
2024-06-28 20:38:20,230 - DEBUG - ==== SSA block rewrite pass on 798
2024-06-28 20:38:20,230 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,230 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:20,230 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:20,230 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,230 - DEBUG - on stmt: n = $binop_iadd808.4
2024-06-28 20:38:20,231 - DEBUG - replaced with: n.4 = $binop_iadd808.4
2024-06-28 20:38:20,231 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,231 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:20,231 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:20,231 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:20,231 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,231 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,231 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:20,231 - DEBUG - ==== SSA block rewrite pass on 848
2024-06-28 20:38:20,231 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,231 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:20,231 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:20,231 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:20,231 - DEBUG - ==== SSA block rewrite pass on 852
2024-06-28 20:38:20,232 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,232 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:20,232 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:20,232 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:20,232 - DEBUG - ==== SSA block rewrite pass on 853
2024-06-28 20:38:20,232 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e98d10>
2024-06-28 20:38:20,232 - DEBUG - on stmt: jump 328
2024-06-28 20:38:20,232 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x7f7a66e98fd0>],
             324: [<numba.core.ir.Assign object at 0x7f7a66e98190>],
             554: [<numba.core.ir.Assign object at 0x7f7a66e98a50>],
             786: [<numba.core.ir.Assign object at 0x7f7a66e9ab10>],
             798: [<numba.core.ir.Assign object at 0x7f7a66e9a150>]})
2024-06-28 20:38:20,232 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,232 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,232 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:20,232 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:20,232 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:20,232 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:20,232 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:20,233 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:20,233 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:20,233 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,233 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:20,234 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:20,234 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:20,234 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:20,234 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,235 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:20,235 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:20,235 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,235 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,235 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,235 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:20,235 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,235 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:20,235 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:20,235 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,235 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:20,235 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:20,235 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:20,236 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,236 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,236 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:20,236 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-28 20:38:20,236 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,236 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:20,236 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:20,236 - DEBUG - on stmt: jump 328
2024-06-28 20:38:20,236 - DEBUG - ==== SSA block rewrite pass on 324
2024-06-28 20:38:20,236 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,236 - DEBUG - on stmt: n.1 = const(int, 1)
2024-06-28 20:38:20,236 - DEBUG - on stmt: jump 328
2024-06-28 20:38:20,236 - DEBUG - ==== SSA block rewrite pass on 328
2024-06-28 20:38:20,236 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,236 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,236 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:20,237 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:20,237 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:20,237 - DEBUG - find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:20,237 - DEBUG - find_def_from_top label 328
2024-06-28 20:38:20,237 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-06-28 20:38:20,237 - DEBUG - find_def_from_bottom label 312
2024-06-28 20:38:20,237 - DEBUG - incoming_def n = wait + $const314.1
2024-06-28 20:38:20,237 - DEBUG - find_def_from_bottom label 324
2024-06-28 20:38:20,237 - DEBUG - incoming_def n.1 = const(int, 1)
2024-06-28 20:38:20,237 - DEBUG - find_def_from_bottom label 853
2024-06-28 20:38:20,238 - DEBUG - find_def_from_top label 853
2024-06-28 20:38:20,238 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-06-28 20:38:20,238 - DEBUG - find_def_from_bottom label 554
2024-06-28 20:38:20,238 - DEBUG - incoming_def n.2 = $binop_iadd558.2
2024-06-28 20:38:20,238 - DEBUG - find_def_from_bottom label 786
2024-06-28 20:38:20,238 - DEBUG - incoming_def n.3 = $binop_iadd790.2
2024-06-28 20:38:20,238 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-06-28 20:38:20,238 - DEBUG - replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-06-28 20:38:20,238 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,238 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,238 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:20,239 - DEBUG - ==== SSA block rewrite pass on 362
2024-06-28 20:38:20,239 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,239 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,239 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:20,239 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:20,239 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:20,239 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:20,239 - DEBUG - find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-06-28 20:38:20,239 - DEBUG - find_def_from_top label 362
2024-06-28 20:38:20,239 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-06-28 20:38:20,240 - DEBUG - find_def_from_bottom label 328
2024-06-28 20:38:20,240 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-06-28 20:38:20,240 - DEBUG - find_def_from_bottom label 798
2024-06-28 20:38:20,240 - DEBUG - incoming_def n.4 = $binop_iadd808.4
2024-06-28 20:38:20,240 - DEBUG - replaced with: $binop_sub404.9 = n.7 - pre_max
2024-06-28 20:38:20,240 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,240 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:20,240 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:20,240 - DEBUG - find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-06-28 20:38:20,240 - DEBUG - replaced with: $binop_add438.15 = n.7 + post_max
2024-06-28 20:38:20,240 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,241 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:20,241 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:20,241 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,241 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,241 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,241 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:20,241 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,241 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,241 - DEBUG - find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,241 - DEBUG - replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:20,241 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:20,241 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:20,241 - DEBUG - find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-06-28 20:38:20,242 - DEBUG - replaced with: peaks[n.7] = $524compare_op.29
2024-06-28 20:38:20,242 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,242 - DEBUG - find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,242 - DEBUG - replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:20,242 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,242 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,242 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:20,242 - DEBUG - ==== SSA block rewrite pass on 554
2024-06-28 20:38:20,242 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,242 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:20,242 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,242 - DEBUG - find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,242 - DEBUG - find_def_from_top label 554
2024-06-28 20:38:20,242 - DEBUG - idom 362 from label 554
2024-06-28 20:38:20,243 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:20,243 - DEBUG - replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,243 - DEBUG - on stmt: n.2 = $binop_iadd558.2
2024-06-28 20:38:20,243 - DEBUG - on stmt: jump 853
2024-06-28 20:38:20,243 - DEBUG - ==== SSA block rewrite pass on 566
2024-06-28 20:38:20,243 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,243 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,243 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:20,243 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:20,243 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:20,243 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:20,243 - DEBUG - find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-06-28 20:38:20,243 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:20,243 - DEBUG - idom 362 from label 566
2024-06-28 20:38:20,243 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:20,244 - DEBUG - replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-06-28 20:38:20,244 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,244 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:20,244 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:20,244 - DEBUG - find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-06-28 20:38:20,244 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:20,244 - DEBUG - idom 362 from label 566
2024-06-28 20:38:20,244 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:20,244 - DEBUG - replaced with: $binop_add642.15 = n.7 + post_avg
2024-06-28 20:38:20,244 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,244 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:20,244 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:20,244 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,244 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:20,245 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,245 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:20,245 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,245 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,245 - DEBUG - find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,245 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:20,245 - DEBUG - idom 362 from label 566
2024-06-28 20:38:20,245 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:20,245 - DEBUG - replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:20,245 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,245 - DEBUG - find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,245 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:20,245 - DEBUG - idom 362 from label 566
2024-06-28 20:38:20,245 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:20,246 - DEBUG - replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:20,246 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:20,246 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:20,246 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,246 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:20,246 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-06-28 20:38:20,246 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:20,246 - DEBUG - idom 362 from label 566
2024-06-28 20:38:20,246 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:20,246 - DEBUG - replaced with: peaks[n.7] = $binop_iand758.35
2024-06-28 20:38:20,246 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,246 - DEBUG - find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:20,246 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:20,246 - DEBUG - idom 362 from label 566
2024-06-28 20:38:20,246 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:20,247 - DEBUG - replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:20,247 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,247 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,247 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:20,247 - DEBUG - ==== SSA block rewrite pass on 786
2024-06-28 20:38:20,247 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,247 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:20,247 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,247 - DEBUG - find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,247 - DEBUG - find_def_from_top label 786
2024-06-28 20:38:20,247 - DEBUG - idom 566 from label 786
2024-06-28 20:38:20,247 - DEBUG - find_def_from_bottom label 566
2024-06-28 20:38:20,247 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:20,247 - DEBUG - idom 362 from label 566
2024-06-28 20:38:20,247 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:20,247 - DEBUG - replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,248 - DEBUG - on stmt: n.3 = $binop_iadd790.2
2024-06-28 20:38:20,248 - DEBUG - on stmt: jump 853
2024-06-28 20:38:20,248 - DEBUG - ==== SSA block rewrite pass on 798
2024-06-28 20:38:20,248 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,248 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:20,248 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:20,248 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,248 - DEBUG - find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,248 - DEBUG - find_def_from_top label 798
2024-06-28 20:38:20,248 - DEBUG - idom 566 from label 798
2024-06-28 20:38:20,248 - DEBUG - find_def_from_bottom label 566
2024-06-28 20:38:20,248 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:20,248 - DEBUG - idom 362 from label 566
2024-06-28 20:38:20,248 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:20,248 - DEBUG - replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,249 - DEBUG - on stmt: n.4 = $binop_iadd808.4
2024-06-28 20:38:20,249 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:20,249 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:20,249 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:20,249 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:20,249 - DEBUG - find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:20,249 - DEBUG - replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-06-28 20:38:20,249 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,249 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,249 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:20,249 - DEBUG - ==== SSA block rewrite pass on 848
2024-06-28 20:38:20,249 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,249 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:20,249 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:20,249 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:20,250 - DEBUG - ==== SSA block rewrite pass on 852
2024-06-28 20:38:20,250 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,250 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:20,250 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:20,250 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:20,250 - DEBUG - ==== SSA block rewrite pass on 853
2024-06-28 20:38:20,250 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e9b610>
2024-06-28 20:38:20,250 - DEBUG - on stmt: jump 328
2024-06-28 20:38:20,257 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-06-28 20:38:20,257 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:20,257 - DEBUG - stack: []
2024-06-28 20:38:20,257 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:20,257 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-06-28 20:38:20,257 - DEBUG - stack []
2024-06-28 20:38:20,257 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-06-28 20:38:20,258 - DEBUG - stack []
2024-06-28 20:38:20,258 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-06-28 20:38:20,258 - DEBUG - stack []
2024-06-28 20:38:20,258 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-06-28 20:38:20,258 - DEBUG - stack []
2024-06-28 20:38:20,258 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-06-28 20:38:20,258 - DEBUG - stack ['$a6.0']
2024-06-28 20:38:20,258 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-06-28 20:38:20,258 - DEBUG - stack ['$8load_attr.1']
2024-06-28 20:38:20,258 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-06-28 20:38:20,258 - DEBUG - stack ['$8load_attr.1', '$const18.2']
2024-06-28 20:38:20,258 - DEBUG - dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-06-28 20:38:20,258 - DEBUG - stack ['$20compare_op.3']
2024-06-28 20:38:20,258 - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,258 - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:20,258 - DEBUG - stack: []
2024-06-28 20:38:20,259 - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-06-28 20:38:20,259 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-06-28 20:38:20,259 - DEBUG - stack []
2024-06-28 20:38:20,259 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-06-28 20:38:20,259 - DEBUG - stack ['$null$28.1', '$28load_global.0']
2024-06-28 20:38:20,259 - DEBUG - dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-06-28 20:38:20,259 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-06-28 20:38:20,259 - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-06-28 20:38:20,259 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-06-28 20:38:20,259 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-06-28 20:38:20,259 - DEBUG - stack ['$46call.3']
2024-06-28 20:38:20,259 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,259 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:20,259 - DEBUG - stack: []
2024-06-28 20:38:20,259 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-06-28 20:38:20,260 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-06-28 20:38:20,260 - DEBUG - stack []
2024-06-28 20:38:20,260 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-06-28 20:38:20,260 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-06-28 20:38:20,260 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-06-28 20:38:20,260 - DEBUG - stack ['$null$58.1', '$70load_attr.2']
2024-06-28 20:38:20,260 - DEBUG - dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-06-28 20:38:20,260 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-06-28 20:38:20,260 - DEBUG - dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-06-28 20:38:20,260 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-06-28 20:38:20,260 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-06-28 20:38:20,260 - DEBUG - stack ['$86call.4']
2024-06-28 20:38:20,260 - DEBUG - dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-06-28 20:38:20,260 - DEBUG - stack []
2024-06-28 20:38:20,260 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-06-28 20:38:20,261 - DEBUG - stack ['$null$98.6', '$98load_global.5']
2024-06-28 20:38:20,261 - DEBUG - dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-06-28 20:38:20,261 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-06-28 20:38:20,261 - DEBUG - dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-06-28 20:38:20,261 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-06-28 20:38:20,261 - DEBUG - dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-06-28 20:38:20,261 - DEBUG - stack ['$116call.8']
2024-06-28 20:38:20,261 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-06-28 20:38:20,261 - DEBUG - stack ['$null$126.9', '$126load_method.10']
2024-06-28 20:38:20,261 - DEBUG - dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-06-28 20:38:20,261 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-06-28 20:38:20,261 - DEBUG - dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-06-28 20:38:20,261 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-06-28 20:38:20,261 - DEBUG - dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-06-28 20:38:20,261 - DEBUG - stack ['$154call.12']
2024-06-28 20:38:20,262 - DEBUG - dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-06-28 20:38:20,262 - DEBUG - stack []
2024-06-28 20:38:20,262 - DEBUG - dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-06-28 20:38:20,262 - DEBUG - stack ['$null$166.13']
2024-06-28 20:38:20,262 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-06-28 20:38:20,262 - DEBUG - stack ['$null$166.13', '$168load_deref.14']
2024-06-28 20:38:20,262 - DEBUG - dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-06-28 20:38:20,262 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-06-28 20:38:20,262 - DEBUG - dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-06-28 20:38:20,262 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-06-28 20:38:20,262 - DEBUG - dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-06-28 20:38:20,262 - DEBUG - stack ['$176call.16']
2024-06-28 20:38:20,262 - DEBUG - end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,262 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:20,262 - DEBUG - stack: []
2024-06-28 20:38:20,263 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-06-28 20:38:20,263 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-06-28 20:38:20,263 - DEBUG - stack []
2024-06-28 20:38:20,263 - DEBUG - dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-06-28 20:38:20,263 - DEBUG - stack ['$max_value188.0']
2024-06-28 20:38:20,263 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,263 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:20,263 - DEBUG - stack: []
2024-06-28 20:38:20,263 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-06-28 20:38:20,263 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-06-28 20:38:20,263 - DEBUG - stack []
2024-06-28 20:38:20,263 - DEBUG - dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-06-28 20:38:20,263 - DEBUG - stack ['$it192.0']
2024-06-28 20:38:20,263 - DEBUG - end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-06-28 20:38:20,263 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:20,263 - DEBUG - stack: ['$phi196.0']
2024-06-28 20:38:20,263 - DEBUG - state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-06-28 20:38:20,264 - DEBUG - dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-06-28 20:38:20,264 - DEBUG - stack ['$phi196.0']
2024-06-28 20:38:20,264 - DEBUG - end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:20,264 - DEBUG - pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-06-28 20:38:20,264 - DEBUG - stack: []
2024-06-28 20:38:20,264 - DEBUG - state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-06-28 20:38:20,264 - DEBUG - dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-06-28 20:38:20,264 - DEBUG - stack []
2024-06-28 20:38:20,264 - DEBUG - dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-06-28 20:38:20,264 - DEBUG - stack ['$max_value300.0']
2024-06-28 20:38:20,264 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,264 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-06-28 20:38:20,264 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2024-06-28 20:38:20,264 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-06-28 20:38:20,264 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-06-28 20:38:20,264 - DEBUG - stack ['$phi198.0', '$phi198.1']
2024-06-28 20:38:20,265 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-06-28 20:38:20,265 - DEBUG - stack ['$phi198.0']
2024-06-28 20:38:20,265 - DEBUG - dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-06-28 20:38:20,265 - DEBUG - stack ['$phi198.0', '$view200.2']
2024-06-28 20:38:20,265 - DEBUG - dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-06-28 20:38:20,265 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-06-28 20:38:20,265 - DEBUG - dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-06-28 20:38:20,265 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-06-28 20:38:20,265 - DEBUG - dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-06-28 20:38:20,265 - DEBUG - stack ['$phi198.0', '$228call.5']
2024-06-28 20:38:20,265 - DEBUG - dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-06-28 20:38:20,265 - DEBUG - stack ['$phi198.0']
2024-06-28 20:38:20,265 - DEBUG - dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-06-28 20:38:20,265 - DEBUG - stack ['$phi198.0', '$null$240.6']
2024-06-28 20:38:20,265 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-06-28 20:38:20,265 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-06-28 20:38:20,266 - DEBUG - dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-06-28 20:38:20,266 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-06-28 20:38:20,266 - DEBUG - dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-06-28 20:38:20,266 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-06-28 20:38:20,266 - DEBUG - dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-06-28 20:38:20,266 - DEBUG - stack ['$phi198.0', '$250call.9']
2024-06-28 20:38:20,266 - DEBUG - end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-06-28 20:38:20,266 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-06-28 20:38:20,266 - DEBUG - stack: ['$phi262.0']
2024-06-28 20:38:20,266 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-06-28 20:38:20,266 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-06-28 20:38:20,266 - DEBUG - stack ['$phi262.0']
2024-06-28 20:38:20,266 - DEBUG - dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-06-28 20:38:20,266 - DEBUG - stack ['$phi262.0', '$v262.1']
2024-06-28 20:38:20,266 - DEBUG - dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-06-28 20:38:20,266 - DEBUG - stack ['$v262.1', '$phi262.0']
2024-06-28 20:38:20,267 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-06-28 20:38:20,267 - DEBUG - stack ['$v262.1']
2024-06-28 20:38:20,267 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,267 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-06-28 20:38:20,267 - DEBUG - stack: ['$phi270.0']
2024-06-28 20:38:20,267 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-06-28 20:38:20,267 - DEBUG - dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-06-28 20:38:20,267 - DEBUG - stack ['$phi270.0']
2024-06-28 20:38:20,267 - DEBUG - dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-06-28 20:38:20,267 - DEBUG - stack ['$phi270.0', '$null$270.1']
2024-06-28 20:38:20,267 - DEBUG - dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-06-28 20:38:20,267 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-06-28 20:38:20,267 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-06-28 20:38:20,267 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-06-28 20:38:20,267 - DEBUG - dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-06-28 20:38:20,268 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-06-28 20:38:20,268 - DEBUG - dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-06-28 20:38:20,268 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-06-28 20:38:20,268 - DEBUG - dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-06-28 20:38:20,268 - DEBUG - stack ['$phi270.0', '$282call.5']
2024-06-28 20:38:20,268 - DEBUG - end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-06-28 20:38:20,268 - DEBUG - pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-06-28 20:38:20,268 - DEBUG - stack: ['$phi294.0']
2024-06-28 20:38:20,268 - DEBUG - state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-06-28 20:38:20,268 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-06-28 20:38:20,268 - DEBUG - stack ['$phi294.0']
2024-06-28 20:38:20,268 - DEBUG - dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-06-28 20:38:20,269 - DEBUG - stack ['$phi294.0', '$v294.1']
2024-06-28 20:38:20,269 - DEBUG - end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-06-28 20:38:20,269 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-06-28 20:38:20,269 - DEBUG - stack: ['$phi298.0']
2024-06-28 20:38:20,269 - DEBUG - state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-06-28 20:38:20,269 - DEBUG - dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-06-28 20:38:20,269 - DEBUG - stack ['$phi298.0']
2024-06-28 20:38:20,269 - DEBUG - end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-06-28 20:38:20,269 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:20,269 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:20,269 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:20,269 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-06-28 20:38:20,270 - DEBUG - defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-06-28 20:38:20,270 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-06-28 20:38:20,271 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:20,272 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:20,273 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:20,274 - DEBUG - keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-06-28 20:38:20,274 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-06-28 20:38:20,275 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:20,275 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-06-28 20:38:20,275 - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,275 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-06-28 20:38:20,275 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,275 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-06-28 20:38:20,275 - DEBUG - block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-06-28 20:38:20,275 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-06-28 20:38:20,275 - DEBUG - block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,275 - DEBUG - block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-06-28 20:38:20,276 - DEBUG - block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-06-28 20:38:20,276 - DEBUG - block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-06-28 20:38:20,276 - DEBUG - block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,277 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-06-28 20:38:20,285 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:20,285 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,286 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:20,286 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:20,286 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:20,286 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:20,286 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,286 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,286 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:20,286 - DEBUG - ==== SSA block analysis pass on 28
2024-06-28 20:38:20,286 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,286 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,286 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:20,286 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,286 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:20,287 - DEBUG - ==== SSA block analysis pass on 58
2024-06-28 20:38:20,287 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,287 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,287 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:20,287 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,287 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:20,287 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,287 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:20,287 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:20,287 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,287 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:20,287 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,287 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,288 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,288 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:20,288 - DEBUG - ==== SSA block analysis pass on 188
2024-06-28 20:38:20,288 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,288 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:20,288 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:20,288 - DEBUG - ==== SSA block analysis pass on 192
2024-06-28 20:38:20,288 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,288 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:20,288 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:20,288 - DEBUG - on stmt: jump 196
2024-06-28 20:38:20,288 - DEBUG - ==== SSA block analysis pass on 196
2024-06-28 20:38:20,288 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,288 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:20,288 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:20,289 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:20,289 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:20,289 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:20,289 - DEBUG - ==== SSA block analysis pass on 198
2024-06-28 20:38:20,289 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,289 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:20,289 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:20,289 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,289 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:20,289 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,289 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,289 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,290 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:20,290 - DEBUG - ==== SSA block analysis pass on 262
2024-06-28 20:38:20,290 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,290 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:20,290 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:20,290 - DEBUG - ==== SSA block analysis pass on 270
2024-06-28 20:38:20,290 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,290 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:20,290 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,290 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,290 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,290 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:20,290 - DEBUG - ==== SSA block analysis pass on 294
2024-06-28 20:38:20,290 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,290 - DEBUG - on stmt: max_value = v
2024-06-28 20:38:20,291 - DEBUG - on stmt: jump 298
2024-06-28 20:38:20,291 - DEBUG - ==== SSA block analysis pass on 298
2024-06-28 20:38:20,291 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,291 - DEBUG - on stmt: jump 196
2024-06-28 20:38:20,291 - DEBUG - ==== SSA block analysis pass on 300
2024-06-28 20:38:20,291 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e41d10>
2024-06-28 20:38:20,291 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:20,291 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:20,292 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x7f7a66e39d10>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x7f7a66e39750>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x7f7a66e39a90>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x7f7a66e38a50>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f7a66e383d0>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x7f7a66e38dd0>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x7f7a66e3a550>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a66e39c10>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a66e39bd0>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a66e3ad10>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x7f7a66e2ee50>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x7f7a66e7e6d0>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x7f7a66e2f550>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x7f7a66e2fb10>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x7f7a66e37290>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x7f7a66e37550>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7f7a66ff1750>, 0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x7f7a66e37950>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x7f7a66e37750>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66e3b790>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x7f7a66e36d90>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x7f7a66e364d0>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x7f7a66e3b2d0>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66e3a6d0>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a66e3a750>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7f7a66e3d550>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x7f7a66e3aa90>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x7f7a66e395d0>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x7f7a66e7f950>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x7f7a66e3b350>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x7f7a66e38050>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x7f7a66e3bf90>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a66e3f150>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f7a66e38610>, 58)],
             'bool26': [(<numba.core.ir.Assign object at 0x7f7a66e7d2d0>, 0)],
             'bool260': [(<numba.core.ir.Assign object at 0x7f7a66e2fe50>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x7f7a66e36f50>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x7f7a66e3a010>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7f7a66e393d0>,
                            58),
                           (<numba.core.ir.Assign object at 0x7f7a66e368d0>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x7f7a66e2f110>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x7f7a66e2ff90>, 198)]})
2024-06-28 20:38:20,293 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a66e41d10>
2024-06-28 20:38:20,293 - DEBUG - Fix SSA violator on var max_value
2024-06-28 20:38:20,293 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,293 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,293 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:20,293 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:20,293 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:20,293 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:20,293 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,293 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,293 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:20,293 - DEBUG - ==== SSA block rewrite pass on 28
2024-06-28 20:38:20,293 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,294 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,294 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:20,294 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,294 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:20,294 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-28 20:38:20,294 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,294 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,294 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:20,294 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,294 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:20,294 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,294 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:20,294 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:20,294 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,294 - DEBUG - first assign: max_value
2024-06-28 20:38:20,295 - DEBUG - replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,295 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:20,295 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,295 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,295 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,295 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:20,295 - DEBUG - ==== SSA block rewrite pass on 188
2024-06-28 20:38:20,295 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,295 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:20,295 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:20,295 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,295 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,295 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:20,295 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:20,295 - DEBUG - on stmt: jump 196
2024-06-28 20:38:20,295 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-28 20:38:20,296 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,296 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:20,296 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:20,296 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:20,296 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:20,296 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:20,296 - DEBUG - ==== SSA block rewrite pass on 198
2024-06-28 20:38:20,296 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,296 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:20,296 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:20,296 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,296 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:20,296 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,296 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,296 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,297 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:20,297 - DEBUG - ==== SSA block rewrite pass on 262
2024-06-28 20:38:20,297 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,297 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:20,297 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:20,297 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:20,297 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,297 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:20,297 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,297 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,297 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,297 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:20,297 - DEBUG - ==== SSA block rewrite pass on 294
2024-06-28 20:38:20,297 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,297 - DEBUG - on stmt: max_value = v
2024-06-28 20:38:20,297 - DEBUG - replaced with: max_value.1 = v
2024-06-28 20:38:20,298 - DEBUG - on stmt: jump 298
2024-06-28 20:38:20,298 - DEBUG - ==== SSA block rewrite pass on 298
2024-06-28 20:38:20,298 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,298 - DEBUG - on stmt: jump 196
2024-06-28 20:38:20,298 - DEBUG - ==== SSA block rewrite pass on 300
2024-06-28 20:38:20,298 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e36390>
2024-06-28 20:38:20,298 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:20,298 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:20,298 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7f7a66e38b50>],
             294: [<numba.core.ir.Assign object at 0x7f7a66d12050>]})
2024-06-28 20:38:20,298 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,298 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,298 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:20,298 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:20,298 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:20,298 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:20,299 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,299 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,299 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:20,299 - DEBUG - ==== SSA block rewrite pass on 28
2024-06-28 20:38:20,299 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,299 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,299 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:20,299 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,299 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:20,299 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-28 20:38:20,299 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,299 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:20,299 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:20,299 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,300 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:20,300 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,300 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:20,300 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:20,300 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,300 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:20,300 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,300 - DEBUG - find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,300 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,300 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,300 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:20,300 - DEBUG - ==== SSA block rewrite pass on 188
2024-06-28 20:38:20,300 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,301 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:20,301 - DEBUG - find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-06-28 20:38:20,301 - DEBUG - find_def_from_top label 188
2024-06-28 20:38:20,301 - DEBUG - idom 58 from label 188
2024-06-28 20:38:20,301 - DEBUG - find_def_from_bottom label 58
2024-06-28 20:38:20,301 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:20,301 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,301 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,301 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:20,301 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:20,301 - DEBUG - on stmt: jump 196
2024-06-28 20:38:20,301 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-28 20:38:20,301 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,301 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:20,301 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:20,302 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:20,302 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:20,302 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:20,302 - DEBUG - ==== SSA block rewrite pass on 198
2024-06-28 20:38:20,302 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,302 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:20,302 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:20,302 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,302 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:20,302 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,302 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,302 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,303 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:20,303 - DEBUG - ==== SSA block rewrite pass on 262
2024-06-28 20:38:20,303 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,303 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:20,303 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:20,303 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:20,303 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,303 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:20,303 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,303 - DEBUG - find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,303 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:20,303 - DEBUG - idom 198 from label 270
2024-06-28 20:38:20,303 - DEBUG - find_def_from_bottom label 198
2024-06-28 20:38:20,303 - DEBUG - find_def_from_top label 198
2024-06-28 20:38:20,303 - DEBUG - idom 196 from label 198
2024-06-28 20:38:20,303 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:20,304 - DEBUG - find_def_from_top label 196
2024-06-28 20:38:20,304 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-06-28 20:38:20,304 - DEBUG - find_def_from_bottom label 192
2024-06-28 20:38:20,304 - DEBUG - find_def_from_top label 192
2024-06-28 20:38:20,304 - DEBUG - idom 58 from label 192
2024-06-28 20:38:20,304 - DEBUG - find_def_from_bottom label 58
2024-06-28 20:38:20,304 - DEBUG - incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,304 - DEBUG - find_def_from_bottom label 298
2024-06-28 20:38:20,304 - DEBUG - find_def_from_top label 298
2024-06-28 20:38:20,305 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-06-28 20:38:20,305 - DEBUG - find_def_from_bottom label 294
2024-06-28 20:38:20,305 - DEBUG - incoming_def max_value.1 = v
2024-06-28 20:38:20,305 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:20,305 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:20,305 - DEBUG - idom 198 from label 270
2024-06-28 20:38:20,305 - DEBUG - find_def_from_bottom label 198
2024-06-28 20:38:20,306 - DEBUG - find_def_from_top label 198
2024-06-28 20:38:20,306 - DEBUG - idom 196 from label 198
2024-06-28 20:38:20,306 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:20,306 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-06-28 20:38:20,306 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-06-28 20:38:20,306 - DEBUG - replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,306 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,306 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,306 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:20,306 - DEBUG - ==== SSA block rewrite pass on 294
2024-06-28 20:38:20,306 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,307 - DEBUG - on stmt: max_value.1 = v
2024-06-28 20:38:20,307 - DEBUG - on stmt: jump 298
2024-06-28 20:38:20,307 - DEBUG - ==== SSA block rewrite pass on 298
2024-06-28 20:38:20,307 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,307 - DEBUG - on stmt: jump 196
2024-06-28 20:38:20,307 - DEBUG - ==== SSA block rewrite pass on 300
2024-06-28 20:38:20,307 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66d12090>
2024-06-28 20:38:20,307 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:20,307 - DEBUG - find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-06-28 20:38:20,307 - DEBUG - find_def_from_top label 300
2024-06-28 20:38:20,307 - DEBUG - idom 196 from label 300
2024-06-28 20:38:20,307 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:20,307 - DEBUG - replaced with: $302return_value.1 = cast(value=max_value.2)
2024-06-28 20:38:20,307 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:20,313 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-06-28 20:38:20,313 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:20,313 - DEBUG - stack: []
2024-06-28 20:38:20,313 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:20,313 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-06-28 20:38:20,313 - DEBUG - stack []
2024-06-28 20:38:20,313 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-06-28 20:38:20,313 - DEBUG - stack []
2024-06-28 20:38:20,313 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-06-28 20:38:20,313 - DEBUG - stack []
2024-06-28 20:38:20,313 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-06-28 20:38:20,314 - DEBUG - stack ['$indices4.0']
2024-06-28 20:38:20,314 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-06-28 20:38:20,314 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-06-28 20:38:20,314 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-06-28 20:38:20,314 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-06-28 20:38:20,314 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-06-28 20:38:20,314 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-06-28 20:38:20,314 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-06-28 20:38:20,314 - DEBUG - stack ['$indices4.0', '$binop_sub20.4']
2024-06-28 20:38:20,314 - DEBUG - dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-06-28 20:38:20,314 - DEBUG - stack ['$24compare_op.5']
2024-06-28 20:38:20,314 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,315 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-06-28 20:38:20,315 - DEBUG - stack: []
2024-06-28 20:38:20,315 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-06-28 20:38:20,315 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-06-28 20:38:20,315 - DEBUG - stack []
2024-06-28 20:38:20,315 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-06-28 20:38:20,315 - DEBUG - stack ['$indices32.0']
2024-06-28 20:38:20,315 - DEBUG - dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-06-28 20:38:20,315 - DEBUG - stack ['$indices32.0', '$a34.1']
2024-06-28 20:38:20,315 - DEBUG - dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-06-28 20:38:20,315 - DEBUG - stack ['$indices32.0', '$36load_attr.2']
2024-06-28 20:38:20,315 - DEBUG - dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-06-28 20:38:20,315 - DEBUG - stack ['$indices32.0', '$46unary_negative.3']
2024-06-28 20:38:20,315 - DEBUG - dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-06-28 20:38:20,316 - DEBUG - stack ['$48compare_op.4']
2024-06-28 20:38:20,316 - DEBUG - end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,316 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:20,316 - DEBUG - stack: []
2024-06-28 20:38:20,316 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-06-28 20:38:20,316 - DEBUG - dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-06-28 20:38:20,316 - DEBUG - stack []
2024-06-28 20:38:20,316 - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-06-28 20:38:20,316 - DEBUG - stack ['$null$56.1', '$56load_global.0']
2024-06-28 20:38:20,316 - DEBUG - dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-06-28 20:38:20,316 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-06-28 20:38:20,316 - DEBUG - dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-06-28 20:38:20,317 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-06-28 20:38:20,317 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-06-28 20:38:20,317 - DEBUG - stack ['$74call.3']
2024-06-28 20:38:20,317 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,317 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:20,317 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:20,317 - DEBUG - stack: []
2024-06-28 20:38:20,317 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-06-28 20:38:20,317 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-06-28 20:38:20,317 - DEBUG - stack []
2024-06-28 20:38:20,317 - DEBUG - dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-06-28 20:38:20,317 - DEBUG - stack ['$a86.0']
2024-06-28 20:38:20,317 - DEBUG - dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-06-28 20:38:20,317 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-06-28 20:38:20,317 - DEBUG - dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-06-28 20:38:20,317 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-06-28 20:38:20,318 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-06-28 20:38:20,318 - DEBUG - stack ['$114call.3']
2024-06-28 20:38:20,318 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-06-28 20:38:20,318 - DEBUG - stack ['$114call.3', '$indices124.4']
2024-06-28 20:38:20,318 - DEBUG - dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-06-28 20:38:20,318 - DEBUG - stack ['$126binary_subscr.5']
2024-06-28 20:38:20,318 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,318 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:20,318 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-06-28 20:38:20,318 - DEBUG - defmap: {}
2024-06-28 20:38:20,318 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:20,318 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:20,318 - DEBUG - keep phismap: {}
2024-06-28 20:38:20,319 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:20,319 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:20,319 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-06-28 20:38:20,319 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-06-28 20:38:20,319 - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,319 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,320 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-06-28 20:38:20,325 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:20,325 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d3a310>
2024-06-28 20:38:20,325 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:20,325 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-06-28 20:38:20,325 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:20,325 - DEBUG - on stmt: $const18.3 = const(int, 1)
2024-06-28 20:38:20,325 - DEBUG - on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-06-28 20:38:20,325 - DEBUG - on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-06-28 20:38:20,325 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,325 - DEBUG - on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,326 - DEBUG - on stmt: branch $30pred, 56, 32
2024-06-28 20:38:20,326 - DEBUG - ==== SSA block analysis pass on 32
2024-06-28 20:38:20,326 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d3a310>
2024-06-28 20:38:20,326 - DEBUG - on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:20,326 - DEBUG - on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-06-28 20:38:20,326 - DEBUG - on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-06-28 20:38:20,326 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,326 - DEBUG - on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,326 - DEBUG - on stmt: branch $54pred, 56, 86
2024-06-28 20:38:20,326 - DEBUG - ==== SSA block analysis pass on 56
2024-06-28 20:38:20,326 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d3a310>
2024-06-28 20:38:20,326 - DEBUG - on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-06-28 20:38:20,326 - DEBUG - on stmt: $const68.2 = const(str, Index out of bounds)
2024-06-28 20:38:20,326 - DEBUG - on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,327 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-06-28 20:38:20,327 - DEBUG - ==== SSA block analysis pass on 86
2024-06-28 20:38:20,327 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d3a310>
2024-06-28 20:38:20,327 - DEBUG - on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-06-28 20:38:20,327 - DEBUG - on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,327 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-06-28 20:38:20,327 - DEBUG - on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-06-28 20:38:20,327 - DEBUG - on stmt: return $136return_value.6
2024-06-28 20:38:20,327 - DEBUG - defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x7f7a66d4a4d0>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a66d4a8d0>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x7f7a66d4ac50>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a66d48410>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x7f7a66d48790>, 0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a66d48d50>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x7f7a66d48f90>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x7f7a66d49190>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f7a66d495d0>, 32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66d497d0>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x7f7a66d49c10>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x7f7a66d4a2d0>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a66d3be50>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x7f7a66d48250>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x7f7a66d480d0>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x7f7a66d499d0>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a66d3b950>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x7f7a66d48610>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f7a66d49410>, 32)],
             'indices': [(<numba.core.ir.Assign object at 0x7f7a66d3b9d0>, 0)]})
2024-06-28 20:38:20,328 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a66d3a310>
2024-06-28 20:38:20,343 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-06-28 20:38:20,343 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:20,343 - DEBUG - stack: []
2024-06-28 20:38:20,343 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:20,343 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-06-28 20:38:20,344 - DEBUG - stack []
2024-06-28 20:38:20,344 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-06-28 20:38:20,344 - DEBUG - stack []
2024-06-28 20:38:20,344 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-06-28 20:38:20,344 - DEBUG - stack []
2024-06-28 20:38:20,344 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-06-28 20:38:20,344 - DEBUG - stack ['$ary4.0']
2024-06-28 20:38:20,344 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-06-28 20:38:20,344 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-06-28 20:38:20,344 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-06-28 20:38:20,344 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-06-28 20:38:20,344 - DEBUG - dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-06-28 20:38:20,345 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-06-28 20:38:20,345 - DEBUG - dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-06-28 20:38:20,345 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-06-28 20:38:20,345 - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-06-28 20:38:20,345 - DEBUG - stack ['$44call.5']
2024-06-28 20:38:20,345 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,345 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:20,345 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:20,345 - DEBUG - defmap: {}
2024-06-28 20:38:20,345 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:20,345 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:20,345 - DEBUG - keep phismap: {}
2024-06-28 20:38:20,346 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:20,346 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:20,346 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,346 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-06-28 20:38:20,351 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:20,351 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d5f190>
2024-06-28 20:38:20,351 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-06-28 20:38:20,351 - DEBUG - on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-06-28 20:38:20,351 - DEBUG - on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-06-28 20:38:20,352 - DEBUG - on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,352 - DEBUG - on stmt: $54return_value.6 = cast(value=$44call.5)
2024-06-28 20:38:20,352 - DEBUG - on stmt: return $54return_value.6
2024-06-28 20:38:20,352 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x7f7a66d5dbd0>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x7f7a66d5dfd0>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x7f7a66d5e290>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f7a66d5d710>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x7f7a66d5d250>, 0)]})
2024-06-28 20:38:20,352 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a66d5f190>
2024-06-28 20:38:20,501 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2046)
           2	RESUME(arg=0, lineno=2046)
           4	LOAD_CONST(arg=1, lineno=2047)
           6	STORE_FAST(arg=2, lineno=2047)
           8	LOAD_CONST(arg=2, lineno=2048)
          10	STORE_FAST(arg=3, lineno=2048)
          12	LOAD_GLOBAL(arg=1, lineno=2049)
          24	LOAD_FAST(arg=1, lineno=2049)
          26	PRECALL(arg=1, lineno=2049)
          30	CALL(arg=1, lineno=2049)
          40	GET_ITER(arg=None, lineno=2049)
>         42	FOR_ITER(arg=24, lineno=2049)
          44	UNPACK_SEQUENCE(arg=2, lineno=2049)
          48	STORE_FAST(arg=4, lineno=2049)
          50	STORE_FAST(arg=5, lineno=2049)
          52	LOAD_FAST(arg=5, lineno=2050)
          54	LOAD_CONST(arg=1, lineno=2050)
          56	COMPARE_OP(arg=0, lineno=2050)
          62	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=2050)
          64	LOAD_FAST(arg=2, lineno=2051)
          66	LOAD_CONST(arg=2, lineno=2051)
          68	BINARY_OP(arg=13, lineno=2051)
          72	STORE_FAST(arg=2, lineno=2051)
          74	LOAD_FAST(arg=4, lineno=2052)
          76	STORE_FAST(arg=6, lineno=2052)
          78	JUMP_BACKWARD(arg=19, lineno=2052)
>         80	LOAD_FAST(arg=3, lineno=2054)
          82	LOAD_FAST(arg=5, lineno=2054)
          84	BINARY_OP(arg=18, lineno=2054)
          88	STORE_FAST(arg=3, lineno=2054)
          90	JUMP_BACKWARD(arg=25, lineno=2054)
>         92	LOAD_FAST(arg=2, lineno=2056)
          94	LOAD_CONST(arg=1, lineno=2056)
          96	COMPARE_OP(arg=2, lineno=2056)
         102	POP_JUMP_FORWARD_IF_FALSE(arg=23, lineno=2056)
         104	LOAD_FAST(arg=0, lineno=2057)
         106	LOAD_FAST(arg=3, lineno=2057)
         108	COMPARE_OP(arg=3, lineno=2057)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2057)
         116	LOAD_GLOBAL(arg=3, lineno=2058)
         128	LOAD_CONST(arg=3, lineno=2058)
         130	PRECALL(arg=1, lineno=2058)
         134	CALL(arg=1, lineno=2058)
         144	RAISE_VARARGS(arg=1, lineno=2058)
>        146	LOAD_CONST(arg=0, lineno=2057)
         148	RETURN_VALUE(arg=None, lineno=2057)
>        150	LOAD_FAST(arg=2, lineno=2060)
         152	LOAD_CONST(arg=2, lineno=2060)
         154	COMPARE_OP(arg=2, lineno=2060)
         160	POP_JUMP_FORWARD_IF_FALSE(arg=53, lineno=2060)
         162	LOAD_FAST(arg=3, lineno=2062)
         164	LOAD_CONST(arg=1, lineno=2062)
         166	COMPARE_OP(arg=2, lineno=2062)
         172	POP_JUMP_FORWARD_IF_FALSE(arg=9, lineno=2062)
         174	LOAD_CONST(arg=1, lineno=2063)
         176	STORE_FAST(arg=7, lineno=2063)
         178	LOAD_FAST(arg=0, lineno=2064)
         180	LOAD_CONST(arg=1, lineno=2064)
         182	COMPARE_OP(arg=2, lineno=2064)
         188	STORE_FAST(arg=8, lineno=2064)
         190	JUMP_FORWARD(arg=14, lineno=2064)
>        192	LOAD_FAST(arg=0, lineno=2066)
         194	LOAD_FAST(arg=3, lineno=2066)
         196	BINARY_OP(arg=2, lineno=2066)
         200	STORE_FAST(arg=7, lineno=2066)
         202	LOAD_FAST(arg=0, lineno=2067)
         204	LOAD_FAST(arg=3, lineno=2067)
         206	BINARY_OP(arg=6, lineno=2067)
         210	LOAD_CONST(arg=1, lineno=2067)
         212	COMPARE_OP(arg=2, lineno=2067)
         218	STORE_FAST(arg=8, lineno=2067)
>        220	LOAD_FAST(arg=8, lineno=2068)
         222	POP_JUMP_FORWARD_IF_TRUE(arg=15, lineno=2068)
         224	LOAD_GLOBAL(arg=3, lineno=2069)
         236	LOAD_CONST(arg=3, lineno=2069)
         238	PRECALL(arg=1, lineno=2069)
         242	CALL(arg=1, lineno=2069)
         252	RAISE_VARARGS(arg=1, lineno=2069)
>        254	LOAD_FAST(arg=7, lineno=2070)
         256	LOAD_FAST(arg=1, lineno=2070)
         258	LOAD_FAST(arg=6, lineno=2070)
         260	STORE_SUBSCR(arg=None, lineno=2070)
         264	LOAD_CONST(arg=0, lineno=2070)
         266	RETURN_VALUE(arg=None, lineno=2070)
>        268	LOAD_GLOBAL(arg=3, lineno=2073)
         280	LOAD_CONST(arg=4, lineno=2073)
         282	PRECALL(arg=1, lineno=2073)
         286	CALL(arg=1, lineno=2073)
         296	RAISE_VARARGS(arg=1, lineno=2073)
2024-06-28 20:38:20,501 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:20,501 - DEBUG - stack: []
2024-06-28 20:38:20,501 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:20,501 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2046)
2024-06-28 20:38:20,501 - DEBUG - stack []
2024-06-28 20:38:20,501 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2046)
2024-06-28 20:38:20,501 - DEBUG - stack []
2024-06-28 20:38:20,501 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=2047)
2024-06-28 20:38:20,501 - DEBUG - stack []
2024-06-28 20:38:20,501 - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=2, lineno=2047)
2024-06-28 20:38:20,501 - DEBUG - stack ['$const4.0']
2024-06-28 20:38:20,502 - DEBUG - dispatch pc=8, inst=LOAD_CONST(arg=2, lineno=2048)
2024-06-28 20:38:20,502 - DEBUG - stack []
2024-06-28 20:38:20,502 - DEBUG - dispatch pc=10, inst=STORE_FAST(arg=3, lineno=2048)
2024-06-28 20:38:20,502 - DEBUG - stack ['$const8.1']
2024-06-28 20:38:20,502 - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=2049)
2024-06-28 20:38:20,502 - DEBUG - stack []
2024-06-28 20:38:20,502 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=2049)
2024-06-28 20:38:20,502 - DEBUG - stack ['$null$12.3', '$12load_global.2']
2024-06-28 20:38:20,502 - DEBUG - dispatch pc=26, inst=PRECALL(arg=1, lineno=2049)
2024-06-28 20:38:20,502 - DEBUG - stack ['$null$12.3', '$12load_global.2', '$shape24.4']
2024-06-28 20:38:20,502 - DEBUG - dispatch pc=30, inst=CALL(arg=1, lineno=2049)
2024-06-28 20:38:20,502 - DEBUG - stack ['$null$12.3', '$12load_global.2', '$shape24.4']
2024-06-28 20:38:20,502 - DEBUG - dispatch pc=40, inst=GET_ITER(arg=None, lineno=2049)
2024-06-28 20:38:20,502 - DEBUG - stack ['$30call.5']
2024-06-28 20:38:20,502 - DEBUG - end state. edges=[Edge(pc=42, stack=('$40get_iter.6',), blockstack=(), npush=0)]
2024-06-28 20:38:20,503 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=1)])
2024-06-28 20:38:20,503 - DEBUG - stack: ['$phi42.0']
2024-06-28 20:38:20,503 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=1)
2024-06-28 20:38:20,503 - DEBUG - dispatch pc=42, inst=FOR_ITER(arg=24, lineno=2049)
2024-06-28 20:38:20,503 - DEBUG - stack ['$phi42.0']
2024-06-28 20:38:20,503 - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=44, stack=('$phi42.0', '$42for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:20,503 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=44 nstack_initial=2)])
2024-06-28 20:38:20,503 - DEBUG - stack: []
2024-06-28 20:38:20,503 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=0)
2024-06-28 20:38:20,503 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=2056)
2024-06-28 20:38:20,503 - DEBUG - stack []
2024-06-28 20:38:20,503 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=1, lineno=2056)
2024-06-28 20:38:20,503 - DEBUG - stack ['$num_neg_value92.0']
2024-06-28 20:38:20,503 - DEBUG - dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=2056)
2024-06-28 20:38:20,503 - DEBUG - stack ['$num_neg_value92.0', '$const94.1']
2024-06-28 20:38:20,503 - DEBUG - dispatch pc=102, inst=POP_JUMP_FORWARD_IF_FALSE(arg=23, lineno=2056)
2024-06-28 20:38:20,504 - DEBUG - stack ['$96compare_op.2']
2024-06-28 20:38:20,504 - DEBUG - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=150, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,504 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=2), State(pc_initial=104 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
2024-06-28 20:38:20,504 - DEBUG - stack: ['$phi44.0', '$phi44.1']
2024-06-28 20:38:20,504 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=2)
2024-06-28 20:38:20,504 - DEBUG - dispatch pc=44, inst=UNPACK_SEQUENCE(arg=2, lineno=2049)
2024-06-28 20:38:20,504 - DEBUG - stack ['$phi44.0', '$phi44.1']
2024-06-28 20:38:20,504 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=4, lineno=2049)
2024-06-28 20:38:20,504 - DEBUG - stack ['$phi44.0', '$44unpack_sequence.3', '$44unpack_sequence.2']
2024-06-28 20:38:20,504 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=5, lineno=2049)
2024-06-28 20:38:20,504 - DEBUG - stack ['$phi44.0', '$44unpack_sequence.3']
2024-06-28 20:38:20,504 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=2050)
2024-06-28 20:38:20,504 - DEBUG - stack ['$phi44.0']
2024-06-28 20:38:20,504 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=2050)
2024-06-28 20:38:20,504 - DEBUG - stack ['$phi44.0', '$s52.5']
2024-06-28 20:38:20,505 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=0, lineno=2050)
2024-06-28 20:38:20,505 - DEBUG - stack ['$phi44.0', '$s52.5', '$const54.6']
2024-06-28 20:38:20,505 - DEBUG - dispatch pc=62, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=2050)
2024-06-28 20:38:20,505 - DEBUG - stack ['$phi44.0', '$56compare_op.7']
2024-06-28 20:38:20,505 - DEBUG - end state. edges=[Edge(pc=64, stack=('$phi44.0',), blockstack=(), npush=0), Edge(pc=80, stack=('$phi44.0',), blockstack=(), npush=0)]
2024-06-28 20:38:20,505 - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=150 nstack_initial=0), State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1)])
2024-06-28 20:38:20,505 - DEBUG - stack: []
2024-06-28 20:38:20,505 - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=0)
2024-06-28 20:38:20,505 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=2057)
2024-06-28 20:38:20,505 - DEBUG - stack []
2024-06-28 20:38:20,505 - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=2057)
2024-06-28 20:38:20,505 - DEBUG - stack ['$origsize104.0']
2024-06-28 20:38:20,505 - DEBUG - dispatch pc=108, inst=COMPARE_OP(arg=3, lineno=2057)
2024-06-28 20:38:20,505 - DEBUG - stack ['$origsize104.0', '$known_size106.1']
2024-06-28 20:38:20,505 - DEBUG - dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2057)
2024-06-28 20:38:20,506 - DEBUG - stack ['$108compare_op.2']
2024-06-28 20:38:20,506 - DEBUG - end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,506 - DEBUG - pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2024-06-28 20:38:20,506 - DEBUG - stack: []
2024-06-28 20:38:20,506 - DEBUG - state.pc_initial: State(pc_initial=150 nstack_initial=0)
2024-06-28 20:38:20,506 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=2, lineno=2060)
2024-06-28 20:38:20,506 - DEBUG - stack []
2024-06-28 20:38:20,506 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=2060)
2024-06-28 20:38:20,506 - DEBUG - stack ['$num_neg_value150.0']
2024-06-28 20:38:20,506 - DEBUG - dispatch pc=154, inst=COMPARE_OP(arg=2, lineno=2060)
2024-06-28 20:38:20,506 - DEBUG - stack ['$num_neg_value150.0', '$const152.1']
2024-06-28 20:38:20,506 - DEBUG - dispatch pc=160, inst=POP_JUMP_FORWARD_IF_FALSE(arg=53, lineno=2060)
2024-06-28 20:38:20,507 - DEBUG - stack ['$154compare_op.2']
2024-06-28 20:38:20,507 - DEBUG - end state. edges=[Edge(pc=162, stack=(), blockstack=(), npush=0), Edge(pc=268, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,507 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0)])
2024-06-28 20:38:20,507 - DEBUG - stack: ['$phi64.0']
2024-06-28 20:38:20,507 - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=1)
2024-06-28 20:38:20,507 - DEBUG - dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=2051)
2024-06-28 20:38:20,507 - DEBUG - stack ['$phi64.0']
2024-06-28 20:38:20,507 - DEBUG - dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=2051)
2024-06-28 20:38:20,507 - DEBUG - stack ['$phi64.0', '$num_neg_value64.1']
2024-06-28 20:38:20,507 - DEBUG - dispatch pc=68, inst=BINARY_OP(arg=13, lineno=2051)
2024-06-28 20:38:20,507 - DEBUG - stack ['$phi64.0', '$num_neg_value64.1', '$const66.2']
2024-06-28 20:38:20,507 - DEBUG - dispatch pc=72, inst=STORE_FAST(arg=2, lineno=2051)
2024-06-28 20:38:20,507 - DEBUG - stack ['$phi64.0', '$binop_iadd68.3']
2024-06-28 20:38:20,507 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=2052)
2024-06-28 20:38:20,507 - DEBUG - stack ['$phi64.0']
2024-06-28 20:38:20,508 - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=6, lineno=2052)
2024-06-28 20:38:20,508 - DEBUG - stack ['$phi64.0', '$ax74.4']
2024-06-28 20:38:20,508 - DEBUG - dispatch pc=78, inst=JUMP_BACKWARD(arg=19, lineno=2052)
2024-06-28 20:38:20,508 - DEBUG - stack ['$phi64.0']
2024-06-28 20:38:20,508 - DEBUG - end state. edges=[Edge(pc=42, stack=('$phi64.0',), blockstack=(), npush=0)]
2024-06-28 20:38:20,508 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1)])
2024-06-28 20:38:20,508 - DEBUG - stack: ['$phi80.0']
2024-06-28 20:38:20,508 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2024-06-28 20:38:20,508 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=3, lineno=2054)
2024-06-28 20:38:20,508 - DEBUG - stack ['$phi80.0']
2024-06-28 20:38:20,508 - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=5, lineno=2054)
2024-06-28 20:38:20,508 - DEBUG - stack ['$phi80.0', '$known_size80.1']
2024-06-28 20:38:20,508 - DEBUG - dispatch pc=84, inst=BINARY_OP(arg=18, lineno=2054)
2024-06-28 20:38:20,508 - DEBUG - stack ['$phi80.0', '$known_size80.1', '$s82.2']
2024-06-28 20:38:20,508 - DEBUG - dispatch pc=88, inst=STORE_FAST(arg=3, lineno=2054)
2024-06-28 20:38:20,508 - DEBUG - stack ['$phi80.0', '$binop_imul84.3']
2024-06-28 20:38:20,509 - DEBUG - dispatch pc=90, inst=JUMP_BACKWARD(arg=25, lineno=2054)
2024-06-28 20:38:20,509 - DEBUG - stack ['$phi80.0']
2024-06-28 20:38:20,509 - DEBUG - end state. edges=[Edge(pc=42, stack=('$phi80.0',), blockstack=(), npush=0)]
2024-06-28 20:38:20,509 - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2024-06-28 20:38:20,509 - DEBUG - stack: []
2024-06-28 20:38:20,509 - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
2024-06-28 20:38:20,509 - DEBUG - dispatch pc=116, inst=LOAD_GLOBAL(arg=3, lineno=2058)
2024-06-28 20:38:20,509 - DEBUG - stack []
2024-06-28 20:38:20,509 - DEBUG - dispatch pc=128, inst=LOAD_CONST(arg=3, lineno=2058)
2024-06-28 20:38:20,509 - DEBUG - stack ['$null$116.1', '$116load_global.0']
2024-06-28 20:38:20,509 - DEBUG - dispatch pc=130, inst=PRECALL(arg=1, lineno=2058)
2024-06-28 20:38:20,509 - DEBUG - stack ['$null$116.1', '$116load_global.0', '$const128.2']
2024-06-28 20:38:20,509 - DEBUG - dispatch pc=134, inst=CALL(arg=1, lineno=2058)
2024-06-28 20:38:20,509 - DEBUG - stack ['$null$116.1', '$116load_global.0', '$const128.2']
2024-06-28 20:38:20,510 - DEBUG - dispatch pc=144, inst=RAISE_VARARGS(arg=1, lineno=2058)
2024-06-28 20:38:20,510 - DEBUG - stack ['$134call.3']
2024-06-28 20:38:20,510 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,510 - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2024-06-28 20:38:20,510 - DEBUG - stack: []
2024-06-28 20:38:20,510 - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2024-06-28 20:38:20,510 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=0, lineno=2057)
2024-06-28 20:38:20,510 - DEBUG - stack []
2024-06-28 20:38:20,510 - DEBUG - dispatch pc=148, inst=RETURN_VALUE(arg=None, lineno=2057)
2024-06-28 20:38:20,510 - DEBUG - stack ['$const146.0']
2024-06-28 20:38:20,510 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,510 - DEBUG - pending: deque([State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2024-06-28 20:38:20,510 - DEBUG - stack: []
2024-06-28 20:38:20,511 - DEBUG - state.pc_initial: State(pc_initial=162 nstack_initial=0)
2024-06-28 20:38:20,511 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=3, lineno=2062)
2024-06-28 20:38:20,511 - DEBUG - stack []
2024-06-28 20:38:20,511 - DEBUG - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=2062)
2024-06-28 20:38:20,511 - DEBUG - stack ['$known_size162.0']
2024-06-28 20:38:20,511 - DEBUG - dispatch pc=166, inst=COMPARE_OP(arg=2, lineno=2062)
2024-06-28 20:38:20,511 - DEBUG - stack ['$known_size162.0', '$const164.1']
2024-06-28 20:38:20,511 - DEBUG - dispatch pc=172, inst=POP_JUMP_FORWARD_IF_FALSE(arg=9, lineno=2062)
2024-06-28 20:38:20,511 - DEBUG - stack ['$166compare_op.2']
2024-06-28 20:38:20,511 - DEBUG - end state. edges=[Edge(pc=174, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,511 - DEBUG - pending: deque([State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:20,511 - DEBUG - stack: []
2024-06-28 20:38:20,511 - DEBUG - state.pc_initial: State(pc_initial=268 nstack_initial=0)
2024-06-28 20:38:20,511 - DEBUG - dispatch pc=268, inst=LOAD_GLOBAL(arg=3, lineno=2073)
2024-06-28 20:38:20,511 - DEBUG - stack []
2024-06-28 20:38:20,512 - DEBUG - dispatch pc=280, inst=LOAD_CONST(arg=4, lineno=2073)
2024-06-28 20:38:20,512 - DEBUG - stack ['$null$268.1', '$268load_global.0']
2024-06-28 20:38:20,512 - DEBUG - dispatch pc=282, inst=PRECALL(arg=1, lineno=2073)
2024-06-28 20:38:20,512 - DEBUG - stack ['$null$268.1', '$268load_global.0', '$const280.2']
2024-06-28 20:38:20,512 - DEBUG - dispatch pc=286, inst=CALL(arg=1, lineno=2073)
2024-06-28 20:38:20,512 - DEBUG - stack ['$null$268.1', '$268load_global.0', '$const280.2']
2024-06-28 20:38:20,512 - DEBUG - dispatch pc=296, inst=RAISE_VARARGS(arg=1, lineno=2073)
2024-06-28 20:38:20,512 - DEBUG - stack ['$286call.3']
2024-06-28 20:38:20,512 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,512 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:20,512 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:20,512 - DEBUG - pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:20,512 - DEBUG - stack: []
2024-06-28 20:38:20,512 - DEBUG - state.pc_initial: State(pc_initial=174 nstack_initial=0)
2024-06-28 20:38:20,512 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=1, lineno=2063)
2024-06-28 20:38:20,512 - DEBUG - stack []
2024-06-28 20:38:20,513 - DEBUG - dispatch pc=176, inst=STORE_FAST(arg=7, lineno=2063)
2024-06-28 20:38:20,513 - DEBUG - stack ['$const174.0']
2024-06-28 20:38:20,513 - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=2064)
2024-06-28 20:38:20,513 - DEBUG - stack []
2024-06-28 20:38:20,513 - DEBUG - dispatch pc=180, inst=LOAD_CONST(arg=1, lineno=2064)
2024-06-28 20:38:20,513 - DEBUG - stack ['$origsize178.1']
2024-06-28 20:38:20,513 - DEBUG - dispatch pc=182, inst=COMPARE_OP(arg=2, lineno=2064)
2024-06-28 20:38:20,513 - DEBUG - stack ['$origsize178.1', '$const180.2']
2024-06-28 20:38:20,513 - DEBUG - dispatch pc=188, inst=STORE_FAST(arg=8, lineno=2064)
2024-06-28 20:38:20,513 - DEBUG - stack ['$182compare_op.3']
2024-06-28 20:38:20,513 - DEBUG - dispatch pc=190, inst=JUMP_FORWARD(arg=14, lineno=2064)
2024-06-28 20:38:20,513 - DEBUG - stack []
2024-06-28 20:38:20,513 - DEBUG - end state. edges=[Edge(pc=220, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,513 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
2024-06-28 20:38:20,513 - DEBUG - stack: []
2024-06-28 20:38:20,513 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-06-28 20:38:20,514 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=0, lineno=2066)
2024-06-28 20:38:20,514 - DEBUG - stack []
2024-06-28 20:38:20,514 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=3, lineno=2066)
2024-06-28 20:38:20,514 - DEBUG - stack ['$origsize192.0']
2024-06-28 20:38:20,514 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=2, lineno=2066)
2024-06-28 20:38:20,514 - DEBUG - stack ['$origsize192.0', '$known_size194.1']
2024-06-28 20:38:20,514 - DEBUG - dispatch pc=200, inst=STORE_FAST(arg=7, lineno=2066)
2024-06-28 20:38:20,514 - DEBUG - stack ['$binop_floordiv196.2']
2024-06-28 20:38:20,514 - DEBUG - dispatch pc=202, inst=LOAD_FAST(arg=0, lineno=2067)
2024-06-28 20:38:20,514 - DEBUG - stack []
2024-06-28 20:38:20,514 - DEBUG - dispatch pc=204, inst=LOAD_FAST(arg=3, lineno=2067)
2024-06-28 20:38:20,514 - DEBUG - stack ['$origsize202.3']
2024-06-28 20:38:20,514 - DEBUG - dispatch pc=206, inst=BINARY_OP(arg=6, lineno=2067)
2024-06-28 20:38:20,514 - DEBUG - stack ['$origsize202.3', '$known_size204.4']
2024-06-28 20:38:20,514 - DEBUG - dispatch pc=210, inst=LOAD_CONST(arg=1, lineno=2067)
2024-06-28 20:38:20,514 - DEBUG - stack ['$binop_mod206.5']
2024-06-28 20:38:20,515 - DEBUG - dispatch pc=212, inst=COMPARE_OP(arg=2, lineno=2067)
2024-06-28 20:38:20,515 - DEBUG - stack ['$binop_mod206.5', '$const210.6']
2024-06-28 20:38:20,515 - DEBUG - dispatch pc=218, inst=STORE_FAST(arg=8, lineno=2067)
2024-06-28 20:38:20,515 - DEBUG - stack ['$212compare_op.7']
2024-06-28 20:38:20,515 - DEBUG - end state. edges=[Edge(pc=220, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,515 - DEBUG - pending: deque([State(pc_initial=220 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
2024-06-28 20:38:20,515 - DEBUG - stack: []
2024-06-28 20:38:20,515 - DEBUG - state.pc_initial: State(pc_initial=220 nstack_initial=0)
2024-06-28 20:38:20,515 - DEBUG - dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=2068)
2024-06-28 20:38:20,515 - DEBUG - stack []
2024-06-28 20:38:20,515 - DEBUG - dispatch pc=222, inst=POP_JUMP_FORWARD_IF_TRUE(arg=15, lineno=2068)
2024-06-28 20:38:20,515 - DEBUG - stack ['$ok220.0']
2024-06-28 20:38:20,515 - DEBUG - end state. edges=[Edge(pc=224, stack=(), blockstack=(), npush=0), Edge(pc=254, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:20,515 - DEBUG - pending: deque([State(pc_initial=220 nstack_initial=0), State(pc_initial=224 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
2024-06-28 20:38:20,515 - DEBUG - pending: deque([State(pc_initial=224 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
2024-06-28 20:38:20,515 - DEBUG - stack: []
2024-06-28 20:38:20,516 - DEBUG - state.pc_initial: State(pc_initial=224 nstack_initial=0)
2024-06-28 20:38:20,516 - DEBUG - dispatch pc=224, inst=LOAD_GLOBAL(arg=3, lineno=2069)
2024-06-28 20:38:20,516 - DEBUG - stack []
2024-06-28 20:38:20,516 - DEBUG - dispatch pc=236, inst=LOAD_CONST(arg=3, lineno=2069)
2024-06-28 20:38:20,516 - DEBUG - stack ['$null$224.1', '$224load_global.0']
2024-06-28 20:38:20,516 - DEBUG - dispatch pc=238, inst=PRECALL(arg=1, lineno=2069)
2024-06-28 20:38:20,516 - DEBUG - stack ['$null$224.1', '$224load_global.0', '$const236.2']
2024-06-28 20:38:20,516 - DEBUG - dispatch pc=242, inst=CALL(arg=1, lineno=2069)
2024-06-28 20:38:20,516 - DEBUG - stack ['$null$224.1', '$224load_global.0', '$const236.2']
2024-06-28 20:38:20,516 - DEBUG - dispatch pc=252, inst=RAISE_VARARGS(arg=1, lineno=2069)
2024-06-28 20:38:20,516 - DEBUG - stack ['$242call.3']
2024-06-28 20:38:20,516 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,516 - DEBUG - pending: deque([State(pc_initial=254 nstack_initial=0)])
2024-06-28 20:38:20,516 - DEBUG - stack: []
2024-06-28 20:38:20,517 - DEBUG - state.pc_initial: State(pc_initial=254 nstack_initial=0)
2024-06-28 20:38:20,517 - DEBUG - dispatch pc=254, inst=LOAD_FAST(arg=7, lineno=2070)
2024-06-28 20:38:20,517 - DEBUG - stack []
2024-06-28 20:38:20,517 - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=1, lineno=2070)
2024-06-28 20:38:20,517 - DEBUG - stack ['$inferred254.0']
2024-06-28 20:38:20,517 - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=6, lineno=2070)
2024-06-28 20:38:20,517 - DEBUG - stack ['$inferred254.0', '$shape256.1']
2024-06-28 20:38:20,517 - DEBUG - dispatch pc=260, inst=STORE_SUBSCR(arg=None, lineno=2070)
2024-06-28 20:38:20,517 - DEBUG - stack ['$inferred254.0', '$shape256.1', '$neg_ax258.2']
2024-06-28 20:38:20,517 - DEBUG - dispatch pc=264, inst=LOAD_CONST(arg=0, lineno=2070)
2024-06-28 20:38:20,517 - DEBUG - stack []
2024-06-28 20:38:20,517 - DEBUG - dispatch pc=266, inst=RETURN_VALUE(arg=None, lineno=2070)
2024-06-28 20:38:20,517 - DEBUG - stack ['$const264.3']
2024-06-28 20:38:20,517 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,518 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:20,518 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=1): {'$phi42.0'},
             State(pc_initial=44 nstack_initial=2): {'$phi44.1'},
             State(pc_initial=64 nstack_initial=1): set(),
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=162 nstack_initial=0): set(),
             State(pc_initial=174 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=220 nstack_initial=0): set(),
             State(pc_initial=224 nstack_initial=0): set(),
             State(pc_initial=254 nstack_initial=0): set(),
             State(pc_initial=268 nstack_initial=0): set()})
2024-06-28 20:38:20,519 - DEBUG - defmap: {'$phi42.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.1': State(pc_initial=42 nstack_initial=1)}
2024-06-28 20:38:20,519 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi44.0': {('$phi42.0', State(pc_initial=42 nstack_initial=1))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi80.0': {('$phi44.0', State(pc_initial=44 nstack_initial=2))}})
2024-06-28 20:38:20,520 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2024-06-28 20:38:20,520 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2024-06-28 20:38:20,521 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
2024-06-28 20:38:20,522 - DEBUG - keep phismap: {'$phi42.0': {('$40get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi44.1': {('$42for_iter.2', State(pc_initial=42 nstack_initial=1))}}
2024-06-28 20:38:20,522 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi42.0': '$40get_iter.6'},
             State(pc_initial=42 nstack_initial=1): {'$phi44.1': '$42for_iter.2'}})
2024-06-28 20:38:20,522 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:20,522 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'value': '$const4.0'}), (8, {'res': '$const8.1'}), (10, {'value': '$const8.1'}), (12, {'idx': 0, 'res': '$12load_global.2'}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {'res': '$shape24.4'}), (26, {}), (28, {}), (30, {'func': '$12load_global.2', 'args': ['$shape24.4'], 'kw_names': None, 'res': '$30call.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'value': '$30call.5', 'res': '$40get_iter.6'})), outgoing_phis={'$phi42.0': '$40get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$40get_iter.6',)})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=42 nstack_initial=1):
AdaptBlockInfo(insts=((42, {'iterator': '$phi42.0', 'pair': '$42for_iter.1', 'indval': '$42for_iter.2', 'pred': '$42for_iter.3'}),), outgoing_phis={'$phi44.1': '$42for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 44: ('$phi42.0', '$42for_iter.2')})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=44 nstack_initial=2):
AdaptBlockInfo(insts=((44, {'iterable': '$phi44.1', 'stores': ['$44unpack_sequence.2', '$44unpack_sequence.3'], 'tupleobj': '$44unpack_sequence.4'}), (46, {}), (48, {'value': '$44unpack_sequence.2'}), (50, {'value': '$44unpack_sequence.3'}), (52, {'res': '$s52.5'}), (54, {'res': '$const54.6'}), (56, {'lhs': '$s52.5', 'rhs': '$const54.6', 'res': '$56compare_op.7'}), (58, {}), (60, {}), (62, {'pred': '$56compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi44.0',), 80: ('$phi44.0',)})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'res': '$num_neg_value64.1'}), (66, {'res': '$const66.2'}), (68, {'op': '+=', 'lhs': '$num_neg_value64.1', 'rhs': '$const66.2', 'res': '$binop_iadd68.3'}), (70, {}), (72, {'value': '$binop_iadd68.3'}), (74, {'res': '$ax74.4'}), (76, {'value': '$ax74.4'}), (78, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi64.0',)})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$known_size80.1'}), (82, {'res': '$s82.2'}), (84, {'op': '*=', 'lhs': '$known_size80.1', 'rhs': '$s82.2', 'res': '$binop_imul84.3'}), (86, {}), (88, {'value': '$binop_imul84.3'}), (90, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi80.0',)})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$num_neg_value92.0'}), (94, {'res': '$const94.1'}), (96, {'lhs': '$num_neg_value92.0', 'rhs': '$const94.1', 'res': '$96compare_op.2'}), (98, {}), (100, {}), (102, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 150: ()})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$origsize104.0'}), (106, {'res': '$known_size106.1'}), (108, {'lhs': '$origsize104.0', 'rhs': '$known_size106.1', 'res': '$108compare_op.2'}), (110, {}), (112, {}), (114, {'pred': '$108compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 146: ()})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 1, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'res': '$const128.2'}), (130, {}), (132, {}), (134, {'func': '$116load_global.0', 'args': ['$const128.2'], 'kw_names': None, 'res': '$134call.3'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'exc': '$134call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$const146.0'}), (148, {'retval': '$const146.0', 'castval': '$148return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$num_neg_value150.0'}), (152, {'res': '$const152.1'}), (154, {'lhs': '$num_neg_value150.0', 'rhs': '$const152.1', 'res': '$154compare_op.2'}), (156, {}), (158, {}), (160, {'pred': '$154compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: (), 268: ()})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=162 nstack_initial=0):
AdaptBlockInfo(insts=((162, {'res': '$known_size162.0'}), (164, {'res': '$const164.1'}), (166, {'lhs': '$known_size162.0', 'rhs': '$const164.1', 'res': '$166compare_op.2'}), (168, {}), (170, {}), (172, {'pred': '$166compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: (), 192: ()})
2024-06-28 20:38:20,523 - DEBUG - block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=((174, {'res': '$const174.0'}), (176, {'value': '$const174.0'}), (178, {'res': '$origsize178.1'}), (180, {'res': '$const180.2'}), (182, {'lhs': '$origsize178.1', 'rhs': '$const180.2', 'res': '$182compare_op.3'}), (184, {}), (186, {}), (188, {'value': '$182compare_op.3'}), (190, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={220: ()})
2024-06-28 20:38:20,524 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$origsize192.0'}), (194, {'res': '$known_size194.1'}), (196, {'op': '//', 'lhs': '$origsize192.0', 'rhs': '$known_size194.1', 'res': '$binop_floordiv196.2'}), (198, {}), (200, {'value': '$binop_floordiv196.2'}), (202, {'res': '$origsize202.3'}), (204, {'res': '$known_size204.4'}), (206, {'op': '%', 'lhs': '$origsize202.3', 'rhs': '$known_size204.4', 'res': '$binop_mod206.5'}), (208, {}), (210, {'res': '$const210.6'}), (212, {'lhs': '$binop_mod206.5', 'rhs': '$const210.6', 'res': '$212compare_op.7'}), (214, {}), (216, {}), (218, {'value': '$212compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={220: ()})
2024-06-28 20:38:20,524 - DEBUG - block_infos State(pc_initial=220 nstack_initial=0):
AdaptBlockInfo(insts=((220, {'res': '$ok220.0'}), (222, {'pred': '$ok220.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: (), 254: ()})
2024-06-28 20:38:20,524 - DEBUG - block_infos State(pc_initial=224 nstack_initial=0):
AdaptBlockInfo(insts=((224, {'idx': 1, 'res': '$224load_global.0'}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'res': '$const236.2'}), (238, {}), (240, {}), (242, {'func': '$224load_global.0', 'args': ['$const236.2'], 'kw_names': None, 'res': '$242call.3'}), (244, {}), (246, {}), (248, {}), (250, {}), (252, {'exc': '$242call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,524 - DEBUG - block_infos State(pc_initial=254 nstack_initial=0):
AdaptBlockInfo(insts=((254, {'res': '$inferred254.0'}), (256, {'res': '$shape256.1'}), (258, {'res': '$neg_ax258.2'}), (260, {'target': '$shape256.1', 'index': '$neg_ax258.2', 'value': '$inferred254.0'}), (262, {}), (264, {'res': '$const264.3'}), (266, {'retval': '$const264.3', 'castval': '$266return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,524 - DEBUG - block_infos State(pc_initial=268 nstack_initial=0):
AdaptBlockInfo(insts=((268, {'idx': 1, 'res': '$268load_global.0'}), (270, {}), (272, {}), (274, {}), (276, {}), (278, {}), (280, {'res': '$const280.2'}), (282, {}), (284, {}), (286, {'func': '$268load_global.0', 'args': ['$const280.2'], 'kw_names': None, 'res': '$286call.3'}), (288, {}), (290, {}), (292, {}), (294, {}), (296, {'exc': '$286call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,526 - DEBUG - label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $12load_global.2 = global(enumerate: <class 'enumerate'>) ['$12load_global.2']
    $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.2', '$30call.5', 'shape']
    $40get_iter.6 = getiter(value=$30call.5) ['$30call.5', '$40get_iter.6']
    $phi42.0 = $40get_iter.6                 ['$40get_iter.6', '$phi42.0']
    jump 42                                  []
label 42:
    $42for_iter.1 = iternext(value=$phi42.0) ['$42for_iter.1', '$phi42.0']
    $42for_iter.2 = pair_first(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.2']
    $42for_iter.3 = pair_second(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.3']
    $phi44.1 = $42for_iter.2                 ['$42for_iter.2', '$phi44.1']
    branch $42for_iter.3, 44, 92             ['$42for_iter.3']
label 44:
    $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2) ['$44unpack_sequence.4', '$phi44.1']
    $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$44unpack_sequence.2', '$44unpack_sequence.4']
    $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$44unpack_sequence.3', '$44unpack_sequence.4']
    ax = $44unpack_sequence.2                ['$44unpack_sequence.2', 'ax']
    s = $44unpack_sequence.3                 ['$44unpack_sequence.3', 's']
    $const54.6 = const(int, 0)               ['$const54.6']
    $56compare_op.7 = s < $const54.6         ['$56compare_op.7', '$const54.6', 's']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.7', '$62pred', 'bool62']
    branch $62pred, 64, 80                   ['$62pred']
label 64:
    $const66.2 = const(int, 1)               ['$const66.2']
    $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd68.3', '$const66.2', 'num_neg_value']
    num_neg_value = $binop_iadd68.3          ['$binop_iadd68.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 42                                  []
label 80:
    $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul84.3', 'known_size', 's']
    known_size = $binop_imul84.3             ['$binop_imul84.3', 'known_size']
    jump 42                                  []
label 92:
    $const94.1 = const(int, 0)               ['$const94.1']
    $96compare_op.2 = num_neg_value == $const94.1 ['$96compare_op.2', '$const94.1', 'num_neg_value']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None) ['$102pred', '$96compare_op.2', 'bool102']
    branch $102pred, 104, 150                ['$102pred']
label 104:
    $108compare_op.2 = origsize != known_size ['$108compare_op.2', 'known_size', 'origsize']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None) ['$108compare_op.2', '$114pred', 'bool114']
    branch $114pred, 116, 146                ['$114pred']
label 116:
    $116load_global.0 = global(ValueError: <class 'ValueError'>) ['$116load_global.0']
    $const128.2 = const(str, total size of new array must be unchanged) ['$const128.2']
    $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.0', '$134call.3', '$const128.2']
    raise $134call.3                         ['$134call.3']
label 146:
    $const146.0 = const(NoneType, None)      ['$const146.0']
    $148return_value.1 = cast(value=$const146.0) ['$148return_value.1', '$const146.0']
    return $148return_value.1                ['$148return_value.1']
label 150:
    $const152.1 = const(int, 1)              ['$const152.1']
    $154compare_op.2 = num_neg_value == $const152.1 ['$154compare_op.2', '$const152.1', 'num_neg_value']
    bool160 = global(bool: <class 'bool'>)   ['bool160']
    $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None) ['$154compare_op.2', '$160pred', 'bool160']
    branch $160pred, 162, 268                ['$160pred']
label 162:
    $const164.1 = const(int, 0)              ['$const164.1']
    $166compare_op.2 = known_size == $const164.1 ['$166compare_op.2', '$const164.1', 'known_size']
    bool172 = global(bool: <class 'bool'>)   ['bool172']
    $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None) ['$166compare_op.2', '$172pred', 'bool172']
    branch $172pred, 174, 192                ['$172pred']
label 174:
    inferred = const(int, 0)                 ['inferred']
    $const180.2 = const(int, 0)              ['$const180.2']
    ok = origsize == $const180.2             ['$const180.2', 'ok', 'origsize']
    jump 220                                 []
label 192:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $binop_mod206.5 = origsize % known_size  ['$binop_mod206.5', 'known_size', 'origsize']
    $const210.6 = const(int, 0)              ['$const210.6']
    ok = $binop_mod206.5 == $const210.6      ['$binop_mod206.5', '$const210.6', 'ok']
    jump 220                                 []
label 220:
    bool222 = global(bool: <class 'bool'>)   ['bool222']
    $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None) ['$222pred', 'bool222', 'ok']
    branch $222pred, 254, 224                ['$222pred']
label 224:
    $224load_global.0 = global(ValueError: <class 'ValueError'>) ['$224load_global.0']
    $const236.2 = const(str, total size of new array must be unchanged) ['$const236.2']
    $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None) ['$224load_global.0', '$242call.3', '$const236.2']
    raise $242call.3                         ['$242call.3']
label 254:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    $const264.3 = const(NoneType, None)      ['$const264.3']
    $266return_value.4 = cast(value=$const264.3) ['$266return_value.4', '$const264.3']
    return $266return_value.4                ['$266return_value.4']
label 268:
    $268load_global.0 = global(ValueError: <class 'ValueError'>) ['$268load_global.0']
    $const280.2 = const(str, multiple negative shape values) ['$const280.2']
    $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_global.0', '$286call.3', '$const280.2']
    raise $286call.3                         ['$286call.3']

2024-06-28 20:38:20,537 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:20,537 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,537 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,537 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,537 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,537 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,537 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,537 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,537 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,537 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,537 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,537 - DEBUG - ==== SSA block analysis pass on 42
2024-06-28 20:38:20,538 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,538 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,538 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,538 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,538 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,538 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,538 - DEBUG - ==== SSA block analysis pass on 44
2024-06-28 20:38:20,538 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,538 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,538 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,538 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,538 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,538 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,538 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,539 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,539 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,539 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,539 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,539 - DEBUG - ==== SSA block analysis pass on 64
2024-06-28 20:38:20,539 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,539 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,539 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,539 - DEBUG - on stmt: num_neg_value = $binop_iadd68.3
2024-06-28 20:38:20,539 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,539 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,540 - DEBUG - ==== SSA block analysis pass on 80
2024-06-28 20:38:20,540 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,540 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,540 - DEBUG - on stmt: known_size = $binop_imul84.3
2024-06-28 20:38:20,540 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,540 - DEBUG - ==== SSA block analysis pass on 92
2024-06-28 20:38:20,540 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,540 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,540 - DEBUG - on stmt: $96compare_op.2 = num_neg_value == $const94.1
2024-06-28 20:38:20,540 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,540 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,540 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,540 - DEBUG - ==== SSA block analysis pass on 104
2024-06-28 20:38:20,540 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,540 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-06-28 20:38:20,541 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,541 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,541 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,541 - DEBUG - ==== SSA block analysis pass on 116
2024-06-28 20:38:20,541 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,541 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,541 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,541 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,541 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,541 - DEBUG - ==== SSA block analysis pass on 146
2024-06-28 20:38:20,541 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,541 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,541 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,541 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,541 - DEBUG - ==== SSA block analysis pass on 150
2024-06-28 20:38:20,542 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,542 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,542 - DEBUG - on stmt: $154compare_op.2 = num_neg_value == $const152.1
2024-06-28 20:38:20,542 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,542 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,542 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,542 - DEBUG - ==== SSA block analysis pass on 162
2024-06-28 20:38:20,542 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,542 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,542 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-06-28 20:38:20,542 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,542 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,542 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,542 - DEBUG - ==== SSA block analysis pass on 174
2024-06-28 20:38:20,542 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,543 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,543 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,543 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,543 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,543 - DEBUG - ==== SSA block analysis pass on 192
2024-06-28 20:38:20,543 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,543 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-28 20:38:20,543 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-06-28 20:38:20,543 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,543 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,543 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,543 - DEBUG - ==== SSA block analysis pass on 220
2024-06-28 20:38:20,543 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,543 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,543 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,544 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,544 - DEBUG - ==== SSA block analysis pass on 224
2024-06-28 20:38:20,544 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,544 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,544 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,544 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,544 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,544 - DEBUG - ==== SSA block analysis pass on 254
2024-06-28 20:38:20,544 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,544 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-28 20:38:20,544 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,544 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,545 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,545 - DEBUG - ==== SSA block analysis pass on 268
2024-06-28 20:38:20,545 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,545 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,545 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,545 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,545 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,545 - DEBUG - ==== SSA block analysis pass on 269
2024-06-28 20:38:20,545 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66d07e90>
2024-06-28 20:38:20,545 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,549 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102pred': [(<numba.core.ir.Assign object at 0x7f7a66ef5350>,
                           92)],
             '$108compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a66ed95d0>,
                                   104)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f7a66ed8b90>,
                           104)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66ed87d0>,
                                    116)],
             '$12load_global.2': [(<numba.core.ir.Assign object at 0x7f7a66d103d0>,
                                   0)],
             '$134call.3': [(<numba.core.ir.Assign object at 0x7f7a66ed8350>,
                             116)],
             '$148return_value.1': [(<numba.core.ir.Assign object at 0x7f7a66ed8e90>,
                                     146)],
             '$154compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a66edba10>,
                                   150)],
             '$160pred': [(<numba.core.ir.Assign object at 0x7f7a66edb690>,
                           150)],
             '$166compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a66edb290>,
                                   162)],
             '$172pred': [(<numba.core.ir.Assign object at 0x7f7a66edac50>,
                           162)],
             '$222pred': [(<numba.core.ir.Assign object at 0x7f7a66d02b90>,
                           220)],
             '$224load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66d03b10>,
                                    224)],
             '$242call.3': [(<numba.core.ir.Assign object at 0x7f7a66d034d0>,
                             224)],
             '$266return_value.4': [(<numba.core.ir.Assign object at 0x7f7a66d027d0>,
                                     254)],
             '$268load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66d01e90>,
                                    268)],
             '$286call.3': [(<numba.core.ir.Assign object at 0x7f7a66d01f10>,
                             268)],
             '$30call.5': [(<numba.core.ir.Assign object at 0x7f7a66ef5510>,
                            0)],
             '$40get_iter.6': [(<numba.core.ir.Assign object at 0x7f7a66ef6550>,
                                0)],
             '$42for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a66ef6310>,
                                42)],
             '$42for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a66ef6bd0>,
                                42)],
             '$42for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a66ef5810>,
                                42)],
             '$44unpack_sequence.2': [(<numba.core.ir.Assign object at 0x7f7a66ef5b10>,
                                       44)],
             '$44unpack_sequence.3': [(<numba.core.ir.Assign object at 0x7f7a66ef5150>,
                                       44)],
             '$44unpack_sequence.4': [(<numba.core.ir.Assign object at 0x7f7a66ef6750>,
                                       44)],
             '$56compare_op.7': [(<numba.core.ir.Assign object at 0x7f7a66ef7a10>,
                                  44)],
             '$62pred': [(<numba.core.ir.Assign object at 0x7f7a66ef75d0>, 44)],
             '$96compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a66ef49d0>,
                                  92)],
             '$binop_iadd68.3': [(<numba.core.ir.Assign object at 0x7f7a66ef7cd0>,
                                  64)],
             '$binop_imul84.3': [(<numba.core.ir.Assign object at 0x7f7a66ef6f10>,
                                  80)],
             '$binop_mod206.5': [(<numba.core.ir.Assign object at 0x7f7a66d00b90>,
                                  192)],
             '$const128.2': [(<numba.core.ir.Assign object at 0x7f7a66eda110>,
                              116)],
             '$const146.0': [(<numba.core.ir.Assign object at 0x7f7a66edb0d0>,
                              146)],
             '$const152.1': [(<numba.core.ir.Assign object at 0x7f7a66edbf90>,
                              150)],
             '$const164.1': [(<numba.core.ir.Assign object at 0x7f7a66eda850>,
                              162)],
             '$const180.2': [(<numba.core.ir.Assign object at 0x7f7a66ed9690>,
                              174)],
             '$const210.6': [(<numba.core.ir.Assign object at 0x7f7a66d01d50>,
                              192)],
             '$const236.2': [(<numba.core.ir.Assign object at 0x7f7a66d03690>,
                              224)],
             '$const264.3': [(<numba.core.ir.Assign object at 0x7f7a66d02890>,
                              254)],
             '$const280.2': [(<numba.core.ir.Assign object at 0x7f7a66d03f10>,
                              268)],
             '$const54.6': [(<numba.core.ir.Assign object at 0x7f7a66ef5ed0>,
                             44)],
             '$const66.2': [(<numba.core.ir.Assign object at 0x7f7a66ef76d0>,
                             64)],
             '$const94.1': [(<numba.core.ir.Assign object at 0x7f7a66ef4a10>,
                             92)],
             '$phi42.0': [(<numba.core.ir.Assign object at 0x7f7a66ff0610>, 0)],
             '$phi44.1': [(<numba.core.ir.Assign object at 0x7f7a66ef6a10>,
                           42)],
             'ax': [(<numba.core.ir.Assign object at 0x7f7a66ef5ad0>, 44)],
             'bool102': [(<numba.core.ir.Assign object at 0x7f7a66ef4750>, 92)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f7a66ed8ad0>,
                          104)],
             'bool160': [(<numba.core.ir.Assign object at 0x7f7a66edb6d0>,
                          150)],
             'bool172': [(<numba.core.ir.Assign object at 0x7f7a66edaa10>,
                          162)],
             'bool222': [(<numba.core.ir.Assign object at 0x7f7a66d03b90>,
                          220)],
             'bool62': [(<numba.core.ir.Assign object at 0x7f7a66ef7310>, 44)],
             'inferred': [(<numba.core.ir.Assign object at 0x7f7a66eda290>,
                           174),
                          (<numba.core.ir.Assign object at 0x7f7a66ed8b50>,
                           192)],
             'known_size': [(<numba.core.ir.Assign object at 0x7f7a66ff1090>,
                             0),
                            (<numba.core.ir.Assign object at 0x7f7a66ef5490>,
                             80)],
             'neg_ax': [(<numba.core.ir.Assign object at 0x7f7a66ef7ad0>, 64)],
             'num_neg_value': [(<numba.core.ir.Assign object at 0x7f7a66ff1910>,
                                0),
                               (<numba.core.ir.Assign object at 0x7f7a66eb1890>,
                                64)],
             'ok': [(<numba.core.ir.Assign object at 0x7f7a66ed9450>, 174),
                    (<numba.core.ir.Assign object at 0x7f7a66d03c90>, 192)],
             'origsize': [(<numba.core.ir.Assign object at 0x7f7a66d07290>, 0)],
             's': [(<numba.core.ir.Assign object at 0x7f7a66ef6e90>, 44)],
             'shape': [(<numba.core.ir.Assign object at 0x7f7a66d06a50>, 0)]})
2024-06-28 20:38:20,549 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a66d07e90>
2024-06-28 20:38:20,549 - DEBUG - Fix SSA violator on var num_neg_value
2024-06-28 20:38:20,549 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,549 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,549 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,549 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,549 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,549 - DEBUG - first assign: num_neg_value
2024-06-28 20:38:20,549 - DEBUG - replaced with: num_neg_value = const(int, 0)
2024-06-28 20:38:20,549 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,549 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,549 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,550 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,550 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,550 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,550 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,550 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,550 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,550 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,550 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,550 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,550 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,550 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,550 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,551 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,551 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,551 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,551 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,551 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,551 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,551 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,551 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,551 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,551 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,551 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,552 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,552 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,552 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,552 - DEBUG - on stmt: num_neg_value = $binop_iadd68.3
2024-06-28 20:38:20,552 - DEBUG - replaced with: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,552 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,552 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,552 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,552 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,552 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,552 - DEBUG - on stmt: known_size = $binop_imul84.3
2024-06-28 20:38:20,552 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,552 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,552 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,553 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,553 - DEBUG - on stmt: $96compare_op.2 = num_neg_value == $const94.1
2024-06-28 20:38:20,553 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,553 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,553 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,553 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,553 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,553 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-06-28 20:38:20,553 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,553 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,553 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,553 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,553 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,553 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,553 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,554 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,554 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,554 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,554 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,554 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,554 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,554 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,554 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,554 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,554 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,554 - DEBUG - on stmt: $154compare_op.2 = num_neg_value == $const152.1
2024-06-28 20:38:20,554 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,554 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,554 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,554 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,555 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,555 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,555 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-06-28 20:38:20,555 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,555 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,555 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,555 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,555 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,555 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,555 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,555 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,555 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,555 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,555 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,555 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-28 20:38:20,555 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-06-28 20:38:20,556 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,556 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,556 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,556 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,556 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,556 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,556 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,556 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,556 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,556 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,556 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,556 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,556 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,556 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,556 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,557 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,557 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-28 20:38:20,557 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,557 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,557 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,557 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,557 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,557 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,557 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,557 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,557 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,557 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,557 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0850>
2024-06-28 20:38:20,557 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,557 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a66ff2210>],
             64: [<numba.core.ir.Assign object at 0x7f7a66ff1fd0>]})
2024-06-28 20:38:20,558 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,558 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,558 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,558 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,558 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,558 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,558 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,558 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,558 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,558 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,558 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,558 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,558 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,559 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,559 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,559 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,559 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,559 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,559 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,559 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,559 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,559 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,559 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,559 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,559 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,559 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,559 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,559 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,560 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,560 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,560 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,560 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,560 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,560 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,560 - DEBUG - find_def var='num_neg_value' stmt=$binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,560 - DEBUG - find_def_from_top label 64
2024-06-28 20:38:20,560 - DEBUG - idom 44 from label 64
2024-06-28 20:38:20,560 - DEBUG - find_def_from_bottom label 44
2024-06-28 20:38:20,560 - DEBUG - find_def_from_top label 44
2024-06-28 20:38:20,560 - DEBUG - idom 42 from label 44
2024-06-28 20:38:20,560 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,560 - DEBUG - find_def_from_top label 42
2024-06-28 20:38:20,560 - DEBUG - insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 42
2024-06-28 20:38:20,561 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:20,561 - DEBUG - incoming_def num_neg_value = const(int, 0)
2024-06-28 20:38:20,561 - DEBUG - find_def_from_bottom label 269
2024-06-28 20:38:20,561 - DEBUG - find_def_from_top label 269
2024-06-28 20:38:20,561 - DEBUG - insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 269
2024-06-28 20:38:20,561 - DEBUG - find_def_from_bottom label 64
2024-06-28 20:38:20,561 - DEBUG - incoming_def num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,561 - DEBUG - find_def_from_bottom label 80
2024-06-28 20:38:20,562 - DEBUG - find_def_from_top label 80
2024-06-28 20:38:20,562 - DEBUG - idom 44 from label 80
2024-06-28 20:38:20,562 - DEBUG - find_def_from_bottom label 44
2024-06-28 20:38:20,562 - DEBUG - find_def_from_top label 44
2024-06-28 20:38:20,562 - DEBUG - idom 42 from label 44
2024-06-28 20:38:20,562 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,562 - DEBUG - incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047)], incoming_blocks=[0])
2024-06-28 20:38:20,562 - DEBUG - incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,563 - DEBUG - replaced with: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,563 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,563 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,563 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,563 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,563 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,563 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,563 - DEBUG - on stmt: known_size = $binop_imul84.3
2024-06-28 20:38:20,563 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,563 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,563 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,563 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,563 - DEBUG - on stmt: $96compare_op.2 = num_neg_value == $const94.1
2024-06-28 20:38:20,563 - DEBUG - find_def var='num_neg_value' stmt=$96compare_op.2 = num_neg_value == $const94.1
2024-06-28 20:38:20,563 - DEBUG - find_def_from_top label 92
2024-06-28 20:38:20,563 - DEBUG - idom 42 from label 92
2024-06-28 20:38:20,564 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,564 - DEBUG - replaced with: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-06-28 20:38:20,564 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,564 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,564 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,564 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,564 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,564 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-06-28 20:38:20,564 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,564 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,564 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,564 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,564 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,564 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,565 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,565 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,565 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,565 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,565 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,565 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,565 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,565 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,565 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,565 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,565 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,565 - DEBUG - on stmt: $154compare_op.2 = num_neg_value == $const152.1
2024-06-28 20:38:20,565 - DEBUG - find_def var='num_neg_value' stmt=$154compare_op.2 = num_neg_value == $const152.1
2024-06-28 20:38:20,565 - DEBUG - find_def_from_top label 150
2024-06-28 20:38:20,565 - DEBUG - idom 92 from label 150
2024-06-28 20:38:20,566 - DEBUG - find_def_from_bottom label 92
2024-06-28 20:38:20,566 - DEBUG - find_def_from_top label 92
2024-06-28 20:38:20,566 - DEBUG - idom 42 from label 92
2024-06-28 20:38:20,566 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,566 - DEBUG - replaced with: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-06-28 20:38:20,566 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,566 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,566 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,566 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,566 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,566 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,566 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-06-28 20:38:20,566 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,566 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,567 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,567 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,567 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,567 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,567 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,567 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,567 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,567 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,567 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,567 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-28 20:38:20,567 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-06-28 20:38:20,567 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,567 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,567 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,568 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,568 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,568 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,568 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,568 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,568 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,568 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,568 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,568 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,568 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,568 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,569 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,569 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,569 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-28 20:38:20,569 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,569 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,569 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,569 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,569 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,569 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,569 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,569 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,569 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,569 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,569 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eeb650>
2024-06-28 20:38:20,569 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,570 - DEBUG - Fix SSA violator on var known_size
2024-06-28 20:38:20,570 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,570 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,570 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,570 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,570 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,570 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,570 - DEBUG - first assign: known_size
2024-06-28 20:38:20,570 - DEBUG - replaced with: known_size = const(int, 1)
2024-06-28 20:38:20,570 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,570 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,570 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,570 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,570 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,570 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,570 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,571 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,571 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,571 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,571 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,571 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,571 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,571 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,571 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,571 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,571 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,571 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,571 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,571 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,571 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,571 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,571 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,572 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,572 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,572 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,572 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,572 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,572 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,572 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,572 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,572 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,572 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,572 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,572 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,572 - DEBUG - on stmt: known_size = $binop_imul84.3
2024-06-28 20:38:20,572 - DEBUG - replaced with: known_size.1 = $binop_imul84.3
2024-06-28 20:38:20,572 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,573 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,573 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,573 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-06-28 20:38:20,573 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,573 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,573 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,573 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,573 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-06-28 20:38:20,573 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,573 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,573 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,573 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,574 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,574 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,574 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,574 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,574 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,574 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,574 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,574 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,574 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,574 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,574 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,574 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,574 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-06-28 20:38:20,574 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,574 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,574 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,575 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,575 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,575 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,575 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-06-28 20:38:20,575 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,575 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,575 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,575 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,575 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,575 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,575 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,575 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,575 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,575 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,575 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,575 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-28 20:38:20,576 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-06-28 20:38:20,576 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,576 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,576 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,576 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,576 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,576 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,576 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,576 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,576 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,576 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,576 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,576 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,576 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,576 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,576 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,577 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,577 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-28 20:38:20,577 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,577 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,577 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,577 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,577 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,577 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,577 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,577 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,577 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,577 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,577 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff3ed0>
2024-06-28 20:38:20,577 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,577 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,578 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a66ff17d0>],
             80: [<numba.core.ir.Assign object at 0x7f7a66ff2a90>]})
2024-06-28 20:38:20,578 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,578 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,578 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,578 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,578 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,578 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,578 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,578 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,578 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,578 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,578 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,578 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,578 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,578 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,579 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,579 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,579 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,579 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,579 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,579 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,579 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,579 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,579 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,579 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,579 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,579 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,579 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,579 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,579 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,580 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,580 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,580 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,580 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,580 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,580 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,580 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,580 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,580 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,580 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,580 - DEBUG - find_def var='known_size' stmt=$binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,580 - DEBUG - find_def_from_top label 80
2024-06-28 20:38:20,580 - DEBUG - idom 44 from label 80
2024-06-28 20:38:20,581 - DEBUG - find_def_from_bottom label 44
2024-06-28 20:38:20,581 - DEBUG - find_def_from_top label 44
2024-06-28 20:38:20,581 - DEBUG - idom 42 from label 44
2024-06-28 20:38:20,581 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,581 - DEBUG - find_def_from_top label 42
2024-06-28 20:38:20,581 - DEBUG - insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 42
2024-06-28 20:38:20,581 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:20,581 - DEBUG - incoming_def known_size = const(int, 1)
2024-06-28 20:38:20,581 - DEBUG - find_def_from_bottom label 269
2024-06-28 20:38:20,581 - DEBUG - find_def_from_top label 269
2024-06-28 20:38:20,581 - DEBUG - insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 269
2024-06-28 20:38:20,582 - DEBUG - find_def_from_bottom label 64
2024-06-28 20:38:20,582 - DEBUG - find_def_from_top label 64
2024-06-28 20:38:20,582 - DEBUG - idom 44 from label 64
2024-06-28 20:38:20,582 - DEBUG - find_def_from_bottom label 44
2024-06-28 20:38:20,582 - DEBUG - find_def_from_top label 44
2024-06-28 20:38:20,582 - DEBUG - idom 42 from label 44
2024-06-28 20:38:20,582 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,582 - DEBUG - incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048)], incoming_blocks=[0])
2024-06-28 20:38:20,583 - DEBUG - find_def_from_bottom label 80
2024-06-28 20:38:20,583 - DEBUG - incoming_def known_size.1 = $binop_imul84.3
2024-06-28 20:38:20,583 - DEBUG - incoming_def known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,583 - DEBUG - replaced with: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,583 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-06-28 20:38:20,583 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,583 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,583 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,583 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-06-28 20:38:20,583 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,583 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,584 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,584 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,584 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,584 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size
2024-06-28 20:38:20,584 - DEBUG - find_def var='known_size' stmt=$108compare_op.2 = origsize != known_size
2024-06-28 20:38:20,584 - DEBUG - find_def_from_top label 104
2024-06-28 20:38:20,584 - DEBUG - idom 92 from label 104
2024-06-28 20:38:20,584 - DEBUG - find_def_from_bottom label 92
2024-06-28 20:38:20,584 - DEBUG - find_def_from_top label 92
2024-06-28 20:38:20,584 - DEBUG - idom 42 from label 92
2024-06-28 20:38:20,584 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,584 - DEBUG - replaced with: $108compare_op.2 = origsize != known_size.2
2024-06-28 20:38:20,584 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,584 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,584 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,585 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,585 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,585 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,585 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,585 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,585 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,585 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,585 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,585 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,585 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,585 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,585 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-06-28 20:38:20,585 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,586 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,586 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,586 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,586 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,586 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,586 - DEBUG - on stmt: $166compare_op.2 = known_size == $const164.1
2024-06-28 20:38:20,586 - DEBUG - find_def var='known_size' stmt=$166compare_op.2 = known_size == $const164.1
2024-06-28 20:38:20,586 - DEBUG - find_def_from_top label 162
2024-06-28 20:38:20,586 - DEBUG - idom 150 from label 162
2024-06-28 20:38:20,586 - DEBUG - find_def_from_bottom label 150
2024-06-28 20:38:20,586 - DEBUG - find_def_from_top label 150
2024-06-28 20:38:20,586 - DEBUG - idom 92 from label 150
2024-06-28 20:38:20,586 - DEBUG - find_def_from_bottom label 92
2024-06-28 20:38:20,586 - DEBUG - find_def_from_top label 92
2024-06-28 20:38:20,586 - DEBUG - idom 42 from label 92
2024-06-28 20:38:20,587 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,587 - DEBUG - replaced with: $166compare_op.2 = known_size.2 == $const164.1
2024-06-28 20:38:20,587 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,587 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,587 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,587 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,587 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,587 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,587 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,587 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,587 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,587 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,587 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,587 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-28 20:38:20,588 - DEBUG - find_def var='known_size' stmt=inferred = origsize // known_size
2024-06-28 20:38:20,588 - DEBUG - find_def_from_top label 192
2024-06-28 20:38:20,588 - DEBUG - idom 162 from label 192
2024-06-28 20:38:20,588 - DEBUG - find_def_from_bottom label 162
2024-06-28 20:38:20,588 - DEBUG - find_def_from_top label 162
2024-06-28 20:38:20,588 - DEBUG - idom 150 from label 162
2024-06-28 20:38:20,588 - DEBUG - find_def_from_bottom label 150
2024-06-28 20:38:20,588 - DEBUG - find_def_from_top label 150
2024-06-28 20:38:20,588 - DEBUG - idom 92 from label 150
2024-06-28 20:38:20,588 - DEBUG - find_def_from_bottom label 92
2024-06-28 20:38:20,588 - DEBUG - find_def_from_top label 92
2024-06-28 20:38:20,588 - DEBUG - idom 42 from label 92
2024-06-28 20:38:20,588 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,589 - DEBUG - replaced with: inferred = origsize // known_size.2
2024-06-28 20:38:20,589 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size
2024-06-28 20:38:20,589 - DEBUG - find_def var='known_size' stmt=$binop_mod206.5 = origsize % known_size
2024-06-28 20:38:20,589 - DEBUG - find_def_from_top label 192
2024-06-28 20:38:20,589 - DEBUG - idom 162 from label 192
2024-06-28 20:38:20,589 - DEBUG - find_def_from_bottom label 162
2024-06-28 20:38:20,589 - DEBUG - find_def_from_top label 162
2024-06-28 20:38:20,589 - DEBUG - idom 150 from label 162
2024-06-28 20:38:20,589 - DEBUG - find_def_from_bottom label 150
2024-06-28 20:38:20,589 - DEBUG - find_def_from_top label 150
2024-06-28 20:38:20,589 - DEBUG - idom 92 from label 150
2024-06-28 20:38:20,589 - DEBUG - find_def_from_bottom label 92
2024-06-28 20:38:20,589 - DEBUG - find_def_from_top label 92
2024-06-28 20:38:20,590 - DEBUG - idom 42 from label 92
2024-06-28 20:38:20,590 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,590 - DEBUG - replaced with: $binop_mod206.5 = origsize % known_size.2
2024-06-28 20:38:20,590 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,590 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,590 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,590 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,590 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,590 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,590 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,590 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,590 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,591 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,591 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,591 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,591 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,591 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,591 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,591 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,591 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-28 20:38:20,591 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,591 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,591 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,591 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,591 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,591 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,591 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,591 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,592 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,592 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,592 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,592 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,592 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,592 - DEBUG - Fix SSA violator on var inferred
2024-06-28 20:38:20,592 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,592 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,592 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,592 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,592 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,592 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,592 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,592 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,593 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,593 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,593 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,593 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,593 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,593 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,593 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,593 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,593 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,593 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,593 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,593 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,593 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,593 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,594 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,594 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,594 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,594 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,594 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,594 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,594 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,594 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,594 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,594 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,594 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,594 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,594 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,594 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,594 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,594 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,595 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,595 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-06-28 20:38:20,595 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,595 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,595 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,595 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-06-28 20:38:20,595 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,595 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,595 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,595 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,595 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-06-28 20:38:20,595 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,595 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,596 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,596 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,596 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,596 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,596 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,596 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,596 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,596 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,596 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,596 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,596 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,596 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,596 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-06-28 20:38:20,597 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,597 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,597 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,597 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,597 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,597 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-06-28 20:38:20,597 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,597 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,597 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,597 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,597 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,597 - DEBUG - first assign: inferred
2024-06-28 20:38:20,597 - DEBUG - replaced with: inferred = const(int, 0)
2024-06-28 20:38:20,598 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,598 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,598 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,598 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,598 - DEBUG - on stmt: inferred = origsize // known_size.2
2024-06-28 20:38:20,598 - DEBUG - replaced with: inferred.1 = origsize // known_size.2
2024-06-28 20:38:20,598 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-06-28 20:38:20,598 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,598 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,598 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,598 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,598 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,599 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,599 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,599 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,599 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,599 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,599 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,599 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,599 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,599 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,599 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,599 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-28 20:38:20,599 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,599 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,599 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,599 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,600 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,600 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,600 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,600 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,600 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,600 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,600 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,600 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,600 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {174: [<numba.core.ir.Assign object at 0x7f7a66eea610>],
             192: [<numba.core.ir.Assign object at 0x7f7a66e2d750>]})
2024-06-28 20:38:20,600 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,600 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,601 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,601 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,601 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,601 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,601 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,601 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,601 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,601 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,601 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,601 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,601 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,601 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,601 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,602 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,602 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,602 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,602 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,602 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,602 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,602 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,602 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,602 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,602 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,602 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,602 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,602 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,602 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,602 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,603 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,603 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,603 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,603 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,603 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,603 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,603 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,603 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,603 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,603 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,603 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,603 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,603 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-06-28 20:38:20,603 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,603 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,604 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,604 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-06-28 20:38:20,604 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,604 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,604 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,604 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,604 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-06-28 20:38:20,604 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,604 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,604 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,604 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,604 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,605 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,605 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,605 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,605 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,605 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,605 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,605 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,605 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,605 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,605 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,605 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,605 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-06-28 20:38:20,605 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,605 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,605 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,605 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,606 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,606 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-06-28 20:38:20,606 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,606 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,606 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,606 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,606 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,606 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,606 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,606 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,606 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,606 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-28 20:38:20,606 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-06-28 20:38:20,607 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,607 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,607 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,607 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,607 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,607 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,607 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,607 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,607 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,607 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,607 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,607 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,607 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,607 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-28 20:38:20,608 - DEBUG - find_def var='inferred' stmt=shape[neg_ax] = inferred
2024-06-28 20:38:20,608 - DEBUG - find_def_from_top label 254
2024-06-28 20:38:20,608 - DEBUG - idom 220 from label 254
2024-06-28 20:38:20,608 - DEBUG - find_def_from_bottom label 220
2024-06-28 20:38:20,608 - DEBUG - find_def_from_top label 220
2024-06-28 20:38:20,608 - DEBUG - insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 220
2024-06-28 20:38:20,608 - DEBUG - find_def_from_bottom label 192
2024-06-28 20:38:20,608 - DEBUG - incoming_def inferred.1 = origsize // known_size.2
2024-06-28 20:38:20,608 - DEBUG - find_def_from_bottom label 174
2024-06-28 20:38:20,608 - DEBUG - incoming_def inferred = const(int, 0)
2024-06-28 20:38:20,608 - DEBUG - replaced with: shape[neg_ax] = inferred.2
2024-06-28 20:38:20,608 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,608 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,608 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,608 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,609 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,609 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,609 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,609 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,609 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ed8a50>
2024-06-28 20:38:20,609 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,609 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,609 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,609 - DEBUG - Fix SSA violator on var ok
2024-06-28 20:38:20,609 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,609 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,609 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,609 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,609 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,610 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,610 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,610 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,610 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,610 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,610 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,610 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,610 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,610 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,610 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,610 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,610 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,610 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,610 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,610 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,611 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,611 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,611 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,611 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,611 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,611 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,611 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,611 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,611 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,611 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,611 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,611 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,611 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,611 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,611 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,611 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,612 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,612 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,612 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,612 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,612 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,612 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,612 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-06-28 20:38:20,612 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,612 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,612 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,612 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,612 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-06-28 20:38:20,612 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,612 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,612 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,612 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,612 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,613 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-06-28 20:38:20,613 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,613 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,613 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,613 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,613 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,613 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,613 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,613 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,613 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,613 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,613 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,613 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,613 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,613 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,614 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,614 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,614 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,614 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-06-28 20:38:20,614 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,614 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,614 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,614 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,614 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,614 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,614 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-06-28 20:38:20,614 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,614 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,614 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,615 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,615 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,615 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,615 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,615 - DEBUG - first assign: ok
2024-06-28 20:38:20,615 - DEBUG - replaced with: ok = origsize == $const180.2
2024-06-28 20:38:20,615 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,615 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,615 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-28 20:38:20,615 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-06-28 20:38:20,615 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,615 - DEBUG - on stmt: ok = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,615 - DEBUG - replaced with: ok.1 = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,616 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,616 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,616 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,616 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-06-28 20:38:20,616 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,616 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,616 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,616 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,616 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,616 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,616 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,616 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,616 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,616 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,616 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,616 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-06-28 20:38:20,617 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,617 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,617 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,617 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,617 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,617 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,617 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,617 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,617 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,617 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,617 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66ee9f90>
2024-06-28 20:38:20,617 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,617 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,617 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,617 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {174: [<numba.core.ir.Assign object at 0x7f7a66e2e110>],
             192: [<numba.core.ir.Assign object at 0x7f7a66e2ced0>]})
2024-06-28 20:38:20,618 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,618 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,618 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,618 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,618 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,618 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,618 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,618 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,618 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,618 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,618 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,618 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,618 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,619 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,619 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,619 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,619 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,619 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,619 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,619 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,619 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,619 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,619 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,619 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,619 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,619 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,619 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,619 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,620 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,620 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,620 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,620 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,620 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,620 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,620 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,620 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,620 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,620 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-06-28 20:38:20,620 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,620 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,621 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,621 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,621 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-06-28 20:38:20,621 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,621 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,621 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,621 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,621 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,621 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-06-28 20:38:20,621 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,621 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,621 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,621 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,621 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,621 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,621 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,622 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,622 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,622 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,622 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,622 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,622 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,622 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,622 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,622 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-06-28 20:38:20,622 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,622 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,622 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,622 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,623 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,623 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-06-28 20:38:20,623 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,623 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,623 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,623 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,623 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,623 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,623 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,623 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,623 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,623 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-28 20:38:20,623 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-06-28 20:38:20,624 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,624 - DEBUG - on stmt: ok.1 = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,624 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,624 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,624 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,624 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-06-28 20:38:20,624 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,624 - DEBUG - on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,624 - DEBUG - find_def var='ok' stmt=$222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,624 - DEBUG - find_def_from_top label 220
2024-06-28 20:38:20,624 - DEBUG - insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 220
2024-06-28 20:38:20,624 - DEBUG - find_def_from_bottom label 192
2024-06-28 20:38:20,624 - DEBUG - incoming_def ok.1 = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,624 - DEBUG - find_def_from_bottom label 174
2024-06-28 20:38:20,625 - DEBUG - incoming_def ok = origsize == $const180.2
2024-06-28 20:38:20,625 - DEBUG - replaced with: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,625 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,625 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,625 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,625 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,625 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,625 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,625 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,625 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,625 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,625 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-06-28 20:38:20,625 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,625 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,625 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,626 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,626 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,626 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,626 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,626 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,626 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,626 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,626 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66ff0d50>
2024-06-28 20:38:20,626 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,626 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,626 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,626 - DEBUG - Fix SSA violator on var neg_ax
2024-06-28 20:38:20,626 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,626 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,626 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,626 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,627 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,627 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,627 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,627 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,627 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,627 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,627 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,627 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,627 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,627 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,627 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,627 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,627 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,627 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,628 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,628 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,628 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,628 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,628 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,628 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,628 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,628 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,628 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,628 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,628 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,628 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,628 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,628 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,628 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,628 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,629 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,629 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,629 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,629 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,629 - DEBUG - first assign: neg_ax
2024-06-28 20:38:20,629 - DEBUG - replaced with: neg_ax = ax
2024-06-28 20:38:20,629 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,629 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,629 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,629 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-06-28 20:38:20,629 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,629 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,629 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,629 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-06-28 20:38:20,630 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,630 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,630 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,630 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,630 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-06-28 20:38:20,630 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,630 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,630 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,630 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,630 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,631 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,631 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,631 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,631 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,631 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,631 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,631 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,631 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,631 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,631 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,631 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,631 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-06-28 20:38:20,631 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,632 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,632 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,632 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,632 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,632 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,632 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-06-28 20:38:20,632 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,632 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,632 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,632 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,632 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,632 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,632 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,632 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,632 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,632 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,633 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-28 20:38:20,633 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-06-28 20:38:20,633 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,633 - DEBUG - on stmt: ok.1 = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,633 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,633 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,633 - DEBUG - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[192, 174])
2024-06-28 20:38:20,633 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-06-28 20:38:20,633 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,633 - DEBUG - on stmt: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,633 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,633 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,634 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,634 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,634 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,634 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,634 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,634 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,634 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-06-28 20:38:20,634 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,634 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,634 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,634 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,634 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,634 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,634 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,634 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,635 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,635 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66eead10>
2024-06-28 20:38:20,635 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,635 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,635 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,635 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {64: [<numba.core.ir.Assign object at 0x7f7a66ee9fd0>]})
2024-06-28 20:38:20,635 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:20,635 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,635 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-28 20:38:20,635 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-28 20:38:20,635 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-28 20:38:20,635 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-28 20:38:20,635 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-28 20:38:20,636 - DEBUG - on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,636 - DEBUG - on stmt: $40get_iter.6 = getiter(value=$30call.5)
2024-06-28 20:38:20,636 - DEBUG - on stmt: $phi42.0 = $40get_iter.6
2024-06-28 20:38:20,636 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,636 - DEBUG - ==== SSA block rewrite pass on 42
2024-06-28 20:38:20,636 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,636 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,636 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 269])
2024-06-28 20:38:20,636 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2024-06-28 20:38:20,636 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2024-06-28 20:38:20,636 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2024-06-28 20:38:20,636 - DEBUG - on stmt: $phi44.1 = $42for_iter.2
2024-06-28 20:38:20,636 - DEBUG - on stmt: branch $42for_iter.3, 44, 92
2024-06-28 20:38:20,636 - DEBUG - ==== SSA block rewrite pass on 44
2024-06-28 20:38:20,637 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,637 - DEBUG - on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
2024-06-28 20:38:20,637 - DEBUG - on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,637 - DEBUG - on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-28 20:38:20,637 - DEBUG - on stmt: ax = $44unpack_sequence.2
2024-06-28 20:38:20,637 - DEBUG - on stmt: s = $44unpack_sequence.3
2024-06-28 20:38:20,637 - DEBUG - on stmt: $const54.6 = const(int, 0)
2024-06-28 20:38:20,637 - DEBUG - on stmt: $56compare_op.7 = s < $const54.6
2024-06-28 20:38:20,637 - DEBUG - on stmt: bool62 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,637 - DEBUG - on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,637 - DEBUG - on stmt: branch $62pred, 64, 80
2024-06-28 20:38:20,637 - DEBUG - ==== SSA block rewrite pass on 64
2024-06-28 20:38:20,637 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,637 - DEBUG - on stmt: $const66.2 = const(int, 1)
2024-06-28 20:38:20,637 - DEBUG - on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,637 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd68.3
2024-06-28 20:38:20,638 - DEBUG - on stmt: neg_ax = ax
2024-06-28 20:38:20,638 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,638 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-28 20:38:20,638 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,638 - DEBUG - on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:20,638 - DEBUG - on stmt: known_size.1 = $binop_imul84.3
2024-06-28 20:38:20,638 - DEBUG - on stmt: jump 269
2024-06-28 20:38:20,638 - DEBUG - ==== SSA block rewrite pass on 92
2024-06-28 20:38:20,638 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,638 - DEBUG - on stmt: $const94.1 = const(int, 0)
2024-06-28 20:38:20,638 - DEBUG - on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1
2024-06-28 20:38:20,638 - DEBUG - on stmt: bool102 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,638 - DEBUG - on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,638 - DEBUG - on stmt: branch $102pred, 104, 150
2024-06-28 20:38:20,638 - DEBUG - ==== SSA block rewrite pass on 104
2024-06-28 20:38:20,639 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,639 - DEBUG - on stmt: $108compare_op.2 = origsize != known_size.2
2024-06-28 20:38:20,639 - DEBUG - on stmt: bool114 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,639 - DEBUG - on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,639 - DEBUG - on stmt: branch $114pred, 116, 146
2024-06-28 20:38:20,639 - DEBUG - ==== SSA block rewrite pass on 116
2024-06-28 20:38:20,639 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,639 - DEBUG - on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,639 - DEBUG - on stmt: $const128.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,639 - DEBUG - on stmt: $134call.3 = call $116load_global.0($const128.2, func=$116load_global.0, args=[Var($const128.2, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,639 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,639 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-28 20:38:20,639 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,639 - DEBUG - on stmt: $const146.0 = const(NoneType, None)
2024-06-28 20:38:20,639 - DEBUG - on stmt: $148return_value.1 = cast(value=$const146.0)
2024-06-28 20:38:20,639 - DEBUG - on stmt: return $148return_value.1
2024-06-28 20:38:20,640 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-28 20:38:20,640 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,640 - DEBUG - on stmt: $const152.1 = const(int, 1)
2024-06-28 20:38:20,640 - DEBUG - on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1
2024-06-28 20:38:20,640 - DEBUG - on stmt: bool160 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,640 - DEBUG - on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,640 - DEBUG - on stmt: branch $160pred, 162, 268
2024-06-28 20:38:20,640 - DEBUG - ==== SSA block rewrite pass on 162
2024-06-28 20:38:20,640 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,640 - DEBUG - on stmt: $const164.1 = const(int, 0)
2024-06-28 20:38:20,640 - DEBUG - on stmt: $166compare_op.2 = known_size.2 == $const164.1
2024-06-28 20:38:20,640 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,640 - DEBUG - on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,640 - DEBUG - on stmt: branch $172pred, 174, 192
2024-06-28 20:38:20,640 - DEBUG - ==== SSA block rewrite pass on 174
2024-06-28 20:38:20,641 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,641 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-28 20:38:20,641 - DEBUG - on stmt: $const180.2 = const(int, 0)
2024-06-28 20:38:20,641 - DEBUG - on stmt: ok = origsize == $const180.2
2024-06-28 20:38:20,641 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,641 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:20,641 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,641 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-28 20:38:20,641 - DEBUG - on stmt: $binop_mod206.5 = origsize % known_size.2
2024-06-28 20:38:20,641 - DEBUG - on stmt: $const210.6 = const(int, 0)
2024-06-28 20:38:20,641 - DEBUG - on stmt: ok.1 = $binop_mod206.5 == $const210.6
2024-06-28 20:38:20,641 - DEBUG - on stmt: jump 220
2024-06-28 20:38:20,641 - DEBUG - ==== SSA block rewrite pass on 220
2024-06-28 20:38:20,641 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,641 - DEBUG - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[192, 174])
2024-06-28 20:38:20,642 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[192, 174])
2024-06-28 20:38:20,642 - DEBUG - on stmt: bool222 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,642 - DEBUG - on stmt: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,642 - DEBUG - on stmt: branch $222pred, 254, 224
2024-06-28 20:38:20,642 - DEBUG - ==== SSA block rewrite pass on 224
2024-06-28 20:38:20,642 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,642 - DEBUG - on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,642 - DEBUG - on stmt: $const236.2 = const(str, total size of new array must be unchanged)
2024-06-28 20:38:20,642 - DEBUG - on stmt: $242call.3 = call $224load_global.0($const236.2, func=$224load_global.0, args=[Var($const236.2, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,642 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-28 20:38:20,642 - DEBUG - ==== SSA block rewrite pass on 254
2024-06-28 20:38:20,642 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,642 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-06-28 20:38:20,642 - DEBUG - find_def var='neg_ax' stmt=shape[neg_ax] = inferred.2
2024-06-28 20:38:20,642 - DEBUG - find_def_from_top label 254
2024-06-28 20:38:20,643 - DEBUG - idom 220 from label 254
2024-06-28 20:38:20,643 - DEBUG - find_def_from_bottom label 220
2024-06-28 20:38:20,643 - DEBUG - find_def_from_top label 220
2024-06-28 20:38:20,643 - DEBUG - idom 162 from label 220
2024-06-28 20:38:20,643 - DEBUG - find_def_from_bottom label 162
2024-06-28 20:38:20,643 - DEBUG - find_def_from_top label 162
2024-06-28 20:38:20,643 - DEBUG - idom 150 from label 162
2024-06-28 20:38:20,643 - DEBUG - find_def_from_bottom label 150
2024-06-28 20:38:20,643 - DEBUG - find_def_from_top label 150
2024-06-28 20:38:20,643 - DEBUG - idom 92 from label 150
2024-06-28 20:38:20,643 - DEBUG - find_def_from_bottom label 92
2024-06-28 20:38:20,644 - DEBUG - find_def_from_top label 92
2024-06-28 20:38:20,644 - DEBUG - idom 42 from label 92
2024-06-28 20:38:20,644 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,644 - DEBUG - find_def_from_top label 42
2024-06-28 20:38:20,644 - DEBUG - insert phi node neg_ax.1 = phi(incoming_values=[], incoming_blocks=[]) at 42
2024-06-28 20:38:20,644 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:20,644 - DEBUG - find_def_from_top label 0
2024-06-28 20:38:20,644 - DEBUG - incoming_def <class 'numba.core.ssa.UndefinedVariable'>
2024-06-28 20:38:20,644 - DEBUG - find_def_from_bottom label 269
2024-06-28 20:38:20,645 - DEBUG - find_def_from_top label 269
2024-06-28 20:38:20,645 - DEBUG - insert phi node neg_ax.2 = phi(incoming_values=[], incoming_blocks=[]) at 269
2024-06-28 20:38:20,645 - DEBUG - find_def_from_bottom label 64
2024-06-28 20:38:20,645 - DEBUG - incoming_def neg_ax = ax
2024-06-28 20:38:20,645 - DEBUG - find_def_from_bottom label 80
2024-06-28 20:38:20,645 - DEBUG - find_def_from_top label 80
2024-06-28 20:38:20,645 - DEBUG - idom 44 from label 80
2024-06-28 20:38:20,645 - DEBUG - find_def_from_bottom label 44
2024-06-28 20:38:20,645 - DEBUG - find_def_from_top label 44
2024-06-28 20:38:20,645 - DEBUG - idom 42 from label 44
2024-06-28 20:38:20,645 - DEBUG - find_def_from_bottom label 42
2024-06-28 20:38:20,645 - DEBUG - incoming_def neg_ax.1 = phi(incoming_values=[Undefined], incoming_blocks=[0])
2024-06-28 20:38:20,645 - DEBUG - incoming_def neg_ax.2 = phi(incoming_values=[Var(neg_ax, arrayobj.py:2052), Var(neg_ax.1, arrayobj.py:2070)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,645 - DEBUG - replaced with: shape[neg_ax.1] = inferred.2
2024-06-28 20:38:20,645 - DEBUG - on stmt: $const264.3 = const(NoneType, None)
2024-06-28 20:38:20,646 - DEBUG - on stmt: $266return_value.4 = cast(value=$const264.3)
2024-06-28 20:38:20,646 - DEBUG - on stmt: return $266return_value.4
2024-06-28 20:38:20,646 - DEBUG - ==== SSA block rewrite pass on 268
2024-06-28 20:38:20,646 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,646 - DEBUG - on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,646 - DEBUG - on stmt: $const280.2 = const(str, multiple negative shape values)
2024-06-28 20:38:20,646 - DEBUG - on stmt: $286call.3 = call $268load_global.0($const280.2, func=$268load_global.0, args=[Var($const280.2, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,646 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-28 20:38:20,646 - DEBUG - ==== SSA block rewrite pass on 269
2024-06-28 20:38:20,646 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66eea7d0>
2024-06-28 20:38:20,646 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2054), Var(known_size.1, arrayobj.py:2054)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,646 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2051), Var(num_neg_value.2, arrayobj.py:2051)], incoming_blocks=[64, 80])
2024-06-28 20:38:20,646 - DEBUG - on stmt: jump 42
2024-06-28 20:38:20,850 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-06-28 20:38:20,850 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:20,850 - DEBUG - stack: []
2024-06-28 20:38:20,850 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:20,850 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-06-28 20:38:20,850 - DEBUG - stack []
2024-06-28 20:38:20,851 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-06-28 20:38:20,851 - DEBUG - stack []
2024-06-28 20:38:20,851 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-06-28 20:38:20,851 - DEBUG - stack []
2024-06-28 20:38:20,851 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-06-28 20:38:20,852 - DEBUG - stack ['$a4.0']
2024-06-28 20:38:20,852 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-06-28 20:38:20,852 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-06-28 20:38:20,852 - DEBUG - dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-06-28 20:38:20,852 - DEBUG - stack ['$8compare_op.2']
2024-06-28 20:38:20,852 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,852 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:20,852 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:20,852 - DEBUG - defmap: {}
2024-06-28 20:38:20,852 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:20,852 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:20,853 - DEBUG - keep phismap: {}
2024-06-28 20:38:20,853 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:20,853 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:20,853 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,853 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-06-28 20:38:20,858 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:20,858 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a6717f990>
2024-06-28 20:38:20,858 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:20,858 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-06-28 20:38:20,858 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-06-28 20:38:20,858 - DEBUG - on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-06-28 20:38:20,858 - DEBUG - on stmt: return $14return_value.3
2024-06-28 20:38:20,859 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x7f7a6717c090>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a6717eb90>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a6717e410>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7f7a6717ce50>, 0)]})
2024-06-28 20:38:20,859 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a6717f990>
2024-06-28 20:38:20,904 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=3535)
           2	RESUME(arg=0, lineno=3535)
           4	LOAD_GLOBAL(arg=1, lineno=3536)
          16	LOAD_FAST(arg=0, lineno=3536)
          18	PRECALL(arg=1, lineno=3536)
          22	CALL(arg=1, lineno=3536)
          32	STORE_FAST(arg=2, lineno=3536)
          34	LOAD_GLOBAL(arg=3, lineno=3537)
          46	LOAD_FAST(arg=2, lineno=3537)
          48	PRECALL(arg=1, lineno=3537)
          52	CALL(arg=1, lineno=3537)
          62	GET_ITER(arg=None, lineno=3537)
>         64	FOR_ITER(arg=54, lineno=3537)
          66	STORE_FAST(arg=3, lineno=3537)
          68	LOAD_FAST(arg=0, lineno=3538)
          70	LOAD_FAST(arg=3, lineno=3538)
          72	BINARY_SUBSCR(arg=None, lineno=3538)
          82	LOAD_FAST(arg=1, lineno=3538)
          84	LOAD_GLOBAL(arg=1, lineno=3538)
          96	LOAD_FAST(arg=1, lineno=3538)
          98	PRECALL(arg=1, lineno=3538)
         102	CALL(arg=1, lineno=3538)
         112	LOAD_FAST(arg=2, lineno=3538)
         114	BINARY_OP(arg=10, lineno=3538)
         118	LOAD_FAST(arg=3, lineno=3538)
         120	BINARY_OP(arg=0, lineno=3538)
         124	BINARY_SUBSCR(arg=None, lineno=3538)
         134	COMPARE_OP(arg=3, lineno=3538)
         140	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=3538)
         142	LOAD_GLOBAL(arg=5, lineno=3539)
         154	LOAD_CONST(arg=1, lineno=3539)
         156	PRECALL(arg=1, lineno=3539)
         160	CALL(arg=1, lineno=3539)
         170	RAISE_VARARGS(arg=1, lineno=3539)
>        172	JUMP_BACKWARD(arg=55, lineno=3538)
>        174	LOAD_CONST(arg=0, lineno=3537)
         176	RETURN_VALUE(arg=None, lineno=3537)
2024-06-28 20:38:20,904 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:20,904 - DEBUG - stack: []
2024-06-28 20:38:20,904 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:20,904 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=3535)
2024-06-28 20:38:20,904 - DEBUG - stack []
2024-06-28 20:38:20,904 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=3535)
2024-06-28 20:38:20,904 - DEBUG - stack []
2024-06-28 20:38:20,905 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=3536)
2024-06-28 20:38:20,905 - DEBUG - stack []
2024-06-28 20:38:20,905 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=3536)
2024-06-28 20:38:20,905 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:20,905 - DEBUG - dispatch pc=18, inst=PRECALL(arg=1, lineno=3536)
2024-06-28 20:38:20,905 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$shape16.2']
2024-06-28 20:38:20,905 - DEBUG - dispatch pc=22, inst=CALL(arg=1, lineno=3536)
2024-06-28 20:38:20,905 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$shape16.2']
2024-06-28 20:38:20,905 - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=2, lineno=3536)
2024-06-28 20:38:20,906 - DEBUG - stack ['$22call.3']
2024-06-28 20:38:20,906 - DEBUG - dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=3537)
2024-06-28 20:38:20,906 - DEBUG - stack []
2024-06-28 20:38:20,906 - DEBUG - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=3537)
2024-06-28 20:38:20,906 - DEBUG - stack ['$null$34.5', '$34load_global.4']
2024-06-28 20:38:20,906 - DEBUG - dispatch pc=48, inst=PRECALL(arg=1, lineno=3537)
2024-06-28 20:38:20,906 - DEBUG - stack ['$null$34.5', '$34load_global.4', '$n46.6']
2024-06-28 20:38:20,906 - DEBUG - dispatch pc=52, inst=CALL(arg=1, lineno=3537)
2024-06-28 20:38:20,906 - DEBUG - stack ['$null$34.5', '$34load_global.4', '$n46.6']
2024-06-28 20:38:20,906 - DEBUG - dispatch pc=62, inst=GET_ITER(arg=None, lineno=3537)
2024-06-28 20:38:20,906 - DEBUG - stack ['$52call.7']
2024-06-28 20:38:20,907 - DEBUG - end state. edges=[Edge(pc=64, stack=('$62get_iter.8',), blockstack=(), npush=0)]
2024-06-28 20:38:20,907 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=1)])
2024-06-28 20:38:20,907 - DEBUG - stack: ['$phi64.0']
2024-06-28 20:38:20,907 - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=1)
2024-06-28 20:38:20,907 - DEBUG - dispatch pc=64, inst=FOR_ITER(arg=54, lineno=3537)
2024-06-28 20:38:20,907 - DEBUG - stack ['$phi64.0']
2024-06-28 20:38:20,907 - DEBUG - end state. edges=[Edge(pc=174, stack=(), blockstack=(), npush=0), Edge(pc=66, stack=('$phi64.0', '$64for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:20,907 - DEBUG - pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=66 nstack_initial=2)])
2024-06-28 20:38:20,908 - DEBUG - stack: []
2024-06-28 20:38:20,908 - DEBUG - state.pc_initial: State(pc_initial=174 nstack_initial=0)
2024-06-28 20:38:20,908 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=0, lineno=3537)
2024-06-28 20:38:20,908 - DEBUG - stack []
2024-06-28 20:38:20,908 - DEBUG - dispatch pc=176, inst=RETURN_VALUE(arg=None, lineno=3537)
2024-06-28 20:38:20,908 - DEBUG - stack ['$const174.0']
2024-06-28 20:38:20,908 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,908 - DEBUG - pending: deque([State(pc_initial=66 nstack_initial=2)])
2024-06-28 20:38:20,908 - DEBUG - stack: ['$phi66.0', '$phi66.1']
2024-06-28 20:38:20,908 - DEBUG - state.pc_initial: State(pc_initial=66 nstack_initial=2)
2024-06-28 20:38:20,908 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=3, lineno=3537)
2024-06-28 20:38:20,908 - DEBUG - stack ['$phi66.0', '$phi66.1']
2024-06-28 20:38:20,908 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=3538)
2024-06-28 20:38:20,908 - DEBUG - stack ['$phi66.0']
2024-06-28 20:38:20,908 - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=3, lineno=3538)
2024-06-28 20:38:20,909 - DEBUG - stack ['$phi66.0', '$shape68.2']
2024-06-28 20:38:20,909 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2024-06-28 20:38:20,909 - DEBUG - stack ['$phi66.0', '$shape68.2', '$i70.3']
2024-06-28 20:38:20,909 - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=1, lineno=3538)
2024-06-28 20:38:20,909 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4']
2024-06-28 20:38:20,909 - DEBUG - dispatch pc=84, inst=LOAD_GLOBAL(arg=1, lineno=3538)
2024-06-28 20:38:20,909 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5']
2024-06-28 20:38:20,909 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=1, lineno=3538)
2024-06-28 20:38:20,909 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6']
2024-06-28 20:38:20,909 - DEBUG - dispatch pc=98, inst=PRECALL(arg=1, lineno=3538)
2024-06-28 20:38:20,909 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6', '$main_shape96.8']
2024-06-28 20:38:20,909 - DEBUG - dispatch pc=102, inst=CALL(arg=1, lineno=3538)
2024-06-28 20:38:20,909 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6', '$main_shape96.8']
2024-06-28 20:38:20,909 - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=3538)
2024-06-28 20:38:20,910 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$102call.9']
2024-06-28 20:38:20,910 - DEBUG - dispatch pc=114, inst=BINARY_OP(arg=10, lineno=3538)
2024-06-28 20:38:20,910 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$102call.9', '$n112.10']
2024-06-28 20:38:20,910 - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=3538)
2024-06-28 20:38:20,910 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_sub114.11']
2024-06-28 20:38:20,910 - DEBUG - dispatch pc=120, inst=BINARY_OP(arg=0, lineno=3538)
2024-06-28 20:38:20,910 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_sub114.11', '$i118.12']
2024-06-28 20:38:20,910 - DEBUG - dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2024-06-28 20:38:20,910 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_add120.13']
2024-06-28 20:38:20,910 - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=3538)
2024-06-28 20:38:20,910 - DEBUG - stack ['$phi66.0', '$72binary_subscr.4', '$124binary_subscr.14']
2024-06-28 20:38:20,910 - DEBUG - dispatch pc=140, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=3538)
2024-06-28 20:38:20,910 - DEBUG - stack ['$phi66.0', '$134compare_op.15']
2024-06-28 20:38:20,910 - DEBUG - end state. edges=[Edge(pc=142, stack=('$phi66.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi66.0',), blockstack=(), npush=0)]
2024-06-28 20:38:20,911 - DEBUG - pending: deque([State(pc_initial=142 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
2024-06-28 20:38:20,911 - DEBUG - stack: ['$phi142.0']
2024-06-28 20:38:20,911 - DEBUG - state.pc_initial: State(pc_initial=142 nstack_initial=1)
2024-06-28 20:38:20,911 - DEBUG - dispatch pc=142, inst=LOAD_GLOBAL(arg=5, lineno=3539)
2024-06-28 20:38:20,911 - DEBUG - stack ['$phi142.0']
2024-06-28 20:38:20,911 - DEBUG - dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=3539)
2024-06-28 20:38:20,911 - DEBUG - stack ['$phi142.0', '$null$142.2', '$142load_global.1']
2024-06-28 20:38:20,911 - DEBUG - dispatch pc=156, inst=PRECALL(arg=1, lineno=3539)
2024-06-28 20:38:20,911 - DEBUG - stack ['$phi142.0', '$null$142.2', '$142load_global.1', '$const154.3']
2024-06-28 20:38:20,911 - DEBUG - dispatch pc=160, inst=CALL(arg=1, lineno=3539)
2024-06-28 20:38:20,911 - DEBUG - stack ['$phi142.0', '$null$142.2', '$142load_global.1', '$const154.3']
2024-06-28 20:38:20,911 - DEBUG - dispatch pc=170, inst=RAISE_VARARGS(arg=1, lineno=3539)
2024-06-28 20:38:20,911 - DEBUG - stack ['$phi142.0', '$160call.4']
2024-06-28 20:38:20,911 - DEBUG - end state. edges=[]
2024-06-28 20:38:20,912 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=1)])
2024-06-28 20:38:20,912 - DEBUG - stack: ['$phi172.0']
2024-06-28 20:38:20,912 - DEBUG - state.pc_initial: State(pc_initial=172 nstack_initial=1)
2024-06-28 20:38:20,912 - DEBUG - dispatch pc=172, inst=JUMP_BACKWARD(arg=55, lineno=3538)
2024-06-28 20:38:20,912 - DEBUG - stack ['$phi172.0']
2024-06-28 20:38:20,912 - DEBUG - end state. edges=[Edge(pc=64, stack=('$phi172.0',), blockstack=(), npush=0)]
2024-06-28 20:38:20,912 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=1)])
2024-06-28 20:38:20,912 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:20,912 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=1): {'$phi64.0'},
             State(pc_initial=66 nstack_initial=2): {'$phi66.1'},
             State(pc_initial=142 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=174 nstack_initial=0): set()})
2024-06-28 20:38:20,913 - DEBUG - defmap: {'$phi64.0': State(pc_initial=0 nstack_initial=0),
 '$phi66.1': State(pc_initial=64 nstack_initial=1)}
2024-06-28 20:38:20,913 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$phi66.0', State(pc_initial=66 nstack_initial=2))},
             '$phi172.0': {('$phi66.0', State(pc_initial=66 nstack_initial=2))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi172.0',
                           State(pc_initial=172 nstack_initial=1))},
             '$phi66.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-06-28 20:38:20,913 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi172.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-06-28 20:38:20,913 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-06-28 20:38:20,914 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
2024-06-28 20:38:20,914 - DEBUG - keep phismap: {'$phi64.0': {('$62get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi66.1': {('$64for_iter.2', State(pc_initial=64 nstack_initial=1))}}
2024-06-28 20:38:20,914 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi64.0': '$62get_iter.8'},
             State(pc_initial=64 nstack_initial=1): {'$phi66.1': '$64for_iter.2'}})
2024-06-28 20:38:20,914 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:20,914 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$shape16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$shape16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'value': '$22call.3'}), (34, {'idx': 1, 'res': '$34load_global.4'}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'res': '$n46.6'}), (48, {}), (50, {}), (52, {'func': '$34load_global.4', 'args': ['$n46.6'], 'kw_names': None, 'res': '$52call.7'}), (54, {}), (56, {}), (58, {}), (60, {}), (62, {'value': '$52call.7', 'res': '$62get_iter.8'})), outgoing_phis={'$phi64.0': '$62get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$62get_iter.8',)})
2024-06-28 20:38:20,914 - DEBUG - block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'iterator': '$phi64.0', 'pair': '$64for_iter.1', 'indval': '$64for_iter.2', 'pred': '$64for_iter.3'}),), outgoing_phis={'$phi66.1': '$64for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: (), 66: ('$phi64.0', '$64for_iter.2')})
2024-06-28 20:38:20,914 - DEBUG - block_infos State(pc_initial=66 nstack_initial=2):
AdaptBlockInfo(insts=((66, {'value': '$phi66.1'}), (68, {'res': '$shape68.2'}), (70, {'res': '$i70.3'}), (72, {'index': '$i70.3', 'target': '$shape68.2', 'res': '$72binary_subscr.4'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'res': '$main_shape82.5'}), (84, {'idx': 0, 'res': '$84load_global.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'res': '$main_shape96.8'}), (98, {}), (100, {}), (102, {'func': '$84load_global.6', 'args': ['$main_shape96.8'], 'kw_names': None, 'res': '$102call.9'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'res': '$n112.10'}), (114, {'op': '-', 'lhs': '$102call.9', 'rhs': '$n112.10', 'res': '$binop_sub114.11'}), (116, {}), (118, {'res': '$i118.12'}), (120, {'op': '+', 'lhs': '$binop_sub114.11', 'rhs': '$i118.12', 'res': '$binop_add120.13'}), (122, {}), (124, {'index': '$binop_add120.13', 'target': '$main_shape82.5', 'res': '$124binary_subscr.14'}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'lhs': '$72binary_subscr.4', 'rhs': '$124binary_subscr.14', 'res': '$134compare_op.15'}), (136, {}), (138, {}), (140, {'pred': '$134compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={142: ('$phi66.0',), 172: ('$phi66.0',)})
2024-06-28 20:38:20,914 - DEBUG - block_infos State(pc_initial=142 nstack_initial=1):
AdaptBlockInfo(insts=((142, {'idx': 2, 'res': '$142load_global.1'}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$const154.3'}), (156, {}), (158, {}), (160, {'func': '$142load_global.1', 'args': ['$const154.3'], 'kw_names': None, 'res': '$160call.4'}), (162, {}), (164, {}), (166, {}), (168, {}), (170, {'exc': '$160call.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,915 - DEBUG - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi172.0',)})
2024-06-28 20:38:20,915 - DEBUG - block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=((174, {'res': '$const174.0'}), (176, {'retval': '$const174.0', 'castval': '$176return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:20,916 - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    n = call $4load_global.0(shape, func=$4load_global.0, args=[Var(shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'n', 'shape']
    $34load_global.4 = global(range: <class 'range'>) ['$34load_global.4']
    $52call.7 = call $34load_global.4(n, func=$34load_global.4, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.4', '$52call.7', 'n']
    $62get_iter.8 = getiter(value=$52call.7) ['$52call.7', '$62get_iter.8']
    $phi64.0 = $62get_iter.8                 ['$62get_iter.8', '$phi64.0']
    jump 64                                  []
label 64:
    $64for_iter.1 = iternext(value=$phi64.0) ['$64for_iter.1', '$phi64.0']
    $64for_iter.2 = pair_first(value=$64for_iter.1) ['$64for_iter.1', '$64for_iter.2']
    $64for_iter.3 = pair_second(value=$64for_iter.1) ['$64for_iter.1', '$64for_iter.3']
    $phi66.1 = $64for_iter.2                 ['$64for_iter.2', '$phi66.1']
    branch $64for_iter.3, 66, 174            ['$64for_iter.3']
label 66:
    i = $phi66.1                             ['$phi66.1', 'i']
    $72binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$72binary_subscr.4', 'i', 'shape']
    $84load_global.6 = global(len: <built-in function len>) ['$84load_global.6']
    $102call.9 = call $84load_global.6(main_shape, func=$84load_global.6, args=[Var(main_shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$102call.9', '$84load_global.6', 'main_shape']
    $binop_sub114.11 = $102call.9 - n        ['$102call.9', '$binop_sub114.11', 'n']
    $binop_add120.13 = $binop_sub114.11 + i  ['$binop_add120.13', '$binop_sub114.11', 'i']
    $124binary_subscr.14 = getitem(value=main_shape, index=$binop_add120.13, fn=<built-in function getitem>) ['$124binary_subscr.14', '$binop_add120.13', 'main_shape']
    $134compare_op.15 = $72binary_subscr.4 != $124binary_subscr.14 ['$124binary_subscr.14', '$134compare_op.15', '$72binary_subscr.4']
    bool140 = global(bool: <class 'bool'>)   ['bool140']
    $140pred = call bool140($134compare_op.15, func=bool140, args=(Var($134compare_op.15, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.15', '$140pred', 'bool140']
    branch $140pred, 142, 172                ['$140pred']
label 142:
    $142load_global.1 = global(ValueError: <class 'ValueError'>) ['$142load_global.1']
    $const154.3 = const(str, nditer(): operands could not be broadcast together) ['$const154.3']
    $160call.4 = call $142load_global.1($const154.3, func=$142load_global.1, args=[Var($const154.3, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None) ['$142load_global.1', '$160call.4', '$const154.3']
    raise $160call.4                         ['$160call.4']
label 172:
    jump 64                                  []
label 174:
    $const174.0 = const(NoneType, None)      ['$const174.0']
    $176return_value.1 = cast(value=$const174.0) ['$176return_value.1', '$const174.0']
    return $176return_value.1                ['$176return_value.1']

2024-06-28 20:38:20,923 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:20,923 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66fdc8d0>
2024-06-28 20:38:20,923 - DEBUG - on stmt: shape = arg(0, name=shape)
2024-06-28 20:38:20,923 - DEBUG - on stmt: main_shape = arg(1, name=main_shape)
2024-06-28 20:38:20,923 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2024-06-28 20:38:20,923 - DEBUG - on stmt: n = const(int, 1)
2024-06-28 20:38:20,923 - DEBUG - on stmt: $34load_global.4 = global(range: <class 'range'>)
2024-06-28 20:38:20,923 - DEBUG - on stmt: $52call.7 = call $34load_global.4(n, func=$34load_global.4, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,923 - DEBUG - on stmt: $62get_iter.8 = getiter(value=$52call.7)
2024-06-28 20:38:20,923 - DEBUG - on stmt: $phi64.0 = $62get_iter.8
2024-06-28 20:38:20,923 - DEBUG - on stmt: jump 64
2024-06-28 20:38:20,924 - DEBUG - ==== SSA block analysis pass on 64
2024-06-28 20:38:20,924 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66fdc8d0>
2024-06-28 20:38:20,924 - DEBUG - on stmt: $64for_iter.1 = iternext(value=$phi64.0)
2024-06-28 20:38:20,924 - DEBUG - on stmt: $64for_iter.2 = pair_first(value=$64for_iter.1)
2024-06-28 20:38:20,924 - DEBUG - on stmt: $64for_iter.3 = pair_second(value=$64for_iter.1)
2024-06-28 20:38:20,924 - DEBUG - on stmt: $phi66.1 = $64for_iter.2
2024-06-28 20:38:20,924 - DEBUG - on stmt: branch $64for_iter.3, 66, 174
2024-06-28 20:38:20,924 - DEBUG - ==== SSA block analysis pass on 66
2024-06-28 20:38:20,924 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66fdc8d0>
2024-06-28 20:38:20,924 - DEBUG - on stmt: i = $phi66.1
2024-06-28 20:38:20,924 - DEBUG - on stmt: $72binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
2024-06-28 20:38:20,924 - DEBUG - on stmt: $84load_global.6 = global(len: <built-in function len>)
2024-06-28 20:38:20,924 - DEBUG - on stmt: $102call.9 = const(int, 1)
2024-06-28 20:38:20,924 - DEBUG - on stmt: $binop_sub114.11 = $102call.9 - n
2024-06-28 20:38:20,924 - DEBUG - on stmt: $binop_add120.13 = $binop_sub114.11 + i
2024-06-28 20:38:20,925 - DEBUG - on stmt: $124binary_subscr.14 = getitem(value=main_shape, index=$binop_add120.13, fn=<built-in function getitem>)
2024-06-28 20:38:20,925 - DEBUG - on stmt: $134compare_op.15 = $72binary_subscr.4 != $124binary_subscr.14
2024-06-28 20:38:20,925 - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2024-06-28 20:38:20,925 - DEBUG - on stmt: $140pred = call bool140($134compare_op.15, func=bool140, args=(Var($134compare_op.15, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,925 - DEBUG - on stmt: branch $140pred, 142, 172
2024-06-28 20:38:20,925 - DEBUG - ==== SSA block analysis pass on 142
2024-06-28 20:38:20,925 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66fdc8d0>
2024-06-28 20:38:20,925 - DEBUG - on stmt: $142load_global.1 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:20,925 - DEBUG - on stmt: $const154.3 = const(str, nditer(): operands could not be broadcast together)
2024-06-28 20:38:20,925 - DEBUG - on stmt: $160call.4 = call $142load_global.1($const154.3, func=$142load_global.1, args=[Var($const154.3, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:20,925 - DEBUG - on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
2024-06-28 20:38:20,925 - DEBUG - ==== SSA block analysis pass on 172
2024-06-28 20:38:20,925 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66fdc8d0>
2024-06-28 20:38:20,926 - DEBUG - on stmt: jump 64
2024-06-28 20:38:20,926 - DEBUG - ==== SSA block analysis pass on 174
2024-06-28 20:38:20,926 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66fdc8d0>
2024-06-28 20:38:20,926 - DEBUG - on stmt: $const174.0 = const(NoneType, None)
2024-06-28 20:38:20,926 - DEBUG - on stmt: $176return_value.1 = cast(value=$const174.0)
2024-06-28 20:38:20,926 - DEBUG - on stmt: return $176return_value.1
2024-06-28 20:38:20,927 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102call.9': [(<numba.core.ir.Assign object at 0x7f7a66ffa450>,
                             66)],
             '$124binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f7a66ffb150>,
                                       66)],
             '$134compare_op.15': [(<numba.core.ir.Assign object at 0x7f7a66ffa610>,
                                    66)],
             '$140pred': [(<numba.core.ir.Assign object at 0x7f7a66ffbc10>,
                           66)],
             '$142load_global.1': [(<numba.core.ir.Assign object at 0x7f7a66ff8dd0>,
                                    142)],
             '$160call.4': [(<numba.core.ir.Assign object at 0x7f7a670ce550>,
                             142)],
             '$176return_value.1': [(<numba.core.ir.Assign object at 0x7f7a66fbc450>,
                                     174)],
             '$34load_global.4': [(<numba.core.ir.Assign object at 0x7f7a66ff9090>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66ffa9d0>,
                                  0)],
             '$52call.7': [(<numba.core.ir.Assign object at 0x7f7a66ff9c10>,
                            0)],
             '$62get_iter.8': [(<numba.core.ir.Assign object at 0x7f7a66ffac90>,
                                0)],
             '$64for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a66ffaa10>,
                                64)],
             '$64for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a66ffa8d0>,
                                64)],
             '$64for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a66ff8bd0>,
                                64)],
             '$72binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f7a66ffa250>,
                                     66)],
             '$84load_global.6': [(<numba.core.ir.Assign object at 0x7f7a66ff8650>,
                                   66)],
             '$binop_add120.13': [(<numba.core.ir.Assign object at 0x7f7a66ffb8d0>,
                                   66)],
             '$binop_sub114.11': [(<numba.core.ir.Assign object at 0x7f7a66ff8350>,
                                   66)],
             '$const154.3': [(<numba.core.ir.Assign object at 0x7f7a670cfb90>,
                              142)],
             '$const174.0': [(<numba.core.ir.Assign object at 0x7f7a66fbc3d0>,
                              174)],
             '$phi64.0': [(<numba.core.ir.Assign object at 0x7f7a66ff8c90>, 0)],
             '$phi66.1': [(<numba.core.ir.Assign object at 0x7f7a66ffa790>,
                           64)],
             'bool140': [(<numba.core.ir.Assign object at 0x7f7a66ff8550>, 66)],
             'i': [(<numba.core.ir.Assign object at 0x7f7a66ffbdd0>, 66)],
             'main_shape': [(<numba.core.ir.Assign object at 0x7f7a66ff9fd0>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x7f7a66ff9b10>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7f7a66ffa1d0>, 0)]})
2024-06-28 20:38:20,927 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a66fdc8d0>
2024-06-28 20:38:21,065 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-06-28 20:38:21,065 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:21,065 - DEBUG - stack: []
2024-06-28 20:38:21,065 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:21,065 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-06-28 20:38:21,065 - DEBUG - stack []
2024-06-28 20:38:21,065 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-06-28 20:38:21,065 - DEBUG - stack []
2024-06-28 20:38:21,065 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-06-28 20:38:21,066 - DEBUG - stack []
2024-06-28 20:38:21,066 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-06-28 20:38:21,066 - DEBUG - stack []
2024-06-28 20:38:21,066 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-06-28 20:38:21,066 - DEBUG - stack ['$6load_deref.0']
2024-06-28 20:38:21,066 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-06-28 20:38:21,066 - DEBUG - stack []
2024-06-28 20:38:21,066 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-06-28 20:38:21,066 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-06-28 20:38:21,066 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-06-28 20:38:21,066 - DEBUG - stack ['$null$10.2', '$22load_attr.3']
2024-06-28 20:38:21,067 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-06-28 20:38:21,067 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-06-28 20:38:21,067 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-06-28 20:38:21,067 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-06-28 20:38:21,067 - DEBUG - dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-06-28 20:38:21,067 - DEBUG - stack ['$38call.5']
2024-06-28 20:38:21,067 - DEBUG - end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-06-28 20:38:21,067 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-06-28 20:38:21,067 - DEBUG - stack: ['$phi50.0']
2024-06-28 20:38:21,067 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-06-28 20:38:21,067 - DEBUG - dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-06-28 20:38:21,067 - DEBUG - stack ['$phi50.0']
2024-06-28 20:38:21,067 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:21,068 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-06-28 20:38:21,068 - DEBUG - stack: []
2024-06-28 20:38:21,068 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-06-28 20:38:21,068 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-06-28 20:38:21,068 - DEBUG - stack []
2024-06-28 20:38:21,068 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-06-28 20:38:21,068 - DEBUG - stack ['$c102.0']
2024-06-28 20:38:21,068 - DEBUG - dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-06-28 20:38:21,068 - DEBUG - stack ['$c102.0', '$a104.1']
2024-06-28 20:38:21,068 - DEBUG - dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-06-28 20:38:21,068 - DEBUG - stack ['$c102.0', '$106load_attr.2']
2024-06-28 20:38:21,068 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-06-28 20:38:21,068 - DEBUG - stack ['$binop_truediv116.3']
2024-06-28 20:38:21,069 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,069 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-06-28 20:38:21,069 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2024-06-28 20:38:21,069 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-06-28 20:38:21,069 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-06-28 20:38:21,069 - DEBUG - stack ['$phi52.0', '$phi52.1']
2024-06-28 20:38:21,069 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-06-28 20:38:21,069 - DEBUG - stack ['$phi52.0']
2024-06-28 20:38:21,069 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-06-28 20:38:21,069 - DEBUG - stack ['$phi52.0', '$c54.2']
2024-06-28 20:38:21,069 - DEBUG - dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-06-28 20:38:21,069 - DEBUG - stack ['$phi52.0', '$c54.2', '$v56.3']
2024-06-28 20:38:21,069 - DEBUG - dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-06-28 20:38:21,069 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-06-28 20:38:21,070 - DEBUG - dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-06-28 20:38:21,070 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-06-28 20:38:21,070 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-06-28 20:38:21,070 - DEBUG - stack ['$phi52.0', '$c54.2', '$84call.6']
2024-06-28 20:38:21,070 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-06-28 20:38:21,070 - DEBUG - stack ['$phi52.0', '$binop_iadd94.7']
2024-06-28 20:38:21,070 - DEBUG - dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-06-28 20:38:21,071 - DEBUG - stack ['$phi52.0']
2024-06-28 20:38:21,071 - DEBUG - end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-06-28 20:38:21,071 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-06-28 20:38:21,071 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:21,071 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-06-28 20:38:21,072 - DEBUG - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-06-28 20:38:21,072 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:21,073 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:21,073 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:21,074 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:21,074 - DEBUG - keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-06-28 20:38:21,074 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-06-28 20:38:21,075 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:21,075 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-06-28 20:38:21,075 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-06-28 20:38:21,075 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-06-28 20:38:21,075 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,076 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-06-28 20:38:21,083 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:21,083 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673c5cd0>
2024-06-28 20:38:21,083 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,084 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,084 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,084 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:21,084 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,084 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:21,084 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:21,084 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,084 - DEBUG - ==== SSA block analysis pass on 50
2024-06-28 20:38:21,084 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673c5cd0>
2024-06-28 20:38:21,084 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:21,084 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:21,084 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:21,084 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:21,085 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:21,085 - DEBUG - ==== SSA block analysis pass on 52
2024-06-28 20:38:21,085 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673c5cd0>
2024-06-28 20:38:21,085 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:21,085 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:21,085 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,085 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,085 - DEBUG - on stmt: c = $binop_iadd94.7
2024-06-28 20:38:21,085 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,085 - DEBUG - ==== SSA block analysis pass on 102
2024-06-28 20:38:21,085 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673c5cd0>
2024-06-28 20:38:21,085 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:21,086 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:21,086 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:21,086 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:21,087 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a673299d0>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7f7a673c4690>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x7f7a67329f90>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x7f7a673c4190>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x7f7a673c6590>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x7f7a673c4c90>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a673c4f50>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a673c5250>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a673c56d0>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x7f7a673c5090>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x7f7a673c51d0>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x7f7a673c6dd0>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x7f7a6732ae90>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7f7a673c48d0>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7f7a673c5590>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a66e37210>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7f7a673c7910>, 0),
                   (<numba.core.ir.Assign object at 0x7f7a673c6c90>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x7f7a673c5a10>, 52)]})
2024-06-28 20:38:21,087 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a673c5cd0>
2024-06-28 20:38:21,087 - DEBUG - Fix SSA violator on var c
2024-06-28 20:38:21,087 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:21,087 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f1f550>
2024-06-28 20:38:21,087 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,087 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,088 - DEBUG - first assign: c
2024-06-28 20:38:21,088 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,088 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,088 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:21,088 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,088 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:21,088 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:21,088 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,088 - DEBUG - ==== SSA block rewrite pass on 50
2024-06-28 20:38:21,088 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f1f550>
2024-06-28 20:38:21,088 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:21,088 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:21,088 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:21,088 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:21,088 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:21,089 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-28 20:38:21,089 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f1f550>
2024-06-28 20:38:21,089 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:21,089 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:21,089 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,089 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,089 - DEBUG - on stmt: c = $binop_iadd94.7
2024-06-28 20:38:21,089 - DEBUG - replaced with: c.1 = $binop_iadd94.7
2024-06-28 20:38:21,089 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,089 - DEBUG - ==== SSA block rewrite pass on 102
2024-06-28 20:38:21,089 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f1f550>
2024-06-28 20:38:21,089 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:21,089 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:21,089 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:21,089 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:21,090 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a66f1df50>],
             52: [<numba.core.ir.Assign object at 0x7f7a67328290>]})
2024-06-28 20:38:21,090 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:21,090 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67328e50>
2024-06-28 20:38:21,090 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,090 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,090 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,090 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:21,090 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,090 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:21,090 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:21,090 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,090 - DEBUG - ==== SSA block rewrite pass on 50
2024-06-28 20:38:21,090 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67328e50>
2024-06-28 20:38:21,091 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:21,091 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:21,091 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:21,091 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:21,091 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:21,091 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-28 20:38:21,091 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67328e50>
2024-06-28 20:38:21,091 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:21,091 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:21,091 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,091 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,091 - DEBUG - find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,091 - DEBUG - find_def_from_top label 52
2024-06-28 20:38:21,091 - DEBUG - idom 50 from label 52
2024-06-28 20:38:21,091 - DEBUG - find_def_from_bottom label 50
2024-06-28 20:38:21,092 - DEBUG - find_def_from_top label 50
2024-06-28 20:38:21,092 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-06-28 20:38:21,092 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:21,092 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,092 - DEBUG - find_def_from_bottom label 52
2024-06-28 20:38:21,092 - DEBUG - incoming_def c.1 = $binop_iadd94.7
2024-06-28 20:38:21,092 - DEBUG - replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,092 - DEBUG - on stmt: c.1 = $binop_iadd94.7
2024-06-28 20:38:21,092 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,092 - DEBUG - ==== SSA block rewrite pass on 102
2024-06-28 20:38:21,092 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67328e50>
2024-06-28 20:38:21,092 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:21,092 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:21,092 - DEBUG - find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:21,093 - DEBUG - find_def_from_top label 102
2024-06-28 20:38:21,093 - DEBUG - idom 50 from label 102
2024-06-28 20:38:21,093 - DEBUG - find_def_from_bottom label 50
2024-06-28 20:38:21,093 - DEBUG - replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-06-28 20:38:21,093 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:21,093 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:21,443 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:21,443 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:21,443 - DEBUG - stack: []
2024-06-28 20:38:21,443 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:21,443 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-06-28 20:38:21,443 - DEBUG - stack []
2024-06-28 20:38:21,443 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-06-28 20:38:21,444 - DEBUG - stack []
2024-06-28 20:38:21,444 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:21,444 - DEBUG - stack []
2024-06-28 20:38:21,444 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:21,444 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:21,444 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:21,444 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-28 20:38:21,444 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-06-28 20:38:21,444 - DEBUG - stack ['$8binary_subscr.2']
2024-06-28 20:38:21,444 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-06-28 20:38:21,444 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-06-28 20:38:21,444 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:21,444 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-06-28 20:38:21,445 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-06-28 20:38:21,445 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-06-28 20:38:21,445 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-06-28 20:38:21,445 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-06-28 20:38:21,445 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-06-28 20:38:21,445 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-06-28 20:38:21,445 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:21,445 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-06-28 20:38:21,445 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-06-28 20:38:21,445 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-06-28 20:38:21,445 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:21,446 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-06-28 20:38:21,446 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:21,446 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-06-28 20:38:21,446 - DEBUG - dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-06-28 20:38:21,446 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-06-28 20:38:21,446 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-06-28 20:38:21,446 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-06-28 20:38:21,446 - DEBUG - dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-06-28 20:38:21,446 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-06-28 20:38:21,446 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:21,446 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-06-28 20:38:21,447 - DEBUG - dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-06-28 20:38:21,447 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-06-28 20:38:21,447 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-06-28 20:38:21,447 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-06-28 20:38:21,447 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-06-28 20:38:21,447 - DEBUG - stack ['$8binary_subscr.2', '$112call.19']
2024-06-28 20:38:21,447 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-06-28 20:38:21,447 - DEBUG - stack ['$122compare_op.20']
2024-06-28 20:38:21,447 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:21,447 - DEBUG - stack ['$122compare_op.20', '$peaks128.21']
2024-06-28 20:38:21,447 - DEBUG - dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:21,447 - DEBUG - stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-06-28 20:38:21,447 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-06-28 20:38:21,448 - DEBUG - stack []
2024-06-28 20:38:21,448 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:21,448 - DEBUG - stack ['$peaks136.23']
2024-06-28 20:38:21,448 - DEBUG - dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-06-28 20:38:21,448 - DEBUG - stack ['$peaks136.23', '$const138.24']
2024-06-28 20:38:21,448 - DEBUG - dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-06-28 20:38:21,448 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-06-28 20:38:21,448 - DEBUG - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:21,448 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-06-28 20:38:21,448 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:21,448 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-06-28 20:38:21,448 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:21,448 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-06-28 20:38:21,449 - DEBUG - dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:21,449 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-06-28 20:38:21,449 - DEBUG - dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-06-28 20:38:21,449 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-06-28 20:38:21,449 - DEBUG - dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-06-28 20:38:21,449 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-06-28 20:38:21,449 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:21,449 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-06-28 20:38:21,449 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-06-28 20:38:21,449 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-06-28 20:38:21,449 - DEBUG - dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-06-28 20:38:21,449 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-06-28 20:38:21,449 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-06-28 20:38:21,450 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-06-28 20:38:21,450 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:21,450 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-06-28 20:38:21,450 - DEBUG - dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-06-28 20:38:21,450 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-06-28 20:38:21,450 - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:21,450 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-06-28 20:38:21,450 - DEBUG - dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:21,450 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-06-28 20:38:21,450 - DEBUG - dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-06-28 20:38:21,450 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-06-28 20:38:21,450 - DEBUG - dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-06-28 20:38:21,451 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-06-28 20:38:21,451 - DEBUG - dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-06-28 20:38:21,451 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-06-28 20:38:21,451 - DEBUG - dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:21,451 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-06-28 20:38:21,451 - DEBUG - dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-06-28 20:38:21,451 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-06-28 20:38:21,451 - DEBUG - dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-06-28 20:38:21,451 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-06-28 20:38:21,451 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-06-28 20:38:21,451 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-06-28 20:38:21,451 - DEBUG - dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-06-28 20:38:21,451 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-06-28 20:38:21,452 - DEBUG - dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-06-28 20:38:21,452 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-06-28 20:38:21,452 - DEBUG - dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-06-28 20:38:21,452 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-06-28 20:38:21,452 - DEBUG - dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-06-28 20:38:21,452 - DEBUG - stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-06-28 20:38:21,452 - DEBUG - dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-06-28 20:38:21,452 - DEBUG - stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-06-28 20:38:21,452 - DEBUG - dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:21,452 - DEBUG - stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-06-28 20:38:21,452 - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-06-28 20:38:21,452 - DEBUG - stack []
2024-06-28 20:38:21,452 - DEBUG - dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-06-28 20:38:21,452 - DEBUG - stack ['$peaks296.50']
2024-06-28 20:38:21,453 - DEBUG - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-06-28 20:38:21,453 - DEBUG - stack ['$peaks296.50', '$const298.51']
2024-06-28 20:38:21,453 - DEBUG - dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-06-28 20:38:21,453 - DEBUG - stack ['$300binary_subscr.52']
2024-06-28 20:38:21,453 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,453 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-06-28 20:38:21,453 - DEBUG - stack: []
2024-06-28 20:38:21,453 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-06-28 20:38:21,453 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-06-28 20:38:21,453 - DEBUG - stack []
2024-06-28 20:38:21,453 - DEBUG - dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-06-28 20:38:21,454 - DEBUG - stack ['$wait312.0']
2024-06-28 20:38:21,454 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-06-28 20:38:21,454 - DEBUG - stack ['$wait312.0', '$const314.1']
2024-06-28 20:38:21,454 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-06-28 20:38:21,454 - DEBUG - stack ['$binop_add316.2']
2024-06-28 20:38:21,454 - DEBUG - dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-06-28 20:38:21,454 - DEBUG - stack []
2024-06-28 20:38:21,454 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,454 - DEBUG - pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:21,454 - DEBUG - stack: []
2024-06-28 20:38:21,454 - DEBUG - state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-06-28 20:38:21,454 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-06-28 20:38:21,454 - DEBUG - stack []
2024-06-28 20:38:21,454 - DEBUG - dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-06-28 20:38:21,455 - DEBUG - stack ['$const324.0']
2024-06-28 20:38:21,455 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,455 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:21,455 - DEBUG - stack: []
2024-06-28 20:38:21,455 - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-06-28 20:38:21,455 - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-28 20:38:21,455 - DEBUG - stack []
2024-06-28 20:38:21,455 - DEBUG - dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-28 20:38:21,455 - DEBUG - stack ['$n328.0']
2024-06-28 20:38:21,455 - DEBUG - dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-06-28 20:38:21,455 - DEBUG - stack ['$n328.0', '$x330.1']
2024-06-28 20:38:21,455 - DEBUG - dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-28 20:38:21,455 - DEBUG - stack ['$n328.0', '$332load_attr.2']
2024-06-28 20:38:21,455 - DEBUG - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-28 20:38:21,456 - DEBUG - stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-06-28 20:38:21,456 - DEBUG - dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-06-28 20:38:21,456 - DEBUG - stack ['$n328.0', '$344binary_subscr.4']
2024-06-28 20:38:21,456 - DEBUG - dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-06-28 20:38:21,456 - DEBUG - stack ['$354compare_op.5']
2024-06-28 20:38:21,456 - DEBUG - end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,456 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-06-28 20:38:21,456 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-06-28 20:38:21,456 - DEBUG - stack: []
2024-06-28 20:38:21,456 - DEBUG - state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-06-28 20:38:21,456 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-06-28 20:38:21,456 - DEBUG - stack []
2024-06-28 20:38:21,456 - DEBUG - dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-06-28 20:38:21,457 - DEBUG - stack ['$null$362.1', '$362load_global.0']
2024-06-28 20:38:21,457 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-28 20:38:21,457 - DEBUG - stack ['$null$362.1', '$374load_attr.2']
2024-06-28 20:38:21,457 - DEBUG - dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-06-28 20:38:21,457 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-06-28 20:38:21,457 - DEBUG - dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-28 20:38:21,457 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-06-28 20:38:21,457 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-28 20:38:21,457 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-06-28 20:38:21,457 - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-06-28 20:38:21,457 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-06-28 20:38:21,457 - DEBUG - dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-06-28 20:38:21,457 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-06-28 20:38:21,457 - DEBUG - dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-06-28 20:38:21,458 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-06-28 20:38:21,458 - DEBUG - dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-06-28 20:38:21,458 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-06-28 20:38:21,458 - DEBUG - dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-06-28 20:38:21,458 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-06-28 20:38:21,458 - DEBUG - dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-28 20:38:21,458 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-06-28 20:38:21,458 - DEBUG - dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-06-28 20:38:21,458 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-06-28 20:38:21,458 - DEBUG - dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-06-28 20:38:21,458 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-06-28 20:38:21,458 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-28 20:38:21,458 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-06-28 20:38:21,458 - DEBUG - dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-06-28 20:38:21,459 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-06-28 20:38:21,459 - DEBUG - dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-28 20:38:21,459 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-06-28 20:38:21,459 - DEBUG - dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-28 20:38:21,459 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-06-28 20:38:21,459 - DEBUG - dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-06-28 20:38:21,459 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-06-28 20:38:21,459 - DEBUG - dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-06-28 20:38:21,459 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-06-28 20:38:21,459 - DEBUG - dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-06-28 20:38:21,459 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-06-28 20:38:21,459 - DEBUG - dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-28 20:38:21,459 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-06-28 20:38:21,460 - DEBUG - dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-06-28 20:38:21,460 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-06-28 20:38:21,460 - DEBUG - dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-06-28 20:38:21,460 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-06-28 20:38:21,460 - DEBUG - dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-06-28 20:38:21,460 - DEBUG - stack ['$496call.24']
2024-06-28 20:38:21,460 - DEBUG - dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-06-28 20:38:21,460 - DEBUG - stack []
2024-06-28 20:38:21,460 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-28 20:38:21,460 - DEBUG - stack ['$x508.25']
2024-06-28 20:38:21,460 - DEBUG - dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-06-28 20:38:21,460 - DEBUG - stack ['$x508.25', '$n510.26']
2024-06-28 20:38:21,460 - DEBUG - dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-06-28 20:38:21,460 - DEBUG - stack ['$512binary_subscr.27']
2024-06-28 20:38:21,461 - DEBUG - dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-06-28 20:38:21,461 - DEBUG - stack ['$512binary_subscr.27', '$maxn522.28']
2024-06-28 20:38:21,461 - DEBUG - dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-06-28 20:38:21,461 - DEBUG - stack ['$524compare_op.29']
2024-06-28 20:38:21,461 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-28 20:38:21,461 - DEBUG - stack ['$524compare_op.29', '$peaks530.30']
2024-06-28 20:38:21,461 - DEBUG - dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-06-28 20:38:21,461 - DEBUG - stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-06-28 20:38:21,461 - DEBUG - dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-06-28 20:38:21,461 - DEBUG - stack []
2024-06-28 20:38:21,461 - DEBUG - dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-06-28 20:38:21,461 - DEBUG - stack ['$peaks538.32']
2024-06-28 20:38:21,461 - DEBUG - dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-06-28 20:38:21,462 - DEBUG - stack ['$peaks538.32', '$n540.33']
2024-06-28 20:38:21,462 - DEBUG - dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-06-28 20:38:21,462 - DEBUG - stack ['$542binary_subscr.34']
2024-06-28 20:38:21,462 - DEBUG - end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,462 - DEBUG - pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-06-28 20:38:21,462 - DEBUG - stack: []
2024-06-28 20:38:21,462 - DEBUG - state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-06-28 20:38:21,462 - DEBUG - dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-06-28 20:38:21,462 - DEBUG - stack []
2024-06-28 20:38:21,462 - DEBUG - dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:21,462 - DEBUG - stack ['$const852.0']
2024-06-28 20:38:21,462 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,462 - DEBUG - pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-06-28 20:38:21,463 - DEBUG - stack: []
2024-06-28 20:38:21,463 - DEBUG - state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-06-28 20:38:21,463 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-06-28 20:38:21,463 - DEBUG - stack []
2024-06-28 20:38:21,463 - DEBUG - dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-06-28 20:38:21,463 - DEBUG - stack ['$n554.0']
2024-06-28 20:38:21,463 - DEBUG - dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-06-28 20:38:21,463 - DEBUG - stack ['$n554.0', '$const556.1']
2024-06-28 20:38:21,463 - DEBUG - dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-06-28 20:38:21,463 - DEBUG - stack ['$binop_iadd558.2']
2024-06-28 20:38:21,463 - DEBUG - dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-06-28 20:38:21,463 - DEBUG - stack []
2024-06-28 20:38:21,463 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,463 - DEBUG - pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:21,464 - DEBUG - stack: []
2024-06-28 20:38:21,464 - DEBUG - state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-06-28 20:38:21,464 - DEBUG - dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-06-28 20:38:21,464 - DEBUG - stack []
2024-06-28 20:38:21,464 - DEBUG - dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-06-28 20:38:21,464 - DEBUG - stack ['$null$566.1', '$566load_global.0']
2024-06-28 20:38:21,464 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-28 20:38:21,464 - DEBUG - stack ['$null$566.1', '$578load_attr.2']
2024-06-28 20:38:21,464 - DEBUG - dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-06-28 20:38:21,464 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-06-28 20:38:21,464 - DEBUG - dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-28 20:38:21,464 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-06-28 20:38:21,464 - DEBUG - dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-28 20:38:21,464 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-06-28 20:38:21,465 - DEBUG - dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-06-28 20:38:21,465 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-06-28 20:38:21,465 - DEBUG - dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-06-28 20:38:21,465 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-06-28 20:38:21,465 - DEBUG - dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-06-28 20:38:21,465 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-06-28 20:38:21,465 - DEBUG - dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-06-28 20:38:21,465 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-06-28 20:38:21,465 - DEBUG - dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-06-28 20:38:21,465 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-06-28 20:38:21,465 - DEBUG - dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-28 20:38:21,465 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-06-28 20:38:21,465 - DEBUG - dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-06-28 20:38:21,465 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-06-28 20:38:21,466 - DEBUG - dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-06-28 20:38:21,466 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-06-28 20:38:21,466 - DEBUG - dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-28 20:38:21,466 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-06-28 20:38:21,466 - DEBUG - dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-06-28 20:38:21,466 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-06-28 20:38:21,466 - DEBUG - dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-28 20:38:21,466 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-06-28 20:38:21,466 - DEBUG - dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-28 20:38:21,466 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-06-28 20:38:21,466 - DEBUG - dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-06-28 20:38:21,466 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-06-28 20:38:21,466 - DEBUG - dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-06-28 20:38:21,467 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-06-28 20:38:21,467 - DEBUG - dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-06-28 20:38:21,467 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-06-28 20:38:21,467 - DEBUG - dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-28 20:38:21,467 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-06-28 20:38:21,467 - DEBUG - dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-06-28 20:38:21,467 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-06-28 20:38:21,467 - DEBUG - dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-06-28 20:38:21,467 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-06-28 20:38:21,467 - DEBUG - dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-06-28 20:38:21,467 - DEBUG - stack ['$700call.24']
2024-06-28 20:38:21,467 - DEBUG - dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-06-28 20:38:21,467 - DEBUG - stack []
2024-06-28 20:38:21,467 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-28 20:38:21,468 - DEBUG - stack ['$peaks712.25']
2024-06-28 20:38:21,468 - DEBUG - dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-06-28 20:38:21,468 - DEBUG - stack ['$peaks712.25', '$n714.26']
2024-06-28 20:38:21,468 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-06-28 20:38:21,468 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-06-28 20:38:21,468 - DEBUG - dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:21,468 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-06-28 20:38:21,468 - DEBUG - dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-06-28 20:38:21,468 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-06-28 20:38:21,468 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-28 20:38:21,468 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-06-28 20:38:21,468 - DEBUG - dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:21,468 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-06-28 20:38:21,469 - DEBUG - dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-06-28 20:38:21,469 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-06-28 20:38:21,469 - DEBUG - dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-06-28 20:38:21,469 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-06-28 20:38:21,469 - DEBUG - dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-06-28 20:38:21,469 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-06-28 20:38:21,469 - DEBUG - dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-06-28 20:38:21,469 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-06-28 20:38:21,469 - DEBUG - dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-06-28 20:38:21,469 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-06-28 20:38:21,469 - DEBUG - dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-06-28 20:38:21,469 - DEBUG - stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-06-28 20:38:21,469 - DEBUG - dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-06-28 20:38:21,469 - DEBUG - stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-06-28 20:38:21,470 - DEBUG - dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:21,470 - DEBUG - stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-06-28 20:38:21,470 - DEBUG - dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-06-28 20:38:21,470 - DEBUG - stack []
2024-06-28 20:38:21,470 - DEBUG - dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-06-28 20:38:21,470 - DEBUG - stack ['$peaks770.36']
2024-06-28 20:38:21,470 - DEBUG - dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-06-28 20:38:21,470 - DEBUG - stack ['$peaks770.36', '$n772.37']
2024-06-28 20:38:21,470 - DEBUG - dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-06-28 20:38:21,470 - DEBUG - stack ['$774binary_subscr.38']
2024-06-28 20:38:21,470 - DEBUG - end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,470 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-06-28 20:38:21,471 - DEBUG - pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-06-28 20:38:21,471 - DEBUG - stack: []
2024-06-28 20:38:21,471 - DEBUG - state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-06-28 20:38:21,471 - DEBUG - dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-06-28 20:38:21,471 - DEBUG - stack []
2024-06-28 20:38:21,471 - DEBUG - dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-06-28 20:38:21,471 - DEBUG - stack ['$n786.0']
2024-06-28 20:38:21,471 - DEBUG - dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-06-28 20:38:21,471 - DEBUG - stack ['$n786.0', '$const788.1']
2024-06-28 20:38:21,471 - DEBUG - dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-06-28 20:38:21,471 - DEBUG - stack ['$binop_iadd790.2']
2024-06-28 20:38:21,471 - DEBUG - dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-06-28 20:38:21,471 - DEBUG - stack []
2024-06-28 20:38:21,472 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,472 - DEBUG - pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:21,472 - DEBUG - stack: []
2024-06-28 20:38:21,472 - DEBUG - state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-06-28 20:38:21,472 - DEBUG - dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-06-28 20:38:21,472 - DEBUG - stack []
2024-06-28 20:38:21,472 - DEBUG - dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-06-28 20:38:21,472 - DEBUG - stack ['$n798.0']
2024-06-28 20:38:21,472 - DEBUG - dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-06-28 20:38:21,472 - DEBUG - stack ['$n798.0', '$wait800.1']
2024-06-28 20:38:21,472 - DEBUG - dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-06-28 20:38:21,472 - DEBUG - stack ['$n798.0', '$wait800.1', '$const802.2']
2024-06-28 20:38:21,472 - DEBUG - dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-06-28 20:38:21,472 - DEBUG - stack ['$n798.0', '$binop_add804.3']
2024-06-28 20:38:21,473 - DEBUG - dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-06-28 20:38:21,473 - DEBUG - stack ['$binop_iadd808.4']
2024-06-28 20:38:21,473 - DEBUG - dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-28 20:38:21,473 - DEBUG - stack []
2024-06-28 20:38:21,473 - DEBUG - dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-28 20:38:21,473 - DEBUG - stack ['$n814.5']
2024-06-28 20:38:21,473 - DEBUG - dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-06-28 20:38:21,473 - DEBUG - stack ['$n814.5', '$x816.6']
2024-06-28 20:38:21,473 - DEBUG - dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-28 20:38:21,473 - DEBUG - stack ['$n814.5', '$818load_attr.7']
2024-06-28 20:38:21,473 - DEBUG - dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-28 20:38:21,473 - DEBUG - stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-06-28 20:38:21,473 - DEBUG - dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-06-28 20:38:21,474 - DEBUG - stack ['$n814.5', '$830binary_subscr.9']
2024-06-28 20:38:21,474 - DEBUG - dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-06-28 20:38:21,474 - DEBUG - stack ['$840compare_op.10']
2024-06-28 20:38:21,474 - DEBUG - end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,474 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:21,474 - DEBUG - pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:21,474 - DEBUG - stack: []
2024-06-28 20:38:21,474 - DEBUG - state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-06-28 20:38:21,474 - DEBUG - dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-06-28 20:38:21,474 - DEBUG - stack []
2024-06-28 20:38:21,474 - DEBUG - dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:21,475 - DEBUG - stack ['$const848.0']
2024-06-28 20:38:21,475 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,475 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:21,475 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:21,475 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-06-28 20:38:21,475 - DEBUG - defmap: {}
2024-06-28 20:38:21,475 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:21,475 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:21,475 - DEBUG - keep phismap: {}
2024-06-28 20:38:21,476 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:21,476 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:21,476 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-06-28 20:38:21,476 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:21,476 - DEBUG - block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:21,476 - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-06-28 20:38:21,476 - DEBUG - block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-06-28 20:38:21,477 - DEBUG - block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:21,477 - DEBUG - block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-06-28 20:38:21,477 - DEBUG - block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:21,477 - DEBUG - block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-06-28 20:38:21,477 - DEBUG - block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,477 - DEBUG - block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,481 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-06-28 20:38:21,498 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:21,498 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,498 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:21,499 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:21,499 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:21,499 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:21,499 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:21,499 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:21,499 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:21,499 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:21,499 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:21,499 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:21,499 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,499 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:21,500 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,501 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:21,501 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:21,501 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:21,501 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:21,501 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:21,501 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:21,501 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:21,501 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,501 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:21,501 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:21,501 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:21,501 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,502 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:21,502 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:21,502 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,502 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,502 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,502 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:21,502 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,502 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:21,502 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:21,503 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,503 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:21,503 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:21,503 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:21,503 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,503 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,503 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:21,503 - DEBUG - ==== SSA block analysis pass on 312
2024-06-28 20:38:21,503 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,503 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:21,503 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:21,503 - DEBUG - on stmt: jump 328
2024-06-28 20:38:21,504 - DEBUG - ==== SSA block analysis pass on 324
2024-06-28 20:38:21,504 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,504 - DEBUG - on stmt: n = const(int, 1)
2024-06-28 20:38:21,504 - DEBUG - on stmt: jump 328
2024-06-28 20:38:21,504 - DEBUG - ==== SSA block analysis pass on 328
2024-06-28 20:38:21,504 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,504 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,504 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:21,504 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:21,504 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:21,504 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,504 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,504 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:21,505 - DEBUG - ==== SSA block analysis pass on 362
2024-06-28 20:38:21,505 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,505 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,505 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:21,505 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:21,505 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:21,505 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:21,505 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,505 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:21,505 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:21,505 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,505 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:21,506 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:21,506 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,506 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,506 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,506 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:21,506 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,506 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,506 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:21,506 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:21,506 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,506 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,506 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,507 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:21,507 - DEBUG - ==== SSA block analysis pass on 554
2024-06-28 20:38:21,507 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,507 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:21,507 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,507 - DEBUG - on stmt: n = $binop_iadd558.2
2024-06-28 20:38:21,507 - DEBUG - on stmt: jump 853
2024-06-28 20:38:21,507 - DEBUG - ==== SSA block analysis pass on 566
2024-06-28 20:38:21,507 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,507 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,507 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:21,507 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:21,507 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:21,507 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:21,508 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,508 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:21,508 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:21,508 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,508 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:21,508 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:21,508 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,508 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,508 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,508 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:21,509 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,509 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,509 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,509 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:21,509 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:21,509 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,509 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:21,510 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,510 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,510 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,510 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:21,510 - DEBUG - ==== SSA block analysis pass on 786
2024-06-28 20:38:21,510 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,510 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:21,510 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,510 - DEBUG - on stmt: n = $binop_iadd790.2
2024-06-28 20:38:21,510 - DEBUG - on stmt: jump 853
2024-06-28 20:38:21,510 - DEBUG - ==== SSA block analysis pass on 798
2024-06-28 20:38:21,510 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,510 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:21,511 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:21,511 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,511 - DEBUG - on stmt: n = $binop_iadd808.4
2024-06-28 20:38:21,511 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,511 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:21,511 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:21,511 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:21,511 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,511 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,511 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:21,511 - DEBUG - ==== SSA block analysis pass on 848
2024-06-28 20:38:21,511 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,512 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:21,512 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:21,512 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:21,512 - DEBUG - ==== SSA block analysis pass on 852
2024-06-28 20:38:21,512 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,512 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:21,512 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:21,512 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:21,512 - DEBUG - ==== SSA block analysis pass on 853
2024-06-28 20:38:21,512 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006a10>
2024-06-28 20:38:21,512 - DEBUG - on stmt: jump 328
2024-06-28 20:38:21,515 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x7f7a76435d90>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x7f7a76434210>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x7f7a66e8d410>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x7f7a66e8da90>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x7f7a76434050>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x7f7a76434710>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x7f7a763fb950>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x7f7a76435bd0>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x7f7a74dc90d0>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x7f7a66ff34d0>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x7f7a74dc8790>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x7f7a74dc8c50>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x7f7a74dc8cd0>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x7f7a74dc8f90>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x7f7a74dca110>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x7f7a74dcbd50>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x7f7a66ff0390>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x7f7a763f9990>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7f7a74dcb050>, 0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a74dca650>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f7a66eba590>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a74dc9a50>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x7f7a74dc9750>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x7f7a74dc8250>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a74dc91d0>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x7f7a76006c90>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x7f7a76006b50>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x7f7a760067d0>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x7f7a76008190>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x7f7a763f8b50>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f7a66e6a150>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x7f7a7600ae90>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x7f7a76008e10>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x7f7a7600a550>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f7a76008050>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f7a75ff6310>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x7f7a75ff7710>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x7f7a75ff5290>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x7f7a75ff60d0>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x7f7a75ff4050>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a75ff5390>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x7f7a75ff6e90>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7f7a764375d0>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x7f7a75ff6490>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x7f7a75ff5950>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x7f7a75ff72d0>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f7a66e7d150>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x7f7a75fed350>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x7f7a75fec0d0>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x7f7a75fec090>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f7a75fec590>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f7a763e1b90>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f7a66e8ccd0>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x7f7a763e1c10>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x7f7a763e0190>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x7f7a763e3c90>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x7f7a763e3750>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x7f7a763e2c50>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a66e7f610>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a763e2e90>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x7f7a763edbd0>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x7f7a763eee90>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x7f7a763ed050>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7f7a76434e10>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a66ebbc10>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x7f7a76435090>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x7f7a76436710>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x7f7a764343d0>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x7f7a74dcbf50>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x7f7a76009d50>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x7f7a75ff7410>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x7f7a763e15d0>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x7f7a763e11d0>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x7f7a75ff4210>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x7f7a763e12d0>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x7f7a763e1790>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x7f7a74dcb910>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x7f7a763e0850>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x7f7a76007310>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x7f7a75ff5490>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x7f7a764355d0>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x7f7a76437150>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x7f7a76435210>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x7f7a76434a90>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x7f7a74dc80d0>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x7f7a74dcb5d0>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x7f7a74dcb150>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x7f7a74dcbc10>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x7f7a76006510>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x7f7a763fac90>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x7f7a760082d0>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x7f7a75ff4ad0>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a763facd0>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x7f7a75ff5cd0>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x7f7a75fecc10>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x7f7a76434d10>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x7f7a763e0310>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x7f7a763e0890>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x7f7a763e35d0>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x7f7a763eef90>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x7f7a763ecd10>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x7f7a763e2bd0>, 566)],
             'bool310': [(<numba.core.ir.Assign object at 0x7f7a74dcba50>, 0)],
             'bool360': [(<numba.core.ir.Assign object at 0x7f7a74dc9710>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x7f7a75ff4610>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x7f7a763e38d0>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x7f7a763ede90>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x7f7a673287d0>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7f7a76009550>, 362)],
             'n': [(<numba.core.ir.Assign object at 0x7f7a74dcb250>, 312),
                   (<numba.core.ir.Assign object at 0x7f7a74dcae10>, 324),
                   (<numba.core.ir.Assign object at 0x7f7a75ff5510>, 554),
                   (<numba.core.ir.Assign object at 0x7f7a763e2410>, 786),
                   (<numba.core.ir.Assign object at 0x7f7a763e30d0>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x7f7a763f9790>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7f7a66ff2110>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7f7a67557110>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7f7a675574d0>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7f7a67555a90>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7f7a67543d50>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a66e42c90>, 0)]})
2024-06-28 20:38:21,515 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a7600acd0>
2024-06-28 20:38:21,515 - DEBUG - Fix SSA violator on var n
2024-06-28 20:38:21,515 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:21,515 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,515 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:21,515 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:21,515 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:21,515 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:21,515 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:21,515 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:21,516 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:21,516 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,516 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,517 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:21,517 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,517 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:21,517 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:21,517 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:21,517 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:21,517 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:21,517 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:21,517 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:21,517 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,517 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,518 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:21,518 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:21,518 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,519 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:21,519 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:21,519 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:21,519 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,519 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,519 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:21,519 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-28 20:38:21,519 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,519 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:21,519 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:21,519 - DEBUG - first assign: n
2024-06-28 20:38:21,519 - DEBUG - replaced with: n = wait + $const314.1
2024-06-28 20:38:21,520 - DEBUG - on stmt: jump 328
2024-06-28 20:38:21,520 - DEBUG - ==== SSA block rewrite pass on 324
2024-06-28 20:38:21,520 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,520 - DEBUG - on stmt: n = const(int, 1)
2024-06-28 20:38:21,520 - DEBUG - replaced with: n.1 = const(int, 1)
2024-06-28 20:38:21,520 - DEBUG - on stmt: jump 328
2024-06-28 20:38:21,520 - DEBUG - ==== SSA block rewrite pass on 328
2024-06-28 20:38:21,520 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,520 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,520 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:21,520 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:21,520 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:21,520 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,521 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,521 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:21,521 - DEBUG - ==== SSA block rewrite pass on 362
2024-06-28 20:38:21,521 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,521 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,521 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:21,521 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:21,521 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:21,521 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:21,521 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,521 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:21,521 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:21,521 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,522 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:21,522 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:21,522 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,522 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,522 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,522 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:21,522 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,522 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,522 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:21,522 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:21,522 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,522 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,522 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,523 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:21,523 - DEBUG - ==== SSA block rewrite pass on 554
2024-06-28 20:38:21,523 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,523 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:21,523 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,523 - DEBUG - on stmt: n = $binop_iadd558.2
2024-06-28 20:38:21,523 - DEBUG - replaced with: n.2 = $binop_iadd558.2
2024-06-28 20:38:21,523 - DEBUG - on stmt: jump 853
2024-06-28 20:38:21,523 - DEBUG - ==== SSA block rewrite pass on 566
2024-06-28 20:38:21,523 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,523 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,524 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:21,524 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:21,524 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:21,524 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:21,524 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,524 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:21,524 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:21,524 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,524 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:21,525 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:21,525 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,525 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,525 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,525 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:21,525 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,525 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,525 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,525 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:21,525 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:21,526 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,526 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:21,526 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,526 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,526 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,526 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:21,526 - DEBUG - ==== SSA block rewrite pass on 786
2024-06-28 20:38:21,526 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,526 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:21,526 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,526 - DEBUG - on stmt: n = $binop_iadd790.2
2024-06-28 20:38:21,527 - DEBUG - replaced with: n.3 = $binop_iadd790.2
2024-06-28 20:38:21,527 - DEBUG - on stmt: jump 853
2024-06-28 20:38:21,527 - DEBUG - ==== SSA block rewrite pass on 798
2024-06-28 20:38:21,527 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,527 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:21,527 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:21,527 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,527 - DEBUG - on stmt: n = $binop_iadd808.4
2024-06-28 20:38:21,527 - DEBUG - replaced with: n.4 = $binop_iadd808.4
2024-06-28 20:38:21,527 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,527 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:21,527 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:21,527 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:21,528 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,528 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,528 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:21,528 - DEBUG - ==== SSA block rewrite pass on 848
2024-06-28 20:38:21,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,528 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:21,528 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:21,528 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:21,528 - DEBUG - ==== SSA block rewrite pass on 852
2024-06-28 20:38:21,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,528 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:21,528 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:21,528 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:21,528 - DEBUG - ==== SSA block rewrite pass on 853
2024-06-28 20:38:21,529 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a670bfbd0>
2024-06-28 20:38:21,529 - DEBUG - on stmt: jump 328
2024-06-28 20:38:21,529 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x7f7a6757a750>],
             324: [<numba.core.ir.Assign object at 0x7f7a74e394d0>],
             554: [<numba.core.ir.Assign object at 0x7f7a66eb0910>],
             786: [<numba.core.ir.Assign object at 0x7f7a66eb1050>],
             798: [<numba.core.ir.Assign object at 0x7f7a66e40dd0>]})
2024-06-28 20:38:21,529 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:21,529 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,529 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:21,529 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:21,529 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:21,529 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:21,529 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:21,529 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:21,529 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:21,530 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:21,530 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:21,530 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:21,530 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,530 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:21,530 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:21,530 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:21,530 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,530 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:21,531 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:21,531 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,531 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,531 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,531 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:21,531 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,531 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:21,531 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:21,531 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:21,532 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,532 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,533 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,533 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:21,533 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,533 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:21,533 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:21,533 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,533 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:21,533 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:21,533 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:21,533 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,533 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,534 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:21,534 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-28 20:38:21,534 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,534 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:21,534 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:21,534 - DEBUG - on stmt: jump 328
2024-06-28 20:38:21,534 - DEBUG - ==== SSA block rewrite pass on 324
2024-06-28 20:38:21,534 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,534 - DEBUG - on stmt: n.1 = const(int, 1)
2024-06-28 20:38:21,534 - DEBUG - on stmt: jump 328
2024-06-28 20:38:21,534 - DEBUG - ==== SSA block rewrite pass on 328
2024-06-28 20:38:21,534 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,534 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,535 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:21,535 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:21,535 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:21,535 - DEBUG - find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:21,535 - DEBUG - find_def_from_top label 328
2024-06-28 20:38:21,535 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-06-28 20:38:21,535 - DEBUG - find_def_from_bottom label 312
2024-06-28 20:38:21,535 - DEBUG - incoming_def n = wait + $const314.1
2024-06-28 20:38:21,535 - DEBUG - find_def_from_bottom label 324
2024-06-28 20:38:21,535 - DEBUG - incoming_def n.1 = const(int, 1)
2024-06-28 20:38:21,535 - DEBUG - find_def_from_bottom label 853
2024-06-28 20:38:21,535 - DEBUG - find_def_from_top label 853
2024-06-28 20:38:21,535 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-06-28 20:38:21,536 - DEBUG - find_def_from_bottom label 554
2024-06-28 20:38:21,536 - DEBUG - incoming_def n.2 = $binop_iadd558.2
2024-06-28 20:38:21,536 - DEBUG - find_def_from_bottom label 786
2024-06-28 20:38:21,536 - DEBUG - incoming_def n.3 = $binop_iadd790.2
2024-06-28 20:38:21,536 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-06-28 20:38:21,536 - DEBUG - replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-06-28 20:38:21,536 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,536 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,536 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:21,536 - DEBUG - ==== SSA block rewrite pass on 362
2024-06-28 20:38:21,536 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,537 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,537 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:21,537 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:21,537 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:21,537 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:21,537 - DEBUG - find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-06-28 20:38:21,537 - DEBUG - find_def_from_top label 362
2024-06-28 20:38:21,537 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-06-28 20:38:21,537 - DEBUG - find_def_from_bottom label 328
2024-06-28 20:38:21,537 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-06-28 20:38:21,537 - DEBUG - find_def_from_bottom label 798
2024-06-28 20:38:21,538 - DEBUG - incoming_def n.4 = $binop_iadd808.4
2024-06-28 20:38:21,538 - DEBUG - replaced with: $binop_sub404.9 = n.7 - pre_max
2024-06-28 20:38:21,538 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,538 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:21,538 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:21,538 - DEBUG - find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-06-28 20:38:21,538 - DEBUG - replaced with: $binop_add438.15 = n.7 + post_max
2024-06-28 20:38:21,538 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,538 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:21,538 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:21,538 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,539 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,539 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,539 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:21,539 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,539 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,539 - DEBUG - find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,539 - DEBUG - replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:21,539 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:21,539 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:21,539 - DEBUG - find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-06-28 20:38:21,540 - DEBUG - replaced with: peaks[n.7] = $524compare_op.29
2024-06-28 20:38:21,540 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,540 - DEBUG - find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,540 - DEBUG - replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:21,540 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,540 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,540 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:21,540 - DEBUG - ==== SSA block rewrite pass on 554
2024-06-28 20:38:21,540 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,540 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:21,541 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,541 - DEBUG - find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,541 - DEBUG - find_def_from_top label 554
2024-06-28 20:38:21,541 - DEBUG - idom 362 from label 554
2024-06-28 20:38:21,541 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:21,541 - DEBUG - replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,541 - DEBUG - on stmt: n.2 = $binop_iadd558.2
2024-06-28 20:38:21,541 - DEBUG - on stmt: jump 853
2024-06-28 20:38:21,541 - DEBUG - ==== SSA block rewrite pass on 566
2024-06-28 20:38:21,541 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,541 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,541 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:21,541 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:21,542 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:21,542 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:21,542 - DEBUG - find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-06-28 20:38:21,542 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:21,542 - DEBUG - idom 362 from label 566
2024-06-28 20:38:21,542 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:21,542 - DEBUG - replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-06-28 20:38:21,542 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,542 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:21,542 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:21,542 - DEBUG - find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-06-28 20:38:21,542 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:21,542 - DEBUG - idom 362 from label 566
2024-06-28 20:38:21,542 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:21,543 - DEBUG - replaced with: $binop_add642.15 = n.7 + post_avg
2024-06-28 20:38:21,543 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,543 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:21,543 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:21,543 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,543 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:21,543 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,543 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:21,543 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,543 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,543 - DEBUG - find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,544 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:21,544 - DEBUG - idom 362 from label 566
2024-06-28 20:38:21,544 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:21,544 - DEBUG - replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:21,544 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,544 - DEBUG - find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,544 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:21,544 - DEBUG - idom 362 from label 566
2024-06-28 20:38:21,544 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:21,544 - DEBUG - replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:21,544 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:21,544 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:21,544 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,545 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:21,545 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-06-28 20:38:21,545 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:21,545 - DEBUG - idom 362 from label 566
2024-06-28 20:38:21,545 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:21,545 - DEBUG - replaced with: peaks[n.7] = $binop_iand758.35
2024-06-28 20:38:21,545 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,545 - DEBUG - find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:21,545 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:21,545 - DEBUG - idom 362 from label 566
2024-06-28 20:38:21,545 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:21,545 - DEBUG - replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:21,546 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,546 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,546 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:21,546 - DEBUG - ==== SSA block rewrite pass on 786
2024-06-28 20:38:21,546 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,546 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:21,546 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,546 - DEBUG - find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,546 - DEBUG - find_def_from_top label 786
2024-06-28 20:38:21,546 - DEBUG - idom 566 from label 786
2024-06-28 20:38:21,546 - DEBUG - find_def_from_bottom label 566
2024-06-28 20:38:21,546 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:21,546 - DEBUG - idom 362 from label 566
2024-06-28 20:38:21,546 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:21,547 - DEBUG - replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,547 - DEBUG - on stmt: n.3 = $binop_iadd790.2
2024-06-28 20:38:21,547 - DEBUG - on stmt: jump 853
2024-06-28 20:38:21,547 - DEBUG - ==== SSA block rewrite pass on 798
2024-06-28 20:38:21,547 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,547 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:21,547 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:21,547 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,547 - DEBUG - find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,547 - DEBUG - find_def_from_top label 798
2024-06-28 20:38:21,547 - DEBUG - idom 566 from label 798
2024-06-28 20:38:21,547 - DEBUG - find_def_from_bottom label 566
2024-06-28 20:38:21,547 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:21,547 - DEBUG - idom 362 from label 566
2024-06-28 20:38:21,547 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:21,548 - DEBUG - replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,548 - DEBUG - on stmt: n.4 = $binop_iadd808.4
2024-06-28 20:38:21,548 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:21,548 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:21,548 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:21,548 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:21,548 - DEBUG - find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:21,548 - DEBUG - replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-06-28 20:38:21,548 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,548 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,548 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:21,548 - DEBUG - ==== SSA block rewrite pass on 848
2024-06-28 20:38:21,548 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,549 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:21,549 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:21,549 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:21,549 - DEBUG - ==== SSA block rewrite pass on 852
2024-06-28 20:38:21,549 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,549 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:21,549 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:21,549 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:21,549 - DEBUG - ==== SSA block rewrite pass on 853
2024-06-28 20:38:21,549 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66e43510>
2024-06-28 20:38:21,549 - DEBUG - on stmt: jump 328
2024-06-28 20:38:21,558 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-06-28 20:38:21,559 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:21,559 - DEBUG - stack: []
2024-06-28 20:38:21,559 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:21,559 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-06-28 20:38:21,559 - DEBUG - stack []
2024-06-28 20:38:21,559 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-06-28 20:38:21,559 - DEBUG - stack []
2024-06-28 20:38:21,559 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-06-28 20:38:21,559 - DEBUG - stack []
2024-06-28 20:38:21,559 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-06-28 20:38:21,559 - DEBUG - stack []
2024-06-28 20:38:21,559 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-06-28 20:38:21,559 - DEBUG - stack ['$a6.0']
2024-06-28 20:38:21,559 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-06-28 20:38:21,560 - DEBUG - stack ['$8load_attr.1']
2024-06-28 20:38:21,560 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-06-28 20:38:21,560 - DEBUG - stack ['$8load_attr.1', '$const18.2']
2024-06-28 20:38:21,560 - DEBUG - dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-06-28 20:38:21,560 - DEBUG - stack ['$20compare_op.3']
2024-06-28 20:38:21,560 - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,560 - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:21,560 - DEBUG - stack: []
2024-06-28 20:38:21,560 - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-06-28 20:38:21,560 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-06-28 20:38:21,560 - DEBUG - stack []
2024-06-28 20:38:21,560 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-06-28 20:38:21,561 - DEBUG - stack ['$null$28.1', '$28load_global.0']
2024-06-28 20:38:21,561 - DEBUG - dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-06-28 20:38:21,561 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-06-28 20:38:21,561 - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-06-28 20:38:21,561 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-06-28 20:38:21,561 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-06-28 20:38:21,561 - DEBUG - stack ['$46call.3']
2024-06-28 20:38:21,561 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,561 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:21,561 - DEBUG - stack: []
2024-06-28 20:38:21,561 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-06-28 20:38:21,561 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-06-28 20:38:21,561 - DEBUG - stack []
2024-06-28 20:38:21,562 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-06-28 20:38:21,562 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-06-28 20:38:21,562 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-06-28 20:38:21,562 - DEBUG - stack ['$null$58.1', '$70load_attr.2']
2024-06-28 20:38:21,562 - DEBUG - dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-06-28 20:38:21,562 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-06-28 20:38:21,562 - DEBUG - dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-06-28 20:38:21,562 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-06-28 20:38:21,562 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-06-28 20:38:21,562 - DEBUG - stack ['$86call.4']
2024-06-28 20:38:21,562 - DEBUG - dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-06-28 20:38:21,562 - DEBUG - stack []
2024-06-28 20:38:21,562 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-06-28 20:38:21,563 - DEBUG - stack ['$null$98.6', '$98load_global.5']
2024-06-28 20:38:21,563 - DEBUG - dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-06-28 20:38:21,563 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-06-28 20:38:21,563 - DEBUG - dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-06-28 20:38:21,563 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-06-28 20:38:21,563 - DEBUG - dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-06-28 20:38:21,563 - DEBUG - stack ['$116call.8']
2024-06-28 20:38:21,563 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-06-28 20:38:21,563 - DEBUG - stack ['$null$126.9', '$126load_method.10']
2024-06-28 20:38:21,563 - DEBUG - dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-06-28 20:38:21,563 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-06-28 20:38:21,563 - DEBUG - dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-06-28 20:38:21,563 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-06-28 20:38:21,564 - DEBUG - dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-06-28 20:38:21,564 - DEBUG - stack ['$154call.12']
2024-06-28 20:38:21,564 - DEBUG - dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-06-28 20:38:21,564 - DEBUG - stack []
2024-06-28 20:38:21,564 - DEBUG - dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-06-28 20:38:21,564 - DEBUG - stack ['$null$166.13']
2024-06-28 20:38:21,564 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-06-28 20:38:21,564 - DEBUG - stack ['$null$166.13', '$168load_deref.14']
2024-06-28 20:38:21,564 - DEBUG - dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-06-28 20:38:21,564 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-06-28 20:38:21,564 - DEBUG - dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-06-28 20:38:21,564 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-06-28 20:38:21,564 - DEBUG - dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-06-28 20:38:21,565 - DEBUG - stack ['$176call.16']
2024-06-28 20:38:21,565 - DEBUG - end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,565 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:21,565 - DEBUG - stack: []
2024-06-28 20:38:21,565 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-06-28 20:38:21,565 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-06-28 20:38:21,565 - DEBUG - stack []
2024-06-28 20:38:21,565 - DEBUG - dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-06-28 20:38:21,565 - DEBUG - stack ['$max_value188.0']
2024-06-28 20:38:21,565 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,565 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:21,565 - DEBUG - stack: []
2024-06-28 20:38:21,566 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-06-28 20:38:21,566 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-06-28 20:38:21,566 - DEBUG - stack []
2024-06-28 20:38:21,566 - DEBUG - dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-06-28 20:38:21,566 - DEBUG - stack ['$it192.0']
2024-06-28 20:38:21,566 - DEBUG - end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-06-28 20:38:21,566 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:21,566 - DEBUG - stack: ['$phi196.0']
2024-06-28 20:38:21,566 - DEBUG - state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-06-28 20:38:21,566 - DEBUG - dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-06-28 20:38:21,566 - DEBUG - stack ['$phi196.0']
2024-06-28 20:38:21,567 - DEBUG - end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:21,567 - DEBUG - pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-06-28 20:38:21,567 - DEBUG - stack: []
2024-06-28 20:38:21,567 - DEBUG - state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-06-28 20:38:21,567 - DEBUG - dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-06-28 20:38:21,567 - DEBUG - stack []
2024-06-28 20:38:21,567 - DEBUG - dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-06-28 20:38:21,567 - DEBUG - stack ['$max_value300.0']
2024-06-28 20:38:21,567 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,567 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-06-28 20:38:21,567 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2024-06-28 20:38:21,567 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-06-28 20:38:21,567 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-06-28 20:38:21,568 - DEBUG - stack ['$phi198.0', '$phi198.1']
2024-06-28 20:38:21,568 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-06-28 20:38:21,568 - DEBUG - stack ['$phi198.0']
2024-06-28 20:38:21,568 - DEBUG - dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-06-28 20:38:21,568 - DEBUG - stack ['$phi198.0', '$view200.2']
2024-06-28 20:38:21,568 - DEBUG - dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-06-28 20:38:21,568 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-06-28 20:38:21,568 - DEBUG - dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-06-28 20:38:21,568 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-06-28 20:38:21,568 - DEBUG - dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-06-28 20:38:21,568 - DEBUG - stack ['$phi198.0', '$228call.5']
2024-06-28 20:38:21,568 - DEBUG - dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-06-28 20:38:21,568 - DEBUG - stack ['$phi198.0']
2024-06-28 20:38:21,569 - DEBUG - dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-06-28 20:38:21,569 - DEBUG - stack ['$phi198.0', '$null$240.6']
2024-06-28 20:38:21,569 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-06-28 20:38:21,569 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-06-28 20:38:21,569 - DEBUG - dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-06-28 20:38:21,569 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-06-28 20:38:21,569 - DEBUG - dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-06-28 20:38:21,569 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-06-28 20:38:21,569 - DEBUG - dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-06-28 20:38:21,569 - DEBUG - stack ['$phi198.0', '$250call.9']
2024-06-28 20:38:21,569 - DEBUG - end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-06-28 20:38:21,569 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-06-28 20:38:21,570 - DEBUG - stack: ['$phi262.0']
2024-06-28 20:38:21,570 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-06-28 20:38:21,570 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-06-28 20:38:21,570 - DEBUG - stack ['$phi262.0']
2024-06-28 20:38:21,570 - DEBUG - dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-06-28 20:38:21,570 - DEBUG - stack ['$phi262.0', '$v262.1']
2024-06-28 20:38:21,570 - DEBUG - dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-06-28 20:38:21,570 - DEBUG - stack ['$v262.1', '$phi262.0']
2024-06-28 20:38:21,570 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-06-28 20:38:21,570 - DEBUG - stack ['$v262.1']
2024-06-28 20:38:21,570 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,570 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-06-28 20:38:21,570 - DEBUG - stack: ['$phi270.0']
2024-06-28 20:38:21,570 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-06-28 20:38:21,571 - DEBUG - dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-06-28 20:38:21,571 - DEBUG - stack ['$phi270.0']
2024-06-28 20:38:21,571 - DEBUG - dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-06-28 20:38:21,571 - DEBUG - stack ['$phi270.0', '$null$270.1']
2024-06-28 20:38:21,571 - DEBUG - dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-06-28 20:38:21,571 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-06-28 20:38:21,571 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-06-28 20:38:21,572 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-06-28 20:38:21,572 - DEBUG - dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-06-28 20:38:21,572 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-06-28 20:38:21,572 - DEBUG - dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-06-28 20:38:21,572 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-06-28 20:38:21,572 - DEBUG - dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-06-28 20:38:21,572 - DEBUG - stack ['$phi270.0', '$282call.5']
2024-06-28 20:38:21,572 - DEBUG - end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-06-28 20:38:21,572 - DEBUG - pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-06-28 20:38:21,572 - DEBUG - stack: ['$phi294.0']
2024-06-28 20:38:21,572 - DEBUG - state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-06-28 20:38:21,572 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-06-28 20:38:21,573 - DEBUG - stack ['$phi294.0']
2024-06-28 20:38:21,573 - DEBUG - dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-06-28 20:38:21,573 - DEBUG - stack ['$phi294.0', '$v294.1']
2024-06-28 20:38:21,573 - DEBUG - end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-06-28 20:38:21,573 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-06-28 20:38:21,573 - DEBUG - stack: ['$phi298.0']
2024-06-28 20:38:21,573 - DEBUG - state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-06-28 20:38:21,573 - DEBUG - dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-06-28 20:38:21,573 - DEBUG - stack ['$phi298.0']
2024-06-28 20:38:21,573 - DEBUG - end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-06-28 20:38:21,573 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:21,573 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:21,573 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:21,574 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-06-28 20:38:21,574 - DEBUG - defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-06-28 20:38:21,575 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-06-28 20:38:21,575 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:21,576 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:21,577 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:21,578 - DEBUG - keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-06-28 20:38:21,578 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-06-28 20:38:21,579 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:21,579 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-06-28 20:38:21,579 - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,579 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-06-28 20:38:21,579 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,579 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-06-28 20:38:21,579 - DEBUG - block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-06-28 20:38:21,579 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-06-28 20:38:21,579 - DEBUG - block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,580 - DEBUG - block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-06-28 20:38:21,580 - DEBUG - block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-06-28 20:38:21,580 - DEBUG - block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-06-28 20:38:21,580 - DEBUG - block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,582 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-06-28 20:38:21,592 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:21,592 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,592 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,592 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:21,592 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:21,592 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:21,592 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,592 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,592 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:21,593 - DEBUG - ==== SSA block analysis pass on 28
2024-06-28 20:38:21,593 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,593 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:21,593 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:21,593 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,593 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:21,593 - DEBUG - ==== SSA block analysis pass on 58
2024-06-28 20:38:21,593 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,593 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,593 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:21,593 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,593 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:21,593 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,594 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:21,594 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:21,594 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,594 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:21,594 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,594 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,594 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,594 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:21,594 - DEBUG - ==== SSA block analysis pass on 188
2024-06-28 20:38:21,594 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,594 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:21,594 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:21,595 - DEBUG - ==== SSA block analysis pass on 192
2024-06-28 20:38:21,595 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,595 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:21,595 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:21,595 - DEBUG - on stmt: jump 196
2024-06-28 20:38:21,595 - DEBUG - ==== SSA block analysis pass on 196
2024-06-28 20:38:21,595 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,595 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:21,595 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:21,595 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:21,595 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:21,595 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:21,595 - DEBUG - ==== SSA block analysis pass on 198
2024-06-28 20:38:21,595 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,596 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:21,596 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:21,596 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,596 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:21,596 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,596 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,596 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,596 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:21,596 - DEBUG - ==== SSA block analysis pass on 262
2024-06-28 20:38:21,596 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,596 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:21,596 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:21,596 - DEBUG - ==== SSA block analysis pass on 270
2024-06-28 20:38:21,596 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,597 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:21,597 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,597 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,597 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,597 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:21,597 - DEBUG - ==== SSA block analysis pass on 294
2024-06-28 20:38:21,597 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,597 - DEBUG - on stmt: max_value = v
2024-06-28 20:38:21,597 - DEBUG - on stmt: jump 298
2024-06-28 20:38:21,597 - DEBUG - ==== SSA block analysis pass on 298
2024-06-28 20:38:21,597 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,597 - DEBUG - on stmt: jump 196
2024-06-28 20:38:21,597 - DEBUG - ==== SSA block analysis pass on 300
2024-06-28 20:38:21,597 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,598 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:21,598 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:21,599 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x7f7a7614ebd0>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x7f7a7614e550>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x7f7a7614e0d0>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x7f7a7614e850>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f7a7614dd90>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x7f7a7614d210>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x7f7a7614dc10>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a7614ce10>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a7614ce90>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a7614d050>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x7f7a7614c4d0>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x7f7a75fe4110>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x7f7a7614fe50>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x7f7a764bd910>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x7f7a764bd7d0>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x7f7a764bc690>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7f7a75fe6fd0>, 0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x7f7a764bd1d0>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x7f7a764bc910>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7f7a75fe7ed0>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x7f7a764befd0>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x7f7a764bfcd0>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x7f7a7614ffd0>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f7a7614fd50>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a7614f490>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7f7a75fe5850>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x7f7a7614f190>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x7f7a7614e390>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x7f7a75fe5b50>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x7f7a7614eed0>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x7f7a7614dad0>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x7f7a7614cc10>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a74dcbe90>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f7a7614ead0>, 58)],
             'bool26': [(<numba.core.ir.Assign object at 0x7f7a75fe6a90>, 0)],
             'bool260': [(<numba.core.ir.Assign object at 0x7f7a764bf790>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x7f7a764bf950>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x7f7a7614f790>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7f7a7614d710>,
                            58),
                           (<numba.core.ir.Assign object at 0x7f7a764bd490>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x7f7a7614c310>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x7f7a7614c890>, 198)]})
2024-06-28 20:38:21,599 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a75fe6d10>
2024-06-28 20:38:21,599 - DEBUG - Fix SSA violator on var max_value
2024-06-28 20:38:21,599 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:21,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,600 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,600 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:21,600 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:21,600 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:21,600 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,600 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,600 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:21,600 - DEBUG - ==== SSA block rewrite pass on 28
2024-06-28 20:38:21,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,600 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:21,600 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:21,601 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,601 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:21,601 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-28 20:38:21,601 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,601 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,601 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:21,601 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,601 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:21,601 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,601 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:21,601 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:21,601 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,601 - DEBUG - first assign: max_value
2024-06-28 20:38:21,602 - DEBUG - replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,602 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:21,602 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,602 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,602 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,602 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:21,602 - DEBUG - ==== SSA block rewrite pass on 188
2024-06-28 20:38:21,602 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,602 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:21,602 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:21,603 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:21,603 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,603 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:21,603 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:21,603 - DEBUG - on stmt: jump 196
2024-06-28 20:38:21,603 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-28 20:38:21,603 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,603 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:21,603 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:21,603 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:21,603 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:21,603 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:21,603 - DEBUG - ==== SSA block rewrite pass on 198
2024-06-28 20:38:21,603 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,604 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:21,604 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:21,604 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,604 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:21,604 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,604 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,604 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,604 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:21,604 - DEBUG - ==== SSA block rewrite pass on 262
2024-06-28 20:38:21,604 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,604 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:21,604 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:21,604 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:21,605 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,605 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:21,605 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,605 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,605 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,605 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:21,605 - DEBUG - ==== SSA block rewrite pass on 294
2024-06-28 20:38:21,605 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,605 - DEBUG - on stmt: max_value = v
2024-06-28 20:38:21,605 - DEBUG - replaced with: max_value.1 = v
2024-06-28 20:38:21,605 - DEBUG - on stmt: jump 298
2024-06-28 20:38:21,605 - DEBUG - ==== SSA block rewrite pass on 298
2024-06-28 20:38:21,605 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,606 - DEBUG - on stmt: jump 196
2024-06-28 20:38:21,606 - DEBUG - ==== SSA block rewrite pass on 300
2024-06-28 20:38:21,606 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fe6f90>
2024-06-28 20:38:21,606 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:21,606 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:21,606 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7f7a75fe52d0>],
             294: [<numba.core.ir.Assign object at 0x7f7a75fe5e90>]})
2024-06-28 20:38:21,606 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:21,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,606 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,606 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:21,606 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:21,607 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:21,607 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,607 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,607 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:21,607 - DEBUG - ==== SSA block rewrite pass on 28
2024-06-28 20:38:21,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,607 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:21,607 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:21,607 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,607 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:21,607 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-28 20:38:21,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,607 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,608 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:21,608 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,608 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:21,608 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,608 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:21,608 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:21,608 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,608 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:21,608 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,608 - DEBUG - find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,608 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,609 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,609 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:21,609 - DEBUG - ==== SSA block rewrite pass on 188
2024-06-28 20:38:21,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,609 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:21,609 - DEBUG - find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-06-28 20:38:21,609 - DEBUG - find_def_from_top label 188
2024-06-28 20:38:21,609 - DEBUG - idom 58 from label 188
2024-06-28 20:38:21,609 - DEBUG - find_def_from_bottom label 58
2024-06-28 20:38:21,609 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:21,609 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:21,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,609 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:21,610 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:21,610 - DEBUG - on stmt: jump 196
2024-06-28 20:38:21,610 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-28 20:38:21,610 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,610 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:21,610 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:21,610 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:21,610 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:21,610 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:21,610 - DEBUG - ==== SSA block rewrite pass on 198
2024-06-28 20:38:21,610 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,610 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:21,610 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:21,610 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,611 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-28 20:38:21,611 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,611 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,611 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,611 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:21,611 - DEBUG - ==== SSA block rewrite pass on 262
2024-06-28 20:38:21,611 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,611 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:21,611 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:21,611 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:21,611 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,611 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:21,611 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,612 - DEBUG - find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,612 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:21,612 - DEBUG - idom 198 from label 270
2024-06-28 20:38:21,612 - DEBUG - find_def_from_bottom label 198
2024-06-28 20:38:21,612 - DEBUG - find_def_from_top label 198
2024-06-28 20:38:21,612 - DEBUG - idom 196 from label 198
2024-06-28 20:38:21,612 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:21,612 - DEBUG - find_def_from_top label 196
2024-06-28 20:38:21,612 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-06-28 20:38:21,612 - DEBUG - find_def_from_bottom label 192
2024-06-28 20:38:21,612 - DEBUG - find_def_from_top label 192
2024-06-28 20:38:21,612 - DEBUG - idom 58 from label 192
2024-06-28 20:38:21,613 - DEBUG - find_def_from_bottom label 58
2024-06-28 20:38:21,613 - DEBUG - incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,613 - DEBUG - find_def_from_bottom label 298
2024-06-28 20:38:21,613 - DEBUG - find_def_from_top label 298
2024-06-28 20:38:21,613 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-06-28 20:38:21,613 - DEBUG - find_def_from_bottom label 294
2024-06-28 20:38:21,613 - DEBUG - incoming_def max_value.1 = v
2024-06-28 20:38:21,614 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:21,614 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:21,614 - DEBUG - idom 198 from label 270
2024-06-28 20:38:21,614 - DEBUG - find_def_from_bottom label 198
2024-06-28 20:38:21,614 - DEBUG - find_def_from_top label 198
2024-06-28 20:38:21,614 - DEBUG - idom 196 from label 198
2024-06-28 20:38:21,614 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:21,614 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-06-28 20:38:21,615 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-06-28 20:38:21,615 - DEBUG - replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,615 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,615 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,615 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:21,615 - DEBUG - ==== SSA block rewrite pass on 294
2024-06-28 20:38:21,615 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,615 - DEBUG - on stmt: max_value.1 = v
2024-06-28 20:38:21,615 - DEBUG - on stmt: jump 298
2024-06-28 20:38:21,615 - DEBUG - ==== SSA block rewrite pass on 298
2024-06-28 20:38:21,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,616 - DEBUG - on stmt: jump 196
2024-06-28 20:38:21,616 - DEBUG - ==== SSA block rewrite pass on 300
2024-06-28 20:38:21,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a75fe6790>
2024-06-28 20:38:21,616 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:21,616 - DEBUG - find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-06-28 20:38:21,616 - DEBUG - find_def_from_top label 300
2024-06-28 20:38:21,616 - DEBUG - idom 196 from label 300
2024-06-28 20:38:21,616 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:21,616 - DEBUG - replaced with: $302return_value.1 = cast(value=max_value.2)
2024-06-28 20:38:21,616 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:21,623 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-06-28 20:38:21,623 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:21,623 - DEBUG - stack: []
2024-06-28 20:38:21,623 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:21,624 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-06-28 20:38:21,624 - DEBUG - stack []
2024-06-28 20:38:21,624 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-06-28 20:38:21,624 - DEBUG - stack []
2024-06-28 20:38:21,624 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-06-28 20:38:21,624 - DEBUG - stack []
2024-06-28 20:38:21,624 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-06-28 20:38:21,624 - DEBUG - stack ['$indices4.0']
2024-06-28 20:38:21,624 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-06-28 20:38:21,624 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-06-28 20:38:21,624 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-06-28 20:38:21,624 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-06-28 20:38:21,624 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-06-28 20:38:21,624 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-06-28 20:38:21,625 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-06-28 20:38:21,625 - DEBUG - stack ['$indices4.0', '$binop_sub20.4']
2024-06-28 20:38:21,625 - DEBUG - dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-06-28 20:38:21,625 - DEBUG - stack ['$24compare_op.5']
2024-06-28 20:38:21,625 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,625 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-06-28 20:38:21,625 - DEBUG - stack: []
2024-06-28 20:38:21,625 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-06-28 20:38:21,625 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-06-28 20:38:21,625 - DEBUG - stack []
2024-06-28 20:38:21,625 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-06-28 20:38:21,625 - DEBUG - stack ['$indices32.0']
2024-06-28 20:38:21,625 - DEBUG - dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-06-28 20:38:21,625 - DEBUG - stack ['$indices32.0', '$a34.1']
2024-06-28 20:38:21,626 - DEBUG - dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-06-28 20:38:21,626 - DEBUG - stack ['$indices32.0', '$36load_attr.2']
2024-06-28 20:38:21,626 - DEBUG - dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-06-28 20:38:21,626 - DEBUG - stack ['$indices32.0', '$46unary_negative.3']
2024-06-28 20:38:21,626 - DEBUG - dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-06-28 20:38:21,626 - DEBUG - stack ['$48compare_op.4']
2024-06-28 20:38:21,626 - DEBUG - end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:21,626 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:21,626 - DEBUG - stack: []
2024-06-28 20:38:21,626 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-06-28 20:38:21,626 - DEBUG - dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-06-28 20:38:21,626 - DEBUG - stack []
2024-06-28 20:38:21,626 - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-06-28 20:38:21,626 - DEBUG - stack ['$null$56.1', '$56load_global.0']
2024-06-28 20:38:21,627 - DEBUG - dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-06-28 20:38:21,627 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-06-28 20:38:21,627 - DEBUG - dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-06-28 20:38:21,627 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-06-28 20:38:21,627 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-06-28 20:38:21,627 - DEBUG - stack ['$74call.3']
2024-06-28 20:38:21,627 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,627 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:21,627 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:21,627 - DEBUG - stack: []
2024-06-28 20:38:21,627 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-06-28 20:38:21,627 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-06-28 20:38:21,627 - DEBUG - stack []
2024-06-28 20:38:21,628 - DEBUG - dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-06-28 20:38:21,628 - DEBUG - stack ['$a86.0']
2024-06-28 20:38:21,628 - DEBUG - dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-06-28 20:38:21,628 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-06-28 20:38:21,628 - DEBUG - dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-06-28 20:38:21,628 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-06-28 20:38:21,628 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-06-28 20:38:21,628 - DEBUG - stack ['$114call.3']
2024-06-28 20:38:21,628 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-06-28 20:38:21,628 - DEBUG - stack ['$114call.3', '$indices124.4']
2024-06-28 20:38:21,628 - DEBUG - dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-06-28 20:38:21,628 - DEBUG - stack ['$126binary_subscr.5']
2024-06-28 20:38:21,628 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,629 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:21,629 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-06-28 20:38:21,629 - DEBUG - defmap: {}
2024-06-28 20:38:21,629 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:21,629 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:21,629 - DEBUG - keep phismap: {}
2024-06-28 20:38:21,629 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:21,629 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:21,629 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-06-28 20:38:21,629 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-06-28 20:38:21,629 - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,630 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,630 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-06-28 20:38:21,636 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:21,636 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76072e50>
2024-06-28 20:38:21,636 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,636 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-06-28 20:38:21,637 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:21,637 - DEBUG - on stmt: $const18.3 = const(int, 1)
2024-06-28 20:38:21,637 - DEBUG - on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-06-28 20:38:21,637 - DEBUG - on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-06-28 20:38:21,637 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,637 - DEBUG - on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,637 - DEBUG - on stmt: branch $30pred, 56, 32
2024-06-28 20:38:21,637 - DEBUG - ==== SSA block analysis pass on 32
2024-06-28 20:38:21,637 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76072e50>
2024-06-28 20:38:21,637 - DEBUG - on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:21,637 - DEBUG - on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-06-28 20:38:21,638 - DEBUG - on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-06-28 20:38:21,638 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-28 20:38:21,638 - DEBUG - on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,638 - DEBUG - on stmt: branch $54pred, 56, 86
2024-06-28 20:38:21,638 - DEBUG - ==== SSA block analysis pass on 56
2024-06-28 20:38:21,638 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76072e50>
2024-06-28 20:38:21,638 - DEBUG - on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-06-28 20:38:21,638 - DEBUG - on stmt: $const68.2 = const(str, Index out of bounds)
2024-06-28 20:38:21,638 - DEBUG - on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,638 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-06-28 20:38:21,638 - DEBUG - ==== SSA block analysis pass on 86
2024-06-28 20:38:21,638 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76072e50>
2024-06-28 20:38:21,638 - DEBUG - on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-06-28 20:38:21,639 - DEBUG - on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,639 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-06-28 20:38:21,639 - DEBUG - on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-06-28 20:38:21,639 - DEBUG - on stmt: return $136return_value.6
2024-06-28 20:38:21,639 - DEBUG - defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x7f7a76055250>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a76054e10>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x7f7a76055650>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a76071f90>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x7f7a76072290>, 0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76072890>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x7f7a76072ad0>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x7f7a760730d0>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f7a76073290>, 32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f7a76073950>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x7f7a76054550>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x7f7a76054f90>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76071a90>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x7f7a76071dd0>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x7f7a76071c10>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x7f7a76057ed0>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a760705d0>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x7f7a76072110>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f7a76073390>, 32)],
             'indices': [(<numba.core.ir.Assign object at 0x7f7a76073750>, 0)]})
2024-06-28 20:38:21,639 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76072e50>
2024-06-28 20:38:21,661 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-06-28 20:38:21,662 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:21,662 - DEBUG - stack: []
2024-06-28 20:38:21,662 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:21,662 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-06-28 20:38:21,662 - DEBUG - stack []
2024-06-28 20:38:21,662 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-06-28 20:38:21,662 - DEBUG - stack []
2024-06-28 20:38:21,662 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-06-28 20:38:21,662 - DEBUG - stack []
2024-06-28 20:38:21,662 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-06-28 20:38:21,662 - DEBUG - stack ['$ary4.0']
2024-06-28 20:38:21,663 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-06-28 20:38:21,663 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-06-28 20:38:21,663 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-06-28 20:38:21,663 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-06-28 20:38:21,663 - DEBUG - dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-06-28 20:38:21,663 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-06-28 20:38:21,663 - DEBUG - dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-06-28 20:38:21,663 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-06-28 20:38:21,663 - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-06-28 20:38:21,664 - DEBUG - stack ['$44call.5']
2024-06-28 20:38:21,664 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,664 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:21,664 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:21,664 - DEBUG - defmap: {}
2024-06-28 20:38:21,664 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:21,664 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:21,665 - DEBUG - keep phismap: {}
2024-06-28 20:38:21,665 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:21,665 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:21,665 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,665 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-06-28 20:38:21,670 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:21,670 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76010cd0>
2024-06-28 20:38:21,670 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-06-28 20:38:21,670 - DEBUG - on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-06-28 20:38:21,670 - DEBUG - on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-06-28 20:38:21,670 - DEBUG - on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,671 - DEBUG - on stmt: $54return_value.6 = cast(value=$44call.5)
2024-06-28 20:38:21,671 - DEBUG - on stmt: return $54return_value.6
2024-06-28 20:38:21,671 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x7f7a76013f50>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x7f7a76013d10>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x7f7a760132d0>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f7a76013550>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x7f7a75e4c350>, 0)]})
2024-06-28 20:38:21,671 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76010cd0>
2024-06-28 20:38:21,754 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-06-28 20:38:21,754 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:21,754 - DEBUG - stack: []
2024-06-28 20:38:21,754 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:21,754 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-06-28 20:38:21,754 - DEBUG - stack []
2024-06-28 20:38:21,754 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-06-28 20:38:21,755 - DEBUG - stack []
2024-06-28 20:38:21,755 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-06-28 20:38:21,755 - DEBUG - stack []
2024-06-28 20:38:21,755 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-06-28 20:38:21,755 - DEBUG - stack ['$a4.0']
2024-06-28 20:38:21,755 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-06-28 20:38:21,755 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-06-28 20:38:21,755 - DEBUG - dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-06-28 20:38:21,755 - DEBUG - stack ['$8compare_op.2']
2024-06-28 20:38:21,755 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,755 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:21,755 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:21,755 - DEBUG - defmap: {}
2024-06-28 20:38:21,755 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:21,755 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:21,755 - DEBUG - keep phismap: {}
2024-06-28 20:38:21,756 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:21,756 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:21,756 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,756 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-06-28 20:38:21,759 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:21,760 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76334cd0>
2024-06-28 20:38:21,760 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,760 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-06-28 20:38:21,760 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-06-28 20:38:21,760 - DEBUG - on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-06-28 20:38:21,760 - DEBUG - on stmt: return $14return_value.3
2024-06-28 20:38:21,760 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x7f7a761cbbd0>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a761ca390>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a761cb790>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7f7a761ca890>, 0)]})
2024-06-28 20:38:21,760 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76334cd0>
2024-06-28 20:38:21,882 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-06-28 20:38:21,883 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:21,883 - DEBUG - stack: []
2024-06-28 20:38:21,883 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:21,883 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-06-28 20:38:21,883 - DEBUG - stack []
2024-06-28 20:38:21,883 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-06-28 20:38:21,883 - DEBUG - stack []
2024-06-28 20:38:21,883 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-06-28 20:38:21,883 - DEBUG - stack []
2024-06-28 20:38:21,883 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-06-28 20:38:21,883 - DEBUG - stack []
2024-06-28 20:38:21,883 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-06-28 20:38:21,883 - DEBUG - stack ['$6load_deref.0']
2024-06-28 20:38:21,883 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-06-28 20:38:21,883 - DEBUG - stack []
2024-06-28 20:38:21,883 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-06-28 20:38:21,884 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-06-28 20:38:21,884 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-06-28 20:38:21,884 - DEBUG - stack ['$null$10.2', '$22load_attr.3']
2024-06-28 20:38:21,884 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-06-28 20:38:21,884 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-06-28 20:38:21,884 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-06-28 20:38:21,884 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-06-28 20:38:21,884 - DEBUG - dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-06-28 20:38:21,884 - DEBUG - stack ['$38call.5']
2024-06-28 20:38:21,885 - DEBUG - end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-06-28 20:38:21,885 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-06-28 20:38:21,885 - DEBUG - stack: ['$phi50.0']
2024-06-28 20:38:21,885 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-06-28 20:38:21,885 - DEBUG - dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-06-28 20:38:21,885 - DEBUG - stack ['$phi50.0']
2024-06-28 20:38:21,885 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:21,885 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-06-28 20:38:21,885 - DEBUG - stack: []
2024-06-28 20:38:21,885 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-06-28 20:38:21,885 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-06-28 20:38:21,885 - DEBUG - stack []
2024-06-28 20:38:21,886 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-06-28 20:38:21,886 - DEBUG - stack ['$c102.0']
2024-06-28 20:38:21,886 - DEBUG - dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-06-28 20:38:21,886 - DEBUG - stack ['$c102.0', '$a104.1']
2024-06-28 20:38:21,886 - DEBUG - dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-06-28 20:38:21,886 - DEBUG - stack ['$c102.0', '$106load_attr.2']
2024-06-28 20:38:21,886 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-06-28 20:38:21,886 - DEBUG - stack ['$binop_truediv116.3']
2024-06-28 20:38:21,886 - DEBUG - end state. edges=[]
2024-06-28 20:38:21,886 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-06-28 20:38:21,886 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2024-06-28 20:38:21,886 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-06-28 20:38:21,886 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-06-28 20:38:21,886 - DEBUG - stack ['$phi52.0', '$phi52.1']
2024-06-28 20:38:21,886 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-06-28 20:38:21,886 - DEBUG - stack ['$phi52.0']
2024-06-28 20:38:21,887 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-06-28 20:38:21,887 - DEBUG - stack ['$phi52.0', '$c54.2']
2024-06-28 20:38:21,887 - DEBUG - dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-06-28 20:38:21,887 - DEBUG - stack ['$phi52.0', '$c54.2', '$v56.3']
2024-06-28 20:38:21,887 - DEBUG - dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-06-28 20:38:21,887 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-06-28 20:38:21,887 - DEBUG - dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-06-28 20:38:21,887 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-06-28 20:38:21,887 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-06-28 20:38:21,887 - DEBUG - stack ['$phi52.0', '$c54.2', '$84call.6']
2024-06-28 20:38:21,887 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-06-28 20:38:21,887 - DEBUG - stack ['$phi52.0', '$binop_iadd94.7']
2024-06-28 20:38:21,887 - DEBUG - dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-06-28 20:38:21,887 - DEBUG - stack ['$phi52.0']
2024-06-28 20:38:21,888 - DEBUG - end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-06-28 20:38:21,888 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-06-28 20:38:21,888 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:21,888 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-06-28 20:38:21,888 - DEBUG - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-06-28 20:38:21,888 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:21,889 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:21,889 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:21,890 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:21,890 - DEBUG - keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-06-28 20:38:21,890 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-06-28 20:38:21,891 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:21,891 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-06-28 20:38:21,891 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-06-28 20:38:21,891 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-06-28 20:38:21,891 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:21,892 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-06-28 20:38:21,898 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:21,898 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006f90>
2024-06-28 20:38:21,898 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,898 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,899 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,899 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:21,899 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,899 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:21,899 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:21,899 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,899 - DEBUG - ==== SSA block analysis pass on 50
2024-06-28 20:38:21,899 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006f90>
2024-06-28 20:38:21,899 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:21,899 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:21,899 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:21,900 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:21,900 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:21,900 - DEBUG - ==== SSA block analysis pass on 52
2024-06-28 20:38:21,900 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006f90>
2024-06-28 20:38:21,900 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:21,900 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:21,900 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,900 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,900 - DEBUG - on stmt: c = $binop_iadd94.7
2024-06-28 20:38:21,900 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,900 - DEBUG - ==== SSA block analysis pass on 102
2024-06-28 20:38:21,900 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76006f90>
2024-06-28 20:38:21,900 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:21,900 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:21,901 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:21,901 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:21,901 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a763308d0>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7f7a763328d0>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x7f7a76332fd0>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x7f7a76331250>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x7f7a76332650>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x7f7a76331550>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a76331050>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a76332bd0>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a76330290>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x7f7a76332190>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x7f7a76330710>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x7f7a763303d0>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x7f7a76330810>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7f7a76331290>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7f7a76332e50>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a76184c90>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7f7a7614d790>, 0),
                   (<numba.core.ir.Assign object at 0x7f7a76331a10>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x7f7a76333690>, 52)]})
2024-06-28 20:38:21,902 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76006f90>
2024-06-28 20:38:21,902 - DEBUG - Fix SSA violator on var c
2024-06-28 20:38:21,902 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:21,902 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fa13d0>
2024-06-28 20:38:21,902 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,902 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,902 - DEBUG - first assign: c
2024-06-28 20:38:21,902 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,902 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,902 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:21,902 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,902 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:21,902 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:21,903 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,903 - DEBUG - ==== SSA block rewrite pass on 50
2024-06-28 20:38:21,903 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fa13d0>
2024-06-28 20:38:21,903 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:21,903 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:21,903 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:21,903 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:21,903 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:21,903 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-28 20:38:21,903 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fa13d0>
2024-06-28 20:38:21,903 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:21,903 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:21,903 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,903 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,903 - DEBUG - on stmt: c = $binop_iadd94.7
2024-06-28 20:38:21,904 - DEBUG - replaced with: c.1 = $binop_iadd94.7
2024-06-28 20:38:21,904 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,904 - DEBUG - ==== SSA block rewrite pass on 102
2024-06-28 20:38:21,904 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a75fa13d0>
2024-06-28 20:38:21,904 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:21,904 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:21,904 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:21,904 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:21,904 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a764411d0>],
             52: [<numba.core.ir.Assign object at 0x7f7a76440dd0>]})
2024-06-28 20:38:21,904 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:21,904 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a764421d0>
2024-06-28 20:38:21,904 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:21,904 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,904 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:21,904 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:21,905 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,905 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:21,905 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:21,905 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,905 - DEBUG - ==== SSA block rewrite pass on 50
2024-06-28 20:38:21,905 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a764421d0>
2024-06-28 20:38:21,905 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:21,905 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:21,905 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:21,905 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:21,905 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:21,906 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-28 20:38:21,906 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a764421d0>
2024-06-28 20:38:21,906 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:21,906 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:21,906 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:21,906 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,906 - DEBUG - find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,906 - DEBUG - find_def_from_top label 52
2024-06-28 20:38:21,906 - DEBUG - idom 50 from label 52
2024-06-28 20:38:21,906 - DEBUG - find_def_from_bottom label 50
2024-06-28 20:38:21,906 - DEBUG - find_def_from_top label 50
2024-06-28 20:38:21,906 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-06-28 20:38:21,906 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:21,906 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-06-28 20:38:21,907 - DEBUG - find_def_from_bottom label 52
2024-06-28 20:38:21,907 - DEBUG - incoming_def c.1 = $binop_iadd94.7
2024-06-28 20:38:21,907 - DEBUG - replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:21,907 - DEBUG - on stmt: c.1 = $binop_iadd94.7
2024-06-28 20:38:21,907 - DEBUG - on stmt: jump 50
2024-06-28 20:38:21,907 - DEBUG - ==== SSA block rewrite pass on 102
2024-06-28 20:38:21,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a764421d0>
2024-06-28 20:38:21,907 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:21,907 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:21,907 - DEBUG - find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:21,907 - DEBUG - find_def_from_top label 102
2024-06-28 20:38:21,907 - DEBUG - idom 50 from label 102
2024-06-28 20:38:21,907 - DEBUG - find_def_from_bottom label 50
2024-06-28 20:38:21,907 - DEBUG - replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-06-28 20:38:21,908 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:21,908 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:22,196 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:22,196 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:22,197 - DEBUG - stack: []
2024-06-28 20:38:22,197 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:22,197 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-06-28 20:38:22,197 - DEBUG - stack []
2024-06-28 20:38:22,197 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-06-28 20:38:22,197 - DEBUG - stack []
2024-06-28 20:38:22,197 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:22,197 - DEBUG - stack []
2024-06-28 20:38:22,197 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:22,197 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:22,198 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:22,198 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-28 20:38:22,198 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-06-28 20:38:22,198 - DEBUG - stack ['$8binary_subscr.2']
2024-06-28 20:38:22,198 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-06-28 20:38:22,198 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-06-28 20:38:22,198 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:22,198 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-06-28 20:38:22,198 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-06-28 20:38:22,199 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-06-28 20:38:22,199 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-06-28 20:38:22,199 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-06-28 20:38:22,199 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-06-28 20:38:22,199 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-06-28 20:38:22,199 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:22,199 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-06-28 20:38:22,199 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-06-28 20:38:22,199 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-06-28 20:38:22,199 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:22,199 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-06-28 20:38:22,200 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:22,200 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-06-28 20:38:22,200 - DEBUG - dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-06-28 20:38:22,200 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-06-28 20:38:22,200 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-06-28 20:38:22,200 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-06-28 20:38:22,200 - DEBUG - dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-06-28 20:38:22,200 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-06-28 20:38:22,200 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:22,200 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-06-28 20:38:22,201 - DEBUG - dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-06-28 20:38:22,201 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-06-28 20:38:22,201 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-06-28 20:38:22,201 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-06-28 20:38:22,201 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-06-28 20:38:22,201 - DEBUG - stack ['$8binary_subscr.2', '$112call.19']
2024-06-28 20:38:22,201 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-06-28 20:38:22,201 - DEBUG - stack ['$122compare_op.20']
2024-06-28 20:38:22,201 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:22,201 - DEBUG - stack ['$122compare_op.20', '$peaks128.21']
2024-06-28 20:38:22,201 - DEBUG - dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:22,202 - DEBUG - stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-06-28 20:38:22,202 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-06-28 20:38:22,202 - DEBUG - stack []
2024-06-28 20:38:22,202 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:22,202 - DEBUG - stack ['$peaks136.23']
2024-06-28 20:38:22,202 - DEBUG - dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-06-28 20:38:22,202 - DEBUG - stack ['$peaks136.23', '$const138.24']
2024-06-28 20:38:22,202 - DEBUG - dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-06-28 20:38:22,202 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-06-28 20:38:22,202 - DEBUG - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,202 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-06-28 20:38:22,202 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:22,202 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-06-28 20:38:22,203 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:22,203 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-06-28 20:38:22,203 - DEBUG - dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,203 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-06-28 20:38:22,203 - DEBUG - dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-06-28 20:38:22,203 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-06-28 20:38:22,203 - DEBUG - dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-06-28 20:38:22,203 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-06-28 20:38:22,203 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:22,203 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-06-28 20:38:22,203 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-06-28 20:38:22,204 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-06-28 20:38:22,204 - DEBUG - dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-06-28 20:38:22,204 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-06-28 20:38:22,204 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-06-28 20:38:22,204 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-06-28 20:38:22,204 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:22,204 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-06-28 20:38:22,204 - DEBUG - dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-06-28 20:38:22,204 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-06-28 20:38:22,204 - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:22,204 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-06-28 20:38:22,205 - DEBUG - dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,205 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-06-28 20:38:22,205 - DEBUG - dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-06-28 20:38:22,205 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-06-28 20:38:22,205 - DEBUG - dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-06-28 20:38:22,205 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-06-28 20:38:22,205 - DEBUG - dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-06-28 20:38:22,205 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-06-28 20:38:22,205 - DEBUG - dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,205 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-06-28 20:38:22,206 - DEBUG - dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-06-28 20:38:22,206 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-06-28 20:38:22,206 - DEBUG - dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-06-28 20:38:22,206 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-06-28 20:38:22,206 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-06-28 20:38:22,206 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-06-28 20:38:22,206 - DEBUG - dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-06-28 20:38:22,206 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-06-28 20:38:22,206 - DEBUG - dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-06-28 20:38:22,206 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-06-28 20:38:22,206 - DEBUG - dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-06-28 20:38:22,206 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-06-28 20:38:22,206 - DEBUG - dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-06-28 20:38:22,206 - DEBUG - stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-06-28 20:38:22,207 - DEBUG - dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-06-28 20:38:22,207 - DEBUG - stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-06-28 20:38:22,207 - DEBUG - dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,207 - DEBUG - stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-06-28 20:38:22,207 - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-06-28 20:38:22,207 - DEBUG - stack []
2024-06-28 20:38:22,207 - DEBUG - dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-06-28 20:38:22,207 - DEBUG - stack ['$peaks296.50']
2024-06-28 20:38:22,207 - DEBUG - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-06-28 20:38:22,207 - DEBUG - stack ['$peaks296.50', '$const298.51']
2024-06-28 20:38:22,207 - DEBUG - dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-06-28 20:38:22,207 - DEBUG - stack ['$300binary_subscr.52']
2024-06-28 20:38:22,207 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,207 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-06-28 20:38:22,207 - DEBUG - stack: []
2024-06-28 20:38:22,208 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-06-28 20:38:22,208 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-06-28 20:38:22,208 - DEBUG - stack []
2024-06-28 20:38:22,208 - DEBUG - dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-06-28 20:38:22,208 - DEBUG - stack ['$wait312.0']
2024-06-28 20:38:22,208 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-06-28 20:38:22,208 - DEBUG - stack ['$wait312.0', '$const314.1']
2024-06-28 20:38:22,208 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-06-28 20:38:22,208 - DEBUG - stack ['$binop_add316.2']
2024-06-28 20:38:22,208 - DEBUG - dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-06-28 20:38:22,208 - DEBUG - stack []
2024-06-28 20:38:22,208 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,208 - DEBUG - pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:22,209 - DEBUG - stack: []
2024-06-28 20:38:22,209 - DEBUG - state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-06-28 20:38:22,209 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-06-28 20:38:22,209 - DEBUG - stack []
2024-06-28 20:38:22,209 - DEBUG - dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-06-28 20:38:22,209 - DEBUG - stack ['$const324.0']
2024-06-28 20:38:22,209 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,209 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:22,209 - DEBUG - stack: []
2024-06-28 20:38:22,209 - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-06-28 20:38:22,209 - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-28 20:38:22,209 - DEBUG - stack []
2024-06-28 20:38:22,209 - DEBUG - dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-28 20:38:22,209 - DEBUG - stack ['$n328.0']
2024-06-28 20:38:22,209 - DEBUG - dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-06-28 20:38:22,209 - DEBUG - stack ['$n328.0', '$x330.1']
2024-06-28 20:38:22,210 - DEBUG - dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-28 20:38:22,210 - DEBUG - stack ['$n328.0', '$332load_attr.2']
2024-06-28 20:38:22,210 - DEBUG - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-28 20:38:22,210 - DEBUG - stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-06-28 20:38:22,210 - DEBUG - dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-06-28 20:38:22,210 - DEBUG - stack ['$n328.0', '$344binary_subscr.4']
2024-06-28 20:38:22,210 - DEBUG - dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-06-28 20:38:22,210 - DEBUG - stack ['$354compare_op.5']
2024-06-28 20:38:22,210 - DEBUG - end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,210 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-06-28 20:38:22,210 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-06-28 20:38:22,211 - DEBUG - stack: []
2024-06-28 20:38:22,211 - DEBUG - state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-06-28 20:38:22,211 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-06-28 20:38:22,211 - DEBUG - stack []
2024-06-28 20:38:22,211 - DEBUG - dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-06-28 20:38:22,211 - DEBUG - stack ['$null$362.1', '$362load_global.0']
2024-06-28 20:38:22,211 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-28 20:38:22,211 - DEBUG - stack ['$null$362.1', '$374load_attr.2']
2024-06-28 20:38:22,211 - DEBUG - dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-06-28 20:38:22,211 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-06-28 20:38:22,211 - DEBUG - dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-28 20:38:22,212 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-06-28 20:38:22,212 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-28 20:38:22,212 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-06-28 20:38:22,212 - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-06-28 20:38:22,212 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-06-28 20:38:22,212 - DEBUG - dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-06-28 20:38:22,212 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-06-28 20:38:22,212 - DEBUG - dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-06-28 20:38:22,212 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-06-28 20:38:22,212 - DEBUG - dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-06-28 20:38:22,212 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-06-28 20:38:22,212 - DEBUG - dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-06-28 20:38:22,213 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-06-28 20:38:22,213 - DEBUG - dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-28 20:38:22,213 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-06-28 20:38:22,213 - DEBUG - dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-06-28 20:38:22,213 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-06-28 20:38:22,213 - DEBUG - dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-06-28 20:38:22,213 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-06-28 20:38:22,213 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-28 20:38:22,213 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-06-28 20:38:22,213 - DEBUG - dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-06-28 20:38:22,213 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-06-28 20:38:22,213 - DEBUG - dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-28 20:38:22,213 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-06-28 20:38:22,214 - DEBUG - dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-28 20:38:22,214 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-06-28 20:38:22,214 - DEBUG - dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-06-28 20:38:22,214 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-06-28 20:38:22,214 - DEBUG - dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-06-28 20:38:22,214 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-06-28 20:38:22,214 - DEBUG - dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-06-28 20:38:22,214 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-06-28 20:38:22,214 - DEBUG - dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-28 20:38:22,214 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-06-28 20:38:22,214 - DEBUG - dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-06-28 20:38:22,214 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-06-28 20:38:22,215 - DEBUG - dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-06-28 20:38:22,215 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-06-28 20:38:22,215 - DEBUG - dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-06-28 20:38:22,215 - DEBUG - stack ['$496call.24']
2024-06-28 20:38:22,215 - DEBUG - dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-06-28 20:38:22,215 - DEBUG - stack []
2024-06-28 20:38:22,215 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-28 20:38:22,215 - DEBUG - stack ['$x508.25']
2024-06-28 20:38:22,215 - DEBUG - dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-06-28 20:38:22,215 - DEBUG - stack ['$x508.25', '$n510.26']
2024-06-28 20:38:22,215 - DEBUG - dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-06-28 20:38:22,215 - DEBUG - stack ['$512binary_subscr.27']
2024-06-28 20:38:22,215 - DEBUG - dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-06-28 20:38:22,215 - DEBUG - stack ['$512binary_subscr.27', '$maxn522.28']
2024-06-28 20:38:22,216 - DEBUG - dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-06-28 20:38:22,216 - DEBUG - stack ['$524compare_op.29']
2024-06-28 20:38:22,216 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-28 20:38:22,216 - DEBUG - stack ['$524compare_op.29', '$peaks530.30']
2024-06-28 20:38:22,216 - DEBUG - dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-06-28 20:38:22,216 - DEBUG - stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-06-28 20:38:22,216 - DEBUG - dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-06-28 20:38:22,216 - DEBUG - stack []
2024-06-28 20:38:22,216 - DEBUG - dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-06-28 20:38:22,216 - DEBUG - stack ['$peaks538.32']
2024-06-28 20:38:22,216 - DEBUG - dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-06-28 20:38:22,216 - DEBUG - stack ['$peaks538.32', '$n540.33']
2024-06-28 20:38:22,216 - DEBUG - dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-06-28 20:38:22,216 - DEBUG - stack ['$542binary_subscr.34']
2024-06-28 20:38:22,217 - DEBUG - end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,217 - DEBUG - pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-06-28 20:38:22,217 - DEBUG - stack: []
2024-06-28 20:38:22,217 - DEBUG - state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-06-28 20:38:22,217 - DEBUG - dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-06-28 20:38:22,217 - DEBUG - stack []
2024-06-28 20:38:22,217 - DEBUG - dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:22,217 - DEBUG - stack ['$const852.0']
2024-06-28 20:38:22,217 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,217 - DEBUG - pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-06-28 20:38:22,217 - DEBUG - stack: []
2024-06-28 20:38:22,217 - DEBUG - state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-06-28 20:38:22,218 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-06-28 20:38:22,218 - DEBUG - stack []
2024-06-28 20:38:22,218 - DEBUG - dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-06-28 20:38:22,218 - DEBUG - stack ['$n554.0']
2024-06-28 20:38:22,218 - DEBUG - dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-06-28 20:38:22,218 - DEBUG - stack ['$n554.0', '$const556.1']
2024-06-28 20:38:22,218 - DEBUG - dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-06-28 20:38:22,218 - DEBUG - stack ['$binop_iadd558.2']
2024-06-28 20:38:22,218 - DEBUG - dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-06-28 20:38:22,218 - DEBUG - stack []
2024-06-28 20:38:22,218 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,218 - DEBUG - pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:22,218 - DEBUG - stack: []
2024-06-28 20:38:22,218 - DEBUG - state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-06-28 20:38:22,218 - DEBUG - dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-06-28 20:38:22,219 - DEBUG - stack []
2024-06-28 20:38:22,219 - DEBUG - dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-06-28 20:38:22,219 - DEBUG - stack ['$null$566.1', '$566load_global.0']
2024-06-28 20:38:22,219 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-28 20:38:22,219 - DEBUG - stack ['$null$566.1', '$578load_attr.2']
2024-06-28 20:38:22,219 - DEBUG - dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-06-28 20:38:22,219 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-06-28 20:38:22,219 - DEBUG - dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-28 20:38:22,219 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-06-28 20:38:22,219 - DEBUG - dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-28 20:38:22,219 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-06-28 20:38:22,220 - DEBUG - dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-06-28 20:38:22,220 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-06-28 20:38:22,220 - DEBUG - dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-06-28 20:38:22,220 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-06-28 20:38:22,220 - DEBUG - dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-06-28 20:38:22,220 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-06-28 20:38:22,220 - DEBUG - dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-06-28 20:38:22,220 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-06-28 20:38:22,220 - DEBUG - dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-06-28 20:38:22,220 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-06-28 20:38:22,220 - DEBUG - dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-28 20:38:22,220 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-06-28 20:38:22,220 - DEBUG - dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-06-28 20:38:22,221 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-06-28 20:38:22,221 - DEBUG - dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-06-28 20:38:22,221 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-06-28 20:38:22,221 - DEBUG - dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-28 20:38:22,221 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-06-28 20:38:22,221 - DEBUG - dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-06-28 20:38:22,221 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-06-28 20:38:22,221 - DEBUG - dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-28 20:38:22,221 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-06-28 20:38:22,221 - DEBUG - dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-28 20:38:22,221 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-06-28 20:38:22,221 - DEBUG - dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-06-28 20:38:22,221 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-06-28 20:38:22,221 - DEBUG - dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-06-28 20:38:22,222 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-06-28 20:38:22,222 - DEBUG - dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-06-28 20:38:22,222 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-06-28 20:38:22,222 - DEBUG - dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-28 20:38:22,222 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-06-28 20:38:22,222 - DEBUG - dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-06-28 20:38:22,222 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-06-28 20:38:22,222 - DEBUG - dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-06-28 20:38:22,222 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-06-28 20:38:22,222 - DEBUG - dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-06-28 20:38:22,222 - DEBUG - stack ['$700call.24']
2024-06-28 20:38:22,222 - DEBUG - dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-06-28 20:38:22,222 - DEBUG - stack []
2024-06-28 20:38:22,223 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-28 20:38:22,223 - DEBUG - stack ['$peaks712.25']
2024-06-28 20:38:22,223 - DEBUG - dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-06-28 20:38:22,223 - DEBUG - stack ['$peaks712.25', '$n714.26']
2024-06-28 20:38:22,223 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-06-28 20:38:22,223 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-06-28 20:38:22,223 - DEBUG - dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:22,223 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-06-28 20:38:22,223 - DEBUG - dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-06-28 20:38:22,223 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-06-28 20:38:22,223 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-28 20:38:22,223 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-06-28 20:38:22,223 - DEBUG - dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:22,223 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-06-28 20:38:22,223 - DEBUG - dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-06-28 20:38:22,224 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-06-28 20:38:22,224 - DEBUG - dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-06-28 20:38:22,224 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-06-28 20:38:22,224 - DEBUG - dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-06-28 20:38:22,224 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-06-28 20:38:22,224 - DEBUG - dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-06-28 20:38:22,224 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-06-28 20:38:22,224 - DEBUG - dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-06-28 20:38:22,224 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-06-28 20:38:22,224 - DEBUG - dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-06-28 20:38:22,225 - DEBUG - stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-06-28 20:38:22,225 - DEBUG - dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-06-28 20:38:22,225 - DEBUG - stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-06-28 20:38:22,225 - DEBUG - dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:22,225 - DEBUG - stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-06-28 20:38:22,225 - DEBUG - dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-06-28 20:38:22,225 - DEBUG - stack []
2024-06-28 20:38:22,225 - DEBUG - dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-06-28 20:38:22,225 - DEBUG - stack ['$peaks770.36']
2024-06-28 20:38:22,225 - DEBUG - dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-06-28 20:38:22,225 - DEBUG - stack ['$peaks770.36', '$n772.37']
2024-06-28 20:38:22,225 - DEBUG - dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-06-28 20:38:22,225 - DEBUG - stack ['$774binary_subscr.38']
2024-06-28 20:38:22,226 - DEBUG - end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,226 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-06-28 20:38:22,226 - DEBUG - pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-06-28 20:38:22,226 - DEBUG - stack: []
2024-06-28 20:38:22,226 - DEBUG - state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-06-28 20:38:22,226 - DEBUG - dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-06-28 20:38:22,226 - DEBUG - stack []
2024-06-28 20:38:22,226 - DEBUG - dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-06-28 20:38:22,226 - DEBUG - stack ['$n786.0']
2024-06-28 20:38:22,226 - DEBUG - dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-06-28 20:38:22,226 - DEBUG - stack ['$n786.0', '$const788.1']
2024-06-28 20:38:22,227 - DEBUG - dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-06-28 20:38:22,227 - DEBUG - stack ['$binop_iadd790.2']
2024-06-28 20:38:22,227 - DEBUG - dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-06-28 20:38:22,227 - DEBUG - stack []
2024-06-28 20:38:22,227 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,227 - DEBUG - pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:22,227 - DEBUG - stack: []
2024-06-28 20:38:22,227 - DEBUG - state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-06-28 20:38:22,227 - DEBUG - dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-06-28 20:38:22,227 - DEBUG - stack []
2024-06-28 20:38:22,227 - DEBUG - dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-06-28 20:38:22,228 - DEBUG - stack ['$n798.0']
2024-06-28 20:38:22,228 - DEBUG - dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-06-28 20:38:22,228 - DEBUG - stack ['$n798.0', '$wait800.1']
2024-06-28 20:38:22,228 - DEBUG - dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-06-28 20:38:22,228 - DEBUG - stack ['$n798.0', '$wait800.1', '$const802.2']
2024-06-28 20:38:22,228 - DEBUG - dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-06-28 20:38:22,228 - DEBUG - stack ['$n798.0', '$binop_add804.3']
2024-06-28 20:38:22,228 - DEBUG - dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-06-28 20:38:22,228 - DEBUG - stack ['$binop_iadd808.4']
2024-06-28 20:38:22,228 - DEBUG - dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-28 20:38:22,228 - DEBUG - stack []
2024-06-28 20:38:22,228 - DEBUG - dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-28 20:38:22,228 - DEBUG - stack ['$n814.5']
2024-06-28 20:38:22,228 - DEBUG - dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-06-28 20:38:22,229 - DEBUG - stack ['$n814.5', '$x816.6']
2024-06-28 20:38:22,229 - DEBUG - dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-28 20:38:22,229 - DEBUG - stack ['$n814.5', '$818load_attr.7']
2024-06-28 20:38:22,229 - DEBUG - dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-28 20:38:22,229 - DEBUG - stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-06-28 20:38:22,229 - DEBUG - dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-06-28 20:38:22,229 - DEBUG - stack ['$n814.5', '$830binary_subscr.9']
2024-06-28 20:38:22,229 - DEBUG - dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-06-28 20:38:22,229 - DEBUG - stack ['$840compare_op.10']
2024-06-28 20:38:22,229 - DEBUG - end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,229 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:22,229 - DEBUG - pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:22,230 - DEBUG - stack: []
2024-06-28 20:38:22,230 - DEBUG - state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-06-28 20:38:22,230 - DEBUG - dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-06-28 20:38:22,230 - DEBUG - stack []
2024-06-28 20:38:22,230 - DEBUG - dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:22,230 - DEBUG - stack ['$const848.0']
2024-06-28 20:38:22,230 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,230 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:22,230 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:22,230 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-06-28 20:38:22,230 - DEBUG - defmap: {}
2024-06-28 20:38:22,231 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,231 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,231 - DEBUG - keep phismap: {}
2024-06-28 20:38:22,231 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:22,231 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:22,231 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-06-28 20:38:22,231 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:22,231 - DEBUG - block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:22,231 - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-06-28 20:38:22,232 - DEBUG - block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-06-28 20:38:22,232 - DEBUG - block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:22,232 - DEBUG - block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-06-28 20:38:22,232 - DEBUG - block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:22,232 - DEBUG - block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-06-28 20:38:22,232 - DEBUG - block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,232 - DEBUG - block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,236 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-06-28 20:38:22,253 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:22,253 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,253 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:22,253 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:22,253 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:22,253 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:22,253 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:22,253 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:22,253 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:22,254 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:22,254 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,255 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,255 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,255 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:22,255 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,255 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:22,255 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:22,255 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:22,255 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:22,255 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:22,255 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:22,255 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,256 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:22,257 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:22,257 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,257 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:22,257 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:22,257 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:22,257 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,257 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,257 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:22,257 - DEBUG - ==== SSA block analysis pass on 312
2024-06-28 20:38:22,257 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,257 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:22,257 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:22,257 - DEBUG - on stmt: jump 328
2024-06-28 20:38:22,257 - DEBUG - ==== SSA block analysis pass on 324
2024-06-28 20:38:22,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,258 - DEBUG - on stmt: n = const(int, 1)
2024-06-28 20:38:22,258 - DEBUG - on stmt: jump 328
2024-06-28 20:38:22,258 - DEBUG - ==== SSA block analysis pass on 328
2024-06-28 20:38:22,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,258 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,258 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:22,258 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:22,258 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:22,258 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,258 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,258 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:22,258 - DEBUG - ==== SSA block analysis pass on 362
2024-06-28 20:38:22,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,258 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:22,259 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:22,259 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,259 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,260 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:22,260 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,260 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,260 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:22,260 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:22,260 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,260 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,260 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,260 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:22,260 - DEBUG - ==== SSA block analysis pass on 554
2024-06-28 20:38:22,260 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,260 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:22,260 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,261 - DEBUG - on stmt: n = $binop_iadd558.2
2024-06-28 20:38:22,261 - DEBUG - on stmt: jump 853
2024-06-28 20:38:22,261 - DEBUG - ==== SSA block analysis pass on 566
2024-06-28 20:38:22,261 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,261 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,261 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:22,261 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:22,261 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:22,261 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:22,261 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,261 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:22,261 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:22,261 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,261 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:22,262 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:22,262 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,262 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,262 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,262 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:22,262 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,262 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,262 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,262 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:22,262 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:22,262 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,262 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:22,263 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,263 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,263 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,263 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:22,263 - DEBUG - ==== SSA block analysis pass on 786
2024-06-28 20:38:22,263 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,263 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:22,263 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,263 - DEBUG - on stmt: n = $binop_iadd790.2
2024-06-28 20:38:22,263 - DEBUG - on stmt: jump 853
2024-06-28 20:38:22,263 - DEBUG - ==== SSA block analysis pass on 798
2024-06-28 20:38:22,263 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,263 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:22,263 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:22,263 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,263 - DEBUG - on stmt: n = $binop_iadd808.4
2024-06-28 20:38:22,264 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,264 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:22,264 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:22,264 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:22,264 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,264 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,264 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:22,264 - DEBUG - ==== SSA block analysis pass on 848
2024-06-28 20:38:22,264 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,264 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:22,264 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:22,264 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:22,264 - DEBUG - ==== SSA block analysis pass on 852
2024-06-28 20:38:22,264 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,264 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:22,265 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:22,265 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:22,265 - DEBUG - ==== SSA block analysis pass on 853
2024-06-28 20:38:22,265 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76441750>
2024-06-28 20:38:22,265 - DEBUG - on stmt: jump 328
2024-06-28 20:38:22,267 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x7f7a76738ed0>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x7f7a76738e90>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x7f7a675415d0>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x7f7a67541fd0>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x7f7a7673be50>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x7f7a760a4d90>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x7f7a7673bb90>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x7f7a760a50d0>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x7f7a760a54d0>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x7f7a67540b50>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x7f7a760a51d0>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x7f7a760a6e90>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x7f7a760a5b90>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x7f7a760a5790>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x7f7a760a5ad0>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x7f7a760a7110>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x7f7a7644c950>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x7f7a7673a8d0>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7f7a760a6290>, 0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a760a6a10>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f7a76738910>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a763abd10>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x7f7a763a9810>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x7f7a763aa350>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a763ab390>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x7f7a763aa790>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x7f7a763a8a50>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x7f7a763ab8d0>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x7f7a763a8f50>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x7f7a7673a710>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f7a7673bc90>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x7f7a763a9650>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x7f7a763a81d0>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x7f7a763ab090>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f7a767ac190>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f7a767ad610>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x7f7a767adc90>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x7f7a767aec10>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x7f7a767af710>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x7f7a767ae4d0>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a767ad410>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x7f7a767afcd0>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7f7a7673a3d0>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x7f7a7639c890>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x7f7a7639c550>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x7f7a7639c090>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f7a670884d0>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x7f7a7639c450>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x7f7a7639f8d0>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x7f7a7639f5d0>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f7a7639f2d0>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f7a76220f90>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f7a76738a50>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x7f7a76222510>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x7f7a760b1490>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x7f7a760b3650>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x7f7a760b3390>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x7f7a760b2550>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a7673ba50>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a760b2090>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x7f7a760b0490>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x7f7a760b05d0>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x7f7a760b0bd0>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7f7a76738610>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a7673ab10>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x7f7a7673be10>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x7f7a76739290>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x7f7a76738550>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x7f7a760a60d0>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x7f7a763a8e10>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x7f7a7639e590>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x7f7a760b3210>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x7f7a760b2710>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x7f7a767afd90>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x7f7a760b1a50>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x7f7a760b2a10>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x7f7a760a75d0>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x7f7a760b3f10>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x7f7a763aa2d0>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x7f7a7639e110>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x7f7a767390d0>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x7f7a7673b750>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x7f7a76738210>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x7f7a760a4750>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x7f7a760a7a50>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x7f7a760a6bd0>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x7f7a760a5910>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x7f7a763a9490>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x7f7a763aa210>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x7f7a7673ab50>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x7f7a763aac10>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x7f7a767ac850>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a76738090>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x7f7a767af890>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x7f7a7639dbd0>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x7f7a76739310>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x7f7a760b3990>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x7f7a760b3010>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x7f7a760b2310>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x7f7a760b0510>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x7f7a760b0a10>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x7f7a7639fd10>, 566)],
             'bool310': [(<numba.core.ir.Assign object at 0x7f7a760a7e50>, 0)],
             'bool360': [(<numba.core.ir.Assign object at 0x7f7a763a8f10>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x7f7a767ac1d0>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x7f7a760b3750>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x7f7a760b0090>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x7f7a767dd010>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7f7a767ad050>, 362)],
             'n': [(<numba.core.ir.Assign object at 0x7f7a760a6510>, 312),
                   (<numba.core.ir.Assign object at 0x7f7a760a4350>, 324),
                   (<numba.core.ir.Assign object at 0x7f7a767ae810>, 554),
                   (<numba.core.ir.Assign object at 0x7f7a760b1d10>, 786),
                   (<numba.core.ir.Assign object at 0x7f7a760b28d0>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x7f7a76a54dd0>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7f7a767dce50>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7f7a76013cd0>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7f7a763fa190>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7f7a76013590>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7f7a767dc310>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a76013810>, 0)]})
2024-06-28 20:38:22,267 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76441750>
2024-06-28 20:38:22,267 - DEBUG - Fix SSA violator on var n
2024-06-28 20:38:22,267 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:22,268 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,268 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:22,268 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:22,268 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:22,268 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:22,268 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:22,268 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:22,268 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:22,268 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:22,268 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:22,268 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:22,268 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,268 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:22,268 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:22,268 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:22,269 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:22,269 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:22,269 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:22,269 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,270 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:22,271 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:22,271 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,271 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:22,271 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:22,271 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:22,271 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,271 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,271 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:22,271 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-28 20:38:22,271 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,271 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:22,271 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:22,271 - DEBUG - first assign: n
2024-06-28 20:38:22,271 - DEBUG - replaced with: n = wait + $const314.1
2024-06-28 20:38:22,272 - DEBUG - on stmt: jump 328
2024-06-28 20:38:22,272 - DEBUG - ==== SSA block rewrite pass on 324
2024-06-28 20:38:22,272 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,272 - DEBUG - on stmt: n = const(int, 1)
2024-06-28 20:38:22,272 - DEBUG - replaced with: n.1 = const(int, 1)
2024-06-28 20:38:22,272 - DEBUG - on stmt: jump 328
2024-06-28 20:38:22,272 - DEBUG - ==== SSA block rewrite pass on 328
2024-06-28 20:38:22,272 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,272 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,272 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:22,272 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:22,272 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:22,272 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,272 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,272 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:22,273 - DEBUG - ==== SSA block rewrite pass on 362
2024-06-28 20:38:22,273 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,273 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,273 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:22,273 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:22,273 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:22,273 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:22,273 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,273 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:22,273 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:22,273 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,274 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:22,274 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:22,274 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,274 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,274 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,274 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:22,274 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,274 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,274 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:22,274 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:22,274 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,274 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,275 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,275 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:22,275 - DEBUG - ==== SSA block rewrite pass on 554
2024-06-28 20:38:22,275 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,275 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:22,275 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,275 - DEBUG - on stmt: n = $binop_iadd558.2
2024-06-28 20:38:22,275 - DEBUG - replaced with: n.2 = $binop_iadd558.2
2024-06-28 20:38:22,275 - DEBUG - on stmt: jump 853
2024-06-28 20:38:22,275 - DEBUG - ==== SSA block rewrite pass on 566
2024-06-28 20:38:22,275 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,275 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,275 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:22,276 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:22,276 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,276 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:22,277 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,277 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,277 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,277 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:22,277 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:22,277 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,277 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:22,277 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,277 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,277 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,277 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:22,277 - DEBUG - ==== SSA block rewrite pass on 786
2024-06-28 20:38:22,277 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,277 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:22,278 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,278 - DEBUG - on stmt: n = $binop_iadd790.2
2024-06-28 20:38:22,278 - DEBUG - replaced with: n.3 = $binop_iadd790.2
2024-06-28 20:38:22,278 - DEBUG - on stmt: jump 853
2024-06-28 20:38:22,278 - DEBUG - ==== SSA block rewrite pass on 798
2024-06-28 20:38:22,278 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,278 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:22,278 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:22,278 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,278 - DEBUG - on stmt: n = $binop_iadd808.4
2024-06-28 20:38:22,278 - DEBUG - replaced with: n.4 = $binop_iadd808.4
2024-06-28 20:38:22,278 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,278 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:22,278 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:22,278 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:22,278 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,279 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,279 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:22,279 - DEBUG - ==== SSA block rewrite pass on 848
2024-06-28 20:38:22,279 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,279 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:22,279 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:22,279 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:22,279 - DEBUG - ==== SSA block rewrite pass on 852
2024-06-28 20:38:22,279 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,279 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:22,279 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:22,279 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:22,279 - DEBUG - ==== SSA block rewrite pass on 853
2024-06-28 20:38:22,279 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66e6b0d0>
2024-06-28 20:38:22,279 - DEBUG - on stmt: jump 328
2024-06-28 20:38:22,280 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x7f7a66ff9810>],
             324: [<numba.core.ir.Assign object at 0x7f7a66d13cd0>],
             554: [<numba.core.ir.Assign object at 0x7f7a74dcaf10>],
             786: [<numba.core.ir.Assign object at 0x7f7a763f85d0>],
             798: [<numba.core.ir.Assign object at 0x7f7a675728d0>]})
2024-06-28 20:38:22,280 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:22,280 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,280 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:22,280 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:22,280 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:22,280 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:22,280 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:22,280 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:22,280 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:22,280 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:22,280 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:22,280 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:22,280 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,280 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,281 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:22,281 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:22,282 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:22,282 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:22,282 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,283 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,283 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,283 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:22,283 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,283 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:22,283 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:22,283 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,283 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:22,283 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:22,283 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:22,283 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,283 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,283 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:22,284 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-28 20:38:22,284 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,284 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:22,284 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:22,284 - DEBUG - on stmt: jump 328
2024-06-28 20:38:22,284 - DEBUG - ==== SSA block rewrite pass on 324
2024-06-28 20:38:22,284 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,284 - DEBUG - on stmt: n.1 = const(int, 1)
2024-06-28 20:38:22,284 - DEBUG - on stmt: jump 328
2024-06-28 20:38:22,284 - DEBUG - ==== SSA block rewrite pass on 328
2024-06-28 20:38:22,284 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,284 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,284 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:22,284 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:22,284 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:22,285 - DEBUG - find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:22,285 - DEBUG - find_def_from_top label 328
2024-06-28 20:38:22,285 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-06-28 20:38:22,285 - DEBUG - find_def_from_bottom label 312
2024-06-28 20:38:22,285 - DEBUG - incoming_def n = wait + $const314.1
2024-06-28 20:38:22,285 - DEBUG - find_def_from_bottom label 324
2024-06-28 20:38:22,285 - DEBUG - incoming_def n.1 = const(int, 1)
2024-06-28 20:38:22,285 - DEBUG - find_def_from_bottom label 853
2024-06-28 20:38:22,285 - DEBUG - find_def_from_top label 853
2024-06-28 20:38:22,285 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-06-28 20:38:22,285 - DEBUG - find_def_from_bottom label 554
2024-06-28 20:38:22,285 - DEBUG - incoming_def n.2 = $binop_iadd558.2
2024-06-28 20:38:22,285 - DEBUG - find_def_from_bottom label 786
2024-06-28 20:38:22,285 - DEBUG - incoming_def n.3 = $binop_iadd790.2
2024-06-28 20:38:22,286 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-06-28 20:38:22,286 - DEBUG - replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-06-28 20:38:22,286 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,286 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,286 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:22,286 - DEBUG - ==== SSA block rewrite pass on 362
2024-06-28 20:38:22,286 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,286 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,286 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:22,286 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:22,286 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:22,286 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:22,286 - DEBUG - find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-06-28 20:38:22,287 - DEBUG - find_def_from_top label 362
2024-06-28 20:38:22,287 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-06-28 20:38:22,287 - DEBUG - find_def_from_bottom label 328
2024-06-28 20:38:22,287 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-06-28 20:38:22,287 - DEBUG - find_def_from_bottom label 798
2024-06-28 20:38:22,287 - DEBUG - incoming_def n.4 = $binop_iadd808.4
2024-06-28 20:38:22,287 - DEBUG - replaced with: $binop_sub404.9 = n.7 - pre_max
2024-06-28 20:38:22,287 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,287 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:22,287 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:22,287 - DEBUG - find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-06-28 20:38:22,288 - DEBUG - replaced with: $binop_add438.15 = n.7 + post_max
2024-06-28 20:38:22,288 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,288 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:22,288 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:22,288 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,288 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,288 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,288 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:22,288 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,288 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,288 - DEBUG - find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,289 - DEBUG - replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:22,289 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:22,289 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:22,289 - DEBUG - find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-06-28 20:38:22,289 - DEBUG - replaced with: peaks[n.7] = $524compare_op.29
2024-06-28 20:38:22,289 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,289 - DEBUG - find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,289 - DEBUG - replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:22,289 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,289 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,289 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:22,289 - DEBUG - ==== SSA block rewrite pass on 554
2024-06-28 20:38:22,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,289 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:22,290 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,290 - DEBUG - find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,290 - DEBUG - find_def_from_top label 554
2024-06-28 20:38:22,290 - DEBUG - idom 362 from label 554
2024-06-28 20:38:22,290 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:22,290 - DEBUG - replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,290 - DEBUG - on stmt: n.2 = $binop_iadd558.2
2024-06-28 20:38:22,290 - DEBUG - on stmt: jump 853
2024-06-28 20:38:22,290 - DEBUG - ==== SSA block rewrite pass on 566
2024-06-28 20:38:22,290 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,290 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,290 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:22,291 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:22,291 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:22,291 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:22,291 - DEBUG - find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-06-28 20:38:22,291 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:22,291 - DEBUG - idom 362 from label 566
2024-06-28 20:38:22,291 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:22,291 - DEBUG - replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-06-28 20:38:22,291 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,291 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:22,291 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:22,291 - DEBUG - find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-06-28 20:38:22,291 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:22,292 - DEBUG - idom 362 from label 566
2024-06-28 20:38:22,292 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:22,292 - DEBUG - replaced with: $binop_add642.15 = n.7 + post_avg
2024-06-28 20:38:22,292 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,292 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:22,292 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:22,292 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,292 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:22,292 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,292 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:22,292 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,292 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,293 - DEBUG - find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,293 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:22,293 - DEBUG - idom 362 from label 566
2024-06-28 20:38:22,293 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:22,293 - DEBUG - replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:22,293 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,293 - DEBUG - find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,293 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:22,293 - DEBUG - idom 362 from label 566
2024-06-28 20:38:22,293 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:22,293 - DEBUG - replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:22,293 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:22,293 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:22,293 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,293 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:22,294 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-06-28 20:38:22,294 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:22,294 - DEBUG - idom 362 from label 566
2024-06-28 20:38:22,294 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:22,294 - DEBUG - replaced with: peaks[n.7] = $binop_iand758.35
2024-06-28 20:38:22,294 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,294 - DEBUG - find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:22,294 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:22,294 - DEBUG - idom 362 from label 566
2024-06-28 20:38:22,294 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:22,294 - DEBUG - replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:22,294 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,294 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,294 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:22,294 - DEBUG - ==== SSA block rewrite pass on 786
2024-06-28 20:38:22,295 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,295 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:22,295 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,295 - DEBUG - find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,295 - DEBUG - find_def_from_top label 786
2024-06-28 20:38:22,295 - DEBUG - idom 566 from label 786
2024-06-28 20:38:22,295 - DEBUG - find_def_from_bottom label 566
2024-06-28 20:38:22,295 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:22,295 - DEBUG - idom 362 from label 566
2024-06-28 20:38:22,295 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:22,295 - DEBUG - replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,295 - DEBUG - on stmt: n.3 = $binop_iadd790.2
2024-06-28 20:38:22,295 - DEBUG - on stmt: jump 853
2024-06-28 20:38:22,295 - DEBUG - ==== SSA block rewrite pass on 798
2024-06-28 20:38:22,295 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,295 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:22,296 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:22,296 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,296 - DEBUG - find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,296 - DEBUG - find_def_from_top label 798
2024-06-28 20:38:22,296 - DEBUG - idom 566 from label 798
2024-06-28 20:38:22,296 - DEBUG - find_def_from_bottom label 566
2024-06-28 20:38:22,296 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:22,296 - DEBUG - idom 362 from label 566
2024-06-28 20:38:22,296 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:22,296 - DEBUG - replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,296 - DEBUG - on stmt: n.4 = $binop_iadd808.4
2024-06-28 20:38:22,296 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:22,296 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:22,296 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:22,296 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:22,297 - DEBUG - find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:22,297 - DEBUG - replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-06-28 20:38:22,297 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,297 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,297 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:22,297 - DEBUG - ==== SSA block rewrite pass on 848
2024-06-28 20:38:22,297 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,297 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:22,297 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:22,297 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:22,297 - DEBUG - ==== SSA block rewrite pass on 852
2024-06-28 20:38:22,297 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,297 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:22,297 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:22,297 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:22,298 - DEBUG - ==== SSA block rewrite pass on 853
2024-06-28 20:38:22,298 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76223dd0>
2024-06-28 20:38:22,298 - DEBUG - on stmt: jump 328
2024-06-28 20:38:22,305 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-06-28 20:38:22,306 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:22,306 - DEBUG - stack: []
2024-06-28 20:38:22,306 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:22,306 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-06-28 20:38:22,306 - DEBUG - stack []
2024-06-28 20:38:22,306 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-06-28 20:38:22,306 - DEBUG - stack []
2024-06-28 20:38:22,306 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-06-28 20:38:22,306 - DEBUG - stack []
2024-06-28 20:38:22,306 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-06-28 20:38:22,306 - DEBUG - stack []
2024-06-28 20:38:22,306 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-06-28 20:38:22,307 - DEBUG - stack ['$a6.0']
2024-06-28 20:38:22,307 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-06-28 20:38:22,307 - DEBUG - stack ['$8load_attr.1']
2024-06-28 20:38:22,307 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-06-28 20:38:22,307 - DEBUG - stack ['$8load_attr.1', '$const18.2']
2024-06-28 20:38:22,307 - DEBUG - dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-06-28 20:38:22,307 - DEBUG - stack ['$20compare_op.3']
2024-06-28 20:38:22,307 - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,307 - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:22,307 - DEBUG - stack: []
2024-06-28 20:38:22,307 - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-06-28 20:38:22,307 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-06-28 20:38:22,307 - DEBUG - stack []
2024-06-28 20:38:22,308 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-06-28 20:38:22,308 - DEBUG - stack ['$null$28.1', '$28load_global.0']
2024-06-28 20:38:22,308 - DEBUG - dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-06-28 20:38:22,308 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-06-28 20:38:22,308 - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-06-28 20:38:22,308 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-06-28 20:38:22,308 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-06-28 20:38:22,308 - DEBUG - stack ['$46call.3']
2024-06-28 20:38:22,308 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,308 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:22,308 - DEBUG - stack: []
2024-06-28 20:38:22,308 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-06-28 20:38:22,309 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-06-28 20:38:22,309 - DEBUG - stack []
2024-06-28 20:38:22,309 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-06-28 20:38:22,309 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-06-28 20:38:22,309 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-06-28 20:38:22,309 - DEBUG - stack ['$null$58.1', '$70load_attr.2']
2024-06-28 20:38:22,309 - DEBUG - dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-06-28 20:38:22,309 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-06-28 20:38:22,309 - DEBUG - dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-06-28 20:38:22,309 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-06-28 20:38:22,309 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-06-28 20:38:22,309 - DEBUG - stack ['$86call.4']
2024-06-28 20:38:22,310 - DEBUG - dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-06-28 20:38:22,310 - DEBUG - stack []
2024-06-28 20:38:22,310 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-06-28 20:38:22,310 - DEBUG - stack ['$null$98.6', '$98load_global.5']
2024-06-28 20:38:22,310 - DEBUG - dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-06-28 20:38:22,310 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-06-28 20:38:22,310 - DEBUG - dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-06-28 20:38:22,310 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-06-28 20:38:22,310 - DEBUG - dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-06-28 20:38:22,310 - DEBUG - stack ['$116call.8']
2024-06-28 20:38:22,310 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-06-28 20:38:22,310 - DEBUG - stack ['$null$126.9', '$126load_method.10']
2024-06-28 20:38:22,310 - DEBUG - dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-06-28 20:38:22,310 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-06-28 20:38:22,311 - DEBUG - dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-06-28 20:38:22,311 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-06-28 20:38:22,311 - DEBUG - dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-06-28 20:38:22,311 - DEBUG - stack ['$154call.12']
2024-06-28 20:38:22,311 - DEBUG - dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-06-28 20:38:22,311 - DEBUG - stack []
2024-06-28 20:38:22,311 - DEBUG - dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-06-28 20:38:22,311 - DEBUG - stack ['$null$166.13']
2024-06-28 20:38:22,311 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-06-28 20:38:22,311 - DEBUG - stack ['$null$166.13', '$168load_deref.14']
2024-06-28 20:38:22,311 - DEBUG - dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-06-28 20:38:22,311 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-06-28 20:38:22,311 - DEBUG - dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-06-28 20:38:22,311 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-06-28 20:38:22,311 - DEBUG - dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-06-28 20:38:22,312 - DEBUG - stack ['$176call.16']
2024-06-28 20:38:22,312 - DEBUG - end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,312 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:22,312 - DEBUG - stack: []
2024-06-28 20:38:22,312 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-06-28 20:38:22,312 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-06-28 20:38:22,312 - DEBUG - stack []
2024-06-28 20:38:22,312 - DEBUG - dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-06-28 20:38:22,312 - DEBUG - stack ['$max_value188.0']
2024-06-28 20:38:22,312 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,312 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:22,312 - DEBUG - stack: []
2024-06-28 20:38:22,312 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-06-28 20:38:22,312 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-06-28 20:38:22,312 - DEBUG - stack []
2024-06-28 20:38:22,312 - DEBUG - dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-06-28 20:38:22,313 - DEBUG - stack ['$it192.0']
2024-06-28 20:38:22,313 - DEBUG - end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-06-28 20:38:22,313 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:22,313 - DEBUG - stack: ['$phi196.0']
2024-06-28 20:38:22,313 - DEBUG - state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-06-28 20:38:22,313 - DEBUG - dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-06-28 20:38:22,313 - DEBUG - stack ['$phi196.0']
2024-06-28 20:38:22,313 - DEBUG - end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:22,313 - DEBUG - pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-06-28 20:38:22,313 - DEBUG - stack: []
2024-06-28 20:38:22,313 - DEBUG - state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-06-28 20:38:22,313 - DEBUG - dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-06-28 20:38:22,313 - DEBUG - stack []
2024-06-28 20:38:22,313 - DEBUG - dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-06-28 20:38:22,313 - DEBUG - stack ['$max_value300.0']
2024-06-28 20:38:22,314 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,314 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-06-28 20:38:22,314 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2024-06-28 20:38:22,314 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-06-28 20:38:22,314 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-06-28 20:38:22,314 - DEBUG - stack ['$phi198.0', '$phi198.1']
2024-06-28 20:38:22,314 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-06-28 20:38:22,314 - DEBUG - stack ['$phi198.0']
2024-06-28 20:38:22,314 - DEBUG - dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-06-28 20:38:22,314 - DEBUG - stack ['$phi198.0', '$view200.2']
2024-06-28 20:38:22,314 - DEBUG - dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-06-28 20:38:22,314 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-06-28 20:38:22,314 - DEBUG - dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-06-28 20:38:22,314 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-06-28 20:38:22,315 - DEBUG - dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-06-28 20:38:22,315 - DEBUG - stack ['$phi198.0', '$228call.5']
2024-06-28 20:38:22,315 - DEBUG - dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-06-28 20:38:22,315 - DEBUG - stack ['$phi198.0']
2024-06-28 20:38:22,315 - DEBUG - dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-06-28 20:38:22,315 - DEBUG - stack ['$phi198.0', '$null$240.6']
2024-06-28 20:38:22,315 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-06-28 20:38:22,315 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-06-28 20:38:22,315 - DEBUG - dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-06-28 20:38:22,315 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-06-28 20:38:22,315 - DEBUG - dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-06-28 20:38:22,315 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-06-28 20:38:22,315 - DEBUG - dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-06-28 20:38:22,315 - DEBUG - stack ['$phi198.0', '$250call.9']
2024-06-28 20:38:22,315 - DEBUG - end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-06-28 20:38:22,316 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-06-28 20:38:22,316 - DEBUG - stack: ['$phi262.0']
2024-06-28 20:38:22,316 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-06-28 20:38:22,316 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-06-28 20:38:22,316 - DEBUG - stack ['$phi262.0']
2024-06-28 20:38:22,316 - DEBUG - dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-06-28 20:38:22,316 - DEBUG - stack ['$phi262.0', '$v262.1']
2024-06-28 20:38:22,316 - DEBUG - dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-06-28 20:38:22,316 - DEBUG - stack ['$v262.1', '$phi262.0']
2024-06-28 20:38:22,316 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-06-28 20:38:22,316 - DEBUG - stack ['$v262.1']
2024-06-28 20:38:22,316 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,316 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-06-28 20:38:22,317 - DEBUG - stack: ['$phi270.0']
2024-06-28 20:38:22,317 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-06-28 20:38:22,317 - DEBUG - dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-06-28 20:38:22,317 - DEBUG - stack ['$phi270.0']
2024-06-28 20:38:22,317 - DEBUG - dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-06-28 20:38:22,317 - DEBUG - stack ['$phi270.0', '$null$270.1']
2024-06-28 20:38:22,317 - DEBUG - dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-06-28 20:38:22,317 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-06-28 20:38:22,317 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-06-28 20:38:22,317 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-06-28 20:38:22,317 - DEBUG - dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-06-28 20:38:22,317 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-06-28 20:38:22,317 - DEBUG - dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-06-28 20:38:22,317 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-06-28 20:38:22,318 - DEBUG - dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-06-28 20:38:22,318 - DEBUG - stack ['$phi270.0', '$282call.5']
2024-06-28 20:38:22,318 - DEBUG - end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-06-28 20:38:22,318 - DEBUG - pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-06-28 20:38:22,318 - DEBUG - stack: ['$phi294.0']
2024-06-28 20:38:22,318 - DEBUG - state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-06-28 20:38:22,318 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-06-28 20:38:22,318 - DEBUG - stack ['$phi294.0']
2024-06-28 20:38:22,318 - DEBUG - dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-06-28 20:38:22,318 - DEBUG - stack ['$phi294.0', '$v294.1']
2024-06-28 20:38:22,318 - DEBUG - end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-06-28 20:38:22,318 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-06-28 20:38:22,318 - DEBUG - stack: ['$phi298.0']
2024-06-28 20:38:22,318 - DEBUG - state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-06-28 20:38:22,319 - DEBUG - dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-06-28 20:38:22,319 - DEBUG - stack ['$phi298.0']
2024-06-28 20:38:22,319 - DEBUG - end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-06-28 20:38:22,319 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:22,319 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:22,319 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:22,319 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-06-28 20:38:22,320 - DEBUG - defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-06-28 20:38:22,320 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-06-28 20:38:22,321 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:22,323 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:22,324 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:22,325 - DEBUG - keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-06-28 20:38:22,325 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-06-28 20:38:22,326 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:22,326 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-06-28 20:38:22,326 - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,326 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-06-28 20:38:22,326 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,326 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-06-28 20:38:22,326 - DEBUG - block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-06-28 20:38:22,326 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-06-28 20:38:22,327 - DEBUG - block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,327 - DEBUG - block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-06-28 20:38:22,327 - DEBUG - block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-06-28 20:38:22,327 - DEBUG - block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-06-28 20:38:22,327 - DEBUG - block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,328 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-06-28 20:38:22,338 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:22,338 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,338 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:22,338 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:22,338 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:22,338 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:22,338 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,338 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,338 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:22,338 - DEBUG - ==== SSA block analysis pass on 28
2024-06-28 20:38:22,338 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,339 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:22,339 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:22,339 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,339 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:22,339 - DEBUG - ==== SSA block analysis pass on 58
2024-06-28 20:38:22,339 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,339 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,339 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:22,339 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,339 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:22,339 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,339 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:22,339 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:22,339 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,340 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:22,340 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,340 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,340 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,340 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:22,340 - DEBUG - ==== SSA block analysis pass on 188
2024-06-28 20:38:22,340 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,340 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:22,340 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:22,340 - DEBUG - ==== SSA block analysis pass on 192
2024-06-28 20:38:22,340 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,340 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:22,340 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:22,340 - DEBUG - on stmt: jump 196
2024-06-28 20:38:22,341 - DEBUG - ==== SSA block analysis pass on 196
2024-06-28 20:38:22,341 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,341 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:22,341 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:22,341 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:22,341 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:22,341 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:22,341 - DEBUG - ==== SSA block analysis pass on 198
2024-06-28 20:38:22,341 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,341 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:22,341 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:22,341 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,341 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:22,341 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,341 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,342 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,342 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:22,342 - DEBUG - ==== SSA block analysis pass on 262
2024-06-28 20:38:22,342 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,342 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:22,342 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:22,342 - DEBUG - ==== SSA block analysis pass on 270
2024-06-28 20:38:22,342 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,342 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:22,342 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,342 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,342 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,342 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:22,342 - DEBUG - ==== SSA block analysis pass on 294
2024-06-28 20:38:22,343 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,343 - DEBUG - on stmt: max_value = v
2024-06-28 20:38:22,343 - DEBUG - on stmt: jump 298
2024-06-28 20:38:22,343 - DEBUG - ==== SSA block analysis pass on 298
2024-06-28 20:38:22,343 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,343 - DEBUG - on stmt: jump 196
2024-06-28 20:38:22,343 - DEBUG - ==== SSA block analysis pass on 300
2024-06-28 20:38:22,343 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a761b0f10>
2024-06-28 20:38:22,343 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:22,343 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:22,344 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x7f7a764a6210>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x7f7a764a5910>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x7f7a764a7890>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x7f7a764a6a10>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f7a764a6010>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x7f7a764a58d0>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x7f7a764a6690>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a764a7010>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a764a6c50>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a764a6c10>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x7f7a766c9ed0>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x7f7a760a6690>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x7f7a766c9d50>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x7f7a766cb250>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x7f7a766cb310>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x7f7a766c9810>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7f7a760b4210>, 0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x7f7a766cb050>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x7f7a766cb850>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7f7a760b7c90>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x7f7a766ca5d0>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x7f7a768a2a50>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x7f7a76708810>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f7a7670aa90>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76709690>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7f7a760a6c50>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x7f7a7670a8d0>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x7f7a764a7650>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x7f7a760a6f90>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x7f7a76709550>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x7f7a764a6150>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x7f7a764a7110>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a761b1110>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f7a764a5b10>, 58)],
             'bool26': [(<numba.core.ir.Assign object at 0x7f7a760b41d0>, 0)],
             'bool260': [(<numba.core.ir.Assign object at 0x7f7a766cbd50>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x7f7a766caf90>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x7f7a76709f90>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7f7a764a7790>,
                            58),
                           (<numba.core.ir.Assign object at 0x7f7a766c8610>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x7f7a766c8310>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x7f7a764a6a50>, 198)]})
2024-06-28 20:38:22,345 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a761b0f10>
2024-06-28 20:38:22,345 - DEBUG - Fix SSA violator on var max_value
2024-06-28 20:38:22,345 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:22,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,345 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:22,345 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:22,345 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:22,345 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:22,345 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,345 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,345 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:22,345 - DEBUG - ==== SSA block rewrite pass on 28
2024-06-28 20:38:22,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,346 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:22,346 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:22,346 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,346 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:22,346 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-28 20:38:22,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,346 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,346 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:22,346 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,346 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:22,346 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,346 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:22,346 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:22,346 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,346 - DEBUG - first assign: max_value
2024-06-28 20:38:22,347 - DEBUG - replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,347 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:22,347 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,347 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,347 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,347 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:22,347 - DEBUG - ==== SSA block rewrite pass on 188
2024-06-28 20:38:22,347 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,347 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:22,347 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:22,347 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:22,347 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,347 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:22,347 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:22,347 - DEBUG - on stmt: jump 196
2024-06-28 20:38:22,347 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-28 20:38:22,348 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,348 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:22,348 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:22,348 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:22,348 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:22,348 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:22,348 - DEBUG - ==== SSA block rewrite pass on 198
2024-06-28 20:38:22,348 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,348 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:22,348 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:22,348 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,348 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:22,348 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,348 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,348 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,348 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:22,349 - DEBUG - ==== SSA block rewrite pass on 262
2024-06-28 20:38:22,349 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,349 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:22,349 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:22,349 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:22,349 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,349 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:22,349 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,349 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,349 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,349 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:22,349 - DEBUG - ==== SSA block rewrite pass on 294
2024-06-28 20:38:22,349 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,349 - DEBUG - on stmt: max_value = v
2024-06-28 20:38:22,349 - DEBUG - replaced with: max_value.1 = v
2024-06-28 20:38:22,349 - DEBUG - on stmt: jump 298
2024-06-28 20:38:22,350 - DEBUG - ==== SSA block rewrite pass on 298
2024-06-28 20:38:22,350 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,350 - DEBUG - on stmt: jump 196
2024-06-28 20:38:22,350 - DEBUG - ==== SSA block rewrite pass on 300
2024-06-28 20:38:22,350 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7670a390>
2024-06-28 20:38:22,350 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:22,350 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:22,350 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7f7a7670bb90>],
             294: [<numba.core.ir.Assign object at 0x7f7a761b0c10>]})
2024-06-28 20:38:22,350 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:22,350 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,350 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:22,350 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:22,350 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:22,351 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:22,351 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,351 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,351 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:22,351 - DEBUG - ==== SSA block rewrite pass on 28
2024-06-28 20:38:22,351 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,351 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:22,351 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:22,351 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,351 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:22,351 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-28 20:38:22,351 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,351 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,351 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:22,352 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,352 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:22,352 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,352 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:22,352 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:22,352 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,352 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:22,352 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,352 - DEBUG - find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,352 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,353 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,353 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:22,353 - DEBUG - ==== SSA block rewrite pass on 188
2024-06-28 20:38:22,353 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,353 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:22,353 - DEBUG - find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-06-28 20:38:22,353 - DEBUG - find_def_from_top label 188
2024-06-28 20:38:22,353 - DEBUG - idom 58 from label 188
2024-06-28 20:38:22,353 - DEBUG - find_def_from_bottom label 58
2024-06-28 20:38:22,353 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:22,353 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:22,353 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,353 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:22,353 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:22,353 - DEBUG - on stmt: jump 196
2024-06-28 20:38:22,354 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-28 20:38:22,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,354 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:22,354 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:22,354 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:22,354 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:22,354 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:22,354 - DEBUG - ==== SSA block rewrite pass on 198
2024-06-28 20:38:22,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,354 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:22,354 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:22,354 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,354 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:22,354 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,355 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,355 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,355 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:22,355 - DEBUG - ==== SSA block rewrite pass on 262
2024-06-28 20:38:22,355 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,355 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:22,355 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:22,355 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:22,355 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,355 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:22,355 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,355 - DEBUG - find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,355 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:22,355 - DEBUG - idom 198 from label 270
2024-06-28 20:38:22,355 - DEBUG - find_def_from_bottom label 198
2024-06-28 20:38:22,355 - DEBUG - find_def_from_top label 198
2024-06-28 20:38:22,356 - DEBUG - idom 196 from label 198
2024-06-28 20:38:22,356 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:22,356 - DEBUG - find_def_from_top label 196
2024-06-28 20:38:22,356 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-06-28 20:38:22,356 - DEBUG - find_def_from_bottom label 192
2024-06-28 20:38:22,356 - DEBUG - find_def_from_top label 192
2024-06-28 20:38:22,356 - DEBUG - idom 58 from label 192
2024-06-28 20:38:22,356 - DEBUG - find_def_from_bottom label 58
2024-06-28 20:38:22,356 - DEBUG - incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,357 - DEBUG - find_def_from_bottom label 298
2024-06-28 20:38:22,357 - DEBUG - find_def_from_top label 298
2024-06-28 20:38:22,357 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-06-28 20:38:22,357 - DEBUG - find_def_from_bottom label 294
2024-06-28 20:38:22,357 - DEBUG - incoming_def max_value.1 = v
2024-06-28 20:38:22,357 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:22,357 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:22,357 - DEBUG - idom 198 from label 270
2024-06-28 20:38:22,358 - DEBUG - find_def_from_bottom label 198
2024-06-28 20:38:22,358 - DEBUG - find_def_from_top label 198
2024-06-28 20:38:22,358 - DEBUG - idom 196 from label 198
2024-06-28 20:38:22,358 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:22,358 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-06-28 20:38:22,358 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-06-28 20:38:22,358 - DEBUG - replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,358 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,358 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,358 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:22,359 - DEBUG - ==== SSA block rewrite pass on 294
2024-06-28 20:38:22,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,359 - DEBUG - on stmt: max_value.1 = v
2024-06-28 20:38:22,359 - DEBUG - on stmt: jump 298
2024-06-28 20:38:22,359 - DEBUG - ==== SSA block rewrite pass on 298
2024-06-28 20:38:22,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,359 - DEBUG - on stmt: jump 196
2024-06-28 20:38:22,359 - DEBUG - ==== SSA block rewrite pass on 300
2024-06-28 20:38:22,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a761b20d0>
2024-06-28 20:38:22,359 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:22,359 - DEBUG - find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-06-28 20:38:22,359 - DEBUG - find_def_from_top label 300
2024-06-28 20:38:22,359 - DEBUG - idom 196 from label 300
2024-06-28 20:38:22,359 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:22,359 - DEBUG - replaced with: $302return_value.1 = cast(value=max_value.2)
2024-06-28 20:38:22,360 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:22,368 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-06-28 20:38:22,369 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:22,369 - DEBUG - stack: []
2024-06-28 20:38:22,369 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:22,369 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-06-28 20:38:22,369 - DEBUG - stack []
2024-06-28 20:38:22,369 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-06-28 20:38:22,369 - DEBUG - stack []
2024-06-28 20:38:22,369 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-06-28 20:38:22,369 - DEBUG - stack []
2024-06-28 20:38:22,369 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-06-28 20:38:22,369 - DEBUG - stack ['$indices4.0']
2024-06-28 20:38:22,370 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-06-28 20:38:22,370 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-06-28 20:38:22,370 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-06-28 20:38:22,370 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-06-28 20:38:22,370 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-06-28 20:38:22,370 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-06-28 20:38:22,370 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-06-28 20:38:22,370 - DEBUG - stack ['$indices4.0', '$binop_sub20.4']
2024-06-28 20:38:22,370 - DEBUG - dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-06-28 20:38:22,371 - DEBUG - stack ['$24compare_op.5']
2024-06-28 20:38:22,371 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,371 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-06-28 20:38:22,371 - DEBUG - stack: []
2024-06-28 20:38:22,371 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-06-28 20:38:22,371 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-06-28 20:38:22,371 - DEBUG - stack []
2024-06-28 20:38:22,371 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-06-28 20:38:22,371 - DEBUG - stack ['$indices32.0']
2024-06-28 20:38:22,371 - DEBUG - dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-06-28 20:38:22,372 - DEBUG - stack ['$indices32.0', '$a34.1']
2024-06-28 20:38:22,372 - DEBUG - dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-06-28 20:38:22,372 - DEBUG - stack ['$indices32.0', '$36load_attr.2']
2024-06-28 20:38:22,372 - DEBUG - dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-06-28 20:38:22,372 - DEBUG - stack ['$indices32.0', '$46unary_negative.3']
2024-06-28 20:38:22,372 - DEBUG - dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-06-28 20:38:22,372 - DEBUG - stack ['$48compare_op.4']
2024-06-28 20:38:22,372 - DEBUG - end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,373 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:22,373 - DEBUG - stack: []
2024-06-28 20:38:22,373 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-06-28 20:38:22,373 - DEBUG - dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-06-28 20:38:22,373 - DEBUG - stack []
2024-06-28 20:38:22,373 - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-06-28 20:38:22,373 - DEBUG - stack ['$null$56.1', '$56load_global.0']
2024-06-28 20:38:22,373 - DEBUG - dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-06-28 20:38:22,373 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-06-28 20:38:22,373 - DEBUG - dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-06-28 20:38:22,373 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-06-28 20:38:22,373 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-06-28 20:38:22,373 - DEBUG - stack ['$74call.3']
2024-06-28 20:38:22,374 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,374 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:22,374 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:22,374 - DEBUG - stack: []
2024-06-28 20:38:22,374 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-06-28 20:38:22,374 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-06-28 20:38:22,374 - DEBUG - stack []
2024-06-28 20:38:22,374 - DEBUG - dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-06-28 20:38:22,374 - DEBUG - stack ['$a86.0']
2024-06-28 20:38:22,374 - DEBUG - dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-06-28 20:38:22,374 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-06-28 20:38:22,374 - DEBUG - dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-06-28 20:38:22,374 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-06-28 20:38:22,374 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-06-28 20:38:22,374 - DEBUG - stack ['$114call.3']
2024-06-28 20:38:22,375 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-06-28 20:38:22,375 - DEBUG - stack ['$114call.3', '$indices124.4']
2024-06-28 20:38:22,375 - DEBUG - dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-06-28 20:38:22,375 - DEBUG - stack ['$126binary_subscr.5']
2024-06-28 20:38:22,375 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,375 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:22,375 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-06-28 20:38:22,375 - DEBUG - defmap: {}
2024-06-28 20:38:22,375 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,375 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,375 - DEBUG - keep phismap: {}
2024-06-28 20:38:22,375 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:22,376 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:22,376 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-06-28 20:38:22,376 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-06-28 20:38:22,376 - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,376 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,377 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-06-28 20:38:22,382 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:22,382 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760820d0>
2024-06-28 20:38:22,382 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:22,383 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-06-28 20:38:22,383 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:22,383 - DEBUG - on stmt: $const18.3 = const(int, 1)
2024-06-28 20:38:22,383 - DEBUG - on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-06-28 20:38:22,383 - DEBUG - on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-06-28 20:38:22,383 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,383 - DEBUG - on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,383 - DEBUG - on stmt: branch $30pred, 56, 32
2024-06-28 20:38:22,383 - DEBUG - ==== SSA block analysis pass on 32
2024-06-28 20:38:22,383 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760820d0>
2024-06-28 20:38:22,383 - DEBUG - on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:22,383 - DEBUG - on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-06-28 20:38:22,383 - DEBUG - on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-06-28 20:38:22,383 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-28 20:38:22,384 - DEBUG - on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,384 - DEBUG - on stmt: branch $54pred, 56, 86
2024-06-28 20:38:22,384 - DEBUG - ==== SSA block analysis pass on 56
2024-06-28 20:38:22,384 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760820d0>
2024-06-28 20:38:22,384 - DEBUG - on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-06-28 20:38:22,384 - DEBUG - on stmt: $const68.2 = const(str, Index out of bounds)
2024-06-28 20:38:22,384 - DEBUG - on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,384 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-06-28 20:38:22,384 - DEBUG - ==== SSA block analysis pass on 86
2024-06-28 20:38:22,384 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760820d0>
2024-06-28 20:38:22,384 - DEBUG - on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-06-28 20:38:22,384 - DEBUG - on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,384 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-06-28 20:38:22,385 - DEBUG - on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-06-28 20:38:22,385 - DEBUG - on stmt: return $136return_value.6
2024-06-28 20:38:22,385 - DEBUG - defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x7f7a76082910>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a76081d90>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x7f7a76080e90>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a761147d0>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x7f7a76114090>, 0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76114890>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x7f7a76082b90>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x7f7a76083650>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f7a760831d0>, 32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f7a760822d0>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x7f7a76082c10>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x7f7a76082990>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a7676eed0>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x7f7a7676fe10>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x7f7a7676fcd0>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x7f7a76081d50>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a7676ea10>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x7f7a76114790>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f7a76082210>, 32)],
             'indices': [(<numba.core.ir.Assign object at 0x7f7a7676df50>, 0)]})
2024-06-28 20:38:22,385 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a760820d0>
2024-06-28 20:38:22,405 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-06-28 20:38:22,405 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:22,405 - DEBUG - stack: []
2024-06-28 20:38:22,405 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:22,406 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-06-28 20:38:22,406 - DEBUG - stack []
2024-06-28 20:38:22,406 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-06-28 20:38:22,406 - DEBUG - stack []
2024-06-28 20:38:22,406 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-06-28 20:38:22,406 - DEBUG - stack []
2024-06-28 20:38:22,406 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-06-28 20:38:22,406 - DEBUG - stack ['$ary4.0']
2024-06-28 20:38:22,406 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-06-28 20:38:22,406 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-06-28 20:38:22,406 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-06-28 20:38:22,406 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-06-28 20:38:22,406 - DEBUG - dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-06-28 20:38:22,406 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-06-28 20:38:22,406 - DEBUG - dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-06-28 20:38:22,407 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-06-28 20:38:22,407 - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-06-28 20:38:22,407 - DEBUG - stack ['$44call.5']
2024-06-28 20:38:22,407 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,407 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:22,407 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:22,407 - DEBUG - defmap: {}
2024-06-28 20:38:22,407 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,407 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,407 - DEBUG - keep phismap: {}
2024-06-28 20:38:22,407 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:22,407 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:22,407 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,408 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-06-28 20:38:22,412 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:22,412 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a768b05d0>
2024-06-28 20:38:22,412 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-06-28 20:38:22,412 - DEBUG - on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-06-28 20:38:22,412 - DEBUG - on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-06-28 20:38:22,412 - DEBUG - on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,412 - DEBUG - on stmt: $54return_value.6 = cast(value=$44call.5)
2024-06-28 20:38:22,412 - DEBUG - on stmt: return $54return_value.6
2024-06-28 20:38:22,413 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x7f7a768b1e90>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x7f7a768b18d0>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x7f7a768b0450>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f7a768b1050>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x7f7a768b1c50>, 0)]})
2024-06-28 20:38:22,413 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a768b05d0>
2024-06-28 20:38:22,495 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	RESUME(arg=0, lineno=486)
           4	LOAD_CONST(arg=1, lineno=488)
           6	RETURN_VALUE(arg=None, lineno=488)
2024-06-28 20:38:22,495 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:22,496 - DEBUG - stack: []
2024-06-28 20:38:22,496 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:22,496 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=486)
2024-06-28 20:38:22,496 - DEBUG - stack []
2024-06-28 20:38:22,496 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=486)
2024-06-28 20:38:22,497 - DEBUG - stack []
2024-06-28 20:38:22,497 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=488)
2024-06-28 20:38:22,497 - DEBUG - stack []
2024-06-28 20:38:22,497 - DEBUG - dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=488)
2024-06-28 20:38:22,497 - DEBUG - stack ['$const4.0']
2024-06-28 20:38:22,497 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,497 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:22,497 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:22,497 - DEBUG - defmap: {}
2024-06-28 20:38:22,497 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,497 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,497 - DEBUG - keep phismap: {}
2024-06-28 20:38:22,498 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:22,498 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:22,498 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'retval': '$const4.0', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,498 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0 = const(bool, False)           ['$const4.0']
    $6return_value.1 = cast(value=$const4.0) ['$6return_value.1', '$const4.0']
    return $6return_value.1                  ['$6return_value.1']

2024-06-28 20:38:22,502 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:22,502 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76211ad0>
2024-06-28 20:38:22,502 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:22,502 - DEBUG - on stmt: $const4.0 = const(bool, False)
2024-06-28 20:38:22,503 - DEBUG - on stmt: $6return_value.1 = cast(value=$const4.0)
2024-06-28 20:38:22,503 - DEBUG - on stmt: return $6return_value.1
2024-06-28 20:38:22,503 - DEBUG - defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x7f7a76210cd0>,
                                   0)],
             '$const4.0': [(<numba.core.ir.Assign object at 0x7f7a76210fd0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a762105d0>, 0)]})
2024-06-28 20:38:22,503 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76211ad0>
2024-06-28 20:38:22,521 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-06-28 20:38:22,521 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:22,521 - DEBUG - stack: []
2024-06-28 20:38:22,521 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:22,522 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-06-28 20:38:22,522 - DEBUG - stack []
2024-06-28 20:38:22,522 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-06-28 20:38:22,522 - DEBUG - stack []
2024-06-28 20:38:22,522 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-06-28 20:38:22,522 - DEBUG - stack []
2024-06-28 20:38:22,522 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-06-28 20:38:22,522 - DEBUG - stack ['$a4.0']
2024-06-28 20:38:22,522 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-06-28 20:38:22,522 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-06-28 20:38:22,522 - DEBUG - dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-06-28 20:38:22,523 - DEBUG - stack ['$8compare_op.2']
2024-06-28 20:38:22,523 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,523 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:22,523 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:22,523 - DEBUG - defmap: {}
2024-06-28 20:38:22,523 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,523 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:22,524 - DEBUG - keep phismap: {}
2024-06-28 20:38:22,524 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:22,524 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:22,524 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,524 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-06-28 20:38:22,528 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:22,528 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66e13ad0>
2024-06-28 20:38:22,529 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:22,529 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-06-28 20:38:22,529 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-06-28 20:38:22,529 - DEBUG - on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-06-28 20:38:22,529 - DEBUG - on stmt: return $14return_value.3
2024-06-28 20:38:22,529 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x7f7a66e10f50>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a66e117d0>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a66e106d0>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7f7a66e110d0>, 0)]})
2024-06-28 20:38:22,529 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a66e13ad0>
2024-06-28 20:38:22,663 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-06-28 20:38:22,663 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:22,663 - DEBUG - stack: []
2024-06-28 20:38:22,663 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:22,663 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-06-28 20:38:22,663 - DEBUG - stack []
2024-06-28 20:38:22,663 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-06-28 20:38:22,663 - DEBUG - stack []
2024-06-28 20:38:22,664 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-06-28 20:38:22,664 - DEBUG - stack []
2024-06-28 20:38:22,664 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-06-28 20:38:22,664 - DEBUG - stack []
2024-06-28 20:38:22,664 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-06-28 20:38:22,664 - DEBUG - stack ['$6load_deref.0']
2024-06-28 20:38:22,664 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-06-28 20:38:22,664 - DEBUG - stack []
2024-06-28 20:38:22,664 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-06-28 20:38:22,664 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-06-28 20:38:22,664 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-06-28 20:38:22,664 - DEBUG - stack ['$null$10.2', '$22load_attr.3']
2024-06-28 20:38:22,665 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-06-28 20:38:22,665 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-06-28 20:38:22,665 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-06-28 20:38:22,665 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-06-28 20:38:22,665 - DEBUG - dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-06-28 20:38:22,665 - DEBUG - stack ['$38call.5']
2024-06-28 20:38:22,665 - DEBUG - end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-06-28 20:38:22,665 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-06-28 20:38:22,665 - DEBUG - stack: ['$phi50.0']
2024-06-28 20:38:22,665 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-06-28 20:38:22,665 - DEBUG - dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-06-28 20:38:22,666 - DEBUG - stack ['$phi50.0']
2024-06-28 20:38:22,666 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:22,666 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-06-28 20:38:22,666 - DEBUG - stack: []
2024-06-28 20:38:22,666 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-06-28 20:38:22,666 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-06-28 20:38:22,666 - DEBUG - stack []
2024-06-28 20:38:22,666 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-06-28 20:38:22,666 - DEBUG - stack ['$c102.0']
2024-06-28 20:38:22,666 - DEBUG - dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-06-28 20:38:22,666 - DEBUG - stack ['$c102.0', '$a104.1']
2024-06-28 20:38:22,666 - DEBUG - dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-06-28 20:38:22,666 - DEBUG - stack ['$c102.0', '$106load_attr.2']
2024-06-28 20:38:22,667 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-06-28 20:38:22,667 - DEBUG - stack ['$binop_truediv116.3']
2024-06-28 20:38:22,667 - DEBUG - end state. edges=[]
2024-06-28 20:38:22,667 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-06-28 20:38:22,667 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2024-06-28 20:38:22,667 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-06-28 20:38:22,667 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-06-28 20:38:22,667 - DEBUG - stack ['$phi52.0', '$phi52.1']
2024-06-28 20:38:22,667 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-06-28 20:38:22,667 - DEBUG - stack ['$phi52.0']
2024-06-28 20:38:22,667 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-06-28 20:38:22,667 - DEBUG - stack ['$phi52.0', '$c54.2']
2024-06-28 20:38:22,667 - DEBUG - dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-06-28 20:38:22,667 - DEBUG - stack ['$phi52.0', '$c54.2', '$v56.3']
2024-06-28 20:38:22,668 - DEBUG - dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-06-28 20:38:22,668 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-06-28 20:38:22,668 - DEBUG - dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-06-28 20:38:22,668 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-06-28 20:38:22,668 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-06-28 20:38:22,668 - DEBUG - stack ['$phi52.0', '$c54.2', '$84call.6']
2024-06-28 20:38:22,668 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-06-28 20:38:22,668 - DEBUG - stack ['$phi52.0', '$binop_iadd94.7']
2024-06-28 20:38:22,668 - DEBUG - dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-06-28 20:38:22,668 - DEBUG - stack ['$phi52.0']
2024-06-28 20:38:22,668 - DEBUG - end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-06-28 20:38:22,668 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-06-28 20:38:22,669 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:22,669 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-06-28 20:38:22,669 - DEBUG - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-06-28 20:38:22,669 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:22,670 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:22,670 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:22,671 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:22,671 - DEBUG - keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-06-28 20:38:22,671 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-06-28 20:38:22,672 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:22,672 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-06-28 20:38:22,672 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-06-28 20:38:22,672 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-06-28 20:38:22,672 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:22,673 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-06-28 20:38:22,678 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:22,678 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a768a0790>
2024-06-28 20:38:22,678 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:22,679 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:22,679 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,679 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:22,679 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,679 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:22,679 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:22,679 - DEBUG - on stmt: jump 50
2024-06-28 20:38:22,679 - DEBUG - ==== SSA block analysis pass on 50
2024-06-28 20:38:22,679 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a768a0790>
2024-06-28 20:38:22,679 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:22,679 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:22,679 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:22,679 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:22,679 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:22,679 - DEBUG - ==== SSA block analysis pass on 52
2024-06-28 20:38:22,680 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a768a0790>
2024-06-28 20:38:22,680 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:22,680 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:22,680 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,680 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,680 - DEBUG - on stmt: c = $binop_iadd94.7
2024-06-28 20:38:22,680 - DEBUG - on stmt: jump 50
2024-06-28 20:38:22,680 - DEBUG - ==== SSA block analysis pass on 102
2024-06-28 20:38:22,680 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a768a0790>
2024-06-28 20:38:22,680 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:22,680 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:22,680 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:22,680 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:22,681 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a7657e2d0>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7f7a765d3990>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x7f7a7657e050>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x7f7a765d3d10>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x7f7a7657ea10>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x7f7a7657fad0>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a7657fc10>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a7657dbd0>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a7657fc90>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x7f7a7657da50>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x7f7a7657cbd0>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x7f7a7657df90>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x7f7a7657e110>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7f7a765d3190>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7f7a7657fcd0>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a767de310>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7f7a765d32d0>, 0),
                   (<numba.core.ir.Assign object at 0x7f7a76211890>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x7f7a7657c250>, 52)]})
2024-06-28 20:38:22,681 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a768a0790>
2024-06-28 20:38:22,681 - DEBUG - Fix SSA violator on var c
2024-06-28 20:38:22,681 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:22,681 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7657f610>
2024-06-28 20:38:22,681 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:22,681 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:22,682 - DEBUG - first assign: c
2024-06-28 20:38:22,682 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-06-28 20:38:22,682 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,682 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:22,682 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,682 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:22,682 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:22,682 - DEBUG - on stmt: jump 50
2024-06-28 20:38:22,682 - DEBUG - ==== SSA block rewrite pass on 50
2024-06-28 20:38:22,682 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7657f610>
2024-06-28 20:38:22,682 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:22,682 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:22,682 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:22,682 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:22,682 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:22,683 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-28 20:38:22,683 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7657f610>
2024-06-28 20:38:22,683 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:22,683 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:22,683 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,683 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,683 - DEBUG - on stmt: c = $binop_iadd94.7
2024-06-28 20:38:22,683 - DEBUG - replaced with: c.1 = $binop_iadd94.7
2024-06-28 20:38:22,683 - DEBUG - on stmt: jump 50
2024-06-28 20:38:22,683 - DEBUG - ==== SSA block rewrite pass on 102
2024-06-28 20:38:22,683 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7657f610>
2024-06-28 20:38:22,683 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:22,683 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:22,683 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:22,683 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:22,683 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a7657fe90>],
             52: [<numba.core.ir.Assign object at 0x7f7a7657e090>]})
2024-06-28 20:38:22,684 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:22,684 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a7657e350>
2024-06-28 20:38:22,684 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:22,684 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:22,684 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:22,684 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:22,684 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,684 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:22,685 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:22,685 - DEBUG - on stmt: jump 50
2024-06-28 20:38:22,685 - DEBUG - ==== SSA block rewrite pass on 50
2024-06-28 20:38:22,685 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a7657e350>
2024-06-28 20:38:22,685 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:22,685 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:22,685 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:22,685 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:22,685 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:22,685 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-28 20:38:22,685 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a7657e350>
2024-06-28 20:38:22,685 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:22,686 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:22,686 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:22,686 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,686 - DEBUG - find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,686 - DEBUG - find_def_from_top label 52
2024-06-28 20:38:22,686 - DEBUG - idom 50 from label 52
2024-06-28 20:38:22,686 - DEBUG - find_def_from_bottom label 50
2024-06-28 20:38:22,686 - DEBUG - find_def_from_top label 50
2024-06-28 20:38:22,686 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-06-28 20:38:22,686 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:22,686 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-06-28 20:38:22,686 - DEBUG - find_def_from_bottom label 52
2024-06-28 20:38:22,687 - DEBUG - incoming_def c.1 = $binop_iadd94.7
2024-06-28 20:38:22,687 - DEBUG - replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:22,687 - DEBUG - on stmt: c.1 = $binop_iadd94.7
2024-06-28 20:38:22,687 - DEBUG - on stmt: jump 50
2024-06-28 20:38:22,687 - DEBUG - ==== SSA block rewrite pass on 102
2024-06-28 20:38:22,687 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a7657e350>
2024-06-28 20:38:22,687 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:22,687 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:22,687 - DEBUG - find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:22,687 - DEBUG - find_def_from_top label 102
2024-06-28 20:38:22,687 - DEBUG - idom 50 from label 102
2024-06-28 20:38:22,687 - DEBUG - find_def_from_bottom label 50
2024-06-28 20:38:22,687 - DEBUG - replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-06-28 20:38:22,688 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:22,688 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:22,983 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          18	LOAD_GLOBAL(arg=1, lineno=1221)
          30	LOAD_ATTR(arg=1, lineno=1221)
          40	LOAD_FAST(arg=0, lineno=1221)
          42	LOAD_CONST(arg=2, lineno=1221)
          44	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=3, lineno=1221)
          70	LOAD_CONST(arg=1, lineno=1221)
          72	BINARY_SUBSCR(arg=None, lineno=1221)
          82	PRECALL(arg=2, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          96	BUILD_SLICE(arg=2, lineno=1221)
          98	BINARY_SUBSCR(arg=None, lineno=1221)
         108	PRECALL(arg=1, lineno=1221)
         112	CALL(arg=1, lineno=1221)
         122	COMPARE_OP(arg=5, lineno=1221)
         128	LOAD_FAST(arg=7, lineno=1221)
         130	LOAD_CONST(arg=1, lineno=1221)
         132	STORE_SUBSCR(arg=None, lineno=1221)
         136	LOAD_FAST(arg=7, lineno=1222)
         138	LOAD_CONST(arg=1, lineno=1222)
         140	COPY(arg=2, lineno=1222)
         142	COPY(arg=2, lineno=1222)
         144	BINARY_SUBSCR(arg=None, lineno=1222)
         154	LOAD_FAST(arg=0, lineno=1222)
         156	LOAD_CONST(arg=1, lineno=1222)
         158	BINARY_SUBSCR(arg=None, lineno=1222)
         168	LOAD_GLOBAL(arg=1, lineno=1222)
         180	LOAD_ATTR(arg=4, lineno=1222)
         190	LOAD_FAST(arg=0, lineno=1222)
         192	LOAD_CONST(arg=2, lineno=1222)
         194	LOAD_GLOBAL(arg=5, lineno=1222)
         206	LOAD_FAST(arg=4, lineno=1222)
         208	LOAD_FAST(arg=0, lineno=1222)
         210	LOAD_ATTR(arg=3, lineno=1222)
         220	LOAD_CONST(arg=1, lineno=1222)
         222	BINARY_SUBSCR(arg=None, lineno=1222)
         232	PRECALL(arg=2, lineno=1222)
         236	CALL(arg=2, lineno=1222)
         246	BUILD_SLICE(arg=2, lineno=1222)
         248	BINARY_SUBSCR(arg=None, lineno=1222)
         258	PRECALL(arg=1, lineno=1222)
         262	CALL(arg=1, lineno=1222)
         272	LOAD_FAST(arg=5, lineno=1222)
         274	BINARY_OP(arg=0, lineno=1222)
         278	COMPARE_OP(arg=5, lineno=1222)
         284	BINARY_OP(arg=14, lineno=1222)
         288	SWAP(arg=3, lineno=1222)
         290	SWAP(arg=2, lineno=1222)
         292	STORE_SUBSCR(arg=None, lineno=1222)
         296	LOAD_FAST(arg=7, lineno=1224)
         298	LOAD_CONST(arg=1, lineno=1224)
         300	BINARY_SUBSCR(arg=None, lineno=1224)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
         312	LOAD_FAST(arg=6, lineno=1225)
         314	LOAD_CONST(arg=3, lineno=1225)
         316	BINARY_OP(arg=0, lineno=1225)
         320	STORE_FAST(arg=8, lineno=1225)
         322	JUMP_FORWARD(arg=2, lineno=1225)
>        324	LOAD_CONST(arg=3, lineno=1227)
         326	STORE_FAST(arg=8, lineno=1227)
>        328	LOAD_FAST(arg=8, lineno=1229)
         330	LOAD_FAST(arg=0, lineno=1229)
         332	LOAD_ATTR(arg=3, lineno=1229)
         342	LOAD_CONST(arg=1, lineno=1229)
         344	BINARY_SUBSCR(arg=None, lineno=1229)
         354	COMPARE_OP(arg=0, lineno=1229)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
>        362	LOAD_GLOBAL(arg=1, lineno=1230)
         374	LOAD_ATTR(arg=1, lineno=1230)
         384	LOAD_FAST(arg=0, lineno=1230)
         386	LOAD_GLOBAL(arg=3, lineno=1230)
         398	LOAD_CONST(arg=1, lineno=1230)
         400	LOAD_FAST(arg=8, lineno=1230)
         402	LOAD_FAST(arg=1, lineno=1230)
         404	BINARY_OP(arg=10, lineno=1230)
         408	PRECALL(arg=2, lineno=1230)
         412	CALL(arg=2, lineno=1230)
         422	LOAD_GLOBAL(arg=5, lineno=1230)
         434	LOAD_FAST(arg=8, lineno=1230)
         436	LOAD_FAST(arg=2, lineno=1230)
         438	BINARY_OP(arg=0, lineno=1230)
         442	LOAD_FAST(arg=0, lineno=1230)
         444	LOAD_ATTR(arg=3, lineno=1230)
         454	LOAD_CONST(arg=1, lineno=1230)
         456	BINARY_SUBSCR(arg=None, lineno=1230)
         466	PRECALL(arg=2, lineno=1230)
         470	CALL(arg=2, lineno=1230)
         480	BUILD_SLICE(arg=2, lineno=1230)
         482	BINARY_SUBSCR(arg=None, lineno=1230)
         492	PRECALL(arg=1, lineno=1230)
         496	CALL(arg=1, lineno=1230)
         506	STORE_FAST(arg=9, lineno=1230)
         508	LOAD_FAST(arg=0, lineno=1233)
         510	LOAD_FAST(arg=8, lineno=1233)
         512	BINARY_SUBSCR(arg=None, lineno=1233)
         522	LOAD_FAST(arg=9, lineno=1233)
         524	COMPARE_OP(arg=2, lineno=1233)
         530	LOAD_FAST(arg=7, lineno=1233)
         532	LOAD_FAST(arg=8, lineno=1233)
         534	STORE_SUBSCR(arg=None, lineno=1233)
         538	LOAD_FAST(arg=7, lineno=1235)
         540	LOAD_FAST(arg=8, lineno=1235)
         542	BINARY_SUBSCR(arg=None, lineno=1235)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
         554	LOAD_FAST(arg=8, lineno=1236)
         556	LOAD_CONST(arg=3, lineno=1236)
         558	BINARY_OP(arg=13, lineno=1236)
         562	STORE_FAST(arg=8, lineno=1236)
         564	JUMP_BACKWARD(arg=119, lineno=1237)
>        566	LOAD_GLOBAL(arg=1, lineno=1239)
         578	LOAD_ATTR(arg=4, lineno=1239)
         588	LOAD_FAST(arg=0, lineno=1239)
         590	LOAD_GLOBAL(arg=3, lineno=1239)
         602	LOAD_CONST(arg=1, lineno=1239)
         604	LOAD_FAST(arg=8, lineno=1239)
         606	LOAD_FAST(arg=3, lineno=1239)
         608	BINARY_OP(arg=10, lineno=1239)
         612	PRECALL(arg=2, lineno=1239)
         616	CALL(arg=2, lineno=1239)
         626	LOAD_GLOBAL(arg=5, lineno=1239)
         638	LOAD_FAST(arg=8, lineno=1239)
         640	LOAD_FAST(arg=4, lineno=1239)
         642	BINARY_OP(arg=0, lineno=1239)
         646	LOAD_FAST(arg=0, lineno=1239)
         648	LOAD_ATTR(arg=3, lineno=1239)
         658	LOAD_CONST(arg=1, lineno=1239)
         660	BINARY_SUBSCR(arg=None, lineno=1239)
         670	PRECALL(arg=2, lineno=1239)
         674	CALL(arg=2, lineno=1239)
         684	BUILD_SLICE(arg=2, lineno=1239)
         686	BINARY_SUBSCR(arg=None, lineno=1239)
         696	PRECALL(arg=1, lineno=1239)
         700	CALL(arg=1, lineno=1239)
         710	STORE_FAST(arg=10, lineno=1239)
         712	LOAD_FAST(arg=7, lineno=1240)
         714	LOAD_FAST(arg=8, lineno=1240)
         716	COPY(arg=2, lineno=1240)
         718	COPY(arg=2, lineno=1240)
         720	BINARY_SUBSCR(arg=None, lineno=1240)
         730	LOAD_FAST(arg=0, lineno=1240)
         732	LOAD_FAST(arg=8, lineno=1240)
         734	BINARY_SUBSCR(arg=None, lineno=1240)
         744	LOAD_FAST(arg=10, lineno=1240)
         746	LOAD_FAST(arg=5, lineno=1240)
         748	BINARY_OP(arg=0, lineno=1240)
         752	COMPARE_OP(arg=5, lineno=1240)
         758	BINARY_OP(arg=14, lineno=1240)
         762	SWAP(arg=3, lineno=1240)
         764	SWAP(arg=2, lineno=1240)
         766	STORE_SUBSCR(arg=None, lineno=1240)
         770	LOAD_FAST(arg=7, lineno=1242)
         772	LOAD_FAST(arg=8, lineno=1242)
         774	BINARY_SUBSCR(arg=None, lineno=1242)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
         786	LOAD_FAST(arg=8, lineno=1243)
         788	LOAD_CONST(arg=3, lineno=1243)
         790	BINARY_OP(arg=13, lineno=1243)
         794	STORE_FAST(arg=8, lineno=1243)
         796	JUMP_BACKWARD(arg=235, lineno=1244)
>        798	LOAD_FAST(arg=8, lineno=1247)
         800	LOAD_FAST(arg=6, lineno=1247)
         802	LOAD_CONST(arg=3, lineno=1247)
         804	BINARY_OP(arg=0, lineno=1247)
         808	BINARY_OP(arg=13, lineno=1247)
         812	STORE_FAST(arg=8, lineno=1247)
         814	LOAD_FAST(arg=8, lineno=1229)
         816	LOAD_FAST(arg=0, lineno=1229)
         818	LOAD_ATTR(arg=3, lineno=1229)
         828	LOAD_CONST(arg=1, lineno=1229)
         830	BINARY_SUBSCR(arg=None, lineno=1229)
         840	COMPARE_OP(arg=0, lineno=1229)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
         848	LOAD_CONST(arg=2, lineno=1229)
         850	RETURN_VALUE(arg=None, lineno=1229)
>        852	LOAD_CONST(arg=2, lineno=1229)
         854	RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:22,983 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:22,983 - DEBUG - stack: []
2024-06-28 20:38:22,983 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:22,983 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-06-28 20:38:22,983 - DEBUG - stack []
2024-06-28 20:38:22,984 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-06-28 20:38:22,984 - DEBUG - stack []
2024-06-28 20:38:22,984 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:22,984 - DEBUG - stack []
2024-06-28 20:38:22,984 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:22,984 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:22,984 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:22,984 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-28 20:38:22,984 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-06-28 20:38:22,985 - DEBUG - stack ['$8binary_subscr.2']
2024-06-28 20:38:22,985 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1221)
2024-06-28 20:38:22,985 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
2024-06-28 20:38:22,985 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:22,985 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
2024-06-28 20:38:22,985 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1221)
2024-06-28 20:38:22,985 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
2024-06-28 20:38:22,985 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-06-28 20:38:22,985 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7']
2024-06-28 20:38:22,985 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-06-28 20:38:22,985 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8']
2024-06-28 20:38:22,985 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-28 20:38:22,985 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10']
2024-06-28 20:38:22,985 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1221)
2024-06-28 20:38:22,985 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
2024-06-28 20:38:22,985 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:22,986 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
2024-06-28 20:38:22,986 - DEBUG - dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:22,986 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13']
2024-06-28 20:38:22,986 - DEBUG - dispatch pc=82, inst=PRECALL(arg=2, lineno=1221)
2024-06-28 20:38:22,986 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-06-28 20:38:22,986 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-06-28 20:38:22,986 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
2024-06-28 20:38:22,986 - DEBUG - dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1221)
2024-06-28 20:38:22,986 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7', '$86call.15']
2024-06-28 20:38:22,986 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:22,986 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
2024-06-28 20:38:22,986 - DEBUG - dispatch pc=108, inst=PRECALL(arg=1, lineno=1221)
2024-06-28 20:38:22,987 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-06-28 20:38:22,987 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=1221)
2024-06-28 20:38:22,987 - DEBUG - stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
2024-06-28 20:38:22,987 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1221)
2024-06-28 20:38:22,987 - DEBUG - stack ['$8binary_subscr.2', '$112call.19']
2024-06-28 20:38:22,987 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1221)
2024-06-28 20:38:22,987 - DEBUG - stack ['$122compare_op.20']
2024-06-28 20:38:22,987 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-28 20:38:22,987 - DEBUG - stack ['$122compare_op.20', '$peaks128.21']
2024-06-28 20:38:22,987 - DEBUG - dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-06-28 20:38:22,987 - DEBUG - stack ['$122compare_op.20', '$peaks128.21', '$const130.22']
2024-06-28 20:38:22,987 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1222)
2024-06-28 20:38:22,987 - DEBUG - stack []
2024-06-28 20:38:22,987 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:22,988 - DEBUG - stack ['$peaks136.23']
2024-06-28 20:38:22,988 - DEBUG - dispatch pc=140, inst=COPY(arg=2, lineno=1222)
2024-06-28 20:38:22,988 - DEBUG - stack ['$peaks136.23', '$const138.24']
2024-06-28 20:38:22,988 - DEBUG - dispatch pc=142, inst=COPY(arg=2, lineno=1222)
2024-06-28 20:38:22,988 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23']
2024-06-28 20:38:22,988 - DEBUG - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,988 - DEBUG - stack ['$peaks136.23', '$const138.24', '$peaks136.23', '$const138.24']
2024-06-28 20:38:22,988 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:22,988 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25']
2024-06-28 20:38:22,988 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:22,988 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26']
2024-06-28 20:38:22,988 - DEBUG - dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,988 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$x154.26', '$const156.27']
2024-06-28 20:38:22,989 - DEBUG - dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-06-28 20:38:22,989 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28']
2024-06-28 20:38:22,989 - DEBUG - dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1222)
2024-06-28 20:38:22,989 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
2024-06-28 20:38:22,989 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:22,989 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
2024-06-28 20:38:22,989 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1222)
2024-06-28 20:38:22,989 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
2024-06-28 20:38:22,989 - DEBUG - dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-06-28 20:38:22,989 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33']
2024-06-28 20:38:22,989 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1222)
2024-06-28 20:38:22,989 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34']
2024-06-28 20:38:22,989 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-28 20:38:22,990 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36']
2024-06-28 20:38:22,990 - DEBUG - dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1222)
2024-06-28 20:38:22,990 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
2024-06-28 20:38:22,990 - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-28 20:38:22,990 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
2024-06-28 20:38:22,990 - DEBUG - dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,990 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39']
2024-06-28 20:38:22,990 - DEBUG - dispatch pc=232, inst=PRECALL(arg=2, lineno=1222)
2024-06-28 20:38:22,990 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-06-28 20:38:22,990 - DEBUG - dispatch pc=236, inst=CALL(arg=2, lineno=1222)
2024-06-28 20:38:22,990 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
2024-06-28 20:38:22,990 - DEBUG - dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1222)
2024-06-28 20:38:22,990 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33', '$236call.41']
2024-06-28 20:38:22,990 - DEBUG - dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,991 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
2024-06-28 20:38:22,991 - DEBUG - dispatch pc=258, inst=PRECALL(arg=1, lineno=1222)
2024-06-28 20:38:22,991 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-06-28 20:38:22,991 - DEBUG - dispatch pc=262, inst=CALL(arg=1, lineno=1222)
2024-06-28 20:38:22,991 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
2024-06-28 20:38:22,991 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1222)
2024-06-28 20:38:22,991 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
2024-06-28 20:38:22,991 - DEBUG - dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1222)
2024-06-28 20:38:22,991 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
2024-06-28 20:38:22,991 - DEBUG - dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1222)
2024-06-28 20:38:22,991 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
2024-06-28 20:38:22,991 - DEBUG - dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1222)
2024-06-28 20:38:22,991 - DEBUG - stack ['$peaks136.23', '$const138.24', '$144binary_subscr.25', '$278compare_op.48']
2024-06-28 20:38:22,992 - DEBUG - dispatch pc=288, inst=SWAP(arg=3, lineno=1222)
2024-06-28 20:38:22,992 - DEBUG - stack ['$peaks136.23', '$const138.24', '$binop_iand284.49']
2024-06-28 20:38:22,992 - DEBUG - dispatch pc=290, inst=SWAP(arg=2, lineno=1222)
2024-06-28 20:38:22,992 - DEBUG - stack ['$binop_iand284.49', '$const138.24', '$peaks136.23']
2024-06-28 20:38:22,992 - DEBUG - dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-06-28 20:38:22,992 - DEBUG - stack ['$binop_iand284.49', '$peaks136.23', '$const138.24']
2024-06-28 20:38:22,992 - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1224)
2024-06-28 20:38:22,992 - DEBUG - stack []
2024-06-28 20:38:22,992 - DEBUG - dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1224)
2024-06-28 20:38:22,992 - DEBUG - stack ['$peaks296.50']
2024-06-28 20:38:22,992 - DEBUG - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-06-28 20:38:22,992 - DEBUG - stack ['$peaks296.50', '$const298.51']
2024-06-28 20:38:22,992 - DEBUG - dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1224)
2024-06-28 20:38:22,992 - DEBUG - stack ['$300binary_subscr.52']
2024-06-28 20:38:22,992 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,993 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
2024-06-28 20:38:22,993 - DEBUG - stack: []
2024-06-28 20:38:22,993 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-06-28 20:38:22,993 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1225)
2024-06-28 20:38:22,993 - DEBUG - stack []
2024-06-28 20:38:22,993 - DEBUG - dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1225)
2024-06-28 20:38:22,993 - DEBUG - stack ['$wait312.0']
2024-06-28 20:38:22,993 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1225)
2024-06-28 20:38:22,993 - DEBUG - stack ['$wait312.0', '$const314.1']
2024-06-28 20:38:22,993 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1225)
2024-06-28 20:38:22,993 - DEBUG - stack ['$binop_add316.2']
2024-06-28 20:38:22,993 - DEBUG - dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-06-28 20:38:22,993 - DEBUG - stack []
2024-06-28 20:38:22,993 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,993 - DEBUG - pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:22,994 - DEBUG - stack: []
2024-06-28 20:38:22,994 - DEBUG - state.pc_initial: State(pc_initial=324 nstack_initial=0)
2024-06-28 20:38:22,994 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1227)
2024-06-28 20:38:22,994 - DEBUG - stack []
2024-06-28 20:38:22,994 - DEBUG - dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1227)
2024-06-28 20:38:22,994 - DEBUG - stack ['$const324.0']
2024-06-28 20:38:22,994 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,994 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:22,994 - DEBUG - stack: []
2024-06-28 20:38:22,994 - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
2024-06-28 20:38:22,994 - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-28 20:38:22,994 - DEBUG - stack []
2024-06-28 20:38:22,994 - DEBUG - dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-28 20:38:22,994 - DEBUG - stack ['$n328.0']
2024-06-28 20:38:22,994 - DEBUG - dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-06-28 20:38:22,995 - DEBUG - stack ['$n328.0', '$x330.1']
2024-06-28 20:38:22,995 - DEBUG - dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-28 20:38:22,995 - DEBUG - stack ['$n328.0', '$332load_attr.2']
2024-06-28 20:38:22,995 - DEBUG - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-28 20:38:22,995 - DEBUG - stack ['$n328.0', '$332load_attr.2', '$const342.3']
2024-06-28 20:38:22,995 - DEBUG - dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1229)
2024-06-28 20:38:22,995 - DEBUG - stack ['$n328.0', '$344binary_subscr.4']
2024-06-28 20:38:22,995 - DEBUG - dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1229)
2024-06-28 20:38:22,995 - DEBUG - stack ['$354compare_op.5']
2024-06-28 20:38:22,995 - DEBUG - end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:22,995 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-06-28 20:38:22,995 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
2024-06-28 20:38:22,995 - DEBUG - stack: []
2024-06-28 20:38:22,996 - DEBUG - state.pc_initial: State(pc_initial=362 nstack_initial=0)
2024-06-28 20:38:22,996 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-06-28 20:38:22,996 - DEBUG - stack []
2024-06-28 20:38:22,996 - DEBUG - dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1230)
2024-06-28 20:38:22,996 - DEBUG - stack ['$null$362.1', '$362load_global.0']
2024-06-28 20:38:22,996 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-28 20:38:22,996 - DEBUG - stack ['$null$362.1', '$374load_attr.2']
2024-06-28 20:38:22,996 - DEBUG - dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-06-28 20:38:22,996 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3']
2024-06-28 20:38:22,996 - DEBUG - dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-28 20:38:22,996 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
2024-06-28 20:38:22,996 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-28 20:38:22,996 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6']
2024-06-28 20:38:22,997 - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1230)
2024-06-28 20:38:22,997 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7']
2024-06-28 20:38:22,997 - DEBUG - dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1230)
2024-06-28 20:38:22,997 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$n400.7', '$pre_max402.8']
2024-06-28 20:38:22,997 - DEBUG - dispatch pc=408, inst=PRECALL(arg=2, lineno=1230)
2024-06-28 20:38:22,997 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-06-28 20:38:22,997 - DEBUG - dispatch pc=412, inst=CALL(arg=2, lineno=1230)
2024-06-28 20:38:22,997 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6', '$binop_sub404.9']
2024-06-28 20:38:22,997 - DEBUG - dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-06-28 20:38:22,997 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
2024-06-28 20:38:22,997 - DEBUG - dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-28 20:38:22,997 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
2024-06-28 20:38:22,997 - DEBUG - dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1230)
2024-06-28 20:38:22,998 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
2024-06-28 20:38:22,998 - DEBUG - dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1230)
2024-06-28 20:38:22,998 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
2024-06-28 20:38:22,998 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-28 20:38:22,998 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
2024-06-28 20:38:22,998 - DEBUG - dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1230)
2024-06-28 20:38:22,998 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
2024-06-28 20:38:22,998 - DEBUG - dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-28 20:38:22,998 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
2024-06-28 20:38:22,998 - DEBUG - dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-28 20:38:22,998 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18']
2024-06-28 20:38:22,998 - DEBUG - dispatch pc=466, inst=PRECALL(arg=2, lineno=1230)
2024-06-28 20:38:22,998 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-06-28 20:38:22,999 - DEBUG - dispatch pc=470, inst=CALL(arg=2, lineno=1230)
2024-06-28 20:38:22,999 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
2024-06-28 20:38:22,999 - DEBUG - dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1230)
2024-06-28 20:38:22,999 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
2024-06-28 20:38:22,999 - DEBUG - dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-28 20:38:22,999 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
2024-06-28 20:38:22,999 - DEBUG - dispatch pc=492, inst=PRECALL(arg=1, lineno=1230)
2024-06-28 20:38:22,999 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-06-28 20:38:22,999 - DEBUG - dispatch pc=496, inst=CALL(arg=1, lineno=1230)
2024-06-28 20:38:22,999 - DEBUG - stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
2024-06-28 20:38:22,999 - DEBUG - dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1230)
2024-06-28 20:38:22,999 - DEBUG - stack ['$496call.24']
2024-06-28 20:38:23,000 - DEBUG - dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1233)
2024-06-28 20:38:23,000 - DEBUG - stack []
2024-06-28 20:38:23,000 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-28 20:38:23,000 - DEBUG - stack ['$x508.25']
2024-06-28 20:38:23,000 - DEBUG - dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-06-28 20:38:23,000 - DEBUG - stack ['$x508.25', '$n510.26']
2024-06-28 20:38:23,000 - DEBUG - dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1233)
2024-06-28 20:38:23,000 - DEBUG - stack ['$512binary_subscr.27']
2024-06-28 20:38:23,000 - DEBUG - dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1233)
2024-06-28 20:38:23,000 - DEBUG - stack ['$512binary_subscr.27', '$maxn522.28']
2024-06-28 20:38:23,000 - DEBUG - dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1233)
2024-06-28 20:38:23,000 - DEBUG - stack ['$524compare_op.29']
2024-06-28 20:38:23,000 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-28 20:38:23,000 - DEBUG - stack ['$524compare_op.29', '$peaks530.30']
2024-06-28 20:38:23,001 - DEBUG - dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-06-28 20:38:23,001 - DEBUG - stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
2024-06-28 20:38:23,001 - DEBUG - dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1235)
2024-06-28 20:38:23,001 - DEBUG - stack []
2024-06-28 20:38:23,001 - DEBUG - dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1235)
2024-06-28 20:38:23,001 - DEBUG - stack ['$peaks538.32']
2024-06-28 20:38:23,001 - DEBUG - dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-06-28 20:38:23,001 - DEBUG - stack ['$peaks538.32', '$n540.33']
2024-06-28 20:38:23,001 - DEBUG - dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1235)
2024-06-28 20:38:23,001 - DEBUG - stack ['$542binary_subscr.34']
2024-06-28 20:38:23,001 - DEBUG - end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:23,001 - DEBUG - pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-06-28 20:38:23,002 - DEBUG - stack: []
2024-06-28 20:38:23,002 - DEBUG - state.pc_initial: State(pc_initial=852 nstack_initial=0)
2024-06-28 20:38:23,002 - DEBUG - dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1229)
2024-06-28 20:38:23,002 - DEBUG - stack []
2024-06-28 20:38:23,002 - DEBUG - dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:23,002 - DEBUG - stack ['$const852.0']
2024-06-28 20:38:23,002 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,002 - DEBUG - pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
2024-06-28 20:38:23,002 - DEBUG - stack: []
2024-06-28 20:38:23,002 - DEBUG - state.pc_initial: State(pc_initial=554 nstack_initial=0)
2024-06-28 20:38:23,002 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1236)
2024-06-28 20:38:23,002 - DEBUG - stack []
2024-06-28 20:38:23,002 - DEBUG - dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1236)
2024-06-28 20:38:23,002 - DEBUG - stack ['$n554.0']
2024-06-28 20:38:23,003 - DEBUG - dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1236)
2024-06-28 20:38:23,003 - DEBUG - stack ['$n554.0', '$const556.1']
2024-06-28 20:38:23,003 - DEBUG - dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1236)
2024-06-28 20:38:23,003 - DEBUG - stack ['$binop_iadd558.2']
2024-06-28 20:38:23,003 - DEBUG - dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1237)
2024-06-28 20:38:23,003 - DEBUG - stack []
2024-06-28 20:38:23,003 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:23,003 - DEBUG - pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:23,003 - DEBUG - stack: []
2024-06-28 20:38:23,003 - DEBUG - state.pc_initial: State(pc_initial=566 nstack_initial=0)
2024-06-28 20:38:23,003 - DEBUG - dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-06-28 20:38:23,003 - DEBUG - stack []
2024-06-28 20:38:23,003 - DEBUG - dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1239)
2024-06-28 20:38:23,004 - DEBUG - stack ['$null$566.1', '$566load_global.0']
2024-06-28 20:38:23,004 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-28 20:38:23,004 - DEBUG - stack ['$null$566.1', '$578load_attr.2']
2024-06-28 20:38:23,004 - DEBUG - dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-06-28 20:38:23,004 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3']
2024-06-28 20:38:23,004 - DEBUG - dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-28 20:38:23,004 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
2024-06-28 20:38:23,004 - DEBUG - dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-28 20:38:23,004 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6']
2024-06-28 20:38:23,004 - DEBUG - dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1239)
2024-06-28 20:38:23,004 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7']
2024-06-28 20:38:23,004 - DEBUG - dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1239)
2024-06-28 20:38:23,004 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$n604.7', '$pre_avg606.8']
2024-06-28 20:38:23,004 - DEBUG - dispatch pc=612, inst=PRECALL(arg=2, lineno=1239)
2024-06-28 20:38:23,005 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-06-28 20:38:23,005 - DEBUG - dispatch pc=616, inst=CALL(arg=2, lineno=1239)
2024-06-28 20:38:23,005 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6', '$binop_sub608.9']
2024-06-28 20:38:23,005 - DEBUG - dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-06-28 20:38:23,005 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
2024-06-28 20:38:23,005 - DEBUG - dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-28 20:38:23,005 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
2024-06-28 20:38:23,005 - DEBUG - dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1239)
2024-06-28 20:38:23,005 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
2024-06-28 20:38:23,005 - DEBUG - dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1239)
2024-06-28 20:38:23,005 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
2024-06-28 20:38:23,005 - DEBUG - dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-28 20:38:23,005 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
2024-06-28 20:38:23,005 - DEBUG - dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1239)
2024-06-28 20:38:23,005 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
2024-06-28 20:38:23,006 - DEBUG - dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-28 20:38:23,006 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
2024-06-28 20:38:23,006 - DEBUG - dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-28 20:38:23,006 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18']
2024-06-28 20:38:23,006 - DEBUG - dispatch pc=670, inst=PRECALL(arg=2, lineno=1239)
2024-06-28 20:38:23,006 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-06-28 20:38:23,006 - DEBUG - dispatch pc=674, inst=CALL(arg=2, lineno=1239)
2024-06-28 20:38:23,006 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
2024-06-28 20:38:23,006 - DEBUG - dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1239)
2024-06-28 20:38:23,006 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
2024-06-28 20:38:23,006 - DEBUG - dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-28 20:38:23,006 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
2024-06-28 20:38:23,006 - DEBUG - dispatch pc=696, inst=PRECALL(arg=1, lineno=1239)
2024-06-28 20:38:23,007 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-06-28 20:38:23,007 - DEBUG - dispatch pc=700, inst=CALL(arg=1, lineno=1239)
2024-06-28 20:38:23,007 - DEBUG - stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
2024-06-28 20:38:23,007 - DEBUG - dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1239)
2024-06-28 20:38:23,007 - DEBUG - stack ['$700call.24']
2024-06-28 20:38:23,007 - DEBUG - dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1240)
2024-06-28 20:38:23,007 - DEBUG - stack []
2024-06-28 20:38:23,007 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-28 20:38:23,007 - DEBUG - stack ['$peaks712.25']
2024-06-28 20:38:23,007 - DEBUG - dispatch pc=716, inst=COPY(arg=2, lineno=1240)
2024-06-28 20:38:23,007 - DEBUG - stack ['$peaks712.25', '$n714.26']
2024-06-28 20:38:23,007 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=1240)
2024-06-28 20:38:23,007 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25']
2024-06-28 20:38:23,007 - DEBUG - dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:23,007 - DEBUG - stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
2024-06-28 20:38:23,008 - DEBUG - dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1240)
2024-06-28 20:38:23,008 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
2024-06-28 20:38:23,008 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-28 20:38:23,008 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
2024-06-28 20:38:23,008 - DEBUG - dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:23,008 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
2024-06-28 20:38:23,008 - DEBUG - dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1240)
2024-06-28 20:38:23,008 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
2024-06-28 20:38:23,008 - DEBUG - dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1240)
2024-06-28 20:38:23,008 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
2024-06-28 20:38:23,008 - DEBUG - dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1240)
2024-06-28 20:38:23,008 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
2024-06-28 20:38:23,008 - DEBUG - dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1240)
2024-06-28 20:38:23,008 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
2024-06-28 20:38:23,009 - DEBUG - dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1240)
2024-06-28 20:38:23,009 - DEBUG - stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
2024-06-28 20:38:23,009 - DEBUG - dispatch pc=762, inst=SWAP(arg=3, lineno=1240)
2024-06-28 20:38:23,009 - DEBUG - stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
2024-06-28 20:38:23,009 - DEBUG - dispatch pc=764, inst=SWAP(arg=2, lineno=1240)
2024-06-28 20:38:23,009 - DEBUG - stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
2024-06-28 20:38:23,009 - DEBUG - dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-06-28 20:38:23,009 - DEBUG - stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
2024-06-28 20:38:23,009 - DEBUG - dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1242)
2024-06-28 20:38:23,009 - DEBUG - stack []
2024-06-28 20:38:23,009 - DEBUG - dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1242)
2024-06-28 20:38:23,009 - DEBUG - stack ['$peaks770.36']
2024-06-28 20:38:23,009 - DEBUG - dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-06-28 20:38:23,009 - DEBUG - stack ['$peaks770.36', '$n772.37']
2024-06-28 20:38:23,009 - DEBUG - dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1242)
2024-06-28 20:38:23,010 - DEBUG - stack ['$774binary_subscr.38']
2024-06-28 20:38:23,010 - DEBUG - end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:23,010 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-06-28 20:38:23,010 - DEBUG - pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
2024-06-28 20:38:23,010 - DEBUG - stack: []
2024-06-28 20:38:23,010 - DEBUG - state.pc_initial: State(pc_initial=786 nstack_initial=0)
2024-06-28 20:38:23,010 - DEBUG - dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1243)
2024-06-28 20:38:23,010 - DEBUG - stack []
2024-06-28 20:38:23,010 - DEBUG - dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1243)
2024-06-28 20:38:23,010 - DEBUG - stack ['$n786.0']
2024-06-28 20:38:23,010 - DEBUG - dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1243)
2024-06-28 20:38:23,010 - DEBUG - stack ['$n786.0', '$const788.1']
2024-06-28 20:38:23,010 - DEBUG - dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1243)
2024-06-28 20:38:23,011 - DEBUG - stack ['$binop_iadd790.2']
2024-06-28 20:38:23,011 - DEBUG - dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1244)
2024-06-28 20:38:23,011 - DEBUG - stack []
2024-06-28 20:38:23,011 - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:23,011 - DEBUG - pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
2024-06-28 20:38:23,011 - DEBUG - stack: []
2024-06-28 20:38:23,011 - DEBUG - state.pc_initial: State(pc_initial=798 nstack_initial=0)
2024-06-28 20:38:23,011 - DEBUG - dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1247)
2024-06-28 20:38:23,011 - DEBUG - stack []
2024-06-28 20:38:23,011 - DEBUG - dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1247)
2024-06-28 20:38:23,011 - DEBUG - stack ['$n798.0']
2024-06-28 20:38:23,011 - DEBUG - dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1247)
2024-06-28 20:38:23,011 - DEBUG - stack ['$n798.0', '$wait800.1']
2024-06-28 20:38:23,011 - DEBUG - dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1247)
2024-06-28 20:38:23,011 - DEBUG - stack ['$n798.0', '$wait800.1', '$const802.2']
2024-06-28 20:38:23,011 - DEBUG - dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1247)
2024-06-28 20:38:23,012 - DEBUG - stack ['$n798.0', '$binop_add804.3']
2024-06-28 20:38:23,012 - DEBUG - dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1247)
2024-06-28 20:38:23,012 - DEBUG - stack ['$binop_iadd808.4']
2024-06-28 20:38:23,012 - DEBUG - dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-28 20:38:23,012 - DEBUG - stack []
2024-06-28 20:38:23,012 - DEBUG - dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-28 20:38:23,012 - DEBUG - stack ['$n814.5']
2024-06-28 20:38:23,012 - DEBUG - dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1229)
2024-06-28 20:38:23,012 - DEBUG - stack ['$n814.5', '$x816.6']
2024-06-28 20:38:23,012 - DEBUG - dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-28 20:38:23,012 - DEBUG - stack ['$n814.5', '$818load_attr.7']
2024-06-28 20:38:23,012 - DEBUG - dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-28 20:38:23,012 - DEBUG - stack ['$n814.5', '$818load_attr.7', '$const828.8']
2024-06-28 20:38:23,012 - DEBUG - dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1229)
2024-06-28 20:38:23,012 - DEBUG - stack ['$n814.5', '$830binary_subscr.9']
2024-06-28 20:38:23,013 - DEBUG - dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1229)
2024-06-28 20:38:23,013 - DEBUG - stack ['$840compare_op.10']
2024-06-28 20:38:23,013 - DEBUG - end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:23,013 - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:23,013 - DEBUG - pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:23,013 - DEBUG - stack: []
2024-06-28 20:38:23,013 - DEBUG - state.pc_initial: State(pc_initial=848 nstack_initial=0)
2024-06-28 20:38:23,013 - DEBUG - dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1229)
2024-06-28 20:38:23,013 - DEBUG - stack []
2024-06-28 20:38:23,013 - DEBUG - dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1229)
2024-06-28 20:38:23,013 - DEBUG - stack ['$const848.0']
2024-06-28 20:38:23,013 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,013 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=0)])
2024-06-28 20:38:23,013 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:23,014 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
2024-06-28 20:38:23,014 - DEBUG - defmap: {}
2024-06-28 20:38:23,014 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,014 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,014 - DEBUG - keep phismap: {}
2024-06-28 20:38:23,014 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:23,014 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:23,014 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13'}), (72, {'index': '$const70.13', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22'}), (132, {'target': '$peaks128.21', 'index': '$const130.22', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24'}), (144, {'index': '$const138.24', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27'}), (158, {'index': '$const156.27', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39'}), (222, {'index': '$const220.39', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51'}), (300, {'index': '$const298.51', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
2024-06-28 20:38:23,015 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:23,015 - DEBUG - block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0'}), (326, {'value': '$const324.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:23,015 - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3'}), (344, {'index': '$const342.3', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
2024-06-28 20:38:23,015 - DEBUG - block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18'}), (456, {'index': '$const454.18', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
2024-06-28 20:38:23,015 - DEBUG - block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:23,015 - DEBUG - block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18'}), (660, {'index': '$const658.18', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
2024-06-28 20:38:23,015 - DEBUG - block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
2024-06-28 20:38:23,015 - DEBUG - block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8'}), (830, {'index': '$const828.8', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
2024-06-28 20:38:23,015 - DEBUG - block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0'}), (850, {'retval': '$const848.0', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,016 - DEBUG - block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0'}), (854, {'retval': '$const852.0', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,019 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7 = const(NoneType, None)       ['$const42.7']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13 = const(int, 0)              ['$const70.13']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22 = const(int, 0)             ['$const130.22']
    peaks[$const130.22] = $122compare_op.20  ['$122compare_op.20', '$const130.22', 'peaks']
    $const138.24 = const(int, 0)             ['$const138.24']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24', 'peaks']
    $const156.27 = const(int, 0)             ['$const156.27']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27', 'x']
    $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33 = const(NoneType, None)     ['$const192.33']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39 = const(int, 0)             ['$const220.39']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24] = $binop_iand284.49  ['$binop_iand284.49', '$const138.24', 'peaks']
    $const298.51 = const(int, 0)             ['$const298.51']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1 = const(int, 1)              ['$const314.1']
    n = wait + $const314.1                   ['$const314.1', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3 = const(int, 0)              ['$const342.3']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6 = const(int, 0)              ['$const398.6']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18 = const(int, 0)             ['$const454.18']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1 = const(int, 1)              ['$const556.1']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6 = const(int, 0)              ['$const602.6']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18 = const(int, 0)             ['$const658.18']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1 = const(int, 1)              ['$const788.1']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2 = const(int, 1)              ['$const802.2']
    $binop_add804.3 = wait + $const802.2     ['$binop_add804.3', '$const802.2', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8 = const(int, 0)              ['$const828.8']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0 = const(NoneType, None)      ['$const848.0']
    $850return_value.1 = cast(value=$const848.0) ['$850return_value.1', '$const848.0']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0 = const(NoneType, None)      ['$const852.0']
    $854return_value.1 = cast(value=$const852.0) ['$854return_value.1', '$const852.0']
    return $854return_value.1                ['$854return_value.1']

2024-06-28 20:38:23,035 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:23,035 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,035 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:23,035 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:23,035 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:23,035 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:23,035 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:23,036 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:23,036 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:23,036 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:23,036 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,037 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,037 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,037 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:23,037 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,037 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:23,037 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:23,037 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:23,037 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:23,037 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:23,037 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:23,037 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,038 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:23,039 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:23,039 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,039 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:23,039 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:23,039 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:23,039 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,039 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,039 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:23,039 - DEBUG - ==== SSA block analysis pass on 312
2024-06-28 20:38:23,039 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,039 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:23,039 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:23,039 - DEBUG - on stmt: jump 328
2024-06-28 20:38:23,040 - DEBUG - ==== SSA block analysis pass on 324
2024-06-28 20:38:23,040 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,040 - DEBUG - on stmt: n = const(int, 1)
2024-06-28 20:38:23,040 - DEBUG - on stmt: jump 328
2024-06-28 20:38:23,040 - DEBUG - ==== SSA block analysis pass on 328
2024-06-28 20:38:23,040 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,040 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,040 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:23,040 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:23,040 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:23,040 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,040 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,040 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:23,040 - DEBUG - ==== SSA block analysis pass on 362
2024-06-28 20:38:23,041 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,041 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,041 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:23,041 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:23,041 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:23,041 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:23,041 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,041 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:23,041 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:23,041 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,041 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:23,041 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:23,041 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,042 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,042 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,042 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:23,042 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,042 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,042 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:23,042 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:23,042 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,042 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,042 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,042 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:23,042 - DEBUG - ==== SSA block analysis pass on 554
2024-06-28 20:38:23,042 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,042 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:23,043 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,043 - DEBUG - on stmt: n = $binop_iadd558.2
2024-06-28 20:38:23,043 - DEBUG - on stmt: jump 853
2024-06-28 20:38:23,043 - DEBUG - ==== SSA block analysis pass on 566
2024-06-28 20:38:23,043 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,043 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,043 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:23,043 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:23,043 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:23,043 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:23,043 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,043 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:23,043 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:23,044 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,044 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:23,044 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:23,044 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,044 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,044 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,044 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:23,044 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,044 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,044 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,044 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:23,045 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:23,045 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,045 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:23,045 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,045 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,045 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,045 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:23,045 - DEBUG - ==== SSA block analysis pass on 786
2024-06-28 20:38:23,045 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,045 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:23,045 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,045 - DEBUG - on stmt: n = $binop_iadd790.2
2024-06-28 20:38:23,045 - DEBUG - on stmt: jump 853
2024-06-28 20:38:23,045 - DEBUG - ==== SSA block analysis pass on 798
2024-06-28 20:38:23,046 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,046 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:23,046 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:23,046 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,046 - DEBUG - on stmt: n = $binop_iadd808.4
2024-06-28 20:38:23,046 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,046 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:23,046 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:23,046 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:23,046 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,046 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,046 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:23,046 - DEBUG - ==== SSA block analysis pass on 848
2024-06-28 20:38:23,046 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,046 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:23,047 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:23,047 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:23,047 - DEBUG - ==== SSA block analysis pass on 852
2024-06-28 20:38:23,047 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,047 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:23,047 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:23,047 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:23,047 - DEBUG - ==== SSA block analysis pass on 853
2024-06-28 20:38:23,047 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76586810>
2024-06-28 20:38:23,047 - DEBUG - on stmt: jump 328
2024-06-28 20:38:23,049 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x7f7a76129dd0>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x7f7a7612b8d0>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x7f7a760af250>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x7f7a760ace90>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x7f7a76130490>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x7f7a76130690>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x7f7a7612a190>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x7f7a76130b10>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x7f7a76130fd0>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x7f7a760af2d0>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x7f7a76131590>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x7f7a76131750>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x7f7a761318d0>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x7f7a76131a10>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x7f7a76131c90>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x7f7a76132290>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x7f7a760affd0>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x7f7a76128fd0>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7f7a76132f10>, 0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76133c90>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f7a7639e910>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a760aff50>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x7f7a760af950>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x7f7a760af310>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a760ae250>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x7f7a760ae990>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x7f7a760af1d0>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x7f7a760acb90>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x7f7a760ae9d0>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x7f7a7612a790>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f7a76278ad0>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x7f7a760ac390>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x7f7a760ac510>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x7f7a760ac910>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f7a760ac890>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f7a760ad310>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x7f7a670386d0>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x7f7a67038810>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x7f7a67039810>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x7f7a670390d0>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a67039150>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x7f7a6703a050>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7f7a76128c10>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x7f7a6703a650>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x7f7a6703aa50>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x7f7a6703bbd0>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f7a76278dd0>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x7f7a67039ad0>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x7f7a6703b410>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x7f7a67038bd0>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f7a6703add0>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f7a670fc610>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f7a760ac0d0>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x7f7a670fcbd0>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x7f7a670fd3d0>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x7f7a670fdc10>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x7f7a670fe090>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x7f7a670ff4d0>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f7a76278710>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a670ffb10>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x7f7a670ffed0>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x7f7a670e82d0>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x7f7a670e8790>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7f7a76128290>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f7a7639db10>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x7f7a76129a90>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x7f7a76129790>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x7f7a761299d0>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x7f7a76132050>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x7f7a760ae950>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x7f7a6703be50>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x7f7a670fd190>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x7f7a670fec50>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x7f7a6703b110>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x7f7a670fe290>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x7f7a670fee50>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x7f7a76132490>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x7f7a670fd610>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x7f7a760ad410>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x7f7a6703acd0>,
                                  566)],
             '$const130.22': [(<numba.core.ir.Assign object at 0x7f7a76128650>,
                               0)],
             '$const138.24': [(<numba.core.ir.Assign object at 0x7f7a76129950>,
                               0)],
             '$const156.27': [(<numba.core.ir.Assign object at 0x7f7a76130110>,
                               0)],
             '$const192.33': [(<numba.core.ir.Assign object at 0x7f7a76130990>,
                               0)],
             '$const220.39': [(<numba.core.ir.Assign object at 0x7f7a76131150>,
                               0)],
             '$const298.51': [(<numba.core.ir.Assign object at 0x7f7a76132890>,
                               0)],
             '$const314.1': [(<numba.core.ir.Assign object at 0x7f7a76132fd0>,
                              312)],
             '$const342.3': [(<numba.core.ir.Assign object at 0x7f7a76133ed0>,
                              328)],
             '$const398.6': [(<numba.core.ir.Assign object at 0x7f7a760af910>,
                              362)],
             '$const42.7': [(<numba.core.ir.Assign object at 0x7f7a76129350>,
                             0)],
             '$const454.18': [(<numba.core.ir.Assign object at 0x7f7a760ade10>,
                               362)],
             '$const556.1': [(<numba.core.ir.Assign object at 0x7f7a67038890>,
                              554)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7f7a7612b090>,
                            0)],
             '$const602.6': [(<numba.core.ir.Assign object at 0x7f7a6703b590>,
                              566)],
             '$const658.18': [(<numba.core.ir.Assign object at 0x7f7a6703ba50>,
                               566)],
             '$const70.13': [(<numba.core.ir.Assign object at 0x7f7a76128b90>,
                              0)],
             '$const788.1': [(<numba.core.ir.Assign object at 0x7f7a670fd890>,
                              786)],
             '$const802.2': [(<numba.core.ir.Assign object at 0x7f7a670fea10>,
                              798)],
             '$const828.8': [(<numba.core.ir.Assign object at 0x7f7a670ff6d0>,
                              798)],
             '$const848.0': [(<numba.core.ir.Assign object at 0x7f7a670e80d0>,
                              848)],
             '$const852.0': [(<numba.core.ir.Assign object at 0x7f7a670e8550>,
                              852)],
             'avgn': [(<numba.core.ir.Assign object at 0x7f7a67039790>, 566)],
             'bool310': [(<numba.core.ir.Assign object at 0x7f7a76132d50>, 0)],
             'bool360': [(<numba.core.ir.Assign object at 0x7f7a760afbd0>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x7f7a67038e90>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x7f7a670fded0>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x7f7a670ffd10>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x7f7a76269150>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7f7a760acc90>, 362)],
             'n': [(<numba.core.ir.Assign object at 0x7f7a76133190>, 312),
                   (<numba.core.ir.Assign object at 0x7f7a761335d0>, 324),
                   (<numba.core.ir.Assign object at 0x7f7a6703b690>, 554),
                   (<numba.core.ir.Assign object at 0x7f7a670fe310>, 786),
                   (<numba.core.ir.Assign object at 0x7f7a670fef10>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x7f7a76a557d0>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7f7a767adc10>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7f7a76137050>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7f7a74e24810>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7f7a76136e50>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7f7a76339f50>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a76136cd0>, 0)]})
2024-06-28 20:38:23,050 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76586810>
2024-06-28 20:38:23,050 - DEBUG - Fix SSA violator on var n
2024-06-28 20:38:23,050 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:23,050 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,050 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:23,050 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:23,050 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:23,050 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:23,050 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:23,050 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:23,050 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:23,050 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:23,050 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:23,050 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:23,050 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,051 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:23,051 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:23,051 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:23,052 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,052 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,053 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:23,053 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,053 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:23,053 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:23,053 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,053 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:23,053 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:23,053 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:23,053 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,053 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,053 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:23,053 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-28 20:38:23,053 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,053 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:23,053 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:23,054 - DEBUG - first assign: n
2024-06-28 20:38:23,054 - DEBUG - replaced with: n = wait + $const314.1
2024-06-28 20:38:23,054 - DEBUG - on stmt: jump 328
2024-06-28 20:38:23,054 - DEBUG - ==== SSA block rewrite pass on 324
2024-06-28 20:38:23,054 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,054 - DEBUG - on stmt: n = const(int, 1)
2024-06-28 20:38:23,054 - DEBUG - replaced with: n.1 = const(int, 1)
2024-06-28 20:38:23,054 - DEBUG - on stmt: jump 328
2024-06-28 20:38:23,054 - DEBUG - ==== SSA block rewrite pass on 328
2024-06-28 20:38:23,054 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,054 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,054 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:23,054 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:23,054 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:23,055 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,055 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,055 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:23,055 - DEBUG - ==== SSA block rewrite pass on 362
2024-06-28 20:38:23,055 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,055 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,055 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:23,055 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:23,055 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:23,055 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:23,055 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,055 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:23,055 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:23,055 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,055 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:23,056 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:23,056 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,056 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,056 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,056 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:23,056 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,056 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,056 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:23,056 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:23,056 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,056 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,056 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,056 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:23,056 - DEBUG - ==== SSA block rewrite pass on 554
2024-06-28 20:38:23,057 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,057 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:23,057 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,057 - DEBUG - on stmt: n = $binop_iadd558.2
2024-06-28 20:38:23,057 - DEBUG - replaced with: n.2 = $binop_iadd558.2
2024-06-28 20:38:23,057 - DEBUG - on stmt: jump 853
2024-06-28 20:38:23,057 - DEBUG - ==== SSA block rewrite pass on 566
2024-06-28 20:38:23,057 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,057 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,057 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:23,057 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:23,057 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:23,057 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:23,057 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:23,058 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:23,058 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,058 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,059 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:23,059 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:23,059 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,059 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:23,059 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,059 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,059 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,059 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:23,059 - DEBUG - ==== SSA block rewrite pass on 786
2024-06-28 20:38:23,059 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,059 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:23,059 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,059 - DEBUG - on stmt: n = $binop_iadd790.2
2024-06-28 20:38:23,059 - DEBUG - replaced with: n.3 = $binop_iadd790.2
2024-06-28 20:38:23,060 - DEBUG - on stmt: jump 853
2024-06-28 20:38:23,060 - DEBUG - ==== SSA block rewrite pass on 798
2024-06-28 20:38:23,060 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,060 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:23,060 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:23,060 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,060 - DEBUG - on stmt: n = $binop_iadd808.4
2024-06-28 20:38:23,060 - DEBUG - replaced with: n.4 = $binop_iadd808.4
2024-06-28 20:38:23,060 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,060 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:23,060 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:23,060 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:23,060 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,060 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,060 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:23,061 - DEBUG - ==== SSA block rewrite pass on 848
2024-06-28 20:38:23,061 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,061 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:23,061 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:23,061 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:23,061 - DEBUG - ==== SSA block rewrite pass on 852
2024-06-28 20:38:23,061 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,061 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:23,061 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:23,061 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:23,061 - DEBUG - ==== SSA block rewrite pass on 853
2024-06-28 20:38:23,061 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7623c650>
2024-06-28 20:38:23,061 - DEBUG - on stmt: jump 328
2024-06-28 20:38:23,061 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x7f7a66e6d310>],
             324: [<numba.core.ir.Assign object at 0x7f7a76a56090>],
             554: [<numba.core.ir.Assign object at 0x7f7a75fa2710>],
             786: [<numba.core.ir.Assign object at 0x7f7a767ae810>],
             798: [<numba.core.ir.Assign object at 0x7f7a767aefd0>]})
2024-06-28 20:38:23,062 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:23,062 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,062 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:23,062 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-28 20:38:23,062 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-28 20:38:23,062 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-28 20:38:23,062 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-28 20:38:23,062 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-28 20:38:23,062 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-28 20:38:23,062 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-28 20:38:23,062 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-28 20:38:23,062 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-28 20:38:23,062 - DEBUG - on stmt: $18load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $const42.7 = const(NoneType, None)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $44load_global.8 = global(min: <built-in function min>)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $const70.13 = const(int, 0)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13, fn=<built-in function getitem>)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1209), Var($72binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $96build_slice.17 = call $96build_slice.16($const42.7, $86call.15, func=$96build_slice.16, args=(Var($const42.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,063 - DEBUG - on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
2024-06-28 20:38:23,063 - DEBUG - on stmt: $const130.22 = const(int, 0)
2024-06-28 20:38:23,064 - DEBUG - on stmt: peaks[0] = $122compare_op.20
2024-06-28 20:38:23,064 - DEBUG - on stmt: $const138.24 = const(int, 0)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24, fn=<built-in function getitem>)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $const156.27 = const(int, 0)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27, fn=<built-in function getitem>)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $168load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $const192.33 = const(NoneType, None)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $194load_global.34 = global(min: <built-in function min>)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $const220.39 = const(int, 0)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39, fn=<built-in function getitem>)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1209), Var($222binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,064 - DEBUG - on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,065 - DEBUG - on stmt: $246build_slice.43 = call $246build_slice.42($const192.33, $236call.41, func=$246build_slice.42, args=(Var($const192.33, utils.py:1222), Var($236call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,065 - DEBUG - on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
2024-06-28 20:38:23,065 - DEBUG - on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,065 - DEBUG - on stmt: $binop_add274.47 = $262call.45 + delta
2024-06-28 20:38:23,065 - DEBUG - on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
2024-06-28 20:38:23,065 - DEBUG - on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,065 - DEBUG - on stmt: peaks[0] = $binop_iand284.49
2024-06-28 20:38:23,065 - DEBUG - on stmt: $const298.51 = const(int, 0)
2024-06-28 20:38:23,065 - DEBUG - on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51, fn=<built-in function getitem>)
2024-06-28 20:38:23,065 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,065 - DEBUG - on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,065 - DEBUG - on stmt: branch $310pred, 312, 324
2024-06-28 20:38:23,065 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-28 20:38:23,066 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,066 - DEBUG - on stmt: $const314.1 = const(int, 1)
2024-06-28 20:38:23,066 - DEBUG - on stmt: n = wait + $const314.1
2024-06-28 20:38:23,066 - DEBUG - on stmt: jump 328
2024-06-28 20:38:23,066 - DEBUG - ==== SSA block rewrite pass on 324
2024-06-28 20:38:23,066 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,066 - DEBUG - on stmt: n.1 = const(int, 1)
2024-06-28 20:38:23,066 - DEBUG - on stmt: jump 328
2024-06-28 20:38:23,066 - DEBUG - ==== SSA block rewrite pass on 328
2024-06-28 20:38:23,066 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,066 - DEBUG - on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,066 - DEBUG - on stmt: $const342.3 = const(int, 0)
2024-06-28 20:38:23,066 - DEBUG - on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3, fn=<built-in function getitem>)
2024-06-28 20:38:23,067 - DEBUG - on stmt: $354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:23,067 - DEBUG - find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
2024-06-28 20:38:23,067 - DEBUG - find_def_from_top label 328
2024-06-28 20:38:23,067 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
2024-06-28 20:38:23,067 - DEBUG - find_def_from_bottom label 312
2024-06-28 20:38:23,067 - DEBUG - incoming_def n = wait + $const314.1
2024-06-28 20:38:23,067 - DEBUG - find_def_from_bottom label 324
2024-06-28 20:38:23,067 - DEBUG - incoming_def n.1 = const(int, 1)
2024-06-28 20:38:23,067 - DEBUG - find_def_from_bottom label 853
2024-06-28 20:38:23,067 - DEBUG - find_def_from_top label 853
2024-06-28 20:38:23,067 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
2024-06-28 20:38:23,067 - DEBUG - find_def_from_bottom label 554
2024-06-28 20:38:23,067 - DEBUG - incoming_def n.2 = $binop_iadd558.2
2024-06-28 20:38:23,068 - DEBUG - find_def_from_bottom label 786
2024-06-28 20:38:23,068 - DEBUG - incoming_def n.3 = $binop_iadd790.2
2024-06-28 20:38:23,068 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[554, 786])
2024-06-28 20:38:23,068 - DEBUG - replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
2024-06-28 20:38:23,068 - DEBUG - on stmt: bool360 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,068 - DEBUG - on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,068 - DEBUG - on stmt: branch $360pred, 362, 852
2024-06-28 20:38:23,068 - DEBUG - ==== SSA block rewrite pass on 362
2024-06-28 20:38:23,068 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,068 - DEBUG - on stmt: $362load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,068 - DEBUG - on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
2024-06-28 20:38:23,068 - DEBUG - on stmt: $386load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:23,068 - DEBUG - on stmt: $const398.6 = const(int, 0)
2024-06-28 20:38:23,068 - DEBUG - on stmt: $binop_sub404.9 = n - pre_max
2024-06-28 20:38:23,069 - DEBUG - find_def var='n' stmt=$binop_sub404.9 = n - pre_max
2024-06-28 20:38:23,069 - DEBUG - find_def_from_top label 362
2024-06-28 20:38:23,069 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
2024-06-28 20:38:23,069 - DEBUG - find_def_from_bottom label 328
2024-06-28 20:38:23,069 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[312, 324, 853])
2024-06-28 20:38:23,069 - DEBUG - find_def_from_bottom label 798
2024-06-28 20:38:23,069 - DEBUG - incoming_def n.4 = $binop_iadd808.4
2024-06-28 20:38:23,069 - DEBUG - replaced with: $binop_sub404.9 = n.7 - pre_max
2024-06-28 20:38:23,069 - DEBUG - on stmt: $412call.10 = call $386load_global.4($const398.6, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6, utils.py:1230), Var($binop_sub404.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,069 - DEBUG - on stmt: $422load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:23,069 - DEBUG - on stmt: $binop_add438.15 = n + post_max
2024-06-28 20:38:23,069 - DEBUG - find_def var='n' stmt=$binop_add438.15 = n + post_max
2024-06-28 20:38:23,069 - DEBUG - replaced with: $binop_add438.15 = n.7 + post_max
2024-06-28 20:38:23,070 - DEBUG - on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,070 - DEBUG - on stmt: $const454.18 = const(int, 0)
2024-06-28 20:38:23,070 - DEBUG - on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18, fn=<built-in function getitem>)
2024-06-28 20:38:23,070 - DEBUG - on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1230), Var($456binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,070 - DEBUG - on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,070 - DEBUG - on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1230), Var($470call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,070 - DEBUG - on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:23,070 - DEBUG - on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,070 - DEBUG - on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,070 - DEBUG - find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,070 - DEBUG - replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:23,070 - DEBUG - on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
2024-06-28 20:38:23,071 - DEBUG - on stmt: peaks[n] = $524compare_op.29
2024-06-28 20:38:23,071 - DEBUG - find_def var='n' stmt=peaks[n] = $524compare_op.29
2024-06-28 20:38:23,071 - DEBUG - replaced with: peaks[n.7] = $524compare_op.29
2024-06-28 20:38:23,071 - DEBUG - on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,071 - DEBUG - find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,071 - DEBUG - replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:23,071 - DEBUG - on stmt: bool552 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,071 - DEBUG - on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,071 - DEBUG - on stmt: branch $552pred, 566, 554
2024-06-28 20:38:23,071 - DEBUG - ==== SSA block rewrite pass on 554
2024-06-28 20:38:23,071 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,071 - DEBUG - on stmt: $const556.1 = const(int, 1)
2024-06-28 20:38:23,072 - DEBUG - on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,072 - DEBUG - find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,072 - DEBUG - find_def_from_top label 554
2024-06-28 20:38:23,072 - DEBUG - idom 362 from label 554
2024-06-28 20:38:23,072 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:23,072 - DEBUG - replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,072 - DEBUG - on stmt: n.2 = $binop_iadd558.2
2024-06-28 20:38:23,072 - DEBUG - on stmt: jump 853
2024-06-28 20:38:23,072 - DEBUG - ==== SSA block rewrite pass on 566
2024-06-28 20:38:23,072 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,072 - DEBUG - on stmt: $566load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,072 - DEBUG - on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
2024-06-28 20:38:23,072 - DEBUG - on stmt: $590load_global.4 = global(max: <built-in function max>)
2024-06-28 20:38:23,073 - DEBUG - on stmt: $const602.6 = const(int, 0)
2024-06-28 20:38:23,073 - DEBUG - on stmt: $binop_sub608.9 = n - pre_avg
2024-06-28 20:38:23,073 - DEBUG - find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
2024-06-28 20:38:23,073 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:23,073 - DEBUG - idom 362 from label 566
2024-06-28 20:38:23,073 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:23,073 - DEBUG - replaced with: $binop_sub608.9 = n.7 - pre_avg
2024-06-28 20:38:23,073 - DEBUG - on stmt: $616call.10 = call $590load_global.4($const602.6, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6, utils.py:1239), Var($binop_sub608.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,073 - DEBUG - on stmt: $626load_global.11 = global(min: <built-in function min>)
2024-06-28 20:38:23,073 - DEBUG - on stmt: $binop_add642.15 = n + post_avg
2024-06-28 20:38:23,073 - DEBUG - find_def var='n' stmt=$binop_add642.15 = n + post_avg
2024-06-28 20:38:23,073 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:23,073 - DEBUG - idom 362 from label 566
2024-06-28 20:38:23,073 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:23,074 - DEBUG - replaced with: $binop_add642.15 = n.7 + post_avg
2024-06-28 20:38:23,074 - DEBUG - on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,074 - DEBUG - on stmt: $const658.18 = const(int, 0)
2024-06-28 20:38:23,074 - DEBUG - on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18, fn=<built-in function getitem>)
2024-06-28 20:38:23,074 - DEBUG - on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1239), Var($660binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,074 - DEBUG - on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
2024-06-28 20:38:23,074 - DEBUG - on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1239), Var($674call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,074 - DEBUG - on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
2024-06-28 20:38:23,074 - DEBUG - on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,074 - DEBUG - on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,074 - DEBUG - find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,074 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:23,074 - DEBUG - idom 362 from label 566
2024-06-28 20:38:23,075 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:23,075 - DEBUG - replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:23,075 - DEBUG - on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,075 - DEBUG - find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,075 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:23,075 - DEBUG - idom 362 from label 566
2024-06-28 20:38:23,075 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:23,075 - DEBUG - replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:23,075 - DEBUG - on stmt: $binop_add748.33 = avgn + delta
2024-06-28 20:38:23,075 - DEBUG - on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
2024-06-28 20:38:23,075 - DEBUG - on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,075 - DEBUG - on stmt: peaks[n] = $binop_iand758.35
2024-06-28 20:38:23,075 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand758.35
2024-06-28 20:38:23,075 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:23,076 - DEBUG - idom 362 from label 566
2024-06-28 20:38:23,076 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:23,076 - DEBUG - replaced with: peaks[n.7] = $binop_iand758.35
2024-06-28 20:38:23,076 - DEBUG - on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,076 - DEBUG - find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-28 20:38:23,076 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:23,076 - DEBUG - idom 362 from label 566
2024-06-28 20:38:23,076 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:23,076 - DEBUG - replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-28 20:38:23,076 - DEBUG - on stmt: bool784 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,076 - DEBUG - on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,076 - DEBUG - on stmt: branch $784pred, 798, 786
2024-06-28 20:38:23,077 - DEBUG - ==== SSA block rewrite pass on 786
2024-06-28 20:38:23,077 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,077 - DEBUG - on stmt: $const788.1 = const(int, 1)
2024-06-28 20:38:23,077 - DEBUG - on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,077 - DEBUG - find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,077 - DEBUG - find_def_from_top label 786
2024-06-28 20:38:23,077 - DEBUG - idom 566 from label 786
2024-06-28 20:38:23,077 - DEBUG - find_def_from_bottom label 566
2024-06-28 20:38:23,077 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:23,077 - DEBUG - idom 362 from label 566
2024-06-28 20:38:23,077 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:23,077 - DEBUG - replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,077 - DEBUG - on stmt: n.3 = $binop_iadd790.2
2024-06-28 20:38:23,078 - DEBUG - on stmt: jump 853
2024-06-28 20:38:23,078 - DEBUG - ==== SSA block rewrite pass on 798
2024-06-28 20:38:23,078 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,078 - DEBUG - on stmt: $const802.2 = const(int, 1)
2024-06-28 20:38:23,078 - DEBUG - on stmt: $binop_add804.3 = wait + $const802.2
2024-06-28 20:38:23,078 - DEBUG - on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,078 - DEBUG - find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,078 - DEBUG - find_def_from_top label 798
2024-06-28 20:38:23,078 - DEBUG - idom 566 from label 798
2024-06-28 20:38:23,078 - DEBUG - find_def_from_bottom label 566
2024-06-28 20:38:23,078 - DEBUG - find_def_from_top label 566
2024-06-28 20:38:23,078 - DEBUG - idom 362 from label 566
2024-06-28 20:38:23,079 - DEBUG - find_def_from_bottom label 362
2024-06-28 20:38:23,079 - DEBUG - replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,079 - DEBUG - on stmt: n.4 = $binop_iadd808.4
2024-06-28 20:38:23,079 - DEBUG - on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
2024-06-28 20:38:23,079 - DEBUG - on stmt: $const828.8 = const(int, 0)
2024-06-28 20:38:23,079 - DEBUG - on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8, fn=<built-in function getitem>)
2024-06-28 20:38:23,079 - DEBUG - on stmt: $840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:23,079 - DEBUG - find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
2024-06-28 20:38:23,079 - DEBUG - replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
2024-06-28 20:38:23,079 - DEBUG - on stmt: bool846 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,079 - DEBUG - on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,079 - DEBUG - on stmt: branch $846pred, 362, 848
2024-06-28 20:38:23,079 - DEBUG - ==== SSA block rewrite pass on 848
2024-06-28 20:38:23,079 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,080 - DEBUG - on stmt: $const848.0 = const(NoneType, None)
2024-06-28 20:38:23,080 - DEBUG - on stmt: $850return_value.1 = cast(value=$const848.0)
2024-06-28 20:38:23,080 - DEBUG - on stmt: return $850return_value.1
2024-06-28 20:38:23,080 - DEBUG - ==== SSA block rewrite pass on 852
2024-06-28 20:38:23,080 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,080 - DEBUG - on stmt: $const852.0 = const(NoneType, None)
2024-06-28 20:38:23,080 - DEBUG - on stmt: $854return_value.1 = cast(value=$const852.0)
2024-06-28 20:38:23,080 - DEBUG - on stmt: return $854return_value.1
2024-06-28 20:38:23,080 - DEBUG - ==== SSA block rewrite pass on 853
2024-06-28 20:38:23,080 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a74e20c10>
2024-06-28 20:38:23,080 - DEBUG - on stmt: jump 328
2024-06-28 20:38:23,089 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          18	LOAD_CONST(arg=1, lineno=571)
          20	COMPARE_OP(arg=2, lineno=571)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
          28	LOAD_GLOBAL(arg=3, lineno=572)
          40	LOAD_CONST(arg=2, lineno=572)
          42	PRECALL(arg=1, lineno=572)
          46	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          70	LOAD_ATTR(arg=3, lineno=575)
          80	LOAD_FAST(arg=0, lineno=575)
          82	PRECALL(arg=1, lineno=575)
          86	CALL(arg=1, lineno=575)
          96	STORE_FAST(arg=1, lineno=575)
          98	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	PRECALL(arg=1, lineno=576)
         116	CALL(arg=1, lineno=576)
         126	LOAD_METHOD(arg=5, lineno=576)
         148	LOAD_CONST(arg=1, lineno=576)
         150	PRECALL(arg=1, lineno=576)
         154	CALL(arg=1, lineno=576)
         164	STORE_FAST(arg=2, lineno=576)
         166	PUSH_NULL(arg=None, lineno=577)
         168	LOAD_DEREF(arg=6, lineno=577)
         170	LOAD_FAST(arg=2, lineno=577)
         172	PRECALL(arg=1, lineno=577)
         176	CALL(arg=1, lineno=577)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
         188	LOAD_FAST(arg=2, lineno=578)
         190	RETURN_VALUE(arg=None, lineno=578)
>        192	LOAD_FAST(arg=1, lineno=580)
         194	GET_ITER(arg=None, lineno=580)
>        196	FOR_ITER(arg=51, lineno=580)
         198	STORE_FAST(arg=3, lineno=580)
         200	LOAD_FAST(arg=3, lineno=581)
         202	LOAD_METHOD(arg=6, lineno=581)
         224	PRECALL(arg=0, lineno=581)
         228	CALL(arg=0, lineno=581)
         238	STORE_FAST(arg=4, lineno=581)
         240	PUSH_NULL(arg=None, lineno=582)
         242	LOAD_DEREF(arg=6, lineno=582)
         244	LOAD_FAST(arg=4, lineno=582)
         246	PRECALL(arg=1, lineno=582)
         250	CALL(arg=1, lineno=582)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
         262	LOAD_FAST(arg=4, lineno=583)
         264	SWAP(arg=2, lineno=583)
         266	POP_TOP(arg=None, lineno=583)
         268	RETURN_VALUE(arg=None, lineno=583)
>        270	PUSH_NULL(arg=None, lineno=584)
         272	LOAD_DEREF(arg=5, lineno=584)
         274	LOAD_FAST(arg=4, lineno=584)
         276	LOAD_FAST(arg=2, lineno=584)
         278	PRECALL(arg=2, lineno=584)
         282	CALL(arg=2, lineno=584)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
         294	LOAD_FAST(arg=4, lineno=585)
         296	STORE_FAST(arg=2, lineno=585)
>        298	JUMP_BACKWARD(arg=52, lineno=585)
>        300	LOAD_FAST(arg=2, lineno=586)
         302	RETURN_VALUE(arg=None, lineno=586)
2024-06-28 20:38:23,090 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:23,090 - DEBUG - stack: []
2024-06-28 20:38:23,090 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:23,090 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-06-28 20:38:23,090 - DEBUG - stack []
2024-06-28 20:38:23,090 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-06-28 20:38:23,090 - DEBUG - stack []
2024-06-28 20:38:23,090 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-06-28 20:38:23,090 - DEBUG - stack []
2024-06-28 20:38:23,090 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-06-28 20:38:23,090 - DEBUG - stack []
2024-06-28 20:38:23,090 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-06-28 20:38:23,090 - DEBUG - stack ['$a6.0']
2024-06-28 20:38:23,090 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=571)
2024-06-28 20:38:23,091 - DEBUG - stack ['$8load_attr.1']
2024-06-28 20:38:23,091 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=571)
2024-06-28 20:38:23,091 - DEBUG - stack ['$8load_attr.1', '$const18.2']
2024-06-28 20:38:23,091 - DEBUG - dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=571)
2024-06-28 20:38:23,091 - DEBUG - stack ['$20compare_op.3']
2024-06-28 20:38:23,091 - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:23,091 - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:23,091 - DEBUG - stack: []
2024-06-28 20:38:23,091 - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
2024-06-28 20:38:23,091 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-06-28 20:38:23,091 - DEBUG - stack []
2024-06-28 20:38:23,091 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=572)
2024-06-28 20:38:23,091 - DEBUG - stack ['$null$28.1', '$28load_global.0']
2024-06-28 20:38:23,091 - DEBUG - dispatch pc=42, inst=PRECALL(arg=1, lineno=572)
2024-06-28 20:38:23,091 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-06-28 20:38:23,092 - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=572)
2024-06-28 20:38:23,092 - DEBUG - stack ['$null$28.1', '$28load_global.0', '$const40.2']
2024-06-28 20:38:23,092 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-06-28 20:38:23,092 - DEBUG - stack ['$46call.3']
2024-06-28 20:38:23,092 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,092 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-06-28 20:38:23,092 - DEBUG - stack: []
2024-06-28 20:38:23,092 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-06-28 20:38:23,092 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-06-28 20:38:23,092 - DEBUG - stack []
2024-06-28 20:38:23,092 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=575)
2024-06-28 20:38:23,093 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-06-28 20:38:23,093 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=575)
2024-06-28 20:38:23,093 - DEBUG - stack ['$null$58.1', '$70load_attr.2']
2024-06-28 20:38:23,093 - DEBUG - dispatch pc=82, inst=PRECALL(arg=1, lineno=575)
2024-06-28 20:38:23,093 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-06-28 20:38:23,093 - DEBUG - dispatch pc=86, inst=CALL(arg=1, lineno=575)
2024-06-28 20:38:23,093 - DEBUG - stack ['$null$58.1', '$70load_attr.2', '$a80.3']
2024-06-28 20:38:23,093 - DEBUG - dispatch pc=96, inst=STORE_FAST(arg=1, lineno=575)
2024-06-28 20:38:23,093 - DEBUG - stack ['$86call.4']
2024-06-28 20:38:23,093 - DEBUG - dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-06-28 20:38:23,093 - DEBUG - stack []
2024-06-28 20:38:23,093 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-06-28 20:38:23,094 - DEBUG - stack ['$null$98.6', '$98load_global.5']
2024-06-28 20:38:23,094 - DEBUG - dispatch pc=112, inst=PRECALL(arg=1, lineno=576)
2024-06-28 20:38:23,094 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-06-28 20:38:23,094 - DEBUG - dispatch pc=116, inst=CALL(arg=1, lineno=576)
2024-06-28 20:38:23,094 - DEBUG - stack ['$null$98.6', '$98load_global.5', '$it110.7']
2024-06-28 20:38:23,094 - DEBUG - dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=576)
2024-06-28 20:38:23,094 - DEBUG - stack ['$116call.8']
2024-06-28 20:38:23,094 - DEBUG - dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=576)
2024-06-28 20:38:23,094 - DEBUG - stack ['$null$126.9', '$126load_method.10']
2024-06-28 20:38:23,094 - DEBUG - dispatch pc=150, inst=PRECALL(arg=1, lineno=576)
2024-06-28 20:38:23,094 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-06-28 20:38:23,095 - DEBUG - dispatch pc=154, inst=CALL(arg=1, lineno=576)
2024-06-28 20:38:23,095 - DEBUG - stack ['$null$126.9', '$126load_method.10', '$const148.11']
2024-06-28 20:38:23,095 - DEBUG - dispatch pc=164, inst=STORE_FAST(arg=2, lineno=576)
2024-06-28 20:38:23,095 - DEBUG - stack ['$154call.12']
2024-06-28 20:38:23,095 - DEBUG - dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=577)
2024-06-28 20:38:23,095 - DEBUG - stack []
2024-06-28 20:38:23,095 - DEBUG - dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=577)
2024-06-28 20:38:23,095 - DEBUG - stack ['$null$166.13']
2024-06-28 20:38:23,095 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=577)
2024-06-28 20:38:23,095 - DEBUG - stack ['$null$166.13', '$168load_deref.14']
2024-06-28 20:38:23,095 - DEBUG - dispatch pc=172, inst=PRECALL(arg=1, lineno=577)
2024-06-28 20:38:23,095 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-06-28 20:38:23,095 - DEBUG - dispatch pc=176, inst=CALL(arg=1, lineno=577)
2024-06-28 20:38:23,095 - DEBUG - stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
2024-06-28 20:38:23,095 - DEBUG - dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=577)
2024-06-28 20:38:23,095 - DEBUG - stack ['$176call.16']
2024-06-28 20:38:23,096 - DEBUG - end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:23,096 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:23,096 - DEBUG - stack: []
2024-06-28 20:38:23,096 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2024-06-28 20:38:23,096 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=578)
2024-06-28 20:38:23,096 - DEBUG - stack []
2024-06-28 20:38:23,096 - DEBUG - dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=578)
2024-06-28 20:38:23,096 - DEBUG - stack ['$max_value188.0']
2024-06-28 20:38:23,096 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,096 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0)])
2024-06-28 20:38:23,096 - DEBUG - stack: []
2024-06-28 20:38:23,096 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-06-28 20:38:23,096 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=580)
2024-06-28 20:38:23,096 - DEBUG - stack []
2024-06-28 20:38:23,096 - DEBUG - dispatch pc=194, inst=GET_ITER(arg=None, lineno=580)
2024-06-28 20:38:23,096 - DEBUG - stack ['$it192.0']
2024-06-28 20:38:23,097 - DEBUG - end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
2024-06-28 20:38:23,097 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:23,097 - DEBUG - stack: ['$phi196.0']
2024-06-28 20:38:23,097 - DEBUG - state.pc_initial: State(pc_initial=196 nstack_initial=1)
2024-06-28 20:38:23,097 - DEBUG - dispatch pc=196, inst=FOR_ITER(arg=51, lineno=580)
2024-06-28 20:38:23,097 - DEBUG - stack ['$phi196.0']
2024-06-28 20:38:23,097 - DEBUG - end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:23,097 - DEBUG - pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
2024-06-28 20:38:23,097 - DEBUG - stack: []
2024-06-28 20:38:23,097 - DEBUG - state.pc_initial: State(pc_initial=300 nstack_initial=0)
2024-06-28 20:38:23,097 - DEBUG - dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=586)
2024-06-28 20:38:23,097 - DEBUG - stack []
2024-06-28 20:38:23,097 - DEBUG - dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=586)
2024-06-28 20:38:23,097 - DEBUG - stack ['$max_value300.0']
2024-06-28 20:38:23,097 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,098 - DEBUG - pending: deque([State(pc_initial=198 nstack_initial=2)])
2024-06-28 20:38:23,098 - DEBUG - stack: ['$phi198.0', '$phi198.1']
2024-06-28 20:38:23,098 - DEBUG - state.pc_initial: State(pc_initial=198 nstack_initial=2)
2024-06-28 20:38:23,098 - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=3, lineno=580)
2024-06-28 20:38:23,098 - DEBUG - stack ['$phi198.0', '$phi198.1']
2024-06-28 20:38:23,098 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=581)
2024-06-28 20:38:23,098 - DEBUG - stack ['$phi198.0']
2024-06-28 20:38:23,098 - DEBUG - dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=581)
2024-06-28 20:38:23,098 - DEBUG - stack ['$phi198.0', '$view200.2']
2024-06-28 20:38:23,098 - DEBUG - dispatch pc=224, inst=PRECALL(arg=0, lineno=581)
2024-06-28 20:38:23,098 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-06-28 20:38:23,098 - DEBUG - dispatch pc=228, inst=CALL(arg=0, lineno=581)
2024-06-28 20:38:23,098 - DEBUG - stack ['$phi198.0', '$null$202.3', '$202load_method.4']
2024-06-28 20:38:23,098 - DEBUG - dispatch pc=238, inst=STORE_FAST(arg=4, lineno=581)
2024-06-28 20:38:23,098 - DEBUG - stack ['$phi198.0', '$228call.5']
2024-06-28 20:38:23,098 - DEBUG - dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=582)
2024-06-28 20:38:23,099 - DEBUG - stack ['$phi198.0']
2024-06-28 20:38:23,099 - DEBUG - dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=582)
2024-06-28 20:38:23,099 - DEBUG - stack ['$phi198.0', '$null$240.6']
2024-06-28 20:38:23,099 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=582)
2024-06-28 20:38:23,099 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
2024-06-28 20:38:23,099 - DEBUG - dispatch pc=246, inst=PRECALL(arg=1, lineno=582)
2024-06-28 20:38:23,099 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-06-28 20:38:23,099 - DEBUG - dispatch pc=250, inst=CALL(arg=1, lineno=582)
2024-06-28 20:38:23,099 - DEBUG - stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
2024-06-28 20:38:23,099 - DEBUG - dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=582)
2024-06-28 20:38:23,099 - DEBUG - stack ['$phi198.0', '$250call.9']
2024-06-28 20:38:23,099 - DEBUG - end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
2024-06-28 20:38:23,099 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
2024-06-28 20:38:23,099 - DEBUG - stack: ['$phi262.0']
2024-06-28 20:38:23,099 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=1)
2024-06-28 20:38:23,100 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=583)
2024-06-28 20:38:23,100 - DEBUG - stack ['$phi262.0']
2024-06-28 20:38:23,100 - DEBUG - dispatch pc=264, inst=SWAP(arg=2, lineno=583)
2024-06-28 20:38:23,100 - DEBUG - stack ['$phi262.0', '$v262.1']
2024-06-28 20:38:23,100 - DEBUG - dispatch pc=266, inst=POP_TOP(arg=None, lineno=583)
2024-06-28 20:38:23,100 - DEBUG - stack ['$v262.1', '$phi262.0']
2024-06-28 20:38:23,100 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=583)
2024-06-28 20:38:23,100 - DEBUG - stack ['$v262.1']
2024-06-28 20:38:23,100 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,100 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=1)])
2024-06-28 20:38:23,100 - DEBUG - stack: ['$phi270.0']
2024-06-28 20:38:23,100 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=1)
2024-06-28 20:38:23,100 - DEBUG - dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=584)
2024-06-28 20:38:23,100 - DEBUG - stack ['$phi270.0']
2024-06-28 20:38:23,101 - DEBUG - dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=584)
2024-06-28 20:38:23,101 - DEBUG - stack ['$phi270.0', '$null$270.1']
2024-06-28 20:38:23,101 - DEBUG - dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=584)
2024-06-28 20:38:23,101 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
2024-06-28 20:38:23,101 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=584)
2024-06-28 20:38:23,101 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
2024-06-28 20:38:23,101 - DEBUG - dispatch pc=278, inst=PRECALL(arg=2, lineno=584)
2024-06-28 20:38:23,101 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-06-28 20:38:23,101 - DEBUG - dispatch pc=282, inst=CALL(arg=2, lineno=584)
2024-06-28 20:38:23,101 - DEBUG - stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
2024-06-28 20:38:23,101 - DEBUG - dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=584)
2024-06-28 20:38:23,101 - DEBUG - stack ['$phi270.0', '$282call.5']
2024-06-28 20:38:23,101 - DEBUG - end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
2024-06-28 20:38:23,101 - DEBUG - pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-06-28 20:38:23,101 - DEBUG - stack: ['$phi294.0']
2024-06-28 20:38:23,102 - DEBUG - state.pc_initial: State(pc_initial=294 nstack_initial=1)
2024-06-28 20:38:23,102 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=585)
2024-06-28 20:38:23,102 - DEBUG - stack ['$phi294.0']
2024-06-28 20:38:23,102 - DEBUG - dispatch pc=296, inst=STORE_FAST(arg=2, lineno=585)
2024-06-28 20:38:23,102 - DEBUG - stack ['$phi294.0', '$v294.1']
2024-06-28 20:38:23,102 - DEBUG - end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
2024-06-28 20:38:23,102 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
2024-06-28 20:38:23,102 - DEBUG - stack: ['$phi298.0']
2024-06-28 20:38:23,102 - DEBUG - state.pc_initial: State(pc_initial=298 nstack_initial=1)
2024-06-28 20:38:23,102 - DEBUG - dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=585)
2024-06-28 20:38:23,102 - DEBUG - stack ['$phi298.0']
2024-06-28 20:38:23,102 - DEBUG - end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
2024-06-28 20:38:23,102 - DEBUG - pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:23,102 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=1)])
2024-06-28 20:38:23,103 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:23,103 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
2024-06-28 20:38:23,103 - DEBUG - defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
2024-06-28 20:38:23,104 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
2024-06-28 20:38:23,104 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:23,105 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:23,106 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
2024-06-28 20:38:23,107 - DEBUG - keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
2024-06-28 20:38:23,107 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
2024-06-28 20:38:23,108 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:23,108 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
2024-06-28 20:38:23,108 - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,108 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
2024-06-28 20:38:23,108 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,108 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
2024-06-28 20:38:23,108 - DEBUG - block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
2024-06-28 20:38:23,108 - DEBUG - block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
2024-06-28 20:38:23,108 - DEBUG - block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,109 - DEBUG - block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
2024-06-28 20:38:23,109 - DEBUG - block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
2024-06-28 20:38:23,109 - DEBUG - block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
2024-06-28 20:38:23,109 - DEBUG - block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,110 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2 = const(int, 0)               ['$const18.2']
    $20compare_op.3 = $8load_attr.1 == $const18.2 ['$20compare_op.3', '$8load_attr.1', '$const18.2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2']
    $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11 = const(int, 0)             ['$const148.11']
    max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

2024-06-28 20:38:23,119 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:23,119 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,119 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:23,119 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:23,120 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:23,120 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:23,120 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,120 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,120 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:23,120 - DEBUG - ==== SSA block analysis pass on 28
2024-06-28 20:38:23,120 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,120 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:23,120 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:23,120 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,120 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:23,120 - DEBUG - ==== SSA block analysis pass on 58
2024-06-28 20:38:23,121 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,121 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,121 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:23,121 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,121 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:23,121 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,121 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:23,121 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:23,121 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,121 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:23,121 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,121 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,121 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,122 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:23,122 - DEBUG - ==== SSA block analysis pass on 188
2024-06-28 20:38:23,122 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,122 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:23,122 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:23,122 - DEBUG - ==== SSA block analysis pass on 192
2024-06-28 20:38:23,122 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,122 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:23,122 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:23,122 - DEBUG - on stmt: jump 196
2024-06-28 20:38:23,122 - DEBUG - ==== SSA block analysis pass on 196
2024-06-28 20:38:23,122 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,122 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:23,122 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:23,122 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:23,123 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:23,123 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:23,123 - DEBUG - ==== SSA block analysis pass on 198
2024-06-28 20:38:23,123 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,123 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:23,123 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:23,123 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,123 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:23,123 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,123 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,123 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,123 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:23,123 - DEBUG - ==== SSA block analysis pass on 262
2024-06-28 20:38:23,123 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,124 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:23,124 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:23,124 - DEBUG - ==== SSA block analysis pass on 270
2024-06-28 20:38:23,124 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,124 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:23,124 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,124 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,124 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,124 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:23,124 - DEBUG - ==== SSA block analysis pass on 294
2024-06-28 20:38:23,124 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,124 - DEBUG - on stmt: max_value = v
2024-06-28 20:38:23,124 - DEBUG - on stmt: jump 298
2024-06-28 20:38:23,124 - DEBUG - ==== SSA block analysis pass on 298
2024-06-28 20:38:23,125 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,125 - DEBUG - on stmt: jump 196
2024-06-28 20:38:23,125 - DEBUG - ==== SSA block analysis pass on 300
2024-06-28 20:38:23,125 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a7609e210>
2024-06-28 20:38:23,125 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:23,125 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:23,126 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x7f7a7612c690>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x7f7a7612c9d0>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x7f7a7612c410>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x7f7a7612dbd0>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f7a7612e650>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x7f7a7612ec10>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x7f7a7612df50>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a7612cc10>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a7612ee10>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a7612c950>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x7f7a7612c5d0>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x7f7a76063f50>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x7f7a7612f290>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x7f7a7612ef10>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x7f7a7612ffd0>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x7f7a760c2510>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7f7a76062390>, 0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x7f7a760c34d0>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x7f7a760c3910>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x7f7a76063310>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x7f7a760c3d50>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x7f7a760c2f50>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x7f7a76061b50>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f7a760609d0>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76060210>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7f7a76134090>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x7f7a7612c710>,
                                   58)],
             '$const148.11': [(<numba.core.ir.Assign object at 0x7f7a7612d050>,
                               58)],
             '$const18.2': [(<numba.core.ir.Assign object at 0x7f7a760629d0>,
                             0)],
             '$const40.2': [(<numba.core.ir.Assign object at 0x7f7a760622d0>,
                             28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x7f7a7612e490>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x7f7a7612c890>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a7609d3d0>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f7a7612f650>, 58)],
             'bool26': [(<numba.core.ir.Assign object at 0x7f7a76062a90>, 0)],
             'bool260': [(<numba.core.ir.Assign object at 0x7f7a7612c790>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x7f7a760c1bd0>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x7f7a76060350>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7f7a7612d550>,
                            58),
                           (<numba.core.ir.Assign object at 0x7f7a760c39d0>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x7f7a7612f9d0>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x7f7a7612eb10>, 198)]})
2024-06-28 20:38:23,127 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a7609e210>
2024-06-28 20:38:23,127 - DEBUG - Fix SSA violator on var max_value
2024-06-28 20:38:23,127 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:23,127 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,127 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:23,127 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:23,127 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:23,127 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:23,127 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,127 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,127 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:23,127 - DEBUG - ==== SSA block rewrite pass on 28
2024-06-28 20:38:23,127 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,128 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:23,128 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:23,128 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,128 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:23,128 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-28 20:38:23,128 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,128 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,128 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:23,128 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,128 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:23,128 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,128 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:23,128 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:23,128 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,128 - DEBUG - first assign: max_value
2024-06-28 20:38:23,129 - DEBUG - replaced with: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,129 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:23,129 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,129 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,129 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,129 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:23,129 - DEBUG - ==== SSA block rewrite pass on 188
2024-06-28 20:38:23,129 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,129 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:23,129 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:23,129 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:23,129 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,129 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:23,129 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:23,129 - DEBUG - on stmt: jump 196
2024-06-28 20:38:23,129 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-28 20:38:23,130 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,130 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:23,130 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:23,130 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:23,130 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:23,130 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:23,130 - DEBUG - ==== SSA block rewrite pass on 198
2024-06-28 20:38:23,130 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,130 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:23,130 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:23,130 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,130 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:23,130 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,130 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,130 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,131 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:23,131 - DEBUG - ==== SSA block rewrite pass on 262
2024-06-28 20:38:23,131 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,131 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:23,131 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:23,131 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:23,131 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,131 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:23,131 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,131 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,131 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,131 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:23,131 - DEBUG - ==== SSA block rewrite pass on 294
2024-06-28 20:38:23,131 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,131 - DEBUG - on stmt: max_value = v
2024-06-28 20:38:23,131 - DEBUG - replaced with: max_value.1 = v
2024-06-28 20:38:23,132 - DEBUG - on stmt: jump 298
2024-06-28 20:38:23,132 - DEBUG - ==== SSA block rewrite pass on 298
2024-06-28 20:38:23,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,132 - DEBUG - on stmt: jump 196
2024-06-28 20:38:23,132 - DEBUG - ==== SSA block rewrite pass on 300
2024-06-28 20:38:23,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7612f8d0>
2024-06-28 20:38:23,132 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:23,132 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:23,132 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7f7a7612ce90>],
             294: [<numba.core.ir.Assign object at 0x7f7a76061ed0>]})
2024-06-28 20:38:23,132 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:23,132 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,132 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:23,132 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-28 20:38:23,132 - DEBUG - on stmt: $const18.2 = const(int, 0)
2024-06-28 20:38:23,132 - DEBUG - on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2
2024-06-28 20:38:23,132 - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,133 - DEBUG - on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,133 - DEBUG - on stmt: branch $26pred, 28, 58
2024-06-28 20:38:23,133 - DEBUG - ==== SSA block rewrite pass on 28
2024-06-28 20:38:23,133 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,133 - DEBUG - on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-28 20:38:23,133 - DEBUG - on stmt: $const40.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-28 20:38:23,133 - DEBUG - on stmt: $46call.3 = call $28load_global.0($const40.2, func=$28load_global.0, args=[Var($const40.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,133 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-28 20:38:23,133 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-28 20:38:23,133 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,133 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,133 - DEBUG - on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-28 20:38:23,133 - DEBUG - on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,133 - DEBUG - on stmt: $98load_global.5 = global(next: <built-in function next>)
2024-06-28 20:38:23,133 - DEBUG - on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,134 - DEBUG - on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
2024-06-28 20:38:23,134 - DEBUG - on stmt: $const148.11 = const(int, 0)
2024-06-28 20:38:23,134 - DEBUG - on stmt: max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,134 - DEBUG - on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:23,134 - DEBUG - on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,134 - DEBUG - find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,134 - DEBUG - on stmt: bool186 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,134 - DEBUG - on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,134 - DEBUG - on stmt: branch $186pred, 188, 192
2024-06-28 20:38:23,134 - DEBUG - ==== SSA block rewrite pass on 188
2024-06-28 20:38:23,134 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,134 - DEBUG - on stmt: $190return_value.1 = cast(value=max_value)
2024-06-28 20:38:23,134 - DEBUG - find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
2024-06-28 20:38:23,134 - DEBUG - find_def_from_top label 188
2024-06-28 20:38:23,135 - DEBUG - idom 58 from label 188
2024-06-28 20:38:23,135 - DEBUG - find_def_from_bottom label 58
2024-06-28 20:38:23,135 - DEBUG - on stmt: return $190return_value.1
2024-06-28 20:38:23,135 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-28 20:38:23,135 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,135 - DEBUG - on stmt: $194get_iter.1 = getiter(value=it)
2024-06-28 20:38:23,135 - DEBUG - on stmt: $phi196.0 = $194get_iter.1
2024-06-28 20:38:23,135 - DEBUG - on stmt: jump 196
2024-06-28 20:38:23,135 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-28 20:38:23,135 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,135 - DEBUG - on stmt: $196for_iter.1 = iternext(value=$phi196.0)
2024-06-28 20:38:23,135 - DEBUG - on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
2024-06-28 20:38:23,135 - DEBUG - on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
2024-06-28 20:38:23,135 - DEBUG - on stmt: $phi198.1 = $196for_iter.2
2024-06-28 20:38:23,136 - DEBUG - on stmt: branch $196for_iter.3, 198, 300
2024-06-28 20:38:23,136 - DEBUG - ==== SSA block rewrite pass on 198
2024-06-28 20:38:23,136 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,136 - DEBUG - on stmt: view = $phi198.1
2024-06-28 20:38:23,136 - DEBUG - on stmt: $202load_method.4 = getattr(value=view, attr=item)
2024-06-28 20:38:23,136 - DEBUG - on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,136 - DEBUG - on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x7f7a76f09bc0>)
2024-06-28 20:38:23,136 - DEBUG - on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,136 - DEBUG - on stmt: bool260 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,136 - DEBUG - on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,136 - DEBUG - on stmt: branch $260pred, 262, 270
2024-06-28 20:38:23,136 - DEBUG - ==== SSA block rewrite pass on 262
2024-06-28 20:38:23,136 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,136 - DEBUG - on stmt: $268return_value.2 = cast(value=v)
2024-06-28 20:38:23,136 - DEBUG - on stmt: return $268return_value.2
2024-06-28 20:38:23,137 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:23,137 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,137 - DEBUG - on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x7f7a76f09260>)
2024-06-28 20:38:23,137 - DEBUG - on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,137 - DEBUG - find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,137 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:23,137 - DEBUG - idom 198 from label 270
2024-06-28 20:38:23,137 - DEBUG - find_def_from_bottom label 198
2024-06-28 20:38:23,137 - DEBUG - find_def_from_top label 198
2024-06-28 20:38:23,137 - DEBUG - idom 196 from label 198
2024-06-28 20:38:23,137 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:23,137 - DEBUG - find_def_from_top label 196
2024-06-28 20:38:23,137 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
2024-06-28 20:38:23,138 - DEBUG - find_def_from_bottom label 192
2024-06-28 20:38:23,138 - DEBUG - find_def_from_top label 192
2024-06-28 20:38:23,138 - DEBUG - idom 58 from label 192
2024-06-28 20:38:23,138 - DEBUG - find_def_from_bottom label 58
2024-06-28 20:38:23,138 - DEBUG - incoming_def max_value = call $126load_method.10($const148.11, func=$126load_method.10, args=[Var($const148.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,138 - DEBUG - find_def_from_bottom label 298
2024-06-28 20:38:23,139 - DEBUG - find_def_from_top label 298
2024-06-28 20:38:23,139 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
2024-06-28 20:38:23,139 - DEBUG - find_def_from_bottom label 294
2024-06-28 20:38:23,139 - DEBUG - incoming_def max_value.1 = v
2024-06-28 20:38:23,139 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:23,139 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:23,140 - DEBUG - idom 198 from label 270
2024-06-28 20:38:23,140 - DEBUG - find_def_from_bottom label 198
2024-06-28 20:38:23,140 - DEBUG - find_def_from_top label 198
2024-06-28 20:38:23,140 - DEBUG - idom 196 from label 198
2024-06-28 20:38:23,140 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:23,140 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[192])
2024-06-28 20:38:23,140 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, arraymath.py:585), Var(max_value.2, arraymath.py:584)], incoming_blocks=[294, 270])
2024-06-28 20:38:23,140 - DEBUG - replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,140 - DEBUG - on stmt: bool292 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,141 - DEBUG - on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,141 - DEBUG - on stmt: branch $292pred, 294, 298
2024-06-28 20:38:23,141 - DEBUG - ==== SSA block rewrite pass on 294
2024-06-28 20:38:23,141 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,141 - DEBUG - on stmt: max_value.1 = v
2024-06-28 20:38:23,141 - DEBUG - on stmt: jump 298
2024-06-28 20:38:23,141 - DEBUG - ==== SSA block rewrite pass on 298
2024-06-28 20:38:23,141 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,141 - DEBUG - on stmt: jump 196
2024-06-28 20:38:23,141 - DEBUG - ==== SSA block rewrite pass on 300
2024-06-28 20:38:23,141 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a76062790>
2024-06-28 20:38:23,141 - DEBUG - on stmt: $302return_value.1 = cast(value=max_value)
2024-06-28 20:38:23,141 - DEBUG - find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
2024-06-28 20:38:23,142 - DEBUG - find_def_from_top label 300
2024-06-28 20:38:23,142 - DEBUG - idom 196 from label 300
2024-06-28 20:38:23,142 - DEBUG - find_def_from_bottom label 196
2024-06-28 20:38:23,142 - DEBUG - replaced with: $302return_value.1 = cast(value=max_value.2)
2024-06-28 20:38:23,142 - DEBUG - on stmt: return $302return_value.1
2024-06-28 20:38:23,147 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	RESUME(arg=0, lineno=4691)
           4	LOAD_FAST(arg=1, lineno=4692)
           6	LOAD_FAST(arg=0, lineno=4692)
           8	LOAD_ATTR(arg=0, lineno=4692)
          18	LOAD_CONST(arg=1, lineno=4692)
          20	BINARY_OP(arg=10, lineno=4692)
          24	COMPARE_OP(arg=4, lineno=4692)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
          32	LOAD_FAST(arg=1, lineno=4692)
          34	LOAD_FAST(arg=0, lineno=4692)
          36	LOAD_ATTR(arg=0, lineno=4692)
          46	UNARY_NEGATIVE(arg=None, lineno=4692)
          48	COMPARE_OP(arg=0, lineno=4692)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
>         56	LOAD_GLOBAL(arg=3, lineno=4693)
          68	LOAD_CONST(arg=2, lineno=4693)
          70	PRECALL(arg=1, lineno=4693)
          74	CALL(arg=1, lineno=4693)
          84	RAISE_VARARGS(arg=1, lineno=4693)
>         86	LOAD_FAST(arg=0, lineno=4694)
          88	LOAD_METHOD(arg=2, lineno=4694)
         110	PRECALL(arg=0, lineno=4694)
         114	CALL(arg=0, lineno=4694)
         124	LOAD_FAST(arg=1, lineno=4694)
         126	BINARY_SUBSCR(arg=None, lineno=4694)
         136	RETURN_VALUE(arg=None, lineno=4694)
2024-06-28 20:38:23,147 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:23,148 - DEBUG - stack: []
2024-06-28 20:38:23,148 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:23,148 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
2024-06-28 20:38:23,148 - DEBUG - stack []
2024-06-28 20:38:23,148 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4691)
2024-06-28 20:38:23,148 - DEBUG - stack []
2024-06-28 20:38:23,148 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4692)
2024-06-28 20:38:23,148 - DEBUG - stack []
2024-06-28 20:38:23,148 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4692)
2024-06-28 20:38:23,148 - DEBUG - stack ['$indices4.0']
2024-06-28 20:38:23,148 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-06-28 20:38:23,148 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-06-28 20:38:23,148 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4692)
2024-06-28 20:38:23,148 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-06-28 20:38:23,148 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4692)
2024-06-28 20:38:23,149 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const18.3']
2024-06-28 20:38:23,149 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4692)
2024-06-28 20:38:23,149 - DEBUG - stack ['$indices4.0', '$binop_sub20.4']
2024-06-28 20:38:23,149 - DEBUG - dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4692)
2024-06-28 20:38:23,149 - DEBUG - stack ['$24compare_op.5']
2024-06-28 20:38:23,149 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:23,149 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2024-06-28 20:38:23,149 - DEBUG - stack: []
2024-06-28 20:38:23,149 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2024-06-28 20:38:23,149 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4692)
2024-06-28 20:38:23,149 - DEBUG - stack []
2024-06-28 20:38:23,149 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4692)
2024-06-28 20:38:23,150 - DEBUG - stack ['$indices32.0']
2024-06-28 20:38:23,150 - DEBUG - dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4692)
2024-06-28 20:38:23,150 - DEBUG - stack ['$indices32.0', '$a34.1']
2024-06-28 20:38:23,150 - DEBUG - dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
2024-06-28 20:38:23,150 - DEBUG - stack ['$indices32.0', '$36load_attr.2']
2024-06-28 20:38:23,150 - DEBUG - dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4692)
2024-06-28 20:38:23,150 - DEBUG - stack ['$indices32.0', '$46unary_negative.3']
2024-06-28 20:38:23,150 - DEBUG - dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4692)
2024-06-28 20:38:23,150 - DEBUG - stack ['$48compare_op.4']
2024-06-28 20:38:23,150 - DEBUG - end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:23,150 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:23,150 - DEBUG - stack: []
2024-06-28 20:38:23,150 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2024-06-28 20:38:23,150 - DEBUG - dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4693)
2024-06-28 20:38:23,151 - DEBUG - stack []
2024-06-28 20:38:23,151 - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4693)
2024-06-28 20:38:23,151 - DEBUG - stack ['$null$56.1', '$56load_global.0']
2024-06-28 20:38:23,151 - DEBUG - dispatch pc=70, inst=PRECALL(arg=1, lineno=4693)
2024-06-28 20:38:23,151 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-06-28 20:38:23,151 - DEBUG - dispatch pc=74, inst=CALL(arg=1, lineno=4693)
2024-06-28 20:38:23,151 - DEBUG - stack ['$null$56.1', '$56load_global.0', '$const68.2']
2024-06-28 20:38:23,151 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4693)
2024-06-28 20:38:23,151 - DEBUG - stack ['$74call.3']
2024-06-28 20:38:23,151 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,151 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:23,151 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2024-06-28 20:38:23,151 - DEBUG - stack: []
2024-06-28 20:38:23,151 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2024-06-28 20:38:23,152 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4694)
2024-06-28 20:38:23,152 - DEBUG - stack []
2024-06-28 20:38:23,152 - DEBUG - dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4694)
2024-06-28 20:38:23,152 - DEBUG - stack ['$a86.0']
2024-06-28 20:38:23,152 - DEBUG - dispatch pc=110, inst=PRECALL(arg=0, lineno=4694)
2024-06-28 20:38:23,152 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-06-28 20:38:23,152 - DEBUG - dispatch pc=114, inst=CALL(arg=0, lineno=4694)
2024-06-28 20:38:23,152 - DEBUG - stack ['$null$88.1', '$88load_method.2']
2024-06-28 20:38:23,152 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4694)
2024-06-28 20:38:23,152 - DEBUG - stack ['$114call.3']
2024-06-28 20:38:23,152 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4694)
2024-06-28 20:38:23,152 - DEBUG - stack ['$114call.3', '$indices124.4']
2024-06-28 20:38:23,152 - DEBUG - dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4694)
2024-06-28 20:38:23,152 - DEBUG - stack ['$126binary_subscr.5']
2024-06-28 20:38:23,153 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,153 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:23,153 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
2024-06-28 20:38:23,153 - DEBUG - defmap: {}
2024-06-28 20:38:23,153 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,153 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,153 - DEBUG - keep phismap: {}
2024-06-28 20:38:23,153 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:23,153 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:23,153 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
2024-06-28 20:38:23,154 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
2024-06-28 20:38:23,154 - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,154 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,155 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3 = const(int, 1)               ['$const18.3']
    $binop_sub20.4 = $8load_attr.2 - $const18.3 ['$8load_attr.2', '$binop_sub20.4', '$const18.3']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2 = const(str, Index out of bounds) ['$const68.2']
    $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

2024-06-28 20:38:23,161 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:23,161 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76099790>
2024-06-28 20:38:23,161 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:23,161 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-06-28 20:38:23,161 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:23,161 - DEBUG - on stmt: $const18.3 = const(int, 1)
2024-06-28 20:38:23,162 - DEBUG - on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3
2024-06-28 20:38:23,162 - DEBUG - on stmt: $24compare_op.5 = indices > $binop_sub20.4
2024-06-28 20:38:23,162 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,162 - DEBUG - on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,162 - DEBUG - on stmt: branch $30pred, 56, 32
2024-06-28 20:38:23,162 - DEBUG - ==== SSA block analysis pass on 32
2024-06-28 20:38:23,162 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76099790>
2024-06-28 20:38:23,162 - DEBUG - on stmt: $36load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:23,162 - DEBUG - on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
2024-06-28 20:38:23,163 - DEBUG - on stmt: $48compare_op.4 = indices < $46unary_negative.3
2024-06-28 20:38:23,163 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-28 20:38:23,163 - DEBUG - on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,163 - DEBUG - on stmt: branch $54pred, 56, 86
2024-06-28 20:38:23,163 - DEBUG - ==== SSA block analysis pass on 56
2024-06-28 20:38:23,163 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76099790>
2024-06-28 20:38:23,163 - DEBUG - on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
2024-06-28 20:38:23,163 - DEBUG - on stmt: $const68.2 = const(str, Index out of bounds)
2024-06-28 20:38:23,163 - DEBUG - on stmt: $74call.3 = call $56load_global.0($const68.2, func=$56load_global.0, args=[Var($const68.2, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,163 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-06-28 20:38:23,163 - DEBUG - ==== SSA block analysis pass on 86
2024-06-28 20:38:23,164 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a76099790>
2024-06-28 20:38:23,164 - DEBUG - on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
2024-06-28 20:38:23,164 - DEBUG - on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,164 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
2024-06-28 20:38:23,164 - DEBUG - on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
2024-06-28 20:38:23,164 - DEBUG - on stmt: return $136return_value.6
2024-06-28 20:38:23,164 - DEBUG - defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x7f7a670ebb10>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f7a670ebe90>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x7f7a670d8610>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a76099f90>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x7f7a76099390>, 0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76098e10>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x7f7a7609a290>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x7f7a7609afd0>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f7a670eae90>, 32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f7a670eae50>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x7f7a670eb390>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x7f7a670eb950>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a7609af50>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x7f7a76099f10>,
                                 0)],
             '$const18.3': [(<numba.core.ir.Assign object at 0x7f7a7609a410>,
                             0)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x7f7a670eb190>,
                             56)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a7609b450>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x7f7a76099950>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f7a670eac90>, 32)],
             'indices': [(<numba.core.ir.Assign object at 0x7f7a7609bc10>, 0)]})
2024-06-28 20:38:23,164 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76099790>
2024-06-28 20:38:23,182 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	RESUME(arg=0, lineno=2230)
           4	LOAD_FAST(arg=0, lineno=2232)
           6	LOAD_METHOD(arg=0, lineno=2232)
          28	LOAD_FAST(arg=0, lineno=2232)
          30	LOAD_ATTR(arg=1, lineno=2232)
          40	PRECALL(arg=1, lineno=2232)
          44	CALL(arg=1, lineno=2232)
          54	RETURN_VALUE(arg=None, lineno=2232)
2024-06-28 20:38:23,182 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:23,182 - DEBUG - stack: []
2024-06-28 20:38:23,182 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:23,182 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
2024-06-28 20:38:23,182 - DEBUG - stack []
2024-06-28 20:38:23,182 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2230)
2024-06-28 20:38:23,183 - DEBUG - stack []
2024-06-28 20:38:23,183 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2232)
2024-06-28 20:38:23,183 - DEBUG - stack []
2024-06-28 20:38:23,183 - DEBUG - dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2232)
2024-06-28 20:38:23,183 - DEBUG - stack ['$ary4.0']
2024-06-28 20:38:23,183 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2232)
2024-06-28 20:38:23,183 - DEBUG - stack ['$null$6.1', '$6load_method.2']
2024-06-28 20:38:23,183 - DEBUG - dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2232)
2024-06-28 20:38:23,183 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$ary28.3']
2024-06-28 20:38:23,183 - DEBUG - dispatch pc=40, inst=PRECALL(arg=1, lineno=2232)
2024-06-28 20:38:23,183 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-06-28 20:38:23,184 - DEBUG - dispatch pc=44, inst=CALL(arg=1, lineno=2232)
2024-06-28 20:38:23,184 - DEBUG - stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
2024-06-28 20:38:23,184 - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2232)
2024-06-28 20:38:23,184 - DEBUG - stack ['$44call.5']
2024-06-28 20:38:23,184 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,184 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:23,184 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:23,184 - DEBUG - defmap: {}
2024-06-28 20:38:23,184 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,184 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,184 - DEBUG - keep phismap: {}
2024-06-28 20:38:23,185 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:23,185 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:23,185 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,185 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

2024-06-28 20:38:23,189 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:23,189 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a670fbe90>
2024-06-28 20:38:23,190 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-06-28 20:38:23,190 - DEBUG - on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
2024-06-28 20:38:23,190 - DEBUG - on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
2024-06-28 20:38:23,190 - DEBUG - on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,190 - DEBUG - on stmt: $54return_value.6 = cast(value=$44call.5)
2024-06-28 20:38:23,190 - DEBUG - on stmt: return $54return_value.6
2024-06-28 20:38:23,191 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x7f7a6707ad50>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x7f7a6707b210>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x7f7a67079750>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x7f7a6707b790>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x7f7a67079bd0>, 0)]})
2024-06-28 20:38:23,191 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a76099290>
2024-06-28 20:38:23,276 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	RESUME(arg=0, lineno=486)
           4	LOAD_CONST(arg=1, lineno=488)
           6	RETURN_VALUE(arg=None, lineno=488)
2024-06-28 20:38:23,276 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:23,276 - DEBUG - stack: []
2024-06-28 20:38:23,276 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:23,276 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=486)
2024-06-28 20:38:23,276 - DEBUG - stack []
2024-06-28 20:38:23,277 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=486)
2024-06-28 20:38:23,277 - DEBUG - stack []
2024-06-28 20:38:23,277 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=488)
2024-06-28 20:38:23,277 - DEBUG - stack []
2024-06-28 20:38:23,277 - DEBUG - dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=488)
2024-06-28 20:38:23,277 - DEBUG - stack ['$const4.0']
2024-06-28 20:38:23,277 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,277 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:23,277 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:23,277 - DEBUG - defmap: {}
2024-06-28 20:38:23,278 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,278 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,278 - DEBUG - keep phismap: {}
2024-06-28 20:38:23,278 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:23,278 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:23,278 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'retval': '$const4.0', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,279 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0 = const(bool, False)           ['$const4.0']
    $6return_value.1 = cast(value=$const4.0) ['$6return_value.1', '$const4.0']
    return $6return_value.1                  ['$6return_value.1']

2024-06-28 20:38:23,283 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:23,283 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673e5d10>
2024-06-28 20:38:23,284 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:23,284 - DEBUG - on stmt: $const4.0 = const(bool, False)
2024-06-28 20:38:23,284 - DEBUG - on stmt: $6return_value.1 = cast(value=$const4.0)
2024-06-28 20:38:23,284 - DEBUG - on stmt: return $6return_value.1
2024-06-28 20:38:23,284 - DEBUG - defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x7f7a673e4e50>,
                                   0)],
             '$const4.0': [(<numba.core.ir.Assign object at 0x7f7a673e4c90>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a673e4a10>, 0)]})
2024-06-28 20:38:23,284 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a673e5d10>
2024-06-28 20:38:23,303 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=4, lineno=483)
          14	RETURN_VALUE(arg=None, lineno=483)
2024-06-28 20:38:23,303 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:23,303 - DEBUG - stack: []
2024-06-28 20:38:23,303 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:23,303 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-06-28 20:38:23,304 - DEBUG - stack []
2024-06-28 20:38:23,304 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-06-28 20:38:23,304 - DEBUG - stack []
2024-06-28 20:38:23,304 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-06-28 20:38:23,304 - DEBUG - stack []
2024-06-28 20:38:23,304 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-06-28 20:38:23,304 - DEBUG - stack ['$a4.0']
2024-06-28 20:38:23,304 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=483)
2024-06-28 20:38:23,304 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-06-28 20:38:23,304 - DEBUG - dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=483)
2024-06-28 20:38:23,304 - DEBUG - stack ['$8compare_op.2']
2024-06-28 20:38:23,305 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,305 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:23,305 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:23,305 - DEBUG - defmap: {}
2024-06-28 20:38:23,305 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,305 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:23,305 - DEBUG - keep phismap: {}
2024-06-28 20:38:23,305 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:23,305 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:23,305 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,306 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

2024-06-28 20:38:23,309 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:23,309 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673d4210>
2024-06-28 20:38:23,310 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:23,310 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-06-28 20:38:23,310 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-06-28 20:38:23,310 - DEBUG - on stmt: $14return_value.3 = cast(value=$8compare_op.2)
2024-06-28 20:38:23,310 - DEBUG - on stmt: return $14return_value.3
2024-06-28 20:38:23,310 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x7f7a673b33d0>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a673b31d0>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a673b2b90>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7f7a673b2c90>, 0)]})
2024-06-28 20:38:23,310 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a673d4210>
2024-06-28 20:38:23,442 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          22	LOAD_ATTR(arg=1, lineno=441)
          32	LOAD_FAST(arg=0, lineno=441)
          34	PRECALL(arg=1, lineno=441)
          38	CALL(arg=1, lineno=441)
          48	GET_ITER(arg=None, lineno=441)
>         50	FOR_ITER(arg=25, lineno=441)
          52	STORE_FAST(arg=2, lineno=441)
          54	LOAD_FAST(arg=1, lineno=442)
          56	LOAD_FAST(arg=2, lineno=442)
          58	LOAD_METHOD(arg=2, lineno=442)
          80	PRECALL(arg=0, lineno=442)
          84	CALL(arg=0, lineno=442)
          94	BINARY_OP(arg=13, lineno=442)
          98	STORE_FAST(arg=1, lineno=442)
         100	JUMP_BACKWARD(arg=26, lineno=442)
>        102	LOAD_FAST(arg=1, lineno=443)
         104	LOAD_FAST(arg=0, lineno=443)
         106	LOAD_ATTR(arg=3, lineno=443)
         116	BINARY_OP(arg=11, lineno=443)
         120	RETURN_VALUE(arg=None, lineno=443)
2024-06-28 20:38:23,442 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:23,443 - DEBUG - stack: []
2024-06-28 20:38:23,443 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:23,443 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-06-28 20:38:23,443 - DEBUG - stack []
2024-06-28 20:38:23,443 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-06-28 20:38:23,443 - DEBUG - stack []
2024-06-28 20:38:23,443 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-06-28 20:38:23,443 - DEBUG - stack []
2024-06-28 20:38:23,443 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-06-28 20:38:23,443 - DEBUG - stack []
2024-06-28 20:38:23,443 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-06-28 20:38:23,443 - DEBUG - stack ['$6load_deref.0']
2024-06-28 20:38:23,443 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-06-28 20:38:23,443 - DEBUG - stack []
2024-06-28 20:38:23,443 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=441)
2024-06-28 20:38:23,443 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-06-28 20:38:23,444 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=441)
2024-06-28 20:38:23,444 - DEBUG - stack ['$null$10.2', '$22load_attr.3']
2024-06-28 20:38:23,444 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=441)
2024-06-28 20:38:23,444 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-06-28 20:38:23,444 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=441)
2024-06-28 20:38:23,444 - DEBUG - stack ['$null$10.2', '$22load_attr.3', '$a32.4']
2024-06-28 20:38:23,444 - DEBUG - dispatch pc=48, inst=GET_ITER(arg=None, lineno=441)
2024-06-28 20:38:23,444 - DEBUG - stack ['$38call.5']
2024-06-28 20:38:23,444 - DEBUG - end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
2024-06-28 20:38:23,444 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-06-28 20:38:23,444 - DEBUG - stack: ['$phi50.0']
2024-06-28 20:38:23,444 - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
2024-06-28 20:38:23,445 - DEBUG - dispatch pc=50, inst=FOR_ITER(arg=25, lineno=441)
2024-06-28 20:38:23,445 - DEBUG - stack ['$phi50.0']
2024-06-28 20:38:23,445 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
2024-06-28 20:38:23,445 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
2024-06-28 20:38:23,445 - DEBUG - stack: []
2024-06-28 20:38:23,445 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-06-28 20:38:23,445 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=443)
2024-06-28 20:38:23,445 - DEBUG - stack []
2024-06-28 20:38:23,445 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=443)
2024-06-28 20:38:23,445 - DEBUG - stack ['$c102.0']
2024-06-28 20:38:23,445 - DEBUG - dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=443)
2024-06-28 20:38:23,446 - DEBUG - stack ['$c102.0', '$a104.1']
2024-06-28 20:38:23,446 - DEBUG - dispatch pc=116, inst=BINARY_OP(arg=11, lineno=443)
2024-06-28 20:38:23,446 - DEBUG - stack ['$c102.0', '$106load_attr.2']
2024-06-28 20:38:23,446 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=443)
2024-06-28 20:38:23,446 - DEBUG - stack ['$binop_truediv116.3']
2024-06-28 20:38:23,446 - DEBUG - end state. edges=[]
2024-06-28 20:38:23,446 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-06-28 20:38:23,446 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2024-06-28 20:38:23,446 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-06-28 20:38:23,446 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=2, lineno=441)
2024-06-28 20:38:23,446 - DEBUG - stack ['$phi52.0', '$phi52.1']
2024-06-28 20:38:23,446 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=442)
2024-06-28 20:38:23,446 - DEBUG - stack ['$phi52.0']
2024-06-28 20:38:23,446 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=442)
2024-06-28 20:38:23,446 - DEBUG - stack ['$phi52.0', '$c54.2']
2024-06-28 20:38:23,447 - DEBUG - dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=442)
2024-06-28 20:38:23,447 - DEBUG - stack ['$phi52.0', '$c54.2', '$v56.3']
2024-06-28 20:38:23,447 - DEBUG - dispatch pc=80, inst=PRECALL(arg=0, lineno=442)
2024-06-28 20:38:23,447 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-06-28 20:38:23,447 - DEBUG - dispatch pc=84, inst=CALL(arg=0, lineno=442)
2024-06-28 20:38:23,447 - DEBUG - stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
2024-06-28 20:38:23,447 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=13, lineno=442)
2024-06-28 20:38:23,447 - DEBUG - stack ['$phi52.0', '$c54.2', '$84call.6']
2024-06-28 20:38:23,447 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=442)
2024-06-28 20:38:23,447 - DEBUG - stack ['$phi52.0', '$binop_iadd94.7']
2024-06-28 20:38:23,447 - DEBUG - dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=442)
2024-06-28 20:38:23,447 - DEBUG - stack ['$phi52.0']
2024-06-28 20:38:23,447 - DEBUG - end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-06-28 20:38:23,447 - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1)])
2024-06-28 20:38:23,448 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:23,448 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
2024-06-28 20:38:23,448 - DEBUG - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
2024-06-28 20:38:23,448 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:23,449 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:23,449 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:23,450 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
2024-06-28 20:38:23,450 - DEBUG - keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
2024-06-28 20:38:23,450 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
2024-06-28 20:38:23,450 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:23,451 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
2024-06-28 20:38:23,451 - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
2024-06-28 20:38:23,451 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
2024-06-28 20:38:23,451 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:23,452 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

2024-06-28 20:38:23,459 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:23,459 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673b1ad0>
2024-06-28 20:38:23,459 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:23,459 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:23,459 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,459 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:23,459 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,459 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:23,460 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:23,460 - DEBUG - on stmt: jump 50
2024-06-28 20:38:23,460 - DEBUG - ==== SSA block analysis pass on 50
2024-06-28 20:38:23,460 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673b1ad0>
2024-06-28 20:38:23,460 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:23,460 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:23,460 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:23,460 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:23,460 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:23,460 - DEBUG - ==== SSA block analysis pass on 52
2024-06-28 20:38:23,460 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673b1ad0>
2024-06-28 20:38:23,460 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:23,460 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:23,461 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,461 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,461 - DEBUG - on stmt: c = $binop_iadd94.7
2024-06-28 20:38:23,461 - DEBUG - on stmt: jump 50
2024-06-28 20:38:23,461 - DEBUG - ==== SSA block analysis pass on 102
2024-06-28 20:38:23,461 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a673b1ad0>
2024-06-28 20:38:23,461 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:23,461 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:23,461 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:23,462 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:23,462 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76049d10>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7f7a75f6d990>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x7f7a7604a250>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x7f7a75f6fbd0>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x7f7a75f6d490>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x7f7a760480d0>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7f7a76048450>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7f7a760485d0>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7f7a76048750>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x7f7a76049110>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x7f7a76049390>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x7f7a76049690>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x7f7a7604a010>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7f7a75f6f090>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7f7a76048810>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a67380750>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7f7a760c2b50>, 0),
                   (<numba.core.ir.Assign object at 0x7f7a76049710>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x7f7a76048ad0>, 52)]})
2024-06-28 20:38:23,463 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a673b1ad0>
2024-06-28 20:38:23,463 - DEBUG - Fix SSA violator on var c
2024-06-28 20:38:23,463 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:23,463 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7604ab10>
2024-06-28 20:38:23,463 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:23,463 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:23,463 - DEBUG - first assign: c
2024-06-28 20:38:23,463 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-06-28 20:38:23,463 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,463 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:23,463 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,464 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:23,464 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:23,464 - DEBUG - on stmt: jump 50
2024-06-28 20:38:23,464 - DEBUG - ==== SSA block rewrite pass on 50
2024-06-28 20:38:23,464 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7604ab10>
2024-06-28 20:38:23,464 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:23,464 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:23,464 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:23,464 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:23,464 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:23,464 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-28 20:38:23,464 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7604ab10>
2024-06-28 20:38:23,464 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:23,464 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:23,465 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,465 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,465 - DEBUG - on stmt: c = $binop_iadd94.7
2024-06-28 20:38:23,465 - DEBUG - replaced with: c.1 = $binop_iadd94.7
2024-06-28 20:38:23,465 - DEBUG - on stmt: jump 50
2024-06-28 20:38:23,465 - DEBUG - ==== SSA block rewrite pass on 102
2024-06-28 20:38:23,465 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a7604ab10>
2024-06-28 20:38:23,465 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:23,465 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:23,465 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:23,465 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:23,465 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a7604ac50>],
             52: [<numba.core.ir.Assign object at 0x7f7a7604ac90>]})
2024-06-28 20:38:23,465 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:23,466 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a7604a390>
2024-06-28 20:38:23,466 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:23,466 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-28 20:38:23,466 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:23,466 - DEBUG - on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-28 20:38:23,466 - DEBUG - on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,466 - DEBUG - on stmt: $48get_iter.6 = getiter(value=$38call.5)
2024-06-28 20:38:23,466 - DEBUG - on stmt: $phi50.0 = $48get_iter.6
2024-06-28 20:38:23,466 - DEBUG - on stmt: jump 50
2024-06-28 20:38:23,466 - DEBUG - ==== SSA block rewrite pass on 50
2024-06-28 20:38:23,466 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a7604a390>
2024-06-28 20:38:23,466 - DEBUG - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
2024-06-28 20:38:23,467 - DEBUG - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
2024-06-28 20:38:23,467 - DEBUG - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
2024-06-28 20:38:23,467 - DEBUG - on stmt: $phi52.1 = $50for_iter.2
2024-06-28 20:38:23,467 - DEBUG - on stmt: branch $50for_iter.3, 52, 102
2024-06-28 20:38:23,467 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-28 20:38:23,467 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a7604a390>
2024-06-28 20:38:23,467 - DEBUG - on stmt: v = $phi52.1
2024-06-28 20:38:23,467 - DEBUG - on stmt: $58load_method.5 = getattr(value=v, attr=item)
2024-06-28 20:38:23,467 - DEBUG - on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:23,467 - DEBUG - on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,467 - DEBUG - find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,468 - DEBUG - find_def_from_top label 52
2024-06-28 20:38:23,468 - DEBUG - idom 50 from label 52
2024-06-28 20:38:23,468 - DEBUG - find_def_from_bottom label 50
2024-06-28 20:38:23,468 - DEBUG - find_def_from_top label 50
2024-06-28 20:38:23,468 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
2024-06-28 20:38:23,468 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:23,468 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-06-28 20:38:23,468 - DEBUG - find_def_from_bottom label 52
2024-06-28 20:38:23,468 - DEBUG - incoming_def c.1 = $binop_iadd94.7
2024-06-28 20:38:23,468 - DEBUG - replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:23,469 - DEBUG - on stmt: c.1 = $binop_iadd94.7
2024-06-28 20:38:23,469 - DEBUG - on stmt: jump 50
2024-06-28 20:38:23,469 - DEBUG - ==== SSA block rewrite pass on 102
2024-06-28 20:38:23,469 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a7604a390>
2024-06-28 20:38:23,469 - DEBUG - on stmt: $106load_attr.2 = getattr(value=a, attr=size)
2024-06-28 20:38:23,469 - DEBUG - on stmt: $binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:23,469 - DEBUG - find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
2024-06-28 20:38:23,469 - DEBUG - find_def_from_top label 102
2024-06-28 20:38:23,469 - DEBUG - idom 50 from label 102
2024-06-28 20:38:23,469 - DEBUG - find_def_from_bottom label 50
2024-06-28 20:38:23,469 - DEBUG - replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
2024-06-28 20:38:23,470 - DEBUG - on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
2024-06-28 20:38:23,470 - DEBUG - on stmt: return $120return_value.4
2024-06-28 20:38:24,208 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	RESUME(arg=0, lineno=2452)
           4	LOAD_FAST(arg=0, lineno=2457)
           6	LOAD_ATTR(arg=0, lineno=2457)
          16	LOAD_CONST(arg=1, lineno=2457)
          18	BINARY_OP(arg=8, lineno=2457)
          22	LOAD_FAST(arg=0, lineno=2457)
          24	LOAD_ATTR(arg=1, lineno=2457)
          34	LOAD_CONST(arg=1, lineno=2457)
          36	BINARY_OP(arg=8, lineno=2457)
          40	BINARY_OP(arg=0, lineno=2457)
          44	RETURN_VALUE(arg=None, lineno=2457)
2024-06-28 20:38:24,208 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:24,208 - DEBUG - stack: []
2024-06-28 20:38:24,208 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:24,208 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2452)
2024-06-28 20:38:24,208 - DEBUG - stack []
2024-06-28 20:38:24,208 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2452)
2024-06-28 20:38:24,209 - DEBUG - stack []
2024-06-28 20:38:24,209 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2457)
2024-06-28 20:38:24,209 - DEBUG - stack []
2024-06-28 20:38:24,209 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2457)
2024-06-28 20:38:24,209 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:24,209 - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=2457)
2024-06-28 20:38:24,209 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:24,209 - DEBUG - dispatch pc=18, inst=BINARY_OP(arg=8, lineno=2457)
2024-06-28 20:38:24,209 - DEBUG - stack ['$6load_attr.1', '$const16.2']
2024-06-28 20:38:24,209 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2457)
2024-06-28 20:38:24,210 - DEBUG - stack ['$binop_pow18.3']
2024-06-28 20:38:24,210 - DEBUG - dispatch pc=24, inst=LOAD_ATTR(arg=1, lineno=2457)
2024-06-28 20:38:24,210 - DEBUG - stack ['$binop_pow18.3', '$x22.4']
2024-06-28 20:38:24,210 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=2457)
2024-06-28 20:38:24,210 - DEBUG - stack ['$binop_pow18.3', '$24load_attr.5']
2024-06-28 20:38:24,210 - DEBUG - dispatch pc=36, inst=BINARY_OP(arg=8, lineno=2457)
2024-06-28 20:38:24,210 - DEBUG - stack ['$binop_pow18.3', '$24load_attr.5', '$const34.6']
2024-06-28 20:38:24,210 - DEBUG - dispatch pc=40, inst=BINARY_OP(arg=0, lineno=2457)
2024-06-28 20:38:24,211 - DEBUG - stack ['$binop_pow18.3', '$binop_pow36.7']
2024-06-28 20:38:24,211 - DEBUG - dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=2457)
2024-06-28 20:38:24,211 - DEBUG - stack ['$binop_add40.8']
2024-06-28 20:38:24,211 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,211 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:24,211 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:24,211 - DEBUG - defmap: {}
2024-06-28 20:38:24,211 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:24,212 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:24,212 - DEBUG - keep phismap: {}
2024-06-28 20:38:24,212 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:24,212 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:24,212 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$const16.2'}), (18, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const16.2', 'res': '$binop_pow18.3'}), (20, {}), (22, {'res': '$x22.4'}), (24, {'item': '$x22.4', 'res': '$24load_attr.5'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'res': '$const34.6'}), (36, {'op': '**', 'lhs': '$24load_attr.5', 'rhs': '$const34.6', 'res': '$binop_pow36.7'}), (38, {}), (40, {'op': '+', 'lhs': '$binop_pow18.3', 'rhs': '$binop_pow36.7', 'res': '$binop_add40.8'}), (42, {}), (44, {'retval': '$binop_add40.8', 'castval': '$44return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,213 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const16.2 = const(int, 2)               ['$const16.2']
    $binop_pow18.3 = $6load_attr.1 ** $const16.2 ['$6load_attr.1', '$binop_pow18.3', '$const16.2']
    $24load_attr.5 = getattr(value=x, attr=imag) ['$24load_attr.5', 'x']
    $const34.6 = const(int, 2)               ['$const34.6']
    $binop_pow36.7 = $24load_attr.5 ** $const34.6 ['$24load_attr.5', '$binop_pow36.7', '$const34.6']
    $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7 ['$binop_add40.8', '$binop_pow18.3', '$binop_pow36.7']
    $44return_value.9 = cast(value=$binop_add40.8) ['$44return_value.9', '$binop_add40.8']
    return $44return_value.9                 ['$44return_value.9']

2024-06-28 20:38:24,217 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:24,217 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a675b1d10>
2024-06-28 20:38:24,217 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:24,217 - DEBUG - on stmt: $6load_attr.1 = getattr(value=x, attr=real)
2024-06-28 20:38:24,217 - DEBUG - on stmt: $const16.2 = const(int, 2)
2024-06-28 20:38:24,217 - DEBUG - on stmt: $binop_pow18.3 = $6load_attr.1 ** $const16.2
2024-06-28 20:38:24,217 - DEBUG - on stmt: $24load_attr.5 = getattr(value=x, attr=imag)
2024-06-28 20:38:24,218 - DEBUG - on stmt: $const34.6 = const(int, 2)
2024-06-28 20:38:24,218 - DEBUG - on stmt: $binop_pow36.7 = $24load_attr.5 ** $const34.6
2024-06-28 20:38:24,218 - DEBUG - on stmt: $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7
2024-06-28 20:38:24,218 - DEBUG - on stmt: $44return_value.9 = cast(value=$binop_add40.8)
2024-06-28 20:38:24,218 - DEBUG - on stmt: return $44return_value.9
2024-06-28 20:38:24,218 - DEBUG - defs defaultdict(<class 'list'>,
            {'$24load_attr.5': [(<numba.core.ir.Assign object at 0x7f7a675b3f90>,
                                 0)],
             '$44return_value.9': [(<numba.core.ir.Assign object at 0x7f7a675b3150>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x7f7a675b77d0>,
                                0)],
             '$binop_add40.8': [(<numba.core.ir.Assign object at 0x7f7a675b26d0>,
                                 0)],
             '$binop_pow18.3': [(<numba.core.ir.Assign object at 0x7f7a675b56d0>,
                                 0)],
             '$binop_pow36.7': [(<numba.core.ir.Assign object at 0x7f7a675b2cd0>,
                                 0)],
             '$const16.2': [(<numba.core.ir.Assign object at 0x7f7a675b7950>,
                             0)],
             '$const34.6': [(<numba.core.ir.Assign object at 0x7f7a675b3d10>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a6723dfd0>, 0)]})
2024-06-28 20:38:24,219 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a675b1d10>
2024-06-28 20:38:24,230 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	PRECALL(arg=1, lineno=216)
          16	CALL(arg=1, lineno=216)
          26	STORE_FAST(arg=2, lineno=216)
          28	PUSH_NULL(arg=None, lineno=217)
          30	LOAD_DEREF(arg=6, lineno=217)
          32	LOAD_FAST(arg=0, lineno=217)
          34	PRECALL(arg=1, lineno=217)
          38	CALL(arg=1, lineno=217)
          48	STORE_FAST(arg=0, lineno=217)
          50	LOAD_FAST(arg=1, lineno=218)
          52	LOAD_CONST(arg=2, lineno=218)
          54	COMPARE_OP(arg=0, lineno=218)
          60	POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
          62	LOAD_CONST(arg=3, lineno=219)
          64	STORE_FAST(arg=3, lineno=219)
          66	LOAD_FAST(arg=1, lineno=220)
          68	UNARY_NEGATIVE(arg=None, lineno=220)
          70	STORE_FAST(arg=4, lineno=220)
          72	LOAD_FAST(arg=4, lineno=221)
          74	LOAD_CONST(arg=2, lineno=221)
          76	COMPARE_OP(arg=0, lineno=221)
          82	POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
          84	LOAD_GLOBAL(arg=0, lineno=222)
          96	RAISE_VARARGS(arg=1, lineno=222)
>         98	LOAD_DEREF(arg=5, lineno=223)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
         102	LOAD_FAST(arg=0, lineno=224)
         104	LOAD_CONST(arg=2, lineno=224)
         106	COMPARE_OP(arg=2, lineno=224)
         112	POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
         114	LOAD_DEREF(arg=7, lineno=225)
         116	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
         118	LOAD_DEREF(arg=7, lineno=226)
         120	RETURN_VALUE(arg=None, lineno=226)
>        122	LOAD_GLOBAL(arg=3, lineno=228)
         134	LOAD_CONST(arg=4, lineno=228)
         136	PRECALL(arg=1, lineno=228)
         140	CALL(arg=1, lineno=228)
         150	RAISE_VARARGS(arg=1, lineno=228)
>        152	LOAD_FAST(arg=0, lineno=229)
         154	LOAD_CONST(arg=1, lineno=229)
         156	COMPARE_OP(arg=3, lineno=229)
         162	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
         164	LOAD_FAST(arg=0, lineno=229)
         166	LOAD_CONST(arg=5, lineno=229)
         168	COMPARE_OP(arg=3, lineno=229)
         174	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
         176	LOAD_CONST(arg=2, lineno=230)
         178	RETURN_VALUE(arg=None, lineno=230)
>        180	JUMP_FORWARD(arg=4, lineno=230)
>        182	LOAD_CONST(arg=6, lineno=232)
         184	STORE_FAST(arg=3, lineno=232)
         186	LOAD_FAST(arg=1, lineno=233)
         188	STORE_FAST(arg=4, lineno=233)
>        190	LOAD_FAST(arg=4, lineno=234)
         192	LOAD_CONST(arg=7, lineno=234)
         194	COMPARE_OP(arg=4, lineno=234)
         200	POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
         202	LOAD_GLOBAL(arg=5, lineno=236)
         214	LOAD_ATTR(arg=3, lineno=236)
         224	LOAD_FAST(arg=0, lineno=236)
         226	LOAD_GLOBAL(arg=9, lineno=236)
         238	LOAD_FAST(arg=1, lineno=236)
         240	PRECALL(arg=1, lineno=236)
         244	CALL(arg=1, lineno=236)
         254	PRECALL(arg=2, lineno=236)
         258	CALL(arg=2, lineno=236)
         268	RETURN_VALUE(arg=None, lineno=236)
>        270	LOAD_FAST(arg=4, lineno=237)
         272	LOAD_CONST(arg=2, lineno=237)
         274	COMPARE_OP(arg=3, lineno=237)
         280	POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
>        282	LOAD_FAST(arg=4, lineno=238)
         284	LOAD_CONST(arg=1, lineno=238)
         286	BINARY_OP(arg=1, lineno=238)
         290	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
         292	LOAD_FAST(arg=2, lineno=239)
         294	LOAD_FAST(arg=0, lineno=239)
         296	BINARY_OP(arg=18, lineno=239)
         300	STORE_FAST(arg=2, lineno=239)
>        302	LOAD_FAST(arg=4, lineno=240)
         304	LOAD_CONST(arg=1, lineno=240)
         306	BINARY_OP(arg=22, lineno=240)
         310	STORE_FAST(arg=4, lineno=240)
         312	LOAD_FAST(arg=0, lineno=241)
         314	LOAD_FAST(arg=0, lineno=241)
         316	BINARY_OP(arg=18, lineno=241)
         320	STORE_FAST(arg=0, lineno=241)
         322	LOAD_FAST(arg=4, lineno=237)
         324	LOAD_CONST(arg=2, lineno=237)
         326	COMPARE_OP(arg=3, lineno=237)
         332	POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
>        334	LOAD_FAST(arg=3, lineno=243)
         336	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
         338	LOAD_CONST(arg=8, lineno=243)
         340	LOAD_FAST(arg=2, lineno=243)
         342	BINARY_OP(arg=11, lineno=243)
         346	JUMP_FORWARD(arg=1, lineno=243)
>        348	LOAD_FAST(arg=2, lineno=243)
>        350	RETURN_VALUE(arg=None, lineno=243)
2024-06-28 20:38:24,231 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:24,231 - DEBUG - stack: []
2024-06-28 20:38:24,231 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:24,231 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2024-06-28 20:38:24,231 - DEBUG - stack []
2024-06-28 20:38:24,231 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
2024-06-28 20:38:24,231 - DEBUG - stack []
2024-06-28 20:38:24,231 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=214)
2024-06-28 20:38:24,231 - DEBUG - stack []
2024-06-28 20:38:24,231 - DEBUG - dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
2024-06-28 20:38:24,232 - DEBUG - stack []
2024-06-28 20:38:24,232 - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
2024-06-28 20:38:24,232 - DEBUG - stack ['$null$6.0']
2024-06-28 20:38:24,232 - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
2024-06-28 20:38:24,232 - DEBUG - stack ['$null$6.0', '$8load_deref.1']
2024-06-28 20:38:24,232 - DEBUG - dispatch pc=12, inst=PRECALL(arg=1, lineno=216)
2024-06-28 20:38:24,232 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-06-28 20:38:24,232 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=216)
2024-06-28 20:38:24,232 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-06-28 20:38:24,233 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=2, lineno=216)
2024-06-28 20:38:24,233 - DEBUG - stack ['$16call.3']
2024-06-28 20:38:24,233 - DEBUG - dispatch pc=28, inst=PUSH_NULL(arg=None, lineno=217)
2024-06-28 20:38:24,233 - DEBUG - stack []
2024-06-28 20:38:24,233 - DEBUG - dispatch pc=30, inst=LOAD_DEREF(arg=6, lineno=217)
2024-06-28 20:38:24,233 - DEBUG - stack ['$null$28.4']
2024-06-28 20:38:24,233 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=217)
2024-06-28 20:38:24,233 - DEBUG - stack ['$null$28.4', '$30load_deref.5']
2024-06-28 20:38:24,234 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=217)
2024-06-28 20:38:24,234 - DEBUG - stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-06-28 20:38:24,234 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=217)
2024-06-28 20:38:24,234 - DEBUG - stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-06-28 20:38:24,234 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=0, lineno=217)
2024-06-28 20:38:24,234 - DEBUG - stack ['$38call.7']
2024-06-28 20:38:24,234 - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=218)
2024-06-28 20:38:24,234 - DEBUG - stack []
2024-06-28 20:38:24,234 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=218)
2024-06-28 20:38:24,234 - DEBUG - stack ['$b50.8']
2024-06-28 20:38:24,235 - DEBUG - dispatch pc=54, inst=COMPARE_OP(arg=0, lineno=218)
2024-06-28 20:38:24,235 - DEBUG - stack ['$b50.8', '$const52.9']
2024-06-28 20:38:24,235 - DEBUG - dispatch pc=60, inst=POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
2024-06-28 20:38:24,235 - DEBUG - stack ['$54compare_op.10']
2024-06-28 20:38:24,235 - DEBUG - end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,235 - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
2024-06-28 20:38:24,235 - DEBUG - stack: []
2024-06-28 20:38:24,235 - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=0)
2024-06-28 20:38:24,235 - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=219)
2024-06-28 20:38:24,235 - DEBUG - stack []
2024-06-28 20:38:24,235 - DEBUG - dispatch pc=64, inst=STORE_FAST(arg=3, lineno=219)
2024-06-28 20:38:24,236 - DEBUG - stack ['$const62.0']
2024-06-28 20:38:24,236 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=220)
2024-06-28 20:38:24,236 - DEBUG - stack []
2024-06-28 20:38:24,236 - DEBUG - dispatch pc=68, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-06-28 20:38:24,236 - DEBUG - stack ['$b66.1']
2024-06-28 20:38:24,236 - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=220)
2024-06-28 20:38:24,236 - DEBUG - stack ['$68unary_negative.2']
2024-06-28 20:38:24,236 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=221)
2024-06-28 20:38:24,236 - DEBUG - stack []
2024-06-28 20:38:24,236 - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=221)
2024-06-28 20:38:24,236 - DEBUG - stack ['$exp72.3']
2024-06-28 20:38:24,236 - DEBUG - dispatch pc=76, inst=COMPARE_OP(arg=0, lineno=221)
2024-06-28 20:38:24,236 - DEBUG - stack ['$exp72.3', '$const74.4']
2024-06-28 20:38:24,237 - DEBUG - dispatch pc=82, inst=POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
2024-06-28 20:38:24,237 - DEBUG - stack ['$76compare_op.5']
2024-06-28 20:38:24,237 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,237 - DEBUG - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-06-28 20:38:24,237 - DEBUG - stack: []
2024-06-28 20:38:24,237 - DEBUG - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2024-06-28 20:38:24,237 - DEBUG - dispatch pc=182, inst=LOAD_CONST(arg=6, lineno=232)
2024-06-28 20:38:24,237 - DEBUG - stack []
2024-06-28 20:38:24,237 - DEBUG - dispatch pc=184, inst=STORE_FAST(arg=3, lineno=232)
2024-06-28 20:38:24,237 - DEBUG - stack ['$const182.0']
2024-06-28 20:38:24,237 - DEBUG - dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=233)
2024-06-28 20:38:24,237 - DEBUG - stack []
2024-06-28 20:38:24,238 - DEBUG - dispatch pc=188, inst=STORE_FAST(arg=4, lineno=233)
2024-06-28 20:38:24,238 - DEBUG - stack ['$b186.1']
2024-06-28 20:38:24,238 - DEBUG - end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,238 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-06-28 20:38:24,238 - DEBUG - stack: []
2024-06-28 20:38:24,238 - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2024-06-28 20:38:24,238 - DEBUG - dispatch pc=84, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-06-28 20:38:24,238 - DEBUG - stack []
2024-06-28 20:38:24,238 - DEBUG - dispatch pc=96, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-06-28 20:38:24,238 - DEBUG - stack ['$84load_global.0']
2024-06-28 20:38:24,238 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,239 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-06-28 20:38:24,239 - DEBUG - stack: []
2024-06-28 20:38:24,239 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2024-06-28 20:38:24,239 - DEBUG - dispatch pc=98, inst=LOAD_DEREF(arg=5, lineno=223)
2024-06-28 20:38:24,239 - DEBUG - stack []
2024-06-28 20:38:24,239 - DEBUG - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
2024-06-28 20:38:24,239 - DEBUG - stack ['$98load_deref.0']
2024-06-28 20:38:24,239 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,239 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,239 - DEBUG - stack: []
2024-06-28 20:38:24,239 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2024-06-28 20:38:24,239 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=4, lineno=234)
2024-06-28 20:38:24,239 - DEBUG - stack []
2024-06-28 20:38:24,240 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=7, lineno=234)
2024-06-28 20:38:24,240 - DEBUG - stack ['$exp190.0']
2024-06-28 20:38:24,240 - DEBUG - dispatch pc=194, inst=COMPARE_OP(arg=4, lineno=234)
2024-06-28 20:38:24,240 - DEBUG - stack ['$exp190.0', '$const192.1']
2024-06-28 20:38:24,240 - DEBUG - dispatch pc=200, inst=POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
2024-06-28 20:38:24,240 - DEBUG - stack ['$194compare_op.2']
2024-06-28 20:38:24,240 - DEBUG - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=270, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,240 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0)])
2024-06-28 20:38:24,240 - DEBUG - stack: []
2024-06-28 20:38:24,240 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-06-28 20:38:24,241 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=224)
2024-06-28 20:38:24,241 - DEBUG - stack []
2024-06-28 20:38:24,241 - DEBUG - dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=224)
2024-06-28 20:38:24,241 - DEBUG - stack ['$a102.0']
2024-06-28 20:38:24,241 - DEBUG - dispatch pc=106, inst=COMPARE_OP(arg=2, lineno=224)
2024-06-28 20:38:24,241 - DEBUG - stack ['$a102.0', '$const104.1']
2024-06-28 20:38:24,242 - DEBUG - dispatch pc=112, inst=POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
2024-06-28 20:38:24,242 - DEBUG - stack ['$106compare_op.2']
2024-06-28 20:38:24,242 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,242 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
2024-06-28 20:38:24,242 - DEBUG - stack: []
2024-06-28 20:38:24,242 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=0)
2024-06-28 20:38:24,242 - DEBUG - dispatch pc=180, inst=JUMP_FORWARD(arg=4, lineno=230)
2024-06-28 20:38:24,242 - DEBUG - stack []
2024-06-28 20:38:24,242 - DEBUG - end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,242 - DEBUG - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-06-28 20:38:24,243 - DEBUG - stack: []
2024-06-28 20:38:24,243 - DEBUG - state.pc_initial: State(pc_initial=202 nstack_initial=0)
2024-06-28 20:38:24,243 - DEBUG - dispatch pc=202, inst=LOAD_GLOBAL(arg=5, lineno=236)
2024-06-28 20:38:24,243 - DEBUG - stack []
2024-06-28 20:38:24,243 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=3, lineno=236)
2024-06-28 20:38:24,243 - DEBUG - stack ['$null$202.1', '$202load_global.0']
2024-06-28 20:38:24,243 - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=236)
2024-06-28 20:38:24,243 - DEBUG - stack ['$null$202.1', '$214load_attr.2']
2024-06-28 20:38:24,243 - DEBUG - dispatch pc=226, inst=LOAD_GLOBAL(arg=9, lineno=236)
2024-06-28 20:38:24,244 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3']
2024-06-28 20:38:24,244 - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=236)
2024-06-28 20:38:24,244 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4']
2024-06-28 20:38:24,244 - DEBUG - dispatch pc=240, inst=PRECALL(arg=1, lineno=236)
2024-06-28 20:38:24,244 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-06-28 20:38:24,244 - DEBUG - dispatch pc=244, inst=CALL(arg=1, lineno=236)
2024-06-28 20:38:24,244 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-06-28 20:38:24,244 - DEBUG - dispatch pc=254, inst=PRECALL(arg=2, lineno=236)
2024-06-28 20:38:24,244 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-06-28 20:38:24,245 - DEBUG - dispatch pc=258, inst=CALL(arg=2, lineno=236)
2024-06-28 20:38:24,245 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-06-28 20:38:24,245 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=236)
2024-06-28 20:38:24,245 - DEBUG - stack ['$258call.8']
2024-06-28 20:38:24,246 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,246 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-06-28 20:38:24,246 - DEBUG - stack: []
2024-06-28 20:38:24,246 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=0)
2024-06-28 20:38:24,246 - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=4, lineno=237)
2024-06-28 20:38:24,246 - DEBUG - stack []
2024-06-28 20:38:24,246 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=2, lineno=237)
2024-06-28 20:38:24,246 - DEBUG - stack ['$exp270.0']
2024-06-28 20:38:24,246 - DEBUG - dispatch pc=274, inst=COMPARE_OP(arg=3, lineno=237)
2024-06-28 20:38:24,247 - DEBUG - stack ['$exp270.0', '$const272.1']
2024-06-28 20:38:24,247 - DEBUG - dispatch pc=280, inst=POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
2024-06-28 20:38:24,247 - DEBUG - stack ['$274compare_op.2']
2024-06-28 20:38:24,247 - DEBUG - end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0), Edge(pc=334, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,247 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0)])
2024-06-28 20:38:24,247 - DEBUG - stack: []
2024-06-28 20:38:24,247 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2024-06-28 20:38:24,247 - DEBUG - dispatch pc=114, inst=LOAD_DEREF(arg=7, lineno=225)
2024-06-28 20:38:24,248 - DEBUG - stack []
2024-06-28 20:38:24,248 - DEBUG - dispatch pc=116, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
2024-06-28 20:38:24,248 - DEBUG - stack ['$114load_deref.0']
2024-06-28 20:38:24,248 - DEBUG - end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,248 - DEBUG - pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2024-06-28 20:38:24,248 - DEBUG - stack: []
2024-06-28 20:38:24,248 - DEBUG - state.pc_initial: State(pc_initial=152 nstack_initial=0)
2024-06-28 20:38:24,248 - DEBUG - dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=229)
2024-06-28 20:38:24,248 - DEBUG - stack []
2024-06-28 20:38:24,248 - DEBUG - dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=229)
2024-06-28 20:38:24,248 - DEBUG - stack ['$a152.0']
2024-06-28 20:38:24,248 - DEBUG - dispatch pc=156, inst=COMPARE_OP(arg=3, lineno=229)
2024-06-28 20:38:24,248 - DEBUG - stack ['$a152.0', '$const154.1']
2024-06-28 20:38:24,249 - DEBUG - dispatch pc=162, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
2024-06-28 20:38:24,249 - DEBUG - stack ['$156compare_op.2']
2024-06-28 20:38:24,249 - DEBUG - end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,249 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,249 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,249 - DEBUG - stack: []
2024-06-28 20:38:24,249 - DEBUG - state.pc_initial: State(pc_initial=282 nstack_initial=0)
2024-06-28 20:38:24,249 - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=238)
2024-06-28 20:38:24,250 - DEBUG - stack []
2024-06-28 20:38:24,250 - DEBUG - dispatch pc=284, inst=LOAD_CONST(arg=1, lineno=238)
2024-06-28 20:38:24,250 - DEBUG - stack ['$exp282.0']
2024-06-28 20:38:24,250 - DEBUG - dispatch pc=286, inst=BINARY_OP(arg=1, lineno=238)
2024-06-28 20:38:24,250 - DEBUG - stack ['$exp282.0', '$const284.1']
2024-06-28 20:38:24,250 - DEBUG - dispatch pc=290, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
2024-06-28 20:38:24,250 - DEBUG - stack ['$binop_and_286.2']
2024-06-28 20:38:24,250 - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,250 - DEBUG - pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-28 20:38:24,250 - DEBUG - stack: []
2024-06-28 20:38:24,250 - DEBUG - state.pc_initial: State(pc_initial=334 nstack_initial=0)
2024-06-28 20:38:24,251 - DEBUG - dispatch pc=334, inst=LOAD_FAST(arg=3, lineno=243)
2024-06-28 20:38:24,251 - DEBUG - stack []
2024-06-28 20:38:24,251 - DEBUG - dispatch pc=336, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
2024-06-28 20:38:24,251 - DEBUG - stack ['$invert334.0']
2024-06-28 20:38:24,251 - DEBUG - end state. edges=[Edge(pc=338, stack=(), blockstack=(), npush=0), Edge(pc=348, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,251 - DEBUG - pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-06-28 20:38:24,251 - DEBUG - stack: []
2024-06-28 20:38:24,251 - DEBUG - state.pc_initial: State(pc_initial=118 nstack_initial=0)
2024-06-28 20:38:24,251 - DEBUG - dispatch pc=118, inst=LOAD_DEREF(arg=7, lineno=226)
2024-06-28 20:38:24,251 - DEBUG - stack []
2024-06-28 20:38:24,251 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=226)
2024-06-28 20:38:24,251 - DEBUG - stack ['$118load_deref.0']
2024-06-28 20:38:24,251 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,251 - DEBUG - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-06-28 20:38:24,251 - DEBUG - stack: []
2024-06-28 20:38:24,251 - DEBUG - state.pc_initial: State(pc_initial=122 nstack_initial=0)
2024-06-28 20:38:24,252 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=3, lineno=228)
2024-06-28 20:38:24,252 - DEBUG - stack []
2024-06-28 20:38:24,252 - DEBUG - dispatch pc=134, inst=LOAD_CONST(arg=4, lineno=228)
2024-06-28 20:38:24,252 - DEBUG - stack ['$null$122.1', '$122load_global.0']
2024-06-28 20:38:24,252 - DEBUG - dispatch pc=136, inst=PRECALL(arg=1, lineno=228)
2024-06-28 20:38:24,252 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-06-28 20:38:24,252 - DEBUG - dispatch pc=140, inst=CALL(arg=1, lineno=228)
2024-06-28 20:38:24,252 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-06-28 20:38:24,252 - DEBUG - dispatch pc=150, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-06-28 20:38:24,252 - DEBUG - stack ['$140call.3']
2024-06-28 20:38:24,252 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,252 - DEBUG - pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-06-28 20:38:24,252 - DEBUG - stack: []
2024-06-28 20:38:24,253 - DEBUG - state.pc_initial: State(pc_initial=164 nstack_initial=0)
2024-06-28 20:38:24,253 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=229)
2024-06-28 20:38:24,253 - DEBUG - stack []
2024-06-28 20:38:24,253 - DEBUG - dispatch pc=166, inst=LOAD_CONST(arg=5, lineno=229)
2024-06-28 20:38:24,253 - DEBUG - stack ['$a164.0']
2024-06-28 20:38:24,253 - DEBUG - dispatch pc=168, inst=COMPARE_OP(arg=3, lineno=229)
2024-06-28 20:38:24,253 - DEBUG - stack ['$a164.0', '$const166.1']
2024-06-28 20:38:24,253 - DEBUG - dispatch pc=174, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
2024-06-28 20:38:24,253 - DEBUG - stack ['$168compare_op.2']
2024-06-28 20:38:24,253 - DEBUG - end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,253 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,253 - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,253 - DEBUG - stack: []
2024-06-28 20:38:24,253 - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2024-06-28 20:38:24,253 - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=239)
2024-06-28 20:38:24,254 - DEBUG - stack []
2024-06-28 20:38:24,254 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=0, lineno=239)
2024-06-28 20:38:24,254 - DEBUG - stack ['$r292.0']
2024-06-28 20:38:24,254 - DEBUG - dispatch pc=296, inst=BINARY_OP(arg=18, lineno=239)
2024-06-28 20:38:24,254 - DEBUG - stack ['$r292.0', '$a294.1']
2024-06-28 20:38:24,254 - DEBUG - dispatch pc=300, inst=STORE_FAST(arg=2, lineno=239)
2024-06-28 20:38:24,254 - DEBUG - stack ['$binop_imul296.2']
2024-06-28 20:38:24,254 - DEBUG - end state. edges=[Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,254 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-28 20:38:24,254 - DEBUG - stack: []
2024-06-28 20:38:24,254 - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2024-06-28 20:38:24,254 - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=4, lineno=240)
2024-06-28 20:38:24,254 - DEBUG - stack []
2024-06-28 20:38:24,254 - DEBUG - dispatch pc=304, inst=LOAD_CONST(arg=1, lineno=240)
2024-06-28 20:38:24,254 - DEBUG - stack ['$exp302.0']
2024-06-28 20:38:24,255 - DEBUG - dispatch pc=306, inst=BINARY_OP(arg=22, lineno=240)
2024-06-28 20:38:24,255 - DEBUG - stack ['$exp302.0', '$const304.1']
2024-06-28 20:38:24,255 - DEBUG - dispatch pc=310, inst=STORE_FAST(arg=4, lineno=240)
2024-06-28 20:38:24,255 - DEBUG - stack ['$binop_irshift306.2']
2024-06-28 20:38:24,255 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=0, lineno=241)
2024-06-28 20:38:24,255 - DEBUG - stack []
2024-06-28 20:38:24,255 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=0, lineno=241)
2024-06-28 20:38:24,255 - DEBUG - stack ['$a312.3']
2024-06-28 20:38:24,255 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=18, lineno=241)
2024-06-28 20:38:24,255 - DEBUG - stack ['$a312.3', '$a314.4']
2024-06-28 20:38:24,255 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=0, lineno=241)
2024-06-28 20:38:24,255 - DEBUG - stack ['$binop_imul316.5']
2024-06-28 20:38:24,255 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=4, lineno=237)
2024-06-28 20:38:24,255 - DEBUG - stack []
2024-06-28 20:38:24,255 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=2, lineno=237)
2024-06-28 20:38:24,256 - DEBUG - stack ['$exp322.6']
2024-06-28 20:38:24,256 - DEBUG - dispatch pc=326, inst=COMPARE_OP(arg=3, lineno=237)
2024-06-28 20:38:24,256 - DEBUG - stack ['$exp322.6', '$const324.7']
2024-06-28 20:38:24,256 - DEBUG - dispatch pc=332, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
2024-06-28 20:38:24,256 - DEBUG - stack ['$326compare_op.8']
2024-06-28 20:38:24,256 - DEBUG - end state. edges=[Edge(pc=334, stack=(), blockstack=(), npush=0), Edge(pc=282, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,256 - DEBUG - pending: deque([State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0)])
2024-06-28 20:38:24,256 - DEBUG - stack: []
2024-06-28 20:38:24,256 - DEBUG - state.pc_initial: State(pc_initial=338 nstack_initial=0)
2024-06-28 20:38:24,256 - DEBUG - dispatch pc=338, inst=LOAD_CONST(arg=8, lineno=243)
2024-06-28 20:38:24,256 - DEBUG - stack []
2024-06-28 20:38:24,256 - DEBUG - dispatch pc=340, inst=LOAD_FAST(arg=2, lineno=243)
2024-06-28 20:38:24,256 - DEBUG - stack ['$const338.0']
2024-06-28 20:38:24,256 - DEBUG - dispatch pc=342, inst=BINARY_OP(arg=11, lineno=243)
2024-06-28 20:38:24,256 - DEBUG - stack ['$const338.0', '$r340.1']
2024-06-28 20:38:24,256 - DEBUG - dispatch pc=346, inst=JUMP_FORWARD(arg=1, lineno=243)
2024-06-28 20:38:24,257 - DEBUG - stack ['$binop_truediv342.2']
2024-06-28 20:38:24,257 - DEBUG - end state. edges=[Edge(pc=350, stack=('$binop_truediv342.2',), blockstack=(), npush=0)]
2024-06-28 20:38:24,257 - DEBUG - pending: deque([State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,257 - DEBUG - stack: []
2024-06-28 20:38:24,257 - DEBUG - state.pc_initial: State(pc_initial=348 nstack_initial=0)
2024-06-28 20:38:24,257 - DEBUG - dispatch pc=348, inst=LOAD_FAST(arg=2, lineno=243)
2024-06-28 20:38:24,257 - DEBUG - stack []
2024-06-28 20:38:24,257 - DEBUG - end state. edges=[Edge(pc=350, stack=('$r348.0',), blockstack=(), npush=0)]
2024-06-28 20:38:24,257 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,257 - DEBUG - stack: []
2024-06-28 20:38:24,257 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=0)
2024-06-28 20:38:24,257 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=230)
2024-06-28 20:38:24,257 - DEBUG - stack []
2024-06-28 20:38:24,258 - DEBUG - dispatch pc=178, inst=RETURN_VALUE(arg=None, lineno=230)
2024-06-28 20:38:24,258 - DEBUG - stack ['$const176.0']
2024-06-28 20:38:24,258 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,258 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,258 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,258 - DEBUG - pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,258 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,258 - DEBUG - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,258 - DEBUG - stack: ['$phi350.0']
2024-06-28 20:38:24,258 - DEBUG - state.pc_initial: State(pc_initial=350 nstack_initial=1)
2024-06-28 20:38:24,258 - DEBUG - dispatch pc=350, inst=RETURN_VALUE(arg=None, lineno=243)
2024-06-28 20:38:24,258 - DEBUG - stack ['$phi350.0']
2024-06-28 20:38:24,258 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,258 - DEBUG - pending: deque([State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,259 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:24,259 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=270 nstack_initial=0): set(),
             State(pc_initial=282 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=334 nstack_initial=0): set(),
             State(pc_initial=338 nstack_initial=0): set(),
             State(pc_initial=348 nstack_initial=0): set(),
             State(pc_initial=350 nstack_initial=1): {'$phi350.0'}})
2024-06-28 20:38:24,259 - DEBUG - defmap: {'$phi350.0': State(pc_initial=348 nstack_initial=0)}
2024-06-28 20:38:24,259 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-06-28 20:38:24,259 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-06-28 20:38:24,260 - DEBUG - keep phismap: {'$phi350.0': {('$binop_truediv342.2', State(pc_initial=338 nstack_initial=0)),
               ('$r348.0', State(pc_initial=348 nstack_initial=0))}}
2024-06-28 20:38:24,260 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=338 nstack_initial=0): {'$phi350.0': '$binop_truediv342.2'},
             State(pc_initial=348 nstack_initial=0): {'$phi350.0': '$r348.0'}})
2024-06-28 20:38:24,260 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:24,260 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2'}), (12, {}), (14, {}), (16, {'func': '$8load_deref.1', 'args': ['$const10.2'], 'kw_names': None, 'res': '$16call.3'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'value': '$16call.3'}), (28, {}), (30, {'res': '$30load_deref.5'}), (32, {'res': '$a32.6'}), (34, {}), (36, {}), (38, {'func': '$30load_deref.5', 'args': ['$a32.6'], 'kw_names': None, 'res': '$38call.7'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.7'}), (50, {'res': '$b50.8'}), (52, {'res': '$const52.9'}), (54, {'lhs': '$b50.8', 'rhs': '$const52.9', 'res': '$54compare_op.10'}), (56, {}), (58, {}), (60, {'pred': '$54compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 182: ()})
2024-06-28 20:38:24,260 - DEBUG - block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0'}), (64, {'value': '$const62.0'}), (66, {'res': '$b66.1'}), (68, {'value': '$b66.1', 'res': '$68unary_negative.2'}), (70, {'value': '$68unary_negative.2'}), (72, {'res': '$exp72.3'}), (74, {'res': '$const74.4'}), (76, {'lhs': '$exp72.3', 'rhs': '$const74.4', 'res': '$76compare_op.5'}), (78, {}), (80, {}), (82, {'pred': '$76compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 98: ()})
2024-06-28 20:38:24,260 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'idx': 0, 'res': '$84load_global.0'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'exc': '$84load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'pred': '$98load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 180: ()})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$a102.0'}), (104, {'res': '$const104.1'}), (106, {'lhs': '$a102.0', 'rhs': '$const104.1', 'res': '$106compare_op.2'}), (108, {}), (110, {}), (112, {'pred': '$106compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 152: ()})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_deref.0'}), (116, {'pred': '$114load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: (), 122: ()})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$118load_deref.0'}), (120, {'retval': '$118load_deref.0', 'castval': '$120return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'idx': 1, 'res': '$122load_global.0'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'res': '$const134.2'}), (136, {}), (138, {}), (140, {'func': '$122load_global.0', 'args': ['$const134.2'], 'kw_names': None, 'res': '$140call.3'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'exc': '$140call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$a152.0'}), (154, {'res': '$const154.1'}), (156, {'lhs': '$a152.0', 'rhs': '$const154.1', 'res': '$156compare_op.2'}), (158, {}), (160, {}), (162, {'pred': '$156compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 180: ()})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'res': '$const166.1'}), (168, {'lhs': '$a164.0', 'rhs': '$const166.1', 'res': '$168compare_op.2'}), (170, {}), (172, {}), (174, {'pred': '$168compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 180: ()})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'retval': '$const176.0', 'castval': '$178return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'value': '$const182.0'}), (186, {'res': '$b186.1'}), (188, {'value': '$b186.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$exp190.0'}), (192, {'res': '$const192.1'}), (194, {'lhs': '$exp190.0', 'rhs': '$const192.1', 'res': '$194compare_op.2'}), (196, {}), (198, {}), (200, {'pred': '$194compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 270: ()})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'idx': 2, 'res': '$202load_global.0'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {'item': '$202load_global.0', 'res': '$214load_attr.2'}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {'res': '$a224.3'}), (226, {'idx': 4, 'res': '$226load_global.4'}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'res': '$b238.6'}), (240, {}), (242, {}), (244, {'func': '$226load_global.4', 'args': ['$b238.6'], 'kw_names': None, 'res': '$244call.7'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {'func': '$214load_attr.2', 'args': ['$a224.3', '$244call.7'], 'kw_names': None, 'res': '$258call.8'}), (260, {}), (262, {}), (264, {}), (266, {}), (268, {'retval': '$258call.8', 'castval': '$268return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,261 - DEBUG - block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=((270, {'res': '$exp270.0'}), (272, {'res': '$const272.1'}), (274, {'lhs': '$exp270.0', 'rhs': '$const272.1', 'res': '$274compare_op.2'}), (276, {}), (278, {}), (280, {'pred': '$274compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: (), 334: ()})
2024-06-28 20:38:24,262 - DEBUG - block_infos State(pc_initial=282 nstack_initial=0):
AdaptBlockInfo(insts=((282, {'res': '$exp282.0'}), (284, {'res': '$const284.1'}), (286, {'op': '&', 'lhs': '$exp282.0', 'rhs': '$const284.1', 'res': '$binop_and_286.2'}), (288, {}), (290, {'pred': '$binop_and_286.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2024-06-28 20:38:24,262 - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$r292.0'}), (294, {'res': '$a294.1'}), (296, {'op': '*=', 'lhs': '$r292.0', 'rhs': '$a294.1', 'res': '$binop_imul296.2'}), (298, {}), (300, {'value': '$binop_imul296.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ()})
2024-06-28 20:38:24,262 - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$exp302.0'}), (304, {'res': '$const304.1'}), (306, {'op': '>>=', 'lhs': '$exp302.0', 'rhs': '$const304.1', 'res': '$binop_irshift306.2'}), (308, {}), (310, {'value': '$binop_irshift306.2'}), (312, {'res': '$a312.3'}), (314, {'res': '$a314.4'}), (316, {'op': '*=', 'lhs': '$a312.3', 'rhs': '$a314.4', 'res': '$binop_imul316.5'}), (318, {}), (320, {'value': '$binop_imul316.5'}), (322, {'res': '$exp322.6'}), (324, {'res': '$const324.7'}), (326, {'lhs': '$exp322.6', 'rhs': '$const324.7', 'res': '$326compare_op.8'}), (328, {}), (330, {}), (332, {'pred': '$326compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: (), 282: ()})
2024-06-28 20:38:24,262 - DEBUG - block_infos State(pc_initial=334 nstack_initial=0):
AdaptBlockInfo(insts=((334, {'res': '$invert334.0'}), (336, {'pred': '$invert334.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={338: (), 348: ()})
2024-06-28 20:38:24,262 - DEBUG - block_infos State(pc_initial=338 nstack_initial=0):
AdaptBlockInfo(insts=((338, {'res': '$const338.0'}), (340, {'res': '$r340.1'}), (342, {'op': '/', 'lhs': '$const338.0', 'rhs': '$r340.1', 'res': '$binop_truediv342.2'}), (344, {}), (346, {})), outgoing_phis={'$phi350.0': '$binop_truediv342.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$binop_truediv342.2',)})
2024-06-28 20:38:24,262 - DEBUG - block_infos State(pc_initial=348 nstack_initial=0):
AdaptBlockInfo(insts=((348, {'res': '$r348.0'}),), outgoing_phis={'$phi350.0': '$r348.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$r348.0',)})
2024-06-28 20:38:24,262 - DEBUG - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'retval': '$phi350.0', 'castval': '$350return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,264 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float32)    ['$8load_deref.1']
    $const10.2 = const(int, 1)               ['$const10.2']
    r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2', 'r']
    $30load_deref.5 = freevar(tp: float32)   ['$30load_deref.5']
    a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_deref.5', 'a', 'a.1']
    $const52.9 = const(int, 0)               ['$const52.9']
    $54compare_op.10 = b < $const52.9        ['$54compare_op.10', '$const52.9', 'b']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.10', '$60pred', 'bool60']
    branch $60pred, 62, 182                  ['$60pred']
label 62:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const74.4 = const(int, 0)               ['$const74.4']
    $76compare_op.5 = exp < $const74.4       ['$76compare_op.5', '$const74.4', 'exp']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$76compare_op.5', '$82pred', 'bool82']
    branch $82pred, 84, 98                   ['$82pred']
label 84:
    $84load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$84load_global.0']
    raise $84load_global.0                   ['$84load_global.0']
label 98:
    $98load_deref.0 = freevar(is_integer: False) ['$98load_deref.0']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98load_deref.0', 'bool100']
    branch $100pred, 102, 180                ['$100pred']
label 102:
    $const104.1 = const(int, 0)              ['$const104.1']
    $106compare_op.2 = a.1 == $const104.1    ['$106compare_op.2', '$const104.1', 'a.1']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106compare_op.2, func=bool112, args=(Var($106compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$106compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 152                ['$112pred']
label 114:
    $114load_deref.0 = freevar(zerodiv_return: False) ['$114load_deref.0']
    bool116 = global(bool: <class 'bool'>)   ['bool116']
    $116pred = call bool116($114load_deref.0, func=bool116, args=(Var($114load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$114load_deref.0', '$116pred', 'bool116']
    branch $116pred, 118, 122                ['$116pred']
label 118:
    $118load_deref.0 = freevar(zerodiv_return: False) ['$118load_deref.0']
    $120return_value.1 = cast(value=$118load_deref.0) ['$118load_deref.0', '$120return_value.1']
    return $120return_value.1                ['$120return_value.1']
label 122:
    $122load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$122load_global.0']
    $const134.2 = const(str, 0 cannot be raised to a negative power) ['$const134.2']
    $140call.3 = call $122load_global.0($const134.2, func=$122load_global.0, args=[Var($const134.2, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.0', '$140call.3', '$const134.2']
    raise $140call.3                         ['$140call.3']
label 152:
    $const154.1 = const(int, 1)              ['$const154.1']
    $156compare_op.2 = a.1 != $const154.1    ['$156compare_op.2', '$const154.1', 'a.1']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($156compare_op.2, func=bool162, args=(Var($156compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$156compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 180                ['$162pred']
label 164:
    $const166.1 = const(int, -1)             ['$const166.1']
    $168compare_op.2 = a.1 != $const166.1    ['$168compare_op.2', '$const166.1', 'a.1']
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174($168compare_op.2, func=bool174, args=(Var($168compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.2', '$174pred', 'bool174']
    branch $174pred, 176, 180                ['$174pred']
label 176:
    $const176.0 = const(int, 0)              ['$const176.0']
    $178return_value.1 = cast(value=$const176.0) ['$178return_value.1', '$const176.0']
    return $178return_value.1                ['$178return_value.1']
label 180:
    jump 190                                 []
label 182:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 190                                 []
label 190:
    $const192.1 = const(int, 65536)          ['$const192.1']
    $194compare_op.2 = exp > $const192.1     ['$194compare_op.2', '$const192.1', 'exp']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$194compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 270                ['$200pred']
label 202:
    $202load_global.0 = global(math: <module 'math' (built-in)>) ['$202load_global.0']
    $214load_attr.2 = getattr(value=$202load_global.0, attr=pow) ['$202load_global.0', '$214load_attr.2']
    $226load_global.4 = global(float: <class 'float'>) ['$226load_global.4']
    $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_global.4', '$244call.7', 'b']
    $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.2', '$244call.7', '$258call.8', 'a.1']
    $268return_value.9 = cast(value=$258call.8) ['$258call.8', '$268return_value.9']
    return $268return_value.9                ['$268return_value.9']
label 270:
    $const272.1 = const(int, 0)              ['$const272.1']
    $274compare_op.2 = exp != $const272.1    ['$274compare_op.2', '$const272.1', 'exp']
    bool280 = global(bool: <class 'bool'>)   ['bool280']
    $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$274compare_op.2', '$280pred', 'bool280']
    branch $280pred, 282, 334                ['$280pred']
label 282:
    $const284.1 = const(int, 1)              ['$const284.1']
    $binop_and_286.2 = exp & $const284.1     ['$binop_and_286.2', '$const284.1', 'exp']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', '$binop_and_286.2', 'bool290']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul296.2', 'a.1', 'r']
    r = $binop_imul296.2                     ['$binop_imul296.2', 'r']
    jump 302                                 []
label 302:
    $const304.1 = const(int, 1)              ['$const304.1']
    $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift306.2', '$const304.1', 'exp']
    exp = $binop_irshift306.2                ['$binop_irshift306.2', 'exp']
    $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul316.5', 'a.1', 'a.1']
    a.1 = $binop_imul316.5                   ['$binop_imul316.5', 'a.1']
    $const324.7 = const(int, 0)              ['$const324.7']
    $326compare_op.8 = exp != $const324.7    ['$326compare_op.8', '$const324.7', 'exp']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$326compare_op.8', '$332pred', 'bool332']
    branch $332pred, 282, 334                ['$332pred']
label 334:
    bool336 = global(bool: <class 'bool'>)   ['bool336']
    $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$336pred', 'bool336', 'invert']
    branch $336pred, 338, 348                ['$336pred']
label 338:
    $const338.0 = const(float, 1.0)          ['$const338.0']
    $binop_truediv342.2 = $const338.0 / r    ['$binop_truediv342.2', '$const338.0', 'r']
    $phi350.0 = $binop_truediv342.2          ['$binop_truediv342.2', '$phi350.0']
    jump 350                                 []
label 348:
    $phi350.0 = r                            ['$phi350.0', 'r']
    jump 350                                 []
label 350:
    $350return_value.1 = cast(value=$phi350.0) ['$350return_value.1', '$phi350.0']
    return $350return_value.1                ['$350return_value.1']

2024-06-28 20:38:24,277 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:24,277 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,277 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,277 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,277 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,277 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,277 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,277 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,277 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,278 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,278 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,278 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,278 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,278 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,278 - DEBUG - ==== SSA block analysis pass on 62
2024-06-28 20:38:24,278 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,278 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,278 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,278 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,278 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,278 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,278 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,279 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,279 - DEBUG - ==== SSA block analysis pass on 84
2024-06-28 20:38:24,279 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,279 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,279 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,279 - DEBUG - ==== SSA block analysis pass on 98
2024-06-28 20:38:24,279 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,279 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,279 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,279 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,279 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,279 - DEBUG - ==== SSA block analysis pass on 180
2024-06-28 20:38:24,279 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,279 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,279 - DEBUG - ==== SSA block analysis pass on 182
2024-06-28 20:38:24,279 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,280 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,280 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,280 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,280 - DEBUG - ==== SSA block analysis pass on 190
2024-06-28 20:38:24,280 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,280 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,280 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,280 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,280 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,280 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,280 - DEBUG - ==== SSA block analysis pass on 202
2024-06-28 20:38:24,280 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,280 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,280 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,280 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,280 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,281 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,281 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,281 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,281 - DEBUG - ==== SSA block analysis pass on 270
2024-06-28 20:38:24,281 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,281 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,281 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,281 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,281 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,281 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,282 - DEBUG - ==== SSA block analysis pass on 282
2024-06-28 20:38:24,282 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,282 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,282 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,282 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,282 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,282 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,282 - DEBUG - ==== SSA block analysis pass on 292
2024-06-28 20:38:24,282 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,282 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,282 - DEBUG - on stmt: r = $binop_imul296.2
2024-06-28 20:38:24,282 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,282 - DEBUG - ==== SSA block analysis pass on 302
2024-06-28 20:38:24,282 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,282 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,283 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,283 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,283 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,283 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-06-28 20:38:24,283 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,283 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,283 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,283 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,283 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,283 - DEBUG - ==== SSA block analysis pass on 334
2024-06-28 20:38:24,283 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,283 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,283 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,284 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,284 - DEBUG - ==== SSA block analysis pass on 338
2024-06-28 20:38:24,284 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,284 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,284 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-06-28 20:38:24,284 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,284 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,284 - DEBUG - ==== SSA block analysis pass on 348
2024-06-28 20:38:24,284 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,284 - DEBUG - on stmt: $phi350.0 = r
2024-06-28 20:38:24,284 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,284 - DEBUG - ==== SSA block analysis pass on 350
2024-06-28 20:38:24,284 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a760c1b10>
2024-06-28 20:38:24,284 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,284 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,285 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x7f7a67532b50>,
                           98)],
             '$194compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a675ea890>,
                                   190)],
             '$200pred': [(<numba.core.ir.Assign object at 0x7f7a675ebd50>,
                           190)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x7f7a675ebed0>,
                                    202)],
             '$214load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a675eb7d0>,
                                  202)],
             '$226load_global.4': [(<numba.core.ir.Assign object at 0x7f7a675eb9d0>,
                                    202)],
             '$244call.7': [(<numba.core.ir.Assign object at 0x7f7a6750e610>,
                             202)],
             '$258call.8': [(<numba.core.ir.Assign object at 0x7f7a6750e510>,
                             202)],
             '$268return_value.9': [(<numba.core.ir.Assign object at 0x7f7a6750e110>,
                                     202)],
             '$274compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a6750dcd0>,
                                   270)],
             '$280pred': [(<numba.core.ir.Assign object at 0x7f7a6750ec50>,
                           270)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7f7a6750f650>,
                           282)],
             '$30load_deref.5': [(<numba.core.ir.Assign object at 0x7f7a675a6ed0>,
                                  0)],
             '$326compare_op.8': [(<numba.core.ir.Assign object at 0x7f7a6750c3d0>,
                                   302)],
             '$332pred': [(<numba.core.ir.Assign object at 0x7f7a6750c050>,
                           302)],
             '$336pred': [(<numba.core.ir.Assign object at 0x7f7a66f279d0>,
                           334)],
             '$350return_value.1': [(<numba.core.ir.Assign object at 0x7f7a66f27c10>,
                                     350)],
             '$54compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a67530350>,
                                   0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x7f7a67531c10>, 0)],
             '$76compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a675319d0>,
                                  62)],
             '$82pred': [(<numba.core.ir.Assign object at 0x7f7a67531a50>, 62)],
             '$84load_global.0': [(<numba.core.ir.Assign object at 0x7f7a67531b10>,
                                   84)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x7f7a6751d550>,
                                 0)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x7f7a67531d90>,
                                  98)],
             '$binop_and_286.2': [(<numba.core.ir.Assign object at 0x7f7a6750f190>,
                                   282)],
             '$binop_imul296.2': [(<numba.core.ir.Assign object at 0x7f7a6750fc50>,
                                   292)],
             '$binop_imul316.5': [(<numba.core.ir.Assign object at 0x7f7a6750cfd0>,
                                   302)],
             '$binop_irshift306.2': [(<numba.core.ir.Assign object at 0x7f7a6750d6d0>,
                                      302)],
             '$binop_truediv342.2': [(<numba.core.ir.Assign object at 0x7f7a66f27450>,
                                      338)],
             '$const10.2': [(<numba.core.ir.Assign object at 0x7f7a6751d1d0>,
                             0)],
             '$const192.1': [(<numba.core.ir.Assign object at 0x7f7a675eb4d0>,
                              190)],
             '$const272.1': [(<numba.core.ir.Assign object at 0x7f7a6750d950>,
                              270)],
             '$const284.1': [(<numba.core.ir.Assign object at 0x7f7a6750f0d0>,
                              282)],
             '$const304.1': [(<numba.core.ir.Assign object at 0x7f7a6750c410>,
                              302)],
             '$const324.7': [(<numba.core.ir.Assign object at 0x7f7a6750c990>,
                              302)],
             '$const338.0': [(<numba.core.ir.Assign object at 0x7f7a66f26b10>,
                              338)],
             '$const52.9': [(<numba.core.ir.Assign object at 0x7f7a67530490>,
                             0)],
             '$const74.4': [(<numba.core.ir.Assign object at 0x7f7a675318d0>,
                             62)],
             '$phi350.0': [(<numba.core.ir.Assign object at 0x7f7a66f27410>,
                            338),
                           (<numba.core.ir.Assign object at 0x7f7a6750f790>,
                            348)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a6751df50>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7f7a675b27d0>, 0),
                     (<numba.core.ir.Assign object at 0x7f7a6750cf10>, 302)],
             'b': [(<numba.core.ir.Assign object at 0x7f7a6751d990>, 0)],
             'bool100': [(<numba.core.ir.Assign object at 0x7f7a67532a50>, 98)],
             'bool200': [(<numba.core.ir.Assign object at 0x7f7a675eb190>,
                          190)],
             'bool280': [(<numba.core.ir.Assign object at 0x7f7a6750e910>,
                          270)],
             'bool290': [(<numba.core.ir.Assign object at 0x7f7a6750f4d0>,
                          282)],
             'bool332': [(<numba.core.ir.Assign object at 0x7f7a6750c5d0>,
                          302)],
             'bool336': [(<numba.core.ir.Assign object at 0x7f7a66f27d50>,
                          334)],
             'bool60': [(<numba.core.ir.Assign object at 0x7f7a67531250>, 0)],
             'bool82': [(<numba.core.ir.Assign object at 0x7f7a67531e10>, 62)],
             'exp': [(<numba.core.ir.Assign object at 0x7f7a67531810>, 62),
                     (<numba.core.ir.Assign object at 0x7f7a675eb3d0>, 182),
                     (<numba.core.ir.Assign object at 0x7f7a6750d410>, 302)],
             'invert': [(<numba.core.ir.Assign object at 0x7f7a67531310>, 62),
                        (<numba.core.ir.Assign object at 0x7f7a675eae10>, 182)],
             'r': [(<numba.core.ir.Assign object at 0x7f7a675a7f10>, 0),
                   (<numba.core.ir.Assign object at 0x7f7a6750df50>, 292)]})
2024-06-28 20:38:24,286 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a675e8390>
2024-06-28 20:38:24,286 - DEBUG - Fix SSA violator on var r
2024-06-28 20:38:24,286 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,286 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,286 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,286 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,286 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,286 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,286 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,286 - DEBUG - first assign: r
2024-06-28 20:38:24,286 - DEBUG - replaced with: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,287 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,287 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,287 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,287 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,287 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,287 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,287 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,287 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,287 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,287 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,288 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,288 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,288 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,288 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,288 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,288 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,288 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,288 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,288 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,288 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,288 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,288 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,289 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,289 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,289 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,289 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,289 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,289 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,289 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,289 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,289 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,289 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,289 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,290 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,290 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,290 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,290 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,290 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,290 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,290 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,290 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,290 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,290 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,290 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,291 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,291 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,291 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,291 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,291 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,291 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,291 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,291 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,291 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,291 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,292 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,292 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,292 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,292 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,292 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,292 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,292 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,292 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,292 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,292 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,292 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,292 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,292 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,292 - DEBUG - on stmt: r = $binop_imul296.2
2024-06-28 20:38:24,292 - DEBUG - replaced with: r.1 = $binop_imul296.2
2024-06-28 20:38:24,293 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,293 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,293 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,293 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,293 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,293 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,293 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,293 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-06-28 20:38:24,293 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,293 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,293 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,293 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,293 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,293 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,293 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,294 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,294 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,294 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,294 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,294 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,294 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,294 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-06-28 20:38:24,294 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,294 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,294 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,294 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,294 - DEBUG - on stmt: $phi350.0 = r
2024-06-28 20:38:24,294 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,294 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,294 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6750e090>
2024-06-28 20:38:24,295 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,295 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,295 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a6750e0d0>],
             292: [<numba.core.ir.Assign object at 0x7f7a675ebc10>]})
2024-06-28 20:38:24,295 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,295 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,295 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,295 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,295 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,295 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,295 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,295 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,295 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,295 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,296 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,296 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,296 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,296 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,296 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,296 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,296 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,296 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,296 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,296 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,296 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,296 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,296 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,297 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,297 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,297 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,297 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,297 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,297 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,297 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,297 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,297 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,297 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,297 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,297 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,297 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,297 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,297 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,297 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,298 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,298 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,298 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,298 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,298 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,298 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,298 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,298 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,298 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,298 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,298 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,298 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,298 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,298 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,298 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,299 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,299 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,299 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,299 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,299 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,299 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,299 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,299 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,299 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,299 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,299 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,299 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,299 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,299 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,299 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,299 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,300 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,300 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,300 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,300 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,300 - DEBUG - find_def var='r' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,300 - DEBUG - find_def_from_top label 292
2024-06-28 20:38:24,300 - DEBUG - idom 282 from label 292
2024-06-28 20:38:24,300 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,300 - DEBUG - find_def_from_top label 282
2024-06-28 20:38:24,300 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-06-28 20:38:24,300 - DEBUG - find_def_from_bottom label 302
2024-06-28 20:38:24,300 - DEBUG - find_def_from_top label 302
2024-06-28 20:38:24,300 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 302
2024-06-28 20:38:24,300 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,301 - DEBUG - incoming_def r.2 = phi(incoming_values=[], incoming_blocks=[])
2024-06-28 20:38:24,301 - DEBUG - find_def_from_bottom label 292
2024-06-28 20:38:24,301 - DEBUG - incoming_def r.1 = $binop_imul296.2
2024-06-28 20:38:24,301 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,301 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,301 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,301 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,301 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,301 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,301 - DEBUG - idom 0 from label 190
2024-06-28 20:38:24,301 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:24,301 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,301 - DEBUG - replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,301 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,301 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,302 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,302 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,302 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,302 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,302 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,302 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,302 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-06-28 20:38:24,302 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,302 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,302 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,302 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,302 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,302 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,302 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,303 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,303 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,303 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,303 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,303 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,303 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,303 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-06-28 20:38:24,303 - DEBUG - find_def var='r' stmt=$binop_truediv342.2 = $const338.0 / r
2024-06-28 20:38:24,303 - DEBUG - find_def_from_top label 338
2024-06-28 20:38:24,303 - DEBUG - idom 334 from label 338
2024-06-28 20:38:24,303 - DEBUG - find_def_from_bottom label 334
2024-06-28 20:38:24,303 - DEBUG - find_def_from_top label 334
2024-06-28 20:38:24,303 - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 334
2024-06-28 20:38:24,303 - DEBUG - find_def_from_bottom label 302
2024-06-28 20:38:24,304 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,304 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,304 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,304 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,304 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,304 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,304 - DEBUG - idom 0 from label 190
2024-06-28 20:38:24,304 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:24,304 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,304 - DEBUG - replaced with: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,304 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,304 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,304 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,305 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,305 - DEBUG - on stmt: $phi350.0 = r
2024-06-28 20:38:24,305 - DEBUG - find_def var='r' stmt=$phi350.0 = r
2024-06-28 20:38:24,305 - DEBUG - find_def_from_top label 348
2024-06-28 20:38:24,305 - DEBUG - idom 334 from label 348
2024-06-28 20:38:24,305 - DEBUG - find_def_from_bottom label 334
2024-06-28 20:38:24,305 - DEBUG - replaced with: $phi350.0 = r.4
2024-06-28 20:38:24,305 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,305 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,305 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a6750d590>
2024-06-28 20:38:24,306 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,306 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,306 - DEBUG - Fix SSA violator on var a.1
2024-06-28 20:38:24,306 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,306 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,306 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,306 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,306 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,306 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,306 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,306 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,306 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,307 - DEBUG - first assign: a.1
2024-06-28 20:38:24,307 - DEBUG - replaced with: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,307 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,307 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,307 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,307 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,307 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,307 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,307 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,308 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,308 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,308 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,308 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,308 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,308 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,308 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,308 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,308 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,308 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,308 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,308 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,308 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,309 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,309 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,309 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,309 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,309 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,309 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,309 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,309 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,309 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,309 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,309 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,309 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,309 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,309 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,309 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,309 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,310 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,310 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,310 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,310 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,310 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,310 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,310 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,310 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,310 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,310 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,310 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,310 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,310 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,310 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,311 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,311 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,311 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,311 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,311 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,311 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,311 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,311 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,311 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,311 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,311 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,311 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,311 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,311 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,311 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,312 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,312 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,312 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,312 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,312 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,312 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,312 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,312 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,312 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,312 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,312 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-06-28 20:38:24,312 - DEBUG - replaced with: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,312 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,312 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,312 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,313 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,313 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,313 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,313 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,313 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,313 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,313 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,313 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,313 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,313 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,313 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,313 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,313 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,313 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,314 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,314 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,314 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,314 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,314 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,314 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675e8650>
2024-06-28 20:38:24,314 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,314 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,314 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a6751e950>],
             302: [<numba.core.ir.Assign object at 0x7f7a66f26d50>]})
2024-06-28 20:38:24,314 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,314 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,314 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,314 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,314 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,314 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,315 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,315 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,315 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,315 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,315 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,315 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,315 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,315 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,315 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,315 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,315 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,315 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,315 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,315 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,315 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,316 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,316 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,316 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,316 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,316 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,316 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,316 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,316 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,316 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,316 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,316 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,316 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,317 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,317 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,317 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,317 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,317 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,317 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,317 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,317 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,317 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,317 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,317 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,317 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,317 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,317 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,317 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,318 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,318 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,318 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,318 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,318 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,318 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,318 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,318 - DEBUG - find_def var='a.1' stmt=$258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,318 - DEBUG - find_def_from_top label 202
2024-06-28 20:38:24,318 - DEBUG - idom 190 from label 202
2024-06-28 20:38:24,318 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,318 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,318 - DEBUG - idom 0 from label 190
2024-06-28 20:38:24,318 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:24,319 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,319 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,319 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,319 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,319 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,319 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,319 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,319 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,319 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,319 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,319 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,319 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,319 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,319 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,319 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,320 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,320 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,320 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,320 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,320 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,320 - DEBUG - find_def var='a.1' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,320 - DEBUG - find_def_from_top label 292
2024-06-28 20:38:24,320 - DEBUG - idom 282 from label 292
2024-06-28 20:38:24,320 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,320 - DEBUG - find_def_from_top label 282
2024-06-28 20:38:24,320 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-06-28 20:38:24,321 - DEBUG - find_def_from_bottom label 302
2024-06-28 20:38:24,321 - DEBUG - incoming_def a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,321 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,321 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,321 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,321 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,321 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,321 - DEBUG - idom 0 from label 190
2024-06-28 20:38:24,321 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:24,321 - DEBUG - incoming_def a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,322 - DEBUG - replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,322 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,322 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,322 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,322 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,322 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,322 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,322 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,322 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,322 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,323 - DEBUG - find_def var='a.1' stmt=$binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,323 - DEBUG - find_def_from_top label 302
2024-06-28 20:38:24,323 - DEBUG - idom 282 from label 302
2024-06-28 20:38:24,323 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,323 - DEBUG - replaced with: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,323 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,323 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,323 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,323 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,323 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,323 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,323 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,323 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,324 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,324 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,324 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,324 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,324 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,324 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,324 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,324 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,324 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,324 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,324 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,324 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,324 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,324 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,325 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,325 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6990>
2024-06-28 20:38:24,325 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,325 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,325 - DEBUG - Fix SSA violator on var invert
2024-06-28 20:38:24,325 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,325 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,325 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,325 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,325 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,325 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,325 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,325 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,325 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,325 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,326 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,326 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,326 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,326 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,326 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,326 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,326 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,326 - DEBUG - first assign: invert
2024-06-28 20:38:24,326 - DEBUG - replaced with: invert = const(bool, True)
2024-06-28 20:38:24,326 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,326 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,326 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,326 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,326 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,327 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,327 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,327 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,327 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,327 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,327 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,327 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,327 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,327 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,327 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,327 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,327 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,327 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,327 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,327 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,328 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,328 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,328 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-06-28 20:38:24,328 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,328 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,328 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,328 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,328 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,328 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,328 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,328 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,328 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,328 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,328 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,328 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,329 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,329 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,329 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,329 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,329 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,329 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,329 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,329 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,329 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,329 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,329 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,329 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,329 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,329 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,330 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,330 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,330 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,330 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,330 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,330 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,330 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,330 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,330 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,330 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,330 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,330 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,331 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,331 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,331 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,331 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,331 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,331 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,331 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,331 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,331 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,331 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,331 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,331 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,331 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,332 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,332 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,332 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,332 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,332 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,332 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,332 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,332 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,332 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,332 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,332 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,332 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,332 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,332 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,333 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,333 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,333 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,333 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,333 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a675321d0>
2024-06-28 20:38:24,333 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,333 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,333 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x7f7a67531f90>],
             182: [<numba.core.ir.Assign object at 0x7f7a6751e9d0>]})
2024-06-28 20:38:24,333 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,333 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,333 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,333 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,333 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,333 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,334 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,334 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,334 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,334 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,334 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,334 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,334 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,334 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,334 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,334 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,334 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,334 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,334 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,334 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,335 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,335 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,335 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,335 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,335 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,335 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,335 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,335 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,335 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,335 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,335 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,335 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,335 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,336 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,336 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,336 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,336 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,336 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,336 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,336 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,336 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,336 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,336 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,336 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,336 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,336 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,336 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,337 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,337 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,337 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,337 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,337 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,337 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,337 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,337 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,337 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,337 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,337 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,337 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,337 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,337 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,338 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,338 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,338 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,338 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,338 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,338 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,338 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,338 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,338 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,338 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,338 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,338 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,339 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,339 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,339 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,339 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,339 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,339 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,339 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,339 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,339 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,339 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,339 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,339 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,339 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,339 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,340 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,340 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,340 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,340 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,340 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,340 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,340 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,340 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,340 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,340 - DEBUG - find_def var='invert' stmt=$336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,340 - DEBUG - find_def_from_top label 334
2024-06-28 20:38:24,340 - DEBUG - idom 270 from label 334
2024-06-28 20:38:24,340 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,340 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,341 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,341 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,341 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,341 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-06-28 20:38:24,341 - DEBUG - find_def_from_bottom label 180
2024-06-28 20:38:24,341 - DEBUG - find_def_from_top label 180
2024-06-28 20:38:24,341 - DEBUG - idom 98 from label 180
2024-06-28 20:38:24,341 - DEBUG - find_def_from_bottom label 98
2024-06-28 20:38:24,341 - DEBUG - find_def_from_top label 98
2024-06-28 20:38:24,341 - DEBUG - idom 62 from label 98
2024-06-28 20:38:24,341 - DEBUG - find_def_from_bottom label 62
2024-06-28 20:38:24,341 - DEBUG - incoming_def invert = const(bool, True)
2024-06-28 20:38:24,341 - DEBUG - find_def_from_bottom label 182
2024-06-28 20:38:24,341 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-06-28 20:38:24,342 - DEBUG - replaced with: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,342 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,342 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,342 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,342 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,342 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,342 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,342 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,342 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,342 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,342 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,342 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,342 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,342 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675a6790>
2024-06-28 20:38:24,343 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,343 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,343 - DEBUG - Fix SSA violator on var exp
2024-06-28 20:38:24,343 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,343 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,343 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,343 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,343 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,343 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,343 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,343 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,343 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,343 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,344 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,344 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,344 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,344 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,344 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,344 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,344 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,344 - DEBUG - first assign: exp
2024-06-28 20:38:24,344 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,344 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,344 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,344 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,344 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,344 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,344 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,345 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,345 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,345 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,345 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,345 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,345 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,345 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,345 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,345 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,345 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,345 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,345 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,346 - DEBUG - replaced with: exp.1 = b
2024-06-28 20:38:24,346 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,346 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,346 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,346 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,346 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,346 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,346 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,346 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,346 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,346 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,346 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,346 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,347 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,347 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,347 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,347 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,347 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,347 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,347 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,347 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,347 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,347 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,347 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,347 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,347 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,347 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,348 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,348 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,348 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,348 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,348 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,348 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,348 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,348 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,348 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,348 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,348 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,348 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,348 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,348 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,348 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,348 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,349 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,349 - DEBUG - replaced with: exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,349 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,349 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,349 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,349 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,349 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,349 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,349 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,349 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,349 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,349 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,349 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,349 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,350 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,350 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,350 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,350 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,350 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,350 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,350 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,350 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,350 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,350 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,350 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,350 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,350 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a6751e550>
2024-06-28 20:38:24,351 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,351 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,351 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x7f7a675a6790>],
             182: [<numba.core.ir.Assign object at 0x7f7a66f25a90>],
             302: [<numba.core.ir.Assign object at 0x7f7a66f27b10>]})
2024-06-28 20:38:24,351 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,351 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,351 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,351 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,351 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,351 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,351 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,351 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,351 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,351 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,351 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,352 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,352 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,352 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,352 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,352 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,352 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,352 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,352 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,352 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,352 - DEBUG - find_def var='exp' stmt=$76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,352 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,352 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,353 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,353 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,353 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,353 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,353 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,353 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,353 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,353 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,353 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,353 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,353 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,353 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,353 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,353 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,354 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,354 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,354 - DEBUG - on stmt: exp.1 = b
2024-06-28 20:38:24,354 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,354 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,354 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,354 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,354 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,354 - DEBUG - find_def var='exp' stmt=$194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,354 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,354 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-06-28 20:38:24,354 - DEBUG - find_def_from_bottom label 180
2024-06-28 20:38:24,354 - DEBUG - find_def_from_top label 180
2024-06-28 20:38:24,355 - DEBUG - idom 98 from label 180
2024-06-28 20:38:24,355 - DEBUG - find_def_from_bottom label 98
2024-06-28 20:38:24,355 - DEBUG - find_def_from_top label 98
2024-06-28 20:38:24,355 - DEBUG - idom 62 from label 98
2024-06-28 20:38:24,355 - DEBUG - find_def_from_bottom label 62
2024-06-28 20:38:24,355 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,355 - DEBUG - find_def_from_bottom label 182
2024-06-28 20:38:24,355 - DEBUG - incoming_def exp.1 = b
2024-06-28 20:38:24,355 - DEBUG - replaced with: $194compare_op.2 = exp.3 > $const192.1
2024-06-28 20:38:24,355 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,355 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,355 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,355 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,355 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,356 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,356 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,356 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,356 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,356 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,356 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,356 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,356 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,356 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,356 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,356 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,356 - DEBUG - find_def var='exp' stmt=$274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,356 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,357 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,357 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,357 - DEBUG - replaced with: $274compare_op.2 = exp.3 != $const272.1
2024-06-28 20:38:24,357 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,357 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,357 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,357 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,357 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,357 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,357 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,357 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,357 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,357 - DEBUG - find_def var='exp' stmt=$binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,358 - DEBUG - find_def_from_top label 282
2024-06-28 20:38:24,358 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-06-28 20:38:24,358 - DEBUG - find_def_from_bottom label 302
2024-06-28 20:38:24,358 - DEBUG - incoming_def exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,358 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,358 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,358 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,358 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,358 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,358 - DEBUG - replaced with: $binop_and_286.2 = exp.4 & $const284.1
2024-06-28 20:38:24,358 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,358 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,358 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,358 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,359 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,359 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,359 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,359 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,359 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,359 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,359 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,359 - DEBUG - find_def var='exp' stmt=$binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,359 - DEBUG - find_def_from_top label 302
2024-06-28 20:38:24,359 - DEBUG - idom 282 from label 302
2024-06-28 20:38:24,359 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,359 - DEBUG - replaced with: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,360 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,360 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,360 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,360 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,360 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,360 - DEBUG - find_def var='exp' stmt=$326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,360 - DEBUG - replaced with: $326compare_op.8 = exp.2 != $const324.7
2024-06-28 20:38:24,360 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,360 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,360 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,360 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,360 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,361 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,361 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,361 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,361 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,361 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,361 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,361 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,361 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,361 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,361 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,361 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,361 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,361 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,361 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,361 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f24ed0>
2024-06-28 20:38:24,362 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,362 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,362 - DEBUG - Fix SSA violator on var $phi350.0
2024-06-28 20:38:24,362 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,362 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,362 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,362 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,362 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,362 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,362 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,362 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,362 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,362 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,362 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,362 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,363 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,363 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,363 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,363 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,363 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,363 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,363 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,363 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,363 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,363 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,363 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,363 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,363 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,363 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,364 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,364 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,364 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,364 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,364 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,364 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,364 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,364 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,364 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,364 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,364 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,364 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,364 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,364 - DEBUG - on stmt: exp.1 = b
2024-06-28 20:38:24,365 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,365 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,365 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,365 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,365 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,365 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,365 - DEBUG - on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-06-28 20:38:24,365 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,365 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,365 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,365 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,365 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,365 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,365 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,365 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,366 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,366 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,366 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,366 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,366 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,366 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,366 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,366 - DEBUG - on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-06-28 20:38:24,366 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,366 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,366 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,366 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,366 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,366 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,367 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,367 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,367 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,367 - DEBUG - on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-06-28 20:38:24,367 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,367 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,367 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,367 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,367 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,367 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,367 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,367 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,367 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,367 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,368 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,368 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,368 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,368 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,368 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,368 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,368 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,368 - DEBUG - on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-06-28 20:38:24,368 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,368 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,368 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,368 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,369 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,369 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,369 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,369 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,369 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,369 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,369 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,369 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,369 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,369 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,369 - DEBUG - first assign: $phi350.0
2024-06-28 20:38:24,370 - DEBUG - replaced with: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,370 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,370 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,370 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,370 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,370 - DEBUG - replaced with: $phi350.0.1 = r.4
2024-06-28 20:38:24,370 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,370 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,370 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f266d0>
2024-06-28 20:38:24,370 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,370 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,371 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {338: [<numba.core.ir.Assign object at 0x7f7a66fc33d0>],
             348: [<numba.core.ir.Assign object at 0x7f7a66fc31d0>]})
2024-06-28 20:38:24,371 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,371 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,371 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,371 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,371 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-28 20:38:24,372 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,372 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,372 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float32)
2024-06-28 20:38:24,372 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,372 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,372 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,372 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,372 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,372 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,372 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,372 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,372 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,372 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,373 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,373 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,373 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,373 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,373 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,373 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,373 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,373 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,373 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,373 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,373 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,373 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,373 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,373 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,374 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,374 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,374 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,374 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,374 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,374 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,374 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,374 - DEBUG - on stmt: exp.1 = b
2024-06-28 20:38:24,374 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,374 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,374 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,374 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,374 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,374 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,375 - DEBUG - on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-06-28 20:38:24,375 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,375 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,375 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,375 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,375 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,375 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,375 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,375 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,375 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,375 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,375 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,375 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,375 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,376 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,376 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,376 - DEBUG - on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-06-28 20:38:24,376 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,376 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,376 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,376 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,376 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,376 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,376 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,376 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,376 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,376 - DEBUG - on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-06-28 20:38:24,376 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,377 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,377 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,377 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,377 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,377 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,377 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,377 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,377 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,377 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,377 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,377 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,377 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,377 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,378 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,378 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,378 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,378 - DEBUG - on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-06-28 20:38:24,378 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,378 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,378 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,378 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,378 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,378 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,378 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,378 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,378 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,378 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,378 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,379 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,379 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,379 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,379 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,379 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,379 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,379 - DEBUG - on stmt: $phi350.0.1 = r.4
2024-06-28 20:38:24,379 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,379 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,379 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a67533d90>
2024-06-28 20:38:24,379 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,379 - DEBUG - find_def var='$phi350.0' stmt=$350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,379 - DEBUG - find_def_from_top label 350
2024-06-28 20:38:24,379 - DEBUG - insert phi node $phi350.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 350
2024-06-28 20:38:24,379 - DEBUG - find_def_from_bottom label 338
2024-06-28 20:38:24,380 - DEBUG - incoming_def $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,380 - DEBUG - find_def_from_bottom label 348
2024-06-28 20:38:24,380 - DEBUG - incoming_def $phi350.0.1 = r.4
2024-06-28 20:38:24,380 - DEBUG - replaced with: $350return_value.1 = cast(value=$phi350.0.2)
2024-06-28 20:38:24,380 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,500 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	RESUME(arg=0, lineno=2452)
           4	LOAD_FAST(arg=0, lineno=2457)
           6	LOAD_ATTR(arg=0, lineno=2457)
          16	LOAD_CONST(arg=1, lineno=2457)
          18	BINARY_OP(arg=8, lineno=2457)
          22	LOAD_FAST(arg=0, lineno=2457)
          24	LOAD_ATTR(arg=1, lineno=2457)
          34	LOAD_CONST(arg=1, lineno=2457)
          36	BINARY_OP(arg=8, lineno=2457)
          40	BINARY_OP(arg=0, lineno=2457)
          44	RETURN_VALUE(arg=None, lineno=2457)
2024-06-28 20:38:24,500 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:24,500 - DEBUG - stack: []
2024-06-28 20:38:24,500 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:24,500 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2452)
2024-06-28 20:38:24,500 - DEBUG - stack []
2024-06-28 20:38:24,500 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2452)
2024-06-28 20:38:24,501 - DEBUG - stack []
2024-06-28 20:38:24,501 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2457)
2024-06-28 20:38:24,501 - DEBUG - stack []
2024-06-28 20:38:24,501 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2457)
2024-06-28 20:38:24,501 - DEBUG - stack ['$x4.0']
2024-06-28 20:38:24,501 - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=2457)
2024-06-28 20:38:24,501 - DEBUG - stack ['$6load_attr.1']
2024-06-28 20:38:24,501 - DEBUG - dispatch pc=18, inst=BINARY_OP(arg=8, lineno=2457)
2024-06-28 20:38:24,501 - DEBUG - stack ['$6load_attr.1', '$const16.2']
2024-06-28 20:38:24,501 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2457)
2024-06-28 20:38:24,502 - DEBUG - stack ['$binop_pow18.3']
2024-06-28 20:38:24,502 - DEBUG - dispatch pc=24, inst=LOAD_ATTR(arg=1, lineno=2457)
2024-06-28 20:38:24,502 - DEBUG - stack ['$binop_pow18.3', '$x22.4']
2024-06-28 20:38:24,502 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=2457)
2024-06-28 20:38:24,502 - DEBUG - stack ['$binop_pow18.3', '$24load_attr.5']
2024-06-28 20:38:24,502 - DEBUG - dispatch pc=36, inst=BINARY_OP(arg=8, lineno=2457)
2024-06-28 20:38:24,502 - DEBUG - stack ['$binop_pow18.3', '$24load_attr.5', '$const34.6']
2024-06-28 20:38:24,502 - DEBUG - dispatch pc=40, inst=BINARY_OP(arg=0, lineno=2457)
2024-06-28 20:38:24,502 - DEBUG - stack ['$binop_pow18.3', '$binop_pow36.7']
2024-06-28 20:38:24,503 - DEBUG - dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=2457)
2024-06-28 20:38:24,503 - DEBUG - stack ['$binop_add40.8']
2024-06-28 20:38:24,503 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,503 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:24,503 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:24,503 - DEBUG - defmap: {}
2024-06-28 20:38:24,503 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:24,503 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:24,503 - DEBUG - keep phismap: {}
2024-06-28 20:38:24,503 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:24,503 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:24,504 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$const16.2'}), (18, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const16.2', 'res': '$binop_pow18.3'}), (20, {}), (22, {'res': '$x22.4'}), (24, {'item': '$x22.4', 'res': '$24load_attr.5'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'res': '$const34.6'}), (36, {'op': '**', 'lhs': '$24load_attr.5', 'rhs': '$const34.6', 'res': '$binop_pow36.7'}), (38, {}), (40, {'op': '+', 'lhs': '$binop_pow18.3', 'rhs': '$binop_pow36.7', 'res': '$binop_add40.8'}), (42, {}), (44, {'retval': '$binop_add40.8', 'castval': '$44return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,504 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const16.2 = const(int, 2)               ['$const16.2']
    $binop_pow18.3 = $6load_attr.1 ** $const16.2 ['$6load_attr.1', '$binop_pow18.3', '$const16.2']
    $24load_attr.5 = getattr(value=x, attr=imag) ['$24load_attr.5', 'x']
    $const34.6 = const(int, 2)               ['$const34.6']
    $binop_pow36.7 = $24load_attr.5 ** $const34.6 ['$24load_attr.5', '$binop_pow36.7', '$const34.6']
    $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7 ['$binop_add40.8', '$binop_pow18.3', '$binop_pow36.7']
    $44return_value.9 = cast(value=$binop_add40.8) ['$44return_value.9', '$binop_add40.8']
    return $44return_value.9                 ['$44return_value.9']

2024-06-28 20:38:24,508 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:24,508 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70910>
2024-06-28 20:38:24,508 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:24,508 - DEBUG - on stmt: $6load_attr.1 = getattr(value=x, attr=real)
2024-06-28 20:38:24,508 - DEBUG - on stmt: $const16.2 = const(int, 2)
2024-06-28 20:38:24,509 - DEBUG - on stmt: $binop_pow18.3 = $6load_attr.1 ** $const16.2
2024-06-28 20:38:24,509 - DEBUG - on stmt: $24load_attr.5 = getattr(value=x, attr=imag)
2024-06-28 20:38:24,509 - DEBUG - on stmt: $const34.6 = const(int, 2)
2024-06-28 20:38:24,509 - DEBUG - on stmt: $binop_pow36.7 = $24load_attr.5 ** $const34.6
2024-06-28 20:38:24,509 - DEBUG - on stmt: $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7
2024-06-28 20:38:24,509 - DEBUG - on stmt: $44return_value.9 = cast(value=$binop_add40.8)
2024-06-28 20:38:24,509 - DEBUG - on stmt: return $44return_value.9
2024-06-28 20:38:24,510 - DEBUG - defs defaultdict(<class 'list'>,
            {'$24load_attr.5': [(<numba.core.ir.Assign object at 0x7f7a66f20d50>,
                                 0)],
             '$44return_value.9': [(<numba.core.ir.Assign object at 0x7f7a66f738d0>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x7f7a66f20410>,
                                0)],
             '$binop_add40.8': [(<numba.core.ir.Assign object at 0x7f7a66f737d0>,
                                 0)],
             '$binop_pow18.3': [(<numba.core.ir.Assign object at 0x7f7a66f22e50>,
                                 0)],
             '$binop_pow36.7': [(<numba.core.ir.Assign object at 0x7f7a66f21050>,
                                 0)],
             '$const16.2': [(<numba.core.ir.Assign object at 0x7f7a66f207d0>,
                             0)],
             '$const34.6': [(<numba.core.ir.Assign object at 0x7f7a66f20a90>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a66f21190>, 0)]})
2024-06-28 20:38:24,510 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a66f70910>
2024-06-28 20:38:24,518 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	PRECALL(arg=1, lineno=216)
          16	CALL(arg=1, lineno=216)
          26	STORE_FAST(arg=2, lineno=216)
          28	PUSH_NULL(arg=None, lineno=217)
          30	LOAD_DEREF(arg=6, lineno=217)
          32	LOAD_FAST(arg=0, lineno=217)
          34	PRECALL(arg=1, lineno=217)
          38	CALL(arg=1, lineno=217)
          48	STORE_FAST(arg=0, lineno=217)
          50	LOAD_FAST(arg=1, lineno=218)
          52	LOAD_CONST(arg=2, lineno=218)
          54	COMPARE_OP(arg=0, lineno=218)
          60	POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
          62	LOAD_CONST(arg=3, lineno=219)
          64	STORE_FAST(arg=3, lineno=219)
          66	LOAD_FAST(arg=1, lineno=220)
          68	UNARY_NEGATIVE(arg=None, lineno=220)
          70	STORE_FAST(arg=4, lineno=220)
          72	LOAD_FAST(arg=4, lineno=221)
          74	LOAD_CONST(arg=2, lineno=221)
          76	COMPARE_OP(arg=0, lineno=221)
          82	POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
          84	LOAD_GLOBAL(arg=0, lineno=222)
          96	RAISE_VARARGS(arg=1, lineno=222)
>         98	LOAD_DEREF(arg=5, lineno=223)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
         102	LOAD_FAST(arg=0, lineno=224)
         104	LOAD_CONST(arg=2, lineno=224)
         106	COMPARE_OP(arg=2, lineno=224)
         112	POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
         114	LOAD_DEREF(arg=7, lineno=225)
         116	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
         118	LOAD_DEREF(arg=7, lineno=226)
         120	RETURN_VALUE(arg=None, lineno=226)
>        122	LOAD_GLOBAL(arg=3, lineno=228)
         134	LOAD_CONST(arg=4, lineno=228)
         136	PRECALL(arg=1, lineno=228)
         140	CALL(arg=1, lineno=228)
         150	RAISE_VARARGS(arg=1, lineno=228)
>        152	LOAD_FAST(arg=0, lineno=229)
         154	LOAD_CONST(arg=1, lineno=229)
         156	COMPARE_OP(arg=3, lineno=229)
         162	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
         164	LOAD_FAST(arg=0, lineno=229)
         166	LOAD_CONST(arg=5, lineno=229)
         168	COMPARE_OP(arg=3, lineno=229)
         174	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
         176	LOAD_CONST(arg=2, lineno=230)
         178	RETURN_VALUE(arg=None, lineno=230)
>        180	JUMP_FORWARD(arg=4, lineno=230)
>        182	LOAD_CONST(arg=6, lineno=232)
         184	STORE_FAST(arg=3, lineno=232)
         186	LOAD_FAST(arg=1, lineno=233)
         188	STORE_FAST(arg=4, lineno=233)
>        190	LOAD_FAST(arg=4, lineno=234)
         192	LOAD_CONST(arg=7, lineno=234)
         194	COMPARE_OP(arg=4, lineno=234)
         200	POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
         202	LOAD_GLOBAL(arg=5, lineno=236)
         214	LOAD_ATTR(arg=3, lineno=236)
         224	LOAD_FAST(arg=0, lineno=236)
         226	LOAD_GLOBAL(arg=9, lineno=236)
         238	LOAD_FAST(arg=1, lineno=236)
         240	PRECALL(arg=1, lineno=236)
         244	CALL(arg=1, lineno=236)
         254	PRECALL(arg=2, lineno=236)
         258	CALL(arg=2, lineno=236)
         268	RETURN_VALUE(arg=None, lineno=236)
>        270	LOAD_FAST(arg=4, lineno=237)
         272	LOAD_CONST(arg=2, lineno=237)
         274	COMPARE_OP(arg=3, lineno=237)
         280	POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
>        282	LOAD_FAST(arg=4, lineno=238)
         284	LOAD_CONST(arg=1, lineno=238)
         286	BINARY_OP(arg=1, lineno=238)
         290	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
         292	LOAD_FAST(arg=2, lineno=239)
         294	LOAD_FAST(arg=0, lineno=239)
         296	BINARY_OP(arg=18, lineno=239)
         300	STORE_FAST(arg=2, lineno=239)
>        302	LOAD_FAST(arg=4, lineno=240)
         304	LOAD_CONST(arg=1, lineno=240)
         306	BINARY_OP(arg=22, lineno=240)
         310	STORE_FAST(arg=4, lineno=240)
         312	LOAD_FAST(arg=0, lineno=241)
         314	LOAD_FAST(arg=0, lineno=241)
         316	BINARY_OP(arg=18, lineno=241)
         320	STORE_FAST(arg=0, lineno=241)
         322	LOAD_FAST(arg=4, lineno=237)
         324	LOAD_CONST(arg=2, lineno=237)
         326	COMPARE_OP(arg=3, lineno=237)
         332	POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
>        334	LOAD_FAST(arg=3, lineno=243)
         336	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
         338	LOAD_CONST(arg=8, lineno=243)
         340	LOAD_FAST(arg=2, lineno=243)
         342	BINARY_OP(arg=11, lineno=243)
         346	JUMP_FORWARD(arg=1, lineno=243)
>        348	LOAD_FAST(arg=2, lineno=243)
>        350	RETURN_VALUE(arg=None, lineno=243)
2024-06-28 20:38:24,519 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:24,519 - DEBUG - stack: []
2024-06-28 20:38:24,519 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:24,519 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2024-06-28 20:38:24,519 - DEBUG - stack []
2024-06-28 20:38:24,519 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
2024-06-28 20:38:24,519 - DEBUG - stack []
2024-06-28 20:38:24,519 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=214)
2024-06-28 20:38:24,519 - DEBUG - stack []
2024-06-28 20:38:24,519 - DEBUG - dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
2024-06-28 20:38:24,519 - DEBUG - stack []
2024-06-28 20:38:24,519 - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
2024-06-28 20:38:24,519 - DEBUG - stack ['$null$6.0']
2024-06-28 20:38:24,519 - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
2024-06-28 20:38:24,520 - DEBUG - stack ['$null$6.0', '$8load_deref.1']
2024-06-28 20:38:24,520 - DEBUG - dispatch pc=12, inst=PRECALL(arg=1, lineno=216)
2024-06-28 20:38:24,520 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-06-28 20:38:24,520 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=216)
2024-06-28 20:38:24,520 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-06-28 20:38:24,520 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=2, lineno=216)
2024-06-28 20:38:24,520 - DEBUG - stack ['$16call.3']
2024-06-28 20:38:24,520 - DEBUG - dispatch pc=28, inst=PUSH_NULL(arg=None, lineno=217)
2024-06-28 20:38:24,520 - DEBUG - stack []
2024-06-28 20:38:24,520 - DEBUG - dispatch pc=30, inst=LOAD_DEREF(arg=6, lineno=217)
2024-06-28 20:38:24,520 - DEBUG - stack ['$null$28.4']
2024-06-28 20:38:24,520 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=217)
2024-06-28 20:38:24,520 - DEBUG - stack ['$null$28.4', '$30load_deref.5']
2024-06-28 20:38:24,520 - DEBUG - dispatch pc=34, inst=PRECALL(arg=1, lineno=217)
2024-06-28 20:38:24,520 - DEBUG - stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-06-28 20:38:24,521 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=217)
2024-06-28 20:38:24,521 - DEBUG - stack ['$null$28.4', '$30load_deref.5', '$a32.6']
2024-06-28 20:38:24,521 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=0, lineno=217)
2024-06-28 20:38:24,521 - DEBUG - stack ['$38call.7']
2024-06-28 20:38:24,521 - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=218)
2024-06-28 20:38:24,521 - DEBUG - stack []
2024-06-28 20:38:24,521 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=218)
2024-06-28 20:38:24,521 - DEBUG - stack ['$b50.8']
2024-06-28 20:38:24,521 - DEBUG - dispatch pc=54, inst=COMPARE_OP(arg=0, lineno=218)
2024-06-28 20:38:24,521 - DEBUG - stack ['$b50.8', '$const52.9']
2024-06-28 20:38:24,521 - DEBUG - dispatch pc=60, inst=POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
2024-06-28 20:38:24,521 - DEBUG - stack ['$54compare_op.10']
2024-06-28 20:38:24,521 - DEBUG - end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,522 - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
2024-06-28 20:38:24,522 - DEBUG - stack: []
2024-06-28 20:38:24,522 - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=0)
2024-06-28 20:38:24,522 - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=219)
2024-06-28 20:38:24,522 - DEBUG - stack []
2024-06-28 20:38:24,522 - DEBUG - dispatch pc=64, inst=STORE_FAST(arg=3, lineno=219)
2024-06-28 20:38:24,522 - DEBUG - stack ['$const62.0']
2024-06-28 20:38:24,522 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=220)
2024-06-28 20:38:24,522 - DEBUG - stack []
2024-06-28 20:38:24,522 - DEBUG - dispatch pc=68, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-06-28 20:38:24,522 - DEBUG - stack ['$b66.1']
2024-06-28 20:38:24,522 - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=220)
2024-06-28 20:38:24,522 - DEBUG - stack ['$68unary_negative.2']
2024-06-28 20:38:24,522 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=221)
2024-06-28 20:38:24,522 - DEBUG - stack []
2024-06-28 20:38:24,523 - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=221)
2024-06-28 20:38:24,523 - DEBUG - stack ['$exp72.3']
2024-06-28 20:38:24,523 - DEBUG - dispatch pc=76, inst=COMPARE_OP(arg=0, lineno=221)
2024-06-28 20:38:24,523 - DEBUG - stack ['$exp72.3', '$const74.4']
2024-06-28 20:38:24,523 - DEBUG - dispatch pc=82, inst=POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
2024-06-28 20:38:24,523 - DEBUG - stack ['$76compare_op.5']
2024-06-28 20:38:24,523 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,523 - DEBUG - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2024-06-28 20:38:24,523 - DEBUG - stack: []
2024-06-28 20:38:24,523 - DEBUG - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2024-06-28 20:38:24,523 - DEBUG - dispatch pc=182, inst=LOAD_CONST(arg=6, lineno=232)
2024-06-28 20:38:24,523 - DEBUG - stack []
2024-06-28 20:38:24,524 - DEBUG - dispatch pc=184, inst=STORE_FAST(arg=3, lineno=232)
2024-06-28 20:38:24,524 - DEBUG - stack ['$const182.0']
2024-06-28 20:38:24,524 - DEBUG - dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=233)
2024-06-28 20:38:24,524 - DEBUG - stack []
2024-06-28 20:38:24,524 - DEBUG - dispatch pc=188, inst=STORE_FAST(arg=4, lineno=233)
2024-06-28 20:38:24,524 - DEBUG - stack ['$b186.1']
2024-06-28 20:38:24,524 - DEBUG - end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,524 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-06-28 20:38:24,524 - DEBUG - stack: []
2024-06-28 20:38:24,524 - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2024-06-28 20:38:24,524 - DEBUG - dispatch pc=84, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-06-28 20:38:24,524 - DEBUG - stack []
2024-06-28 20:38:24,524 - DEBUG - dispatch pc=96, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-06-28 20:38:24,524 - DEBUG - stack ['$84load_global.0']
2024-06-28 20:38:24,525 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,525 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-06-28 20:38:24,525 - DEBUG - stack: []
2024-06-28 20:38:24,525 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2024-06-28 20:38:24,525 - DEBUG - dispatch pc=98, inst=LOAD_DEREF(arg=5, lineno=223)
2024-06-28 20:38:24,525 - DEBUG - stack []
2024-06-28 20:38:24,525 - DEBUG - dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
2024-06-28 20:38:24,525 - DEBUG - stack ['$98load_deref.0']
2024-06-28 20:38:24,525 - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,525 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,525 - DEBUG - stack: []
2024-06-28 20:38:24,525 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2024-06-28 20:38:24,525 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=4, lineno=234)
2024-06-28 20:38:24,525 - DEBUG - stack []
2024-06-28 20:38:24,525 - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=7, lineno=234)
2024-06-28 20:38:24,526 - DEBUG - stack ['$exp190.0']
2024-06-28 20:38:24,526 - DEBUG - dispatch pc=194, inst=COMPARE_OP(arg=4, lineno=234)
2024-06-28 20:38:24,526 - DEBUG - stack ['$exp190.0', '$const192.1']
2024-06-28 20:38:24,526 - DEBUG - dispatch pc=200, inst=POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
2024-06-28 20:38:24,526 - DEBUG - stack ['$194compare_op.2']
2024-06-28 20:38:24,526 - DEBUG - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=270, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,526 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0)])
2024-06-28 20:38:24,526 - DEBUG - stack: []
2024-06-28 20:38:24,526 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-06-28 20:38:24,526 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=224)
2024-06-28 20:38:24,526 - DEBUG - stack []
2024-06-28 20:38:24,526 - DEBUG - dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=224)
2024-06-28 20:38:24,526 - DEBUG - stack ['$a102.0']
2024-06-28 20:38:24,526 - DEBUG - dispatch pc=106, inst=COMPARE_OP(arg=2, lineno=224)
2024-06-28 20:38:24,526 - DEBUG - stack ['$a102.0', '$const104.1']
2024-06-28 20:38:24,527 - DEBUG - dispatch pc=112, inst=POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
2024-06-28 20:38:24,527 - DEBUG - stack ['$106compare_op.2']
2024-06-28 20:38:24,527 - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,527 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
2024-06-28 20:38:24,527 - DEBUG - stack: []
2024-06-28 20:38:24,527 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=0)
2024-06-28 20:38:24,528 - DEBUG - dispatch pc=180, inst=JUMP_FORWARD(arg=4, lineno=230)
2024-06-28 20:38:24,528 - DEBUG - stack []
2024-06-28 20:38:24,528 - DEBUG - end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,528 - DEBUG - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-06-28 20:38:24,528 - DEBUG - stack: []
2024-06-28 20:38:24,528 - DEBUG - state.pc_initial: State(pc_initial=202 nstack_initial=0)
2024-06-28 20:38:24,528 - DEBUG - dispatch pc=202, inst=LOAD_GLOBAL(arg=5, lineno=236)
2024-06-28 20:38:24,528 - DEBUG - stack []
2024-06-28 20:38:24,528 - DEBUG - dispatch pc=214, inst=LOAD_ATTR(arg=3, lineno=236)
2024-06-28 20:38:24,528 - DEBUG - stack ['$null$202.1', '$202load_global.0']
2024-06-28 20:38:24,528 - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=236)
2024-06-28 20:38:24,528 - DEBUG - stack ['$null$202.1', '$214load_attr.2']
2024-06-28 20:38:24,528 - DEBUG - dispatch pc=226, inst=LOAD_GLOBAL(arg=9, lineno=236)
2024-06-28 20:38:24,529 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3']
2024-06-28 20:38:24,529 - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=236)
2024-06-28 20:38:24,529 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4']
2024-06-28 20:38:24,529 - DEBUG - dispatch pc=240, inst=PRECALL(arg=1, lineno=236)
2024-06-28 20:38:24,529 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-06-28 20:38:24,529 - DEBUG - dispatch pc=244, inst=CALL(arg=1, lineno=236)
2024-06-28 20:38:24,529 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
2024-06-28 20:38:24,529 - DEBUG - dispatch pc=254, inst=PRECALL(arg=2, lineno=236)
2024-06-28 20:38:24,529 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-06-28 20:38:24,529 - DEBUG - dispatch pc=258, inst=CALL(arg=2, lineno=236)
2024-06-28 20:38:24,529 - DEBUG - stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
2024-06-28 20:38:24,529 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=236)
2024-06-28 20:38:24,530 - DEBUG - stack ['$258call.8']
2024-06-28 20:38:24,530 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,530 - DEBUG - pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2024-06-28 20:38:24,530 - DEBUG - stack: []
2024-06-28 20:38:24,530 - DEBUG - state.pc_initial: State(pc_initial=270 nstack_initial=0)
2024-06-28 20:38:24,530 - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=4, lineno=237)
2024-06-28 20:38:24,530 - DEBUG - stack []
2024-06-28 20:38:24,530 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=2, lineno=237)
2024-06-28 20:38:24,530 - DEBUG - stack ['$exp270.0']
2024-06-28 20:38:24,530 - DEBUG - dispatch pc=274, inst=COMPARE_OP(arg=3, lineno=237)
2024-06-28 20:38:24,530 - DEBUG - stack ['$exp270.0', '$const272.1']
2024-06-28 20:38:24,531 - DEBUG - dispatch pc=280, inst=POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
2024-06-28 20:38:24,531 - DEBUG - stack ['$274compare_op.2']
2024-06-28 20:38:24,531 - DEBUG - end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0), Edge(pc=334, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,531 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0)])
2024-06-28 20:38:24,531 - DEBUG - stack: []
2024-06-28 20:38:24,531 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2024-06-28 20:38:24,531 - DEBUG - dispatch pc=114, inst=LOAD_DEREF(arg=7, lineno=225)
2024-06-28 20:38:24,531 - DEBUG - stack []
2024-06-28 20:38:24,531 - DEBUG - dispatch pc=116, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
2024-06-28 20:38:24,531 - DEBUG - stack ['$114load_deref.0']
2024-06-28 20:38:24,531 - DEBUG - end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,531 - DEBUG - pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2024-06-28 20:38:24,532 - DEBUG - stack: []
2024-06-28 20:38:24,532 - DEBUG - state.pc_initial: State(pc_initial=152 nstack_initial=0)
2024-06-28 20:38:24,532 - DEBUG - dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=229)
2024-06-28 20:38:24,532 - DEBUG - stack []
2024-06-28 20:38:24,532 - DEBUG - dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=229)
2024-06-28 20:38:24,532 - DEBUG - stack ['$a152.0']
2024-06-28 20:38:24,532 - DEBUG - dispatch pc=156, inst=COMPARE_OP(arg=3, lineno=229)
2024-06-28 20:38:24,532 - DEBUG - stack ['$a152.0', '$const154.1']
2024-06-28 20:38:24,532 - DEBUG - dispatch pc=162, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
2024-06-28 20:38:24,532 - DEBUG - stack ['$156compare_op.2']
2024-06-28 20:38:24,532 - DEBUG - end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,532 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,532 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,532 - DEBUG - stack: []
2024-06-28 20:38:24,532 - DEBUG - state.pc_initial: State(pc_initial=282 nstack_initial=0)
2024-06-28 20:38:24,533 - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=238)
2024-06-28 20:38:24,533 - DEBUG - stack []
2024-06-28 20:38:24,533 - DEBUG - dispatch pc=284, inst=LOAD_CONST(arg=1, lineno=238)
2024-06-28 20:38:24,533 - DEBUG - stack ['$exp282.0']
2024-06-28 20:38:24,533 - DEBUG - dispatch pc=286, inst=BINARY_OP(arg=1, lineno=238)
2024-06-28 20:38:24,533 - DEBUG - stack ['$exp282.0', '$const284.1']
2024-06-28 20:38:24,533 - DEBUG - dispatch pc=290, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
2024-06-28 20:38:24,533 - DEBUG - stack ['$binop_and_286.2']
2024-06-28 20:38:24,533 - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,533 - DEBUG - pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-28 20:38:24,533 - DEBUG - stack: []
2024-06-28 20:38:24,533 - DEBUG - state.pc_initial: State(pc_initial=334 nstack_initial=0)
2024-06-28 20:38:24,533 - DEBUG - dispatch pc=334, inst=LOAD_FAST(arg=3, lineno=243)
2024-06-28 20:38:24,533 - DEBUG - stack []
2024-06-28 20:38:24,534 - DEBUG - dispatch pc=336, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
2024-06-28 20:38:24,534 - DEBUG - stack ['$invert334.0']
2024-06-28 20:38:24,534 - DEBUG - end state. edges=[Edge(pc=338, stack=(), blockstack=(), npush=0), Edge(pc=348, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,534 - DEBUG - pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-06-28 20:38:24,534 - DEBUG - stack: []
2024-06-28 20:38:24,534 - DEBUG - state.pc_initial: State(pc_initial=118 nstack_initial=0)
2024-06-28 20:38:24,534 - DEBUG - dispatch pc=118, inst=LOAD_DEREF(arg=7, lineno=226)
2024-06-28 20:38:24,534 - DEBUG - stack []
2024-06-28 20:38:24,534 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=226)
2024-06-28 20:38:24,534 - DEBUG - stack ['$118load_deref.0']
2024-06-28 20:38:24,534 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,534 - DEBUG - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-06-28 20:38:24,534 - DEBUG - stack: []
2024-06-28 20:38:24,534 - DEBUG - state.pc_initial: State(pc_initial=122 nstack_initial=0)
2024-06-28 20:38:24,534 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=3, lineno=228)
2024-06-28 20:38:24,534 - DEBUG - stack []
2024-06-28 20:38:24,535 - DEBUG - dispatch pc=134, inst=LOAD_CONST(arg=4, lineno=228)
2024-06-28 20:38:24,535 - DEBUG - stack ['$null$122.1', '$122load_global.0']
2024-06-28 20:38:24,535 - DEBUG - dispatch pc=136, inst=PRECALL(arg=1, lineno=228)
2024-06-28 20:38:24,535 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-06-28 20:38:24,535 - DEBUG - dispatch pc=140, inst=CALL(arg=1, lineno=228)
2024-06-28 20:38:24,535 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$const134.2']
2024-06-28 20:38:24,535 - DEBUG - dispatch pc=150, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-06-28 20:38:24,535 - DEBUG - stack ['$140call.3']
2024-06-28 20:38:24,535 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,535 - DEBUG - pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
2024-06-28 20:38:24,535 - DEBUG - stack: []
2024-06-28 20:38:24,535 - DEBUG - state.pc_initial: State(pc_initial=164 nstack_initial=0)
2024-06-28 20:38:24,535 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=229)
2024-06-28 20:38:24,535 - DEBUG - stack []
2024-06-28 20:38:24,536 - DEBUG - dispatch pc=166, inst=LOAD_CONST(arg=5, lineno=229)
2024-06-28 20:38:24,536 - DEBUG - stack ['$a164.0']
2024-06-28 20:38:24,536 - DEBUG - dispatch pc=168, inst=COMPARE_OP(arg=3, lineno=229)
2024-06-28 20:38:24,536 - DEBUG - stack ['$a164.0', '$const166.1']
2024-06-28 20:38:24,536 - DEBUG - dispatch pc=174, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
2024-06-28 20:38:24,536 - DEBUG - stack ['$168compare_op.2']
2024-06-28 20:38:24,536 - DEBUG - end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,536 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,536 - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
2024-06-28 20:38:24,536 - DEBUG - stack: []
2024-06-28 20:38:24,536 - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2024-06-28 20:38:24,536 - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=239)
2024-06-28 20:38:24,536 - DEBUG - stack []
2024-06-28 20:38:24,536 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=0, lineno=239)
2024-06-28 20:38:24,536 - DEBUG - stack ['$r292.0']
2024-06-28 20:38:24,537 - DEBUG - dispatch pc=296, inst=BINARY_OP(arg=18, lineno=239)
2024-06-28 20:38:24,537 - DEBUG - stack ['$r292.0', '$a294.1']
2024-06-28 20:38:24,537 - DEBUG - dispatch pc=300, inst=STORE_FAST(arg=2, lineno=239)
2024-06-28 20:38:24,537 - DEBUG - stack ['$binop_imul296.2']
2024-06-28 20:38:24,537 - DEBUG - end state. edges=[Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,537 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-28 20:38:24,537 - DEBUG - stack: []
2024-06-28 20:38:24,537 - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2024-06-28 20:38:24,537 - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=4, lineno=240)
2024-06-28 20:38:24,537 - DEBUG - stack []
2024-06-28 20:38:24,537 - DEBUG - dispatch pc=304, inst=LOAD_CONST(arg=1, lineno=240)
2024-06-28 20:38:24,537 - DEBUG - stack ['$exp302.0']
2024-06-28 20:38:24,537 - DEBUG - dispatch pc=306, inst=BINARY_OP(arg=22, lineno=240)
2024-06-28 20:38:24,537 - DEBUG - stack ['$exp302.0', '$const304.1']
2024-06-28 20:38:24,538 - DEBUG - dispatch pc=310, inst=STORE_FAST(arg=4, lineno=240)
2024-06-28 20:38:24,538 - DEBUG - stack ['$binop_irshift306.2']
2024-06-28 20:38:24,538 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=0, lineno=241)
2024-06-28 20:38:24,538 - DEBUG - stack []
2024-06-28 20:38:24,538 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=0, lineno=241)
2024-06-28 20:38:24,538 - DEBUG - stack ['$a312.3']
2024-06-28 20:38:24,538 - DEBUG - dispatch pc=316, inst=BINARY_OP(arg=18, lineno=241)
2024-06-28 20:38:24,538 - DEBUG - stack ['$a312.3', '$a314.4']
2024-06-28 20:38:24,538 - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=0, lineno=241)
2024-06-28 20:38:24,538 - DEBUG - stack ['$binop_imul316.5']
2024-06-28 20:38:24,538 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=4, lineno=237)
2024-06-28 20:38:24,538 - DEBUG - stack []
2024-06-28 20:38:24,538 - DEBUG - dispatch pc=324, inst=LOAD_CONST(arg=2, lineno=237)
2024-06-28 20:38:24,538 - DEBUG - stack ['$exp322.6']
2024-06-28 20:38:24,538 - DEBUG - dispatch pc=326, inst=COMPARE_OP(arg=3, lineno=237)
2024-06-28 20:38:24,539 - DEBUG - stack ['$exp322.6', '$const324.7']
2024-06-28 20:38:24,539 - DEBUG - dispatch pc=332, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
2024-06-28 20:38:24,539 - DEBUG - stack ['$326compare_op.8']
2024-06-28 20:38:24,539 - DEBUG - end state. edges=[Edge(pc=334, stack=(), blockstack=(), npush=0), Edge(pc=282, stack=(), blockstack=(), npush=0)]
2024-06-28 20:38:24,539 - DEBUG - pending: deque([State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0)])
2024-06-28 20:38:24,539 - DEBUG - stack: []
2024-06-28 20:38:24,539 - DEBUG - state.pc_initial: State(pc_initial=338 nstack_initial=0)
2024-06-28 20:38:24,539 - DEBUG - dispatch pc=338, inst=LOAD_CONST(arg=8, lineno=243)
2024-06-28 20:38:24,539 - DEBUG - stack []
2024-06-28 20:38:24,539 - DEBUG - dispatch pc=340, inst=LOAD_FAST(arg=2, lineno=243)
2024-06-28 20:38:24,539 - DEBUG - stack ['$const338.0']
2024-06-28 20:38:24,539 - DEBUG - dispatch pc=342, inst=BINARY_OP(arg=11, lineno=243)
2024-06-28 20:38:24,539 - DEBUG - stack ['$const338.0', '$r340.1']
2024-06-28 20:38:24,539 - DEBUG - dispatch pc=346, inst=JUMP_FORWARD(arg=1, lineno=243)
2024-06-28 20:38:24,539 - DEBUG - stack ['$binop_truediv342.2']
2024-06-28 20:38:24,540 - DEBUG - end state. edges=[Edge(pc=350, stack=('$binop_truediv342.2',), blockstack=(), npush=0)]
2024-06-28 20:38:24,540 - DEBUG - pending: deque([State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,540 - DEBUG - stack: []
2024-06-28 20:38:24,540 - DEBUG - state.pc_initial: State(pc_initial=348 nstack_initial=0)
2024-06-28 20:38:24,540 - DEBUG - dispatch pc=348, inst=LOAD_FAST(arg=2, lineno=243)
2024-06-28 20:38:24,540 - DEBUG - stack []
2024-06-28 20:38:24,540 - DEBUG - end state. edges=[Edge(pc=350, stack=('$r348.0',), blockstack=(), npush=0)]
2024-06-28 20:38:24,540 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,540 - DEBUG - stack: []
2024-06-28 20:38:24,540 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=0)
2024-06-28 20:38:24,540 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=230)
2024-06-28 20:38:24,540 - DEBUG - stack []
2024-06-28 20:38:24,540 - DEBUG - dispatch pc=178, inst=RETURN_VALUE(arg=None, lineno=230)
2024-06-28 20:38:24,540 - DEBUG - stack ['$const176.0']
2024-06-28 20:38:24,541 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,541 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,541 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,541 - DEBUG - pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,541 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,541 - DEBUG - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,541 - DEBUG - stack: ['$phi350.0']
2024-06-28 20:38:24,541 - DEBUG - state.pc_initial: State(pc_initial=350 nstack_initial=1)
2024-06-28 20:38:24,541 - DEBUG - dispatch pc=350, inst=RETURN_VALUE(arg=None, lineno=243)
2024-06-28 20:38:24,541 - DEBUG - stack ['$phi350.0']
2024-06-28 20:38:24,541 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,541 - DEBUG - pending: deque([State(pc_initial=350 nstack_initial=1)])
2024-06-28 20:38:24,541 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:24,542 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=270 nstack_initial=0): set(),
             State(pc_initial=282 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=334 nstack_initial=0): set(),
             State(pc_initial=338 nstack_initial=0): set(),
             State(pc_initial=348 nstack_initial=0): set(),
             State(pc_initial=350 nstack_initial=1): {'$phi350.0'}})
2024-06-28 20:38:24,542 - DEBUG - defmap: {'$phi350.0': State(pc_initial=348 nstack_initial=0)}
2024-06-28 20:38:24,542 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-06-28 20:38:24,542 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
2024-06-28 20:38:24,543 - DEBUG - keep phismap: {'$phi350.0': {('$binop_truediv342.2', State(pc_initial=338 nstack_initial=0)),
               ('$r348.0', State(pc_initial=348 nstack_initial=0))}}
2024-06-28 20:38:24,543 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=338 nstack_initial=0): {'$phi350.0': '$binop_truediv342.2'},
             State(pc_initial=348 nstack_initial=0): {'$phi350.0': '$r348.0'}})
2024-06-28 20:38:24,543 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:24,543 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2'}), (12, {}), (14, {}), (16, {'func': '$8load_deref.1', 'args': ['$const10.2'], 'kw_names': None, 'res': '$16call.3'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'value': '$16call.3'}), (28, {}), (30, {'res': '$30load_deref.5'}), (32, {'res': '$a32.6'}), (34, {}), (36, {}), (38, {'func': '$30load_deref.5', 'args': ['$a32.6'], 'kw_names': None, 'res': '$38call.7'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.7'}), (50, {'res': '$b50.8'}), (52, {'res': '$const52.9'}), (54, {'lhs': '$b50.8', 'rhs': '$const52.9', 'res': '$54compare_op.10'}), (56, {}), (58, {}), (60, {'pred': '$54compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 182: ()})
2024-06-28 20:38:24,543 - DEBUG - block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0'}), (64, {'value': '$const62.0'}), (66, {'res': '$b66.1'}), (68, {'value': '$b66.1', 'res': '$68unary_negative.2'}), (70, {'value': '$68unary_negative.2'}), (72, {'res': '$exp72.3'}), (74, {'res': '$const74.4'}), (76, {'lhs': '$exp72.3', 'rhs': '$const74.4', 'res': '$76compare_op.5'}), (78, {}), (80, {}), (82, {'pred': '$76compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 98: ()})
2024-06-28 20:38:24,543 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'idx': 0, 'res': '$84load_global.0'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'exc': '$84load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'pred': '$98load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 180: ()})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$a102.0'}), (104, {'res': '$const104.1'}), (106, {'lhs': '$a102.0', 'rhs': '$const104.1', 'res': '$106compare_op.2'}), (108, {}), (110, {}), (112, {'pred': '$106compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 152: ()})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_deref.0'}), (116, {'pred': '$114load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: (), 122: ()})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$118load_deref.0'}), (120, {'retval': '$118load_deref.0', 'castval': '$120return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'idx': 1, 'res': '$122load_global.0'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'res': '$const134.2'}), (136, {}), (138, {}), (140, {'func': '$122load_global.0', 'args': ['$const134.2'], 'kw_names': None, 'res': '$140call.3'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'exc': '$140call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$a152.0'}), (154, {'res': '$const154.1'}), (156, {'lhs': '$a152.0', 'rhs': '$const154.1', 'res': '$156compare_op.2'}), (158, {}), (160, {}), (162, {'pred': '$156compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 180: ()})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'res': '$const166.1'}), (168, {'lhs': '$a164.0', 'rhs': '$const166.1', 'res': '$168compare_op.2'}), (170, {}), (172, {}), (174, {'pred': '$168compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 180: ()})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'retval': '$const176.0', 'castval': '$178return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-06-28 20:38:24,544 - DEBUG - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'value': '$const182.0'}), (186, {'res': '$b186.1'}), (188, {'value': '$b186.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
2024-06-28 20:38:24,545 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$exp190.0'}), (192, {'res': '$const192.1'}), (194, {'lhs': '$exp190.0', 'rhs': '$const192.1', 'res': '$194compare_op.2'}), (196, {}), (198, {}), (200, {'pred': '$194compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 270: ()})
2024-06-28 20:38:24,545 - DEBUG - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'idx': 2, 'res': '$202load_global.0'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {'item': '$202load_global.0', 'res': '$214load_attr.2'}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {'res': '$a224.3'}), (226, {'idx': 4, 'res': '$226load_global.4'}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'res': '$b238.6'}), (240, {}), (242, {}), (244, {'func': '$226load_global.4', 'args': ['$b238.6'], 'kw_names': None, 'res': '$244call.7'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {'func': '$214load_attr.2', 'args': ['$a224.3', '$244call.7'], 'kw_names': None, 'res': '$258call.8'}), (260, {}), (262, {}), (264, {}), (266, {}), (268, {'retval': '$258call.8', 'castval': '$268return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,545 - DEBUG - block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=((270, {'res': '$exp270.0'}), (272, {'res': '$const272.1'}), (274, {'lhs': '$exp270.0', 'rhs': '$const272.1', 'res': '$274compare_op.2'}), (276, {}), (278, {}), (280, {'pred': '$274compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: (), 334: ()})
2024-06-28 20:38:24,545 - DEBUG - block_infos State(pc_initial=282 nstack_initial=0):
AdaptBlockInfo(insts=((282, {'res': '$exp282.0'}), (284, {'res': '$const284.1'}), (286, {'op': '&', 'lhs': '$exp282.0', 'rhs': '$const284.1', 'res': '$binop_and_286.2'}), (288, {}), (290, {'pred': '$binop_and_286.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2024-06-28 20:38:24,545 - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$r292.0'}), (294, {'res': '$a294.1'}), (296, {'op': '*=', 'lhs': '$r292.0', 'rhs': '$a294.1', 'res': '$binop_imul296.2'}), (298, {}), (300, {'value': '$binop_imul296.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ()})
2024-06-28 20:38:24,545 - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$exp302.0'}), (304, {'res': '$const304.1'}), (306, {'op': '>>=', 'lhs': '$exp302.0', 'rhs': '$const304.1', 'res': '$binop_irshift306.2'}), (308, {}), (310, {'value': '$binop_irshift306.2'}), (312, {'res': '$a312.3'}), (314, {'res': '$a314.4'}), (316, {'op': '*=', 'lhs': '$a312.3', 'rhs': '$a314.4', 'res': '$binop_imul316.5'}), (318, {}), (320, {'value': '$binop_imul316.5'}), (322, {'res': '$exp322.6'}), (324, {'res': '$const324.7'}), (326, {'lhs': '$exp322.6', 'rhs': '$const324.7', 'res': '$326compare_op.8'}), (328, {}), (330, {}), (332, {'pred': '$326compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: (), 282: ()})
2024-06-28 20:38:24,545 - DEBUG - block_infos State(pc_initial=334 nstack_initial=0):
AdaptBlockInfo(insts=((334, {'res': '$invert334.0'}), (336, {'pred': '$invert334.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={338: (), 348: ()})
2024-06-28 20:38:24,546 - DEBUG - block_infos State(pc_initial=338 nstack_initial=0):
AdaptBlockInfo(insts=((338, {'res': '$const338.0'}), (340, {'res': '$r340.1'}), (342, {'op': '/', 'lhs': '$const338.0', 'rhs': '$r340.1', 'res': '$binop_truediv342.2'}), (344, {}), (346, {})), outgoing_phis={'$phi350.0': '$binop_truediv342.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$binop_truediv342.2',)})
2024-06-28 20:38:24,546 - DEBUG - block_infos State(pc_initial=348 nstack_initial=0):
AdaptBlockInfo(insts=((348, {'res': '$r348.0'}),), outgoing_phis={'$phi350.0': '$r348.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$r348.0',)})
2024-06-28 20:38:24,546 - DEBUG - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'retval': '$phi350.0', 'castval': '$350return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,548 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float64)    ['$8load_deref.1']
    $const10.2 = const(int, 1)               ['$const10.2']
    r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2', 'r']
    $30load_deref.5 = freevar(tp: float64)   ['$30load_deref.5']
    a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_deref.5', 'a', 'a.1']
    $const52.9 = const(int, 0)               ['$const52.9']
    $54compare_op.10 = b < $const52.9        ['$54compare_op.10', '$const52.9', 'b']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.10', '$60pred', 'bool60']
    branch $60pred, 62, 182                  ['$60pred']
label 62:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const74.4 = const(int, 0)               ['$const74.4']
    $76compare_op.5 = exp < $const74.4       ['$76compare_op.5', '$const74.4', 'exp']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$76compare_op.5', '$82pred', 'bool82']
    branch $82pred, 84, 98                   ['$82pred']
label 84:
    $84load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$84load_global.0']
    raise $84load_global.0                   ['$84load_global.0']
label 98:
    $98load_deref.0 = freevar(is_integer: False) ['$98load_deref.0']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98load_deref.0', 'bool100']
    branch $100pred, 102, 180                ['$100pred']
label 102:
    $const104.1 = const(int, 0)              ['$const104.1']
    $106compare_op.2 = a.1 == $const104.1    ['$106compare_op.2', '$const104.1', 'a.1']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106compare_op.2, func=bool112, args=(Var($106compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$106compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 152                ['$112pred']
label 114:
    $114load_deref.0 = freevar(zerodiv_return: False) ['$114load_deref.0']
    bool116 = global(bool: <class 'bool'>)   ['bool116']
    $116pred = call bool116($114load_deref.0, func=bool116, args=(Var($114load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$114load_deref.0', '$116pred', 'bool116']
    branch $116pred, 118, 122                ['$116pred']
label 118:
    $118load_deref.0 = freevar(zerodiv_return: False) ['$118load_deref.0']
    $120return_value.1 = cast(value=$118load_deref.0) ['$118load_deref.0', '$120return_value.1']
    return $120return_value.1                ['$120return_value.1']
label 122:
    $122load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$122load_global.0']
    $const134.2 = const(str, 0 cannot be raised to a negative power) ['$const134.2']
    $140call.3 = call $122load_global.0($const134.2, func=$122load_global.0, args=[Var($const134.2, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.0', '$140call.3', '$const134.2']
    raise $140call.3                         ['$140call.3']
label 152:
    $const154.1 = const(int, 1)              ['$const154.1']
    $156compare_op.2 = a.1 != $const154.1    ['$156compare_op.2', '$const154.1', 'a.1']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($156compare_op.2, func=bool162, args=(Var($156compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$156compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 180                ['$162pred']
label 164:
    $const166.1 = const(int, -1)             ['$const166.1']
    $168compare_op.2 = a.1 != $const166.1    ['$168compare_op.2', '$const166.1', 'a.1']
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174($168compare_op.2, func=bool174, args=(Var($168compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.2', '$174pred', 'bool174']
    branch $174pred, 176, 180                ['$174pred']
label 176:
    $const176.0 = const(int, 0)              ['$const176.0']
    $178return_value.1 = cast(value=$const176.0) ['$178return_value.1', '$const176.0']
    return $178return_value.1                ['$178return_value.1']
label 180:
    jump 190                                 []
label 182:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 190                                 []
label 190:
    $const192.1 = const(int, 65536)          ['$const192.1']
    $194compare_op.2 = exp > $const192.1     ['$194compare_op.2', '$const192.1', 'exp']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$194compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 270                ['$200pred']
label 202:
    $202load_global.0 = global(math: <module 'math' (built-in)>) ['$202load_global.0']
    $214load_attr.2 = getattr(value=$202load_global.0, attr=pow) ['$202load_global.0', '$214load_attr.2']
    $226load_global.4 = global(float: <class 'float'>) ['$226load_global.4']
    $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_global.4', '$244call.7', 'b']
    $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.2', '$244call.7', '$258call.8', 'a.1']
    $268return_value.9 = cast(value=$258call.8) ['$258call.8', '$268return_value.9']
    return $268return_value.9                ['$268return_value.9']
label 270:
    $const272.1 = const(int, 0)              ['$const272.1']
    $274compare_op.2 = exp != $const272.1    ['$274compare_op.2', '$const272.1', 'exp']
    bool280 = global(bool: <class 'bool'>)   ['bool280']
    $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$274compare_op.2', '$280pred', 'bool280']
    branch $280pred, 282, 334                ['$280pred']
label 282:
    $const284.1 = const(int, 1)              ['$const284.1']
    $binop_and_286.2 = exp & $const284.1     ['$binop_and_286.2', '$const284.1', 'exp']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', '$binop_and_286.2', 'bool290']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul296.2', 'a.1', 'r']
    r = $binop_imul296.2                     ['$binop_imul296.2', 'r']
    jump 302                                 []
label 302:
    $const304.1 = const(int, 1)              ['$const304.1']
    $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift306.2', '$const304.1', 'exp']
    exp = $binop_irshift306.2                ['$binop_irshift306.2', 'exp']
    $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul316.5', 'a.1', 'a.1']
    a.1 = $binop_imul316.5                   ['$binop_imul316.5', 'a.1']
    $const324.7 = const(int, 0)              ['$const324.7']
    $326compare_op.8 = exp != $const324.7    ['$326compare_op.8', '$const324.7', 'exp']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$326compare_op.8', '$332pred', 'bool332']
    branch $332pred, 282, 334                ['$332pred']
label 334:
    bool336 = global(bool: <class 'bool'>)   ['bool336']
    $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$336pred', 'bool336', 'invert']
    branch $336pred, 338, 348                ['$336pred']
label 338:
    $const338.0 = const(float, 1.0)          ['$const338.0']
    $binop_truediv342.2 = $const338.0 / r    ['$binop_truediv342.2', '$const338.0', 'r']
    $phi350.0 = $binop_truediv342.2          ['$binop_truediv342.2', '$phi350.0']
    jump 350                                 []
label 348:
    $phi350.0 = r                            ['$phi350.0', 'r']
    jump 350                                 []
label 350:
    $350return_value.1 = cast(value=$phi350.0) ['$350return_value.1', '$phi350.0']
    return $350return_value.1                ['$350return_value.1']

2024-06-28 20:38:24,561 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:24,561 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,561 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,561 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,561 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,561 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,561 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,562 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,562 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,562 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,562 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,562 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,562 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,562 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,562 - DEBUG - ==== SSA block analysis pass on 62
2024-06-28 20:38:24,562 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,563 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,563 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,563 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,563 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,563 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,563 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,563 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,563 - DEBUG - ==== SSA block analysis pass on 84
2024-06-28 20:38:24,563 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,563 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,563 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,563 - DEBUG - ==== SSA block analysis pass on 98
2024-06-28 20:38:24,563 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,563 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,564 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,564 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,564 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,564 - DEBUG - ==== SSA block analysis pass on 180
2024-06-28 20:38:24,564 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,564 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,564 - DEBUG - ==== SSA block analysis pass on 182
2024-06-28 20:38:24,564 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,564 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,564 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,564 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,564 - DEBUG - ==== SSA block analysis pass on 190
2024-06-28 20:38:24,564 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,564 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,564 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,565 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,565 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,565 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,565 - DEBUG - ==== SSA block analysis pass on 202
2024-06-28 20:38:24,565 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,565 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,565 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,565 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,565 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,565 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,565 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,565 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,566 - DEBUG - ==== SSA block analysis pass on 270
2024-06-28 20:38:24,566 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,566 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,566 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,566 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,566 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,566 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,566 - DEBUG - ==== SSA block analysis pass on 282
2024-06-28 20:38:24,566 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,566 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,566 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,566 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,566 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,567 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,567 - DEBUG - ==== SSA block analysis pass on 292
2024-06-28 20:38:24,567 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,567 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,567 - DEBUG - on stmt: r = $binop_imul296.2
2024-06-28 20:38:24,567 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,567 - DEBUG - ==== SSA block analysis pass on 302
2024-06-28 20:38:24,567 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,567 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,567 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,567 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,567 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,568 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-06-28 20:38:24,568 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,568 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,568 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,568 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,568 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,568 - DEBUG - ==== SSA block analysis pass on 334
2024-06-28 20:38:24,568 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,568 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,568 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,568 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,568 - DEBUG - ==== SSA block analysis pass on 338
2024-06-28 20:38:24,568 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,568 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,569 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-06-28 20:38:24,569 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,569 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,569 - DEBUG - ==== SSA block analysis pass on 348
2024-06-28 20:38:24,569 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,569 - DEBUG - on stmt: $phi350.0 = r
2024-06-28 20:38:24,569 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,569 - DEBUG - ==== SSA block analysis pass on 350
2024-06-28 20:38:24,569 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a66f70d50>
2024-06-28 20:38:24,569 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,569 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,570 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x7f7a66f43b90>,
                           98)],
             '$194compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a66f59690>,
                                   190)],
             '$200pred': [(<numba.core.ir.Assign object at 0x7f7a66f599d0>,
                           190)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66f59a90>,
                                    202)],
             '$214load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a66f59fd0>,
                                  202)],
             '$226load_global.4': [(<numba.core.ir.Assign object at 0x7f7a66f5a1d0>,
                                    202)],
             '$244call.7': [(<numba.core.ir.Assign object at 0x7f7a66f5a790>,
                             202)],
             '$258call.8': [(<numba.core.ir.Assign object at 0x7f7a66f5aa10>,
                             202)],
             '$268return_value.9': [(<numba.core.ir.Assign object at 0x7f7a66f585d0>,
                                     202)],
             '$274compare_op.2': [(<numba.core.ir.Assign object at 0x7f7a66f0f850>,
                                   270)],
             '$280pred': [(<numba.core.ir.Assign object at 0x7f7a66f0c310>,
                           270)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7f7a66f0ced0>,
                           282)],
             '$30load_deref.5': [(<numba.core.ir.Assign object at 0x7f7a66f45cd0>,
                                  0)],
             '$326compare_op.8': [(<numba.core.ir.Assign object at 0x7f7a66f0ec50>,
                                   302)],
             '$332pred': [(<numba.core.ir.Assign object at 0x7f7a66f0f150>,
                           302)],
             '$336pred': [(<numba.core.ir.Assign object at 0x7f7a66f0fa50>,
                           334)],
             '$350return_value.1': [(<numba.core.ir.Assign object at 0x7f7a66f3ba10>,
                                     350)],
             '$54compare_op.10': [(<numba.core.ir.Assign object at 0x7f7a66f40310>,
                                   0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x7f7a66f40390>, 0)],
             '$76compare_op.5': [(<numba.core.ir.Assign object at 0x7f7a66f43190>,
                                  62)],
             '$82pred': [(<numba.core.ir.Assign object at 0x7f7a66f43450>, 62)],
             '$84load_global.0': [(<numba.core.ir.Assign object at 0x7f7a66f42850>,
                                   84)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x7f7a66f70990>,
                                 0)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x7f7a66f43410>,
                                  98)],
             '$binop_and_286.2': [(<numba.core.ir.Assign object at 0x7f7a66f0c950>,
                                   282)],
             '$binop_imul296.2': [(<numba.core.ir.Assign object at 0x7f7a66f0ccd0>,
                                   292)],
             '$binop_imul316.5': [(<numba.core.ir.Assign object at 0x7f7a66f0e410>,
                                   302)],
             '$binop_irshift306.2': [(<numba.core.ir.Assign object at 0x7f7a66f0dd90>,
                                      302)],
             '$binop_truediv342.2': [(<numba.core.ir.Assign object at 0x7f7a66f0ff90>,
                                      338)],
             '$const10.2': [(<numba.core.ir.Assign object at 0x7f7a66f71410>,
                             0)],
             '$const192.1': [(<numba.core.ir.Assign object at 0x7f7a66f59350>,
                              190)],
             '$const272.1': [(<numba.core.ir.Assign object at 0x7f7a66f0f690>,
                              270)],
             '$const284.1': [(<numba.core.ir.Assign object at 0x7f7a66f0c790>,
                              282)],
             '$const304.1': [(<numba.core.ir.Assign object at 0x7f7a66f0da10>,
                              302)],
             '$const324.7': [(<numba.core.ir.Assign object at 0x7f7a66f0eb90>,
                              302)],
             '$const338.0': [(<numba.core.ir.Assign object at 0x7f7a66f0fb10>,
                              338)],
             '$const52.9': [(<numba.core.ir.Assign object at 0x7f7a66f40190>,
                             0)],
             '$const74.4': [(<numba.core.ir.Assign object at 0x7f7a66f42d90>,
                             62)],
             '$phi350.0': [(<numba.core.ir.Assign object at 0x7f7a66f0fa10>,
                            338),
                           (<numba.core.ir.Assign object at 0x7f7a66f5bf90>,
                            348)],
             'a': [(<numba.core.ir.Assign object at 0x7f7a66fd1990>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7f7a66f46990>, 0),
                     (<numba.core.ir.Assign object at 0x7f7a66f0e7d0>, 302)],
             'b': [(<numba.core.ir.Assign object at 0x7f7a66f73e10>, 0)],
             'bool100': [(<numba.core.ir.Assign object at 0x7f7a66f43ad0>, 98)],
             'bool200': [(<numba.core.ir.Assign object at 0x7f7a66f59910>,
                          190)],
             'bool280': [(<numba.core.ir.Assign object at 0x7f7a66f0c110>,
                          270)],
             'bool290': [(<numba.core.ir.Assign object at 0x7f7a66f0cd10>,
                          282)],
             'bool332': [(<numba.core.ir.Assign object at 0x7f7a66f0ed90>,
                          302)],
             'bool336': [(<numba.core.ir.Assign object at 0x7f7a66f0f390>,
                          334)],
             'bool60': [(<numba.core.ir.Assign object at 0x7f7a66f40450>, 0)],
             'bool82': [(<numba.core.ir.Assign object at 0x7f7a66f42a10>, 62)],
             'exp': [(<numba.core.ir.Assign object at 0x7f7a66f41210>, 62),
                     (<numba.core.ir.Assign object at 0x7f7a66f59090>, 182),
                     (<numba.core.ir.Assign object at 0x7f7a66f0dd50>, 302)],
             'invert': [(<numba.core.ir.Assign object at 0x7f7a66f40ed0>, 62),
                        (<numba.core.ir.Assign object at 0x7f7a66f58c50>, 182)],
             'r': [(<numba.core.ir.Assign object at 0x7f7a66f46d10>, 0),
                   (<numba.core.ir.Assign object at 0x7f7a66f0d610>, 292)]})
2024-06-28 20:38:24,571 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a66f70790>
2024-06-28 20:38:24,571 - DEBUG - Fix SSA violator on var r
2024-06-28 20:38:24,571 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,571 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,571 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,571 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,571 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,571 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,571 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,572 - DEBUG - first assign: r
2024-06-28 20:38:24,572 - DEBUG - replaced with: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,572 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,572 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,572 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,572 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,572 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,572 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,572 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,572 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,572 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,572 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,572 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,573 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,573 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,573 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,573 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,573 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,573 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,573 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,573 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,573 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,573 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,573 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,573 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,573 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,574 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,574 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,574 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,574 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,574 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,574 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,574 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,574 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,574 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,574 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,574 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,575 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,575 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,575 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,575 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,575 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,575 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,575 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,575 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,575 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,575 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,576 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,576 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,576 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,576 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,576 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,576 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,576 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,576 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,576 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,576 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,576 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,576 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,577 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,577 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,577 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,577 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,577 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,577 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,577 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,577 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,577 - DEBUG - on stmt: r = $binop_imul296.2
2024-06-28 20:38:24,577 - DEBUG - replaced with: r.1 = $binop_imul296.2
2024-06-28 20:38:24,577 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,577 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,577 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,577 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,577 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,577 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,578 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,578 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-06-28 20:38:24,578 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,578 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,578 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,578 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,578 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,578 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,578 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,578 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,578 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,578 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,578 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,578 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,579 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,579 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-06-28 20:38:24,579 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,579 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,579 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,579 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,579 - DEBUG - on stmt: $phi350.0 = r
2024-06-28 20:38:24,579 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,579 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,579 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd0e90>
2024-06-28 20:38:24,579 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,579 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,579 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a66fd1d10>],
             292: [<numba.core.ir.Assign object at 0x7f7a66f0dc50>]})
2024-06-28 20:38:24,579 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,579 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,580 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,580 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,580 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,580 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,580 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,580 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,580 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,580 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,580 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,580 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,580 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,580 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,581 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,581 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,581 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,581 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,581 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,581 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,581 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,581 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,581 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,581 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,581 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,581 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,581 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,582 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,582 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,582 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,582 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,582 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,582 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,582 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,582 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,582 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,582 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,582 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,582 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,582 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,582 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,583 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,583 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,583 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,583 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,583 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,583 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,583 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,583 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,583 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,583 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,583 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,583 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,584 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,584 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,584 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,584 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,584 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,584 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,584 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,584 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,584 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,584 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,584 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,584 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,584 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,584 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,584 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,585 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,585 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,585 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,585 - DEBUG - find_def var='r' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,585 - DEBUG - find_def_from_top label 292
2024-06-28 20:38:24,585 - DEBUG - idom 282 from label 292
2024-06-28 20:38:24,585 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,585 - DEBUG - find_def_from_top label 282
2024-06-28 20:38:24,585 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-06-28 20:38:24,585 - DEBUG - find_def_from_bottom label 302
2024-06-28 20:38:24,585 - DEBUG - find_def_from_top label 302
2024-06-28 20:38:24,585 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 302
2024-06-28 20:38:24,586 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,586 - DEBUG - incoming_def r.2 = phi(incoming_values=[], incoming_blocks=[])
2024-06-28 20:38:24,586 - DEBUG - find_def_from_bottom label 292
2024-06-28 20:38:24,586 - DEBUG - incoming_def r.1 = $binop_imul296.2
2024-06-28 20:38:24,586 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,586 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,586 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,586 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,586 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,586 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,586 - DEBUG - idom 0 from label 190
2024-06-28 20:38:24,586 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:24,586 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,586 - DEBUG - replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,586 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,587 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,587 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,587 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,587 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,587 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,587 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,587 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,587 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-06-28 20:38:24,587 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,587 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,587 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,587 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,587 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,588 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,588 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,588 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,588 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,588 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,588 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,588 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,588 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,588 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r
2024-06-28 20:38:24,588 - DEBUG - find_def var='r' stmt=$binop_truediv342.2 = $const338.0 / r
2024-06-28 20:38:24,588 - DEBUG - find_def_from_top label 338
2024-06-28 20:38:24,588 - DEBUG - idom 334 from label 338
2024-06-28 20:38:24,588 - DEBUG - find_def_from_bottom label 334
2024-06-28 20:38:24,588 - DEBUG - find_def_from_top label 334
2024-06-28 20:38:24,588 - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 334
2024-06-28 20:38:24,589 - DEBUG - find_def_from_bottom label 302
2024-06-28 20:38:24,589 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,589 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,589 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,589 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,589 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,589 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,589 - DEBUG - idom 0 from label 190
2024-06-28 20:38:24,589 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:24,589 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,589 - DEBUG - replaced with: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,589 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,589 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,589 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,589 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,590 - DEBUG - on stmt: $phi350.0 = r
2024-06-28 20:38:24,590 - DEBUG - find_def var='r' stmt=$phi350.0 = r
2024-06-28 20:38:24,590 - DEBUG - find_def_from_top label 348
2024-06-28 20:38:24,590 - DEBUG - idom 334 from label 348
2024-06-28 20:38:24,590 - DEBUG - find_def_from_bottom label 334
2024-06-28 20:38:24,590 - DEBUG - replaced with: $phi350.0 = r.4
2024-06-28 20:38:24,590 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,590 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,590 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f477d0>
2024-06-28 20:38:24,590 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,590 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,590 - DEBUG - Fix SSA violator on var a.1
2024-06-28 20:38:24,591 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,591 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,591 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,591 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,591 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,591 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,591 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,591 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,591 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,591 - DEBUG - first assign: a.1
2024-06-28 20:38:24,591 - DEBUG - replaced with: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,591 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,591 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,591 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,591 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,592 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,592 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,592 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,592 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,592 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,592 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,592 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,592 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,592 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,592 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,592 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,592 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,592 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,592 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,593 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,593 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,593 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,593 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,593 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,593 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,593 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,593 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,593 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,594 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,594 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,594 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,594 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,594 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,594 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,594 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,594 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,594 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,594 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,594 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,594 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,594 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,594 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,595 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,595 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,595 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,595 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,595 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,595 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,595 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,595 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,595 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,595 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,595 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,595 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,595 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,596 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,596 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,596 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,596 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,596 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,596 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,596 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,596 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,596 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,596 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,596 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,596 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,596 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,596 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,597 - DEBUG - on stmt: a.1 = $binop_imul316.5
2024-06-28 20:38:24,597 - DEBUG - replaced with: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,597 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,597 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,597 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,597 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,597 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,597 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,597 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,597 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,597 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,597 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,597 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,597 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,598 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,598 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,598 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,598 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,598 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,598 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,598 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f0e610>
2024-06-28 20:38:24,598 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,598 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,598 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7a66f0cb10>],
             302: [<numba.core.ir.Assign object at 0x7f7a66f44990>]})
2024-06-28 20:38:24,598 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,598 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,598 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,598 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,599 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,599 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,599 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,599 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,599 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,599 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,599 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,599 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,599 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,599 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,599 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,599 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,599 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,599 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,599 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,600 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,600 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,600 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,600 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,600 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,600 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,600 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,600 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,600 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,600 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,600 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,600 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,600 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,600 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,601 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,601 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,601 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,601 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,601 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,601 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,601 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,601 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,601 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,601 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,601 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,601 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,601 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,601 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,601 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,601 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,602 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,602 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,602 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,602 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,602 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,602 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,602 - DEBUG - find_def var='a.1' stmt=$258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,602 - DEBUG - find_def_from_top label 202
2024-06-28 20:38:24,602 - DEBUG - idom 190 from label 202
2024-06-28 20:38:24,602 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,602 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,602 - DEBUG - idom 0 from label 190
2024-06-28 20:38:24,603 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:24,603 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,603 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,603 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,603 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,603 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,603 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,603 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,603 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,603 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,603 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,603 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,603 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,603 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,603 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,604 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,604 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,604 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,604 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,604 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,604 - DEBUG - find_def var='a.1' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,604 - DEBUG - find_def_from_top label 292
2024-06-28 20:38:24,604 - DEBUG - idom 282 from label 292
2024-06-28 20:38:24,604 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,604 - DEBUG - find_def_from_top label 282
2024-06-28 20:38:24,604 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-06-28 20:38:24,604 - DEBUG - find_def_from_bottom label 302
2024-06-28 20:38:24,604 - DEBUG - incoming_def a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,604 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,605 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,605 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,605 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,605 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,605 - DEBUG - idom 0 from label 190
2024-06-28 20:38:24,605 - DEBUG - find_def_from_bottom label 0
2024-06-28 20:38:24,605 - DEBUG - incoming_def a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,605 - DEBUG - replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,605 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,605 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,605 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,605 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,605 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,605 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,606 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,606 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,606 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,606 - DEBUG - find_def var='a.1' stmt=$binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,606 - DEBUG - find_def_from_top label 302
2024-06-28 20:38:24,606 - DEBUG - idom 282 from label 302
2024-06-28 20:38:24,606 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,606 - DEBUG - replaced with: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,606 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,606 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,606 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,606 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,606 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,607 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,607 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,607 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,607 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,607 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,607 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,607 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,607 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,607 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,607 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,607 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,608 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,608 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,608 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,608 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f47f10>
2024-06-28 20:38:24,608 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,608 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,608 - DEBUG - Fix SSA violator on var invert
2024-06-28 20:38:24,608 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,608 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,608 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,608 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,608 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,609 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,609 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,609 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,609 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,609 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,609 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,609 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,609 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,609 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,609 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,609 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,609 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,609 - DEBUG - first assign: invert
2024-06-28 20:38:24,609 - DEBUG - replaced with: invert = const(bool, True)
2024-06-28 20:38:24,610 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,610 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,610 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,610 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,610 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,610 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,610 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,610 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,610 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,610 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,610 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,610 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,610 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,610 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,610 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,611 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,611 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,611 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,611 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,611 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,611 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,611 - DEBUG - on stmt: invert = const(bool, False)
2024-06-28 20:38:24,611 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-06-28 20:38:24,611 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,611 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,611 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,611 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,611 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,611 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,611 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,611 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,611 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,612 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,612 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,612 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,612 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,612 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,612 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,612 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,612 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,612 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,612 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,612 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,612 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,612 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,612 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,612 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,613 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,613 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,613 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,613 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,613 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,613 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,613 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,613 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,613 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,613 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,613 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,613 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,613 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,613 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,613 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,613 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,614 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,614 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,614 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,614 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,614 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,614 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,614 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,614 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,614 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,614 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,614 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,614 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,614 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,615 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,615 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,615 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,615 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,615 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,615 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,615 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,615 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,615 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,615 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,615 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,616 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,616 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,616 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66fd2910>
2024-06-28 20:38:24,616 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,616 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,616 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x7f7a66fd2650>],
             182: [<numba.core.ir.Assign object at 0x7f7a66fd24d0>]})
2024-06-28 20:38:24,616 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,616 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,616 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,616 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,616 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,616 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,616 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,617 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,617 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,617 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,617 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,617 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,617 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,617 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,617 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,617 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,617 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,617 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,617 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,617 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,618 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,618 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,618 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,618 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,618 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,618 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,618 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,618 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,618 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,618 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,618 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,618 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,618 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,619 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,619 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,619 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,619 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,619 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,619 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,619 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,619 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,619 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,619 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,619 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,619 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,620 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,620 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,620 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,620 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,620 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,620 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,620 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,620 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,620 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,620 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,620 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,620 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,621 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,621 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,621 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,621 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,621 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,621 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,621 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,621 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,621 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,621 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,621 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,622 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,622 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,622 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,622 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,622 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,622 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,622 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,622 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,622 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,623 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,623 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,623 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,623 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,623 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,623 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,624 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,624 - DEBUG - on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,624 - DEBUG - find_def var='invert' stmt=$336pred = call bool336(invert, func=bool336, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,624 - DEBUG - find_def_from_top label 334
2024-06-28 20:38:24,624 - DEBUG - idom 270 from label 334
2024-06-28 20:38:24,624 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,624 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,624 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,624 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,624 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,624 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-06-28 20:38:24,624 - DEBUG - find_def_from_bottom label 180
2024-06-28 20:38:24,624 - DEBUG - find_def_from_top label 180
2024-06-28 20:38:24,624 - DEBUG - idom 98 from label 180
2024-06-28 20:38:24,625 - DEBUG - find_def_from_bottom label 98
2024-06-28 20:38:24,625 - DEBUG - find_def_from_top label 98
2024-06-28 20:38:24,625 - DEBUG - idom 62 from label 98
2024-06-28 20:38:24,625 - DEBUG - find_def_from_bottom label 62
2024-06-28 20:38:24,625 - DEBUG - incoming_def invert = const(bool, True)
2024-06-28 20:38:24,625 - DEBUG - find_def_from_bottom label 182
2024-06-28 20:38:24,625 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-06-28 20:38:24,625 - DEBUG - replaced with: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,625 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,625 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,625 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,625 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,625 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,626 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,626 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,626 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,626 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,626 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,626 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,626 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,626 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f469d0>
2024-06-28 20:38:24,626 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,626 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,626 - DEBUG - Fix SSA violator on var exp
2024-06-28 20:38:24,626 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,626 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,626 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,626 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,626 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,626 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,627 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,627 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,627 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,627 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,627 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,627 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,627 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,627 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,627 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,627 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,627 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,627 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,627 - DEBUG - first assign: exp
2024-06-28 20:38:24,627 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,628 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,628 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,628 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,628 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,628 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,628 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,628 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,628 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,628 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,628 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,628 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,628 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,628 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,628 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,628 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,629 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,629 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,629 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,629 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,629 - DEBUG - on stmt: exp = b
2024-06-28 20:38:24,629 - DEBUG - replaced with: exp.1 = b
2024-06-28 20:38:24,629 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,629 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,629 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,629 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,629 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,629 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,629 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,630 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,630 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,630 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,630 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,630 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,630 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,630 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,630 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,630 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,630 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,630 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,630 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,630 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,631 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,631 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,631 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,631 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,631 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,631 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,631 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,631 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,631 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,631 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,631 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,631 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,631 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,631 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,631 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,631 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,632 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,632 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,632 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,632 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,632 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,632 - DEBUG - on stmt: exp = $binop_irshift306.2
2024-06-28 20:38:24,632 - DEBUG - replaced with: exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,632 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,632 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,632 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,632 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,632 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,632 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,632 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,632 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,632 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,633 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,633 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,633 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,633 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,633 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,633 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,633 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,633 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,633 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,633 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,633 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,633 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,633 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f40b50>
2024-06-28 20:38:24,633 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,634 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,634 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x7f7a66f420d0>],
             182: [<numba.core.ir.Assign object at 0x7f7a66fd2810>],
             302: [<numba.core.ir.Assign object at 0x7f7a66f5b210>]})
2024-06-28 20:38:24,634 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,634 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,634 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,634 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,634 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,634 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,634 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,634 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,634 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,634 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,634 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,634 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,635 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,635 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,635 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,635 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,635 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,635 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,635 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,635 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,635 - DEBUG - find_def var='exp' stmt=$76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,635 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,635 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,635 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,635 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,635 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,635 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,636 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,636 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,636 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,636 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,636 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,636 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,636 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,636 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,636 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,636 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,636 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,636 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,636 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,637 - DEBUG - on stmt: exp.1 = b
2024-06-28 20:38:24,637 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,637 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,637 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,637 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,637 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,637 - DEBUG - on stmt: $194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,637 - DEBUG - find_def var='exp' stmt=$194compare_op.2 = exp > $const192.1
2024-06-28 20:38:24,637 - DEBUG - find_def_from_top label 190
2024-06-28 20:38:24,637 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 190
2024-06-28 20:38:24,637 - DEBUG - find_def_from_bottom label 180
2024-06-28 20:38:24,637 - DEBUG - find_def_from_top label 180
2024-06-28 20:38:24,637 - DEBUG - idom 98 from label 180
2024-06-28 20:38:24,638 - DEBUG - find_def_from_bottom label 98
2024-06-28 20:38:24,638 - DEBUG - find_def_from_top label 98
2024-06-28 20:38:24,638 - DEBUG - idom 62 from label 98
2024-06-28 20:38:24,638 - DEBUG - find_def_from_bottom label 62
2024-06-28 20:38:24,638 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,638 - DEBUG - find_def_from_bottom label 182
2024-06-28 20:38:24,638 - DEBUG - incoming_def exp.1 = b
2024-06-28 20:38:24,638 - DEBUG - replaced with: $194compare_op.2 = exp.3 > $const192.1
2024-06-28 20:38:24,638 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,638 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,638 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,638 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,638 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,638 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,639 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,639 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,639 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,639 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,639 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,639 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,639 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,639 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,639 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,639 - DEBUG - on stmt: $274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,639 - DEBUG - find_def var='exp' stmt=$274compare_op.2 = exp != $const272.1
2024-06-28 20:38:24,639 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,639 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,639 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,640 - DEBUG - replaced with: $274compare_op.2 = exp.3 != $const272.1
2024-06-28 20:38:24,640 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,640 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,640 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,640 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,640 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,640 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,640 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,640 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,640 - DEBUG - on stmt: $binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,640 - DEBUG - find_def var='exp' stmt=$binop_and_286.2 = exp & $const284.1
2024-06-28 20:38:24,640 - DEBUG - find_def_from_top label 282
2024-06-28 20:38:24,640 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 282
2024-06-28 20:38:24,641 - DEBUG - find_def_from_bottom label 302
2024-06-28 20:38:24,641 - DEBUG - incoming_def exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,641 - DEBUG - find_def_from_bottom label 270
2024-06-28 20:38:24,641 - DEBUG - find_def_from_top label 270
2024-06-28 20:38:24,641 - DEBUG - idom 190 from label 270
2024-06-28 20:38:24,641 - DEBUG - find_def_from_bottom label 190
2024-06-28 20:38:24,641 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,641 - DEBUG - replaced with: $binop_and_286.2 = exp.4 & $const284.1
2024-06-28 20:38:24,641 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,641 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,641 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,641 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,642 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,642 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,642 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,642 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,642 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,642 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,642 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,642 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,642 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,642 - DEBUG - find_def var='exp' stmt=$binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,642 - DEBUG - find_def_from_top label 302
2024-06-28 20:38:24,642 - DEBUG - idom 282 from label 302
2024-06-28 20:38:24,642 - DEBUG - find_def_from_bottom label 282
2024-06-28 20:38:24,642 - DEBUG - replaced with: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,643 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,643 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,643 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,643 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,643 - DEBUG - on stmt: $326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,643 - DEBUG - find_def var='exp' stmt=$326compare_op.8 = exp != $const324.7
2024-06-28 20:38:24,643 - DEBUG - replaced with: $326compare_op.8 = exp.2 != $const324.7
2024-06-28 20:38:24,643 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,643 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,643 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,643 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,643 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,643 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,643 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,644 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,644 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,644 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,644 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,644 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,644 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,644 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,644 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,644 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,644 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,644 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,644 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,644 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,644 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a675e5790>
2024-06-28 20:38:24,644 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,645 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,645 - DEBUG - Fix SSA violator on var $phi350.0
2024-06-28 20:38:24,645 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,645 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,645 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,645 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,645 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,645 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,645 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,645 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,645 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,645 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,645 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,646 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,646 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,646 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,646 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,646 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,646 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,646 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,646 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,646 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,646 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,646 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,646 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,646 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,646 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,646 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,647 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,647 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,647 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,647 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,647 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,647 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,647 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,647 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,647 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,647 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,647 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,647 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,647 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,647 - DEBUG - on stmt: exp.1 = b
2024-06-28 20:38:24,647 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,647 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,648 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,648 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,648 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,648 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,648 - DEBUG - on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-06-28 20:38:24,648 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,648 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,648 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,648 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,648 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,648 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,649 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,649 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,649 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,649 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,649 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,649 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,649 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,649 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,649 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,649 - DEBUG - on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-06-28 20:38:24,649 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,650 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,650 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,650 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,650 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,650 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,650 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,650 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,650 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,650 - DEBUG - on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-06-28 20:38:24,650 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,650 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,650 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,650 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,650 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,650 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,651 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,651 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,651 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,651 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,651 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,651 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,651 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,651 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,651 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,651 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,651 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,651 - DEBUG - on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-06-28 20:38:24,651 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,652 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,652 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,652 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,652 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,652 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,652 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,652 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,652 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,652 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,652 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,653 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,653 - DEBUG - first assign: $phi350.0
2024-06-28 20:38:24,653 - DEBUG - replaced with: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,653 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,653 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,653 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,653 - DEBUG - on stmt: $phi350.0 = r.4
2024-06-28 20:38:24,653 - DEBUG - replaced with: $phi350.0.1 = r.4
2024-06-28 20:38:24,653 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,653 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,653 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7f7a66f58a10>
2024-06-28 20:38:24,653 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,653 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,654 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {338: [<numba.core.ir.Assign object at 0x7f7a66f38450>],
             348: [<numba.core.ir.Assign object at 0x7f7a66f38610>]})
2024-06-28 20:38:24,654 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-28 20:38:24,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,654 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-28 20:38:24,654 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-28 20:38:24,654 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-28 20:38:24,654 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-28 20:38:24,654 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,654 - DEBUG - on stmt: $30load_deref.5 = freevar(tp: float64)
2024-06-28 20:38:24,654 - DEBUG - on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,654 - DEBUG - on stmt: $const52.9 = const(int, 0)
2024-06-28 20:38:24,654 - DEBUG - on stmt: $54compare_op.10 = b < $const52.9
2024-06-28 20:38:24,654 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,654 - DEBUG - on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,655 - DEBUG - on stmt: branch $60pred, 62, 182
2024-06-28 20:38:24,655 - DEBUG - ==== SSA block rewrite pass on 62
2024-06-28 20:38:24,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,655 - DEBUG - on stmt: invert = const(bool, True)
2024-06-28 20:38:24,655 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-28 20:38:24,655 - DEBUG - on stmt: $const74.4 = const(int, 0)
2024-06-28 20:38:24,655 - DEBUG - on stmt: $76compare_op.5 = exp < $const74.4
2024-06-28 20:38:24,655 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,656 - DEBUG - on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,656 - DEBUG - on stmt: branch $82pred, 84, 98
2024-06-28 20:38:24,656 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-28 20:38:24,656 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,656 - DEBUG - on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-28 20:38:24,656 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-28 20:38:24,656 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-28 20:38:24,656 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,656 - DEBUG - on stmt: $98load_deref.0 = freevar(is_integer: False)
2024-06-28 20:38:24,656 - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,656 - DEBUG - on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,656 - DEBUG - on stmt: jump 180
2024-06-28 20:38:24,656 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-28 20:38:24,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,657 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,657 - DEBUG - ==== SSA block rewrite pass on 182
2024-06-28 20:38:24,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,657 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-28 20:38:24,657 - DEBUG - on stmt: exp.1 = b
2024-06-28 20:38:24,657 - DEBUG - on stmt: jump 190
2024-06-28 20:38:24,657 - DEBUG - ==== SSA block rewrite pass on 190
2024-06-28 20:38:24,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,657 - DEBUG - on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,657 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[180, 182])
2024-06-28 20:38:24,657 - DEBUG - on stmt: $const192.1 = const(int, 65536)
2024-06-28 20:38:24,657 - DEBUG - on stmt: $194compare_op.2 = exp.3 > $const192.1
2024-06-28 20:38:24,657 - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,657 - DEBUG - on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,658 - DEBUG - on stmt: branch $200pred, 202, 270
2024-06-28 20:38:24,658 - DEBUG - ==== SSA block rewrite pass on 202
2024-06-28 20:38:24,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,658 - DEBUG - on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
2024-06-28 20:38:24,658 - DEBUG - on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
2024-06-28 20:38:24,658 - DEBUG - on stmt: $226load_global.4 = global(float: <class 'float'>)
2024-06-28 20:38:24,658 - DEBUG - on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,658 - DEBUG - on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, numbers.py:217), Var($244call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,658 - DEBUG - on stmt: $268return_value.9 = cast(value=$258call.8)
2024-06-28 20:38:24,658 - DEBUG - on stmt: return $268return_value.9
2024-06-28 20:38:24,658 - DEBUG - ==== SSA block rewrite pass on 270
2024-06-28 20:38:24,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,658 - DEBUG - on stmt: $const272.1 = const(int, 0)
2024-06-28 20:38:24,658 - DEBUG - on stmt: $274compare_op.2 = exp.3 != $const272.1
2024-06-28 20:38:24,659 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,659 - DEBUG - on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,659 - DEBUG - on stmt: branch $280pred, 282, 334
2024-06-28 20:38:24,659 - DEBUG - ==== SSA block rewrite pass on 282
2024-06-28 20:38:24,659 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,659 - DEBUG - on stmt: exp.4 = phi(incoming_values=[Var(exp.2, numbers.py:240), Var(exp.3, numbers.py:234)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,659 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, numbers.py:241), Var(a.1, numbers.py:217)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,659 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,659 - DEBUG - on stmt: $const284.1 = const(int, 1)
2024-06-28 20:38:24,659 - DEBUG - on stmt: $binop_and_286.2 = exp.4 & $const284.1
2024-06-28 20:38:24,659 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,659 - DEBUG - on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,659 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-28 20:38:24,660 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-28 20:38:24,660 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,660 - DEBUG - on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,660 - DEBUG - on stmt: r.1 = $binop_imul296.2
2024-06-28 20:38:24,660 - DEBUG - on stmt: jump 302
2024-06-28 20:38:24,660 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-28 20:38:24,660 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,660 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[282, 292])
2024-06-28 20:38:24,660 - DEBUG - on stmt: $const304.1 = const(int, 1)
2024-06-28 20:38:24,660 - DEBUG - on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,660 - DEBUG - on stmt: exp.2 = $binop_irshift306.2
2024-06-28 20:38:24,660 - DEBUG - on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-28 20:38:24,660 - DEBUG - on stmt: a.1.1 = $binop_imul316.5
2024-06-28 20:38:24,660 - DEBUG - on stmt: $const324.7 = const(int, 0)
2024-06-28 20:38:24,660 - DEBUG - on stmt: $326compare_op.8 = exp.2 != $const324.7
2024-06-28 20:38:24,660 - DEBUG - on stmt: bool332 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,661 - DEBUG - on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,661 - DEBUG - on stmt: branch $332pred, 282, 334
2024-06-28 20:38:24,661 - DEBUG - ==== SSA block rewrite pass on 334
2024-06-28 20:38:24,661 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,661 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[302, 270])
2024-06-28 20:38:24,661 - DEBUG - on stmt: bool336 = global(bool: <class 'bool'>)
2024-06-28 20:38:24,661 - DEBUG - on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,661 - DEBUG - on stmt: branch $336pred, 338, 348
2024-06-28 20:38:24,661 - DEBUG - ==== SSA block rewrite pass on 338
2024-06-28 20:38:24,661 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,661 - DEBUG - on stmt: $const338.0 = const(float, 1.0)
2024-06-28 20:38:24,661 - DEBUG - on stmt: $binop_truediv342.2 = $const338.0 / r.4
2024-06-28 20:38:24,661 - DEBUG - on stmt: $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,661 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,662 - DEBUG - ==== SSA block rewrite pass on 348
2024-06-28 20:38:24,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,662 - DEBUG - on stmt: $phi350.0.1 = r.4
2024-06-28 20:38:24,662 - DEBUG - on stmt: jump 350
2024-06-28 20:38:24,662 - DEBUG - ==== SSA block rewrite pass on 350
2024-06-28 20:38:24,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7f7a66f46b50>
2024-06-28 20:38:24,662 - DEBUG - on stmt: $350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,662 - DEBUG - find_def var='$phi350.0' stmt=$350return_value.1 = cast(value=$phi350.0)
2024-06-28 20:38:24,662 - DEBUG - find_def_from_top label 350
2024-06-28 20:38:24,662 - DEBUG - insert phi node $phi350.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 350
2024-06-28 20:38:24,662 - DEBUG - find_def_from_bottom label 338
2024-06-28 20:38:24,662 - DEBUG - incoming_def $phi350.0 = $binop_truediv342.2
2024-06-28 20:38:24,662 - DEBUG - find_def_from_bottom label 348
2024-06-28 20:38:24,662 - DEBUG - incoming_def $phi350.0.1 = r.4
2024-06-28 20:38:24,662 - DEBUG - replaced with: $350return_value.1 = cast(value=$phi350.0.2)
2024-06-28 20:38:24,663 - DEBUG - on stmt: return $350return_value.1
2024-06-28 20:38:24,777 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	RESUME(arg=0, lineno=2504)
           4	LOAD_GLOBAL(arg=1, lineno=2508)
          16	LOAD_ATTR(arg=1, lineno=2508)
          26	LOAD_FAST(arg=0, lineno=2508)
          28	PRECALL(arg=1, lineno=2508)
          32	CALL(arg=1, lineno=2508)
          42	LOAD_CONST(arg=1, lineno=2508)
          44	LOAD_GLOBAL(arg=1, lineno=2508)
          56	LOAD_ATTR(arg=2, lineno=2508)
          66	LOAD_FAST(arg=0, lineno=2508)
          68	PRECALL(arg=1, lineno=2508)
          72	CALL(arg=1, lineno=2508)
          82	BINARY_OP(arg=5, lineno=2508)
          86	BINARY_OP(arg=0, lineno=2508)
          90	RETURN_VALUE(arg=None, lineno=2508)
2024-06-28 20:38:24,777 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:24,777 - DEBUG - stack: []
2024-06-28 20:38:24,777 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:24,777 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2504)
2024-06-28 20:38:24,777 - DEBUG - stack []
2024-06-28 20:38:24,777 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2504)
2024-06-28 20:38:24,777 - DEBUG - stack []
2024-06-28 20:38:24,777 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-06-28 20:38:24,777 - DEBUG - stack []
2024-06-28 20:38:24,778 - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=1, lineno=2508)
2024-06-28 20:38:24,778 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:24,778 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2508)
2024-06-28 20:38:24,778 - DEBUG - stack ['$null$4.1', '$16load_attr.2']
2024-06-28 20:38:24,778 - DEBUG - dispatch pc=28, inst=PRECALL(arg=1, lineno=2508)
2024-06-28 20:38:24,778 - DEBUG - stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-06-28 20:38:24,778 - DEBUG - dispatch pc=32, inst=CALL(arg=1, lineno=2508)
2024-06-28 20:38:24,778 - DEBUG - stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-06-28 20:38:24,778 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=1, lineno=2508)
2024-06-28 20:38:24,778 - DEBUG - stack ['$32call.4']
2024-06-28 20:38:24,778 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-06-28 20:38:24,779 - DEBUG - stack ['$32call.4', '$const42.5']
2024-06-28 20:38:24,779 - DEBUG - dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=2508)
2024-06-28 20:38:24,779 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$44load_global.6']
2024-06-28 20:38:24,779 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2508)
2024-06-28 20:38:24,779 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8']
2024-06-28 20:38:24,779 - DEBUG - dispatch pc=68, inst=PRECALL(arg=1, lineno=2508)
2024-06-28 20:38:24,779 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-06-28 20:38:24,779 - DEBUG - dispatch pc=72, inst=CALL(arg=1, lineno=2508)
2024-06-28 20:38:24,779 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-06-28 20:38:24,779 - DEBUG - dispatch pc=82, inst=BINARY_OP(arg=5, lineno=2508)
2024-06-28 20:38:24,779 - DEBUG - stack ['$32call.4', '$const42.5', '$72call.10']
2024-06-28 20:38:24,780 - DEBUG - dispatch pc=86, inst=BINARY_OP(arg=0, lineno=2508)
2024-06-28 20:38:24,780 - DEBUG - stack ['$32call.4', '$binop_mul82.11']
2024-06-28 20:38:24,780 - DEBUG - dispatch pc=90, inst=RETURN_VALUE(arg=None, lineno=2508)
2024-06-28 20:38:24,780 - DEBUG - stack ['$binop_add86.12']
2024-06-28 20:38:24,780 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,780 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:24,780 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:24,780 - DEBUG - defmap: {}
2024-06-28 20:38:24,780 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:24,780 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:24,780 - DEBUG - keep phismap: {}
2024-06-28 20:38:24,780 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:24,781 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:24,781 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'item': '$4load_global.0', 'res': '$16load_attr.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'res': '$x26.3'}), (28, {}), (30, {}), (32, {'func': '$16load_attr.2', 'args': ['$x26.3'], 'kw_names': None, 'res': '$32call.4'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {'res': '$const42.5'}), (44, {'idx': 0, 'res': '$44load_global.6'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'item': '$44load_global.6', 'res': '$56load_attr.8'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'res': '$x66.9'}), (68, {}), (70, {}), (72, {'func': '$56load_attr.8', 'args': ['$x66.9'], 'kw_names': None, 'res': '$72call.10'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'op': '*', 'lhs': '$const42.5', 'rhs': '$72call.10', 'res': '$binop_mul82.11'}), (84, {}), (86, {'op': '+', 'lhs': '$32call.4', 'rhs': '$binop_mul82.11', 'res': '$binop_add86.12'}), (88, {}), (90, {'retval': '$binop_add86.12', 'castval': '$90return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,781 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$4load_global.0']
    $16load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$16load_attr.2', '$4load_global.0']
    $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_attr.2', '$32call.4', 'x']
    $const42.5 = const(complex, 1j)          ['$const42.5']
    $44load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$44load_global.6']
    $56load_attr.8 = getattr(value=$44load_global.6, attr=sin) ['$44load_global.6', '$56load_attr.8']
    $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$72call.10', 'x']
    $binop_mul82.11 = $const42.5 * $72call.10 ['$72call.10', '$binop_mul82.11', '$const42.5']
    $binop_add86.12 = $32call.4 + $binop_mul82.11 ['$32call.4', '$binop_add86.12', '$binop_mul82.11']
    $90return_value.13 = cast(value=$binop_add86.12) ['$90return_value.13', '$binop_add86.12']
    return $90return_value.13                ['$90return_value.13']

2024-06-28 20:38:24,786 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:24,786 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a675d0550>
2024-06-28 20:38:24,786 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:24,786 - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:24,786 - DEBUG - on stmt: $16load_attr.2 = getattr(value=$4load_global.0, attr=cos)
2024-06-28 20:38:24,786 - DEBUG - on stmt: $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,786 - DEBUG - on stmt: $const42.5 = const(complex, 1j)
2024-06-28 20:38:24,787 - DEBUG - on stmt: $44load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:24,787 - DEBUG - on stmt: $56load_attr.8 = getattr(value=$44load_global.6, attr=sin)
2024-06-28 20:38:24,787 - DEBUG - on stmt: $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,787 - DEBUG - on stmt: $binop_mul82.11 = $const42.5 * $72call.10
2024-06-28 20:38:24,787 - DEBUG - on stmt: $binop_add86.12 = $32call.4 + $binop_mul82.11
2024-06-28 20:38:24,787 - DEBUG - on stmt: $90return_value.13 = cast(value=$binop_add86.12)
2024-06-28 20:38:24,787 - DEBUG - on stmt: return $90return_value.13
2024-06-28 20:38:24,787 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a76124790>,
                                 0)],
             '$32call.4': [(<numba.core.ir.Assign object at 0x7f7a76127550>,
                            0)],
             '$44load_global.6': [(<numba.core.ir.Assign object at 0x7f7a675d03d0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a67590ed0>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x7f7a675d0fd0>,
                                 0)],
             '$72call.10': [(<numba.core.ir.Assign object at 0x7f7a675d2910>,
                             0)],
             '$90return_value.13': [(<numba.core.ir.Assign object at 0x7f7a675d2450>,
                                     0)],
             '$binop_add86.12': [(<numba.core.ir.Assign object at 0x7f7a675d0610>,
                                  0)],
             '$binop_mul82.11': [(<numba.core.ir.Assign object at 0x7f7a675d1d10>,
                                  0)],
             '$const42.5': [(<numba.core.ir.Assign object at 0x7f7a675d0850>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a67590e50>, 0)]})
2024-06-28 20:38:24,788 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a675d0550>
2024-06-28 20:38:24,848 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	RESUME(arg=0, lineno=2504)
           4	LOAD_GLOBAL(arg=1, lineno=2508)
          16	LOAD_ATTR(arg=1, lineno=2508)
          26	LOAD_FAST(arg=0, lineno=2508)
          28	PRECALL(arg=1, lineno=2508)
          32	CALL(arg=1, lineno=2508)
          42	LOAD_CONST(arg=1, lineno=2508)
          44	LOAD_GLOBAL(arg=1, lineno=2508)
          56	LOAD_ATTR(arg=2, lineno=2508)
          66	LOAD_FAST(arg=0, lineno=2508)
          68	PRECALL(arg=1, lineno=2508)
          72	CALL(arg=1, lineno=2508)
          82	BINARY_OP(arg=5, lineno=2508)
          86	BINARY_OP(arg=0, lineno=2508)
          90	RETURN_VALUE(arg=None, lineno=2508)
2024-06-28 20:38:24,848 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-28 20:38:24,848 - DEBUG - stack: []
2024-06-28 20:38:24,848 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-28 20:38:24,848 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2504)
2024-06-28 20:38:24,848 - DEBUG - stack []
2024-06-28 20:38:24,848 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2504)
2024-06-28 20:38:24,848 - DEBUG - stack []
2024-06-28 20:38:24,848 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-06-28 20:38:24,848 - DEBUG - stack []
2024-06-28 20:38:24,849 - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=1, lineno=2508)
2024-06-28 20:38:24,849 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-28 20:38:24,849 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2508)
2024-06-28 20:38:24,849 - DEBUG - stack ['$null$4.1', '$16load_attr.2']
2024-06-28 20:38:24,849 - DEBUG - dispatch pc=28, inst=PRECALL(arg=1, lineno=2508)
2024-06-28 20:38:24,849 - DEBUG - stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-06-28 20:38:24,849 - DEBUG - dispatch pc=32, inst=CALL(arg=1, lineno=2508)
2024-06-28 20:38:24,849 - DEBUG - stack ['$null$4.1', '$16load_attr.2', '$x26.3']
2024-06-28 20:38:24,849 - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=1, lineno=2508)
2024-06-28 20:38:24,849 - DEBUG - stack ['$32call.4']
2024-06-28 20:38:24,849 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-06-28 20:38:24,850 - DEBUG - stack ['$32call.4', '$const42.5']
2024-06-28 20:38:24,850 - DEBUG - dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=2508)
2024-06-28 20:38:24,850 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$44load_global.6']
2024-06-28 20:38:24,850 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2508)
2024-06-28 20:38:24,850 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8']
2024-06-28 20:38:24,850 - DEBUG - dispatch pc=68, inst=PRECALL(arg=1, lineno=2508)
2024-06-28 20:38:24,850 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-06-28 20:38:24,850 - DEBUG - dispatch pc=72, inst=CALL(arg=1, lineno=2508)
2024-06-28 20:38:24,850 - DEBUG - stack ['$32call.4', '$const42.5', '$null$44.7', '$56load_attr.8', '$x66.9']
2024-06-28 20:38:24,850 - DEBUG - dispatch pc=82, inst=BINARY_OP(arg=5, lineno=2508)
2024-06-28 20:38:24,851 - DEBUG - stack ['$32call.4', '$const42.5', '$72call.10']
2024-06-28 20:38:24,851 - DEBUG - dispatch pc=86, inst=BINARY_OP(arg=0, lineno=2508)
2024-06-28 20:38:24,851 - DEBUG - stack ['$32call.4', '$binop_mul82.11']
2024-06-28 20:38:24,851 - DEBUG - dispatch pc=90, inst=RETURN_VALUE(arg=None, lineno=2508)
2024-06-28 20:38:24,851 - DEBUG - stack ['$binop_add86.12']
2024-06-28 20:38:24,851 - DEBUG - end state. edges=[]
2024-06-28 20:38:24,851 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-28 20:38:24,851 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-28 20:38:24,851 - DEBUG - defmap: {}
2024-06-28 20:38:24,851 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:24,851 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-28 20:38:24,852 - DEBUG - keep phismap: {}
2024-06-28 20:38:24,852 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-28 20:38:24,852 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-28 20:38:24,852 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'item': '$4load_global.0', 'res': '$16load_attr.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'res': '$x26.3'}), (28, {}), (30, {}), (32, {'func': '$16load_attr.2', 'args': ['$x26.3'], 'kw_names': None, 'res': '$32call.4'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {'res': '$const42.5'}), (44, {'idx': 0, 'res': '$44load_global.6'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'item': '$44load_global.6', 'res': '$56load_attr.8'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'res': '$x66.9'}), (68, {}), (70, {}), (72, {'func': '$56load_attr.8', 'args': ['$x66.9'], 'kw_names': None, 'res': '$72call.10'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'op': '*', 'lhs': '$const42.5', 'rhs': '$72call.10', 'res': '$binop_mul82.11'}), (84, {}), (86, {'op': '+', 'lhs': '$32call.4', 'rhs': '$binop_mul82.11', 'res': '$binop_add86.12'}), (88, {}), (90, {'retval': '$binop_add86.12', 'castval': '$90return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-28 20:38:24,852 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$4load_global.0']
    $16load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$16load_attr.2', '$4load_global.0']
    $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_attr.2', '$32call.4', 'x']
    $const42.5 = const(complex, 1j)          ['$const42.5']
    $44load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>) ['$44load_global.6']
    $56load_attr.8 = getattr(value=$44load_global.6, attr=sin) ['$44load_global.6', '$56load_attr.8']
    $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$72call.10', 'x']
    $binop_mul82.11 = $const42.5 * $72call.10 ['$72call.10', '$binop_mul82.11', '$const42.5']
    $binop_add86.12 = $32call.4 + $binop_mul82.11 ['$32call.4', '$binop_add86.12', '$binop_mul82.11']
    $90return_value.13 = cast(value=$binop_add86.12) ['$90return_value.13', '$binop_add86.12']
    return $90return_value.13                ['$90return_value.13']

2024-06-28 20:38:24,857 - DEBUG - ==== SSA block analysis pass on 0
2024-06-28 20:38:24,857 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7f7a67152550>
2024-06-28 20:38:24,857 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-28 20:38:24,857 - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:24,857 - DEBUG - on stmt: $16load_attr.2 = getattr(value=$4load_global.0, attr=cos)
2024-06-28 20:38:24,857 - DEBUG - on stmt: $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,857 - DEBUG - on stmt: $const42.5 = const(complex, 1j)
2024-06-28 20:38:24,858 - DEBUG - on stmt: $44load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.11/dist-packages/numpy/__init__.py'>)
2024-06-28 20:38:24,858 - DEBUG - on stmt: $56load_attr.8 = getattr(value=$44load_global.6, attr=sin)
2024-06-28 20:38:24,858 - DEBUG - on stmt: $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-28 20:38:24,858 - DEBUG - on stmt: $binop_mul82.11 = $const42.5 * $72call.10
2024-06-28 20:38:24,858 - DEBUG - on stmt: $binop_add86.12 = $32call.4 + $binop_mul82.11
2024-06-28 20:38:24,858 - DEBUG - on stmt: $90return_value.13 = cast(value=$binop_add86.12)
2024-06-28 20:38:24,858 - DEBUG - on stmt: return $90return_value.13
2024-06-28 20:38:24,858 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16load_attr.2': [(<numba.core.ir.Assign object at 0x7f7a67164e90>,
                                 0)],
             '$32call.4': [(<numba.core.ir.Assign object at 0x7f7a67164a10>,
                            0)],
             '$44load_global.6': [(<numba.core.ir.Assign object at 0x7f7a671647d0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7f7a67165450>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x7f7a671655d0>,
                                 0)],
             '$72call.10': [(<numba.core.ir.Assign object at 0x7f7a67165190>,
                             0)],
             '$90return_value.13': [(<numba.core.ir.Assign object at 0x7f7a67153950>,
                                     0)],
             '$binop_add86.12': [(<numba.core.ir.Assign object at 0x7f7a67150bd0>,
                                  0)],
             '$binop_mul82.11': [(<numba.core.ir.Assign object at 0x7f7a671643d0>,
                                  0)],
             '$const42.5': [(<numba.core.ir.Assign object at 0x7f7a67164610>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7f7a67167c10>, 0)]})
2024-06-28 20:38:24,859 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7f7a67152550>
2024-06-28 20:38:24,936 - INFO - Resampled audio file to 16000 Hz
2024-06-28 20:38:24,936 - INFO - Loading VAD model...
2024-06-28 20:38:24,937 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-06-28 20:38:24,978 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/hyperparams.yaml HTTP/11" 200 0
2024-06-28 20:38:24,979 - DEBUG - Attempting to acquire lock 140163830220624 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-06-28 20:38:24,979 - DEBUG - Lock 140163830220624 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-06-28 20:38:25,029 - DEBUG - https://huggingface.co:443 "GET /speechbrain/vad-crdnn-libriparty/resolve/main/hyperparams.yaml HTTP/11" 200 2286
2024-06-28 20:38:25,030 - DEBUG - Attempting to release lock 140163830220624 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-06-28 20:38:25,031 - DEBUG - Lock 140163830220624 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-06-28 20:38:25,031 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/hyperparams.yaml
2024-06-28 20:38:25,031 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-06-28 20:38:25,068 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/custom.py HTTP/11" 404 0
2024-06-28 20:38:25,121 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/vad-crdnn-libriparty.
2024-06-28 20:38:25,122 - INFO - Fetch model.ckpt: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-06-28 20:38:25,159 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/model.ckpt HTTP/11" 200 0
2024-06-28 20:38:25,160 - DEBUG - Attempting to acquire lock 140163946456848 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-06-28 20:38:25,161 - DEBUG - Lock 140163946456848 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-06-28 20:38:25,225 - DEBUG - https://huggingface.co:443 "GET /speechbrain/vad-crdnn-libriparty/resolve/main/model.ckpt HTTP/11" 200 452671
2024-06-28 20:38:25,279 - DEBUG - Attempting to release lock 140163946456848 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-06-28 20:38:25,279 - DEBUG - Lock 140163946456848 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-06-28 20:38:25,279 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/model.ckpt
2024-06-28 20:38:25,280 - INFO - Fetch mean_var_norm.ckpt: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-06-28 20:38:25,325 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/mean_var_norm.ckpt HTTP/11" 200 0
2024-06-28 20:38:25,326 - DEBUG - Attempting to acquire lock 140163693016144 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-06-28 20:38:25,326 - DEBUG - Lock 140163693016144 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-06-28 20:38:25,384 - DEBUG - https://huggingface.co:443 "GET /speechbrain/vad-crdnn-libriparty/resolve/main/mean_var_norm.ckpt HTTP/11" 200 1063
2024-06-28 20:38:25,385 - DEBUG - Attempting to release lock 140163693016144 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-06-28 20:38:25,385 - DEBUG - Lock 140163693016144 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-06-28 20:38:25,385 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/mean_var_norm.ckpt
2024-06-28 20:38:25,386 - INFO - Loading pretrained files for: model, mean_var_norm
2024-06-28 20:38:25,392 - INFO - VAD model loaded successfully.
2024-06-28 20:38:25,393 - INFO - Starting voice activity detection...
2024-06-28 20:38:25,393 - INFO - Destination tmposa0ey76.wav: local file in /tmp/tmposa0ey76.wav.
2024-06-28 20:38:25,604 - INFO - Voice activity detection completed.
2024-06-28 20:38:25,605 - INFO - 172.17.0.1 - - [28/Jun/2024 20:38:25] "POST /detect_voice_activity HTTP/1.1" 200 -
